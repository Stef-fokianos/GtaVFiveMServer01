local _i, _f, _v, _r, _ri, _rf, _rl, _s, _rv, _ro, _in, _ii, _fi =
	Citizen.PointerValueInt(), Citizen.PointerValueFloat(), Citizen.PointerValueVector(),
	Citizen.ReturnResultAnyway(), Citizen.ResultAsInteger(), Citizen.ResultAsFloat(), Citizen.ResultAsLong(), Citizen.ResultAsString(), Citizen.ResultAsVector(), Citizen.ResultAsObject(),
	Citizen.InvokeNative, Citizen.PointerValueIntInitialized, Citizen.PointerValueFloatInitialized

local g = _G
local rs = rawset
local msgpack = msgpack
local _tostring = tostring
local function _ts(num)
	if num == 0 or not num then -- workaround for users calling string parameters with '0', also nil being translated
		return nil
	end
	return _tostring(num)
end
local function _ch(hash)
	if g.type(hash) == 'string' then
		return g.GetHashKey(hash)
	end

	return hash
end

local function _mfr(fn)
	return g.Citizen.GetFunctionReference(fn)
end

local Global = setmetatable({}, { __newindex = function(_, n, v)
	g[n] = v

	rs(_, n, v)
end})

_ENV = nil

function Global.Absf(value)
	return _in(0x73D57CFFDD12C355, value, _r, _rf)
end

function Global.Absi(value)
	return _in(0xF0D31AD191A74F87, value, _r, _ri)
end

--- Returns arccos value of p0.
function Global.Acos(p0)
	return _in(0x1D08B970013C34B6, p0, _r, _rf)
end

function Global.ActivateAudioSlowmoMode(p0)
	return _in(0xD01005D2BA2EB778, _ts(p0))
end
Global.N_0xd01005d2ba2eb778 = Global.ActivateAudioSlowmoMode

function Global.ActivateDamageTrackerOnNetworkId(netID, toggle)
	return _in(0xD45B1FFCCD52FF19, netID, toggle)
end

function Global.ActivateDamageTrackerOnPlayer(player, toggle)
	return _in(0xBEC0816FF5ACBCDA, player, toggle)
end
Global.N_0xbec0816ff5acbcda = Global.ActivateDamageTrackerOnPlayer

--- Does stuff like this:
-- gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617
-- Example:
-- int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");
-- ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);
-- BOOL p1 is a toggle to define the game in pause.
-- int p2 is unknown but -1 always works, not sure why though.
-- [30/03/2017] ins1de :
-- the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.
-- Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);
-- Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.
function Global.ActivateFrontendMenu(menuhash, togglePause, component)
	return _in(0xEF01D36B9C9D0C7B, _ch(menuhash), togglePause, component)
end

--- More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
function Global.ActivateInteriorEntitySet(interior, entitySetName)
	return _in(0x55E86AF2712B36A1, interior, _ts(entitySetName))
end
Global.N_0x55e86af2712b36a1 = Global.ActivateInteriorEntitySet
Global.EnableInteriorProp = Global.ActivateInteriorEntitySet

--- seems to be frequently used with the NETWORK::NET_TO_x natives, particularly with vehicles. It is often the only ROPE:: native in a script.
function Global.ActivatePhysics(entity)
	return _in(0x710311ADF0E20730, entity)
end

--- Show Rockstar Editor Menu
-- by I'm Not MentaL
-- ----------
-- "new_editor" menu
function Global.ActivateRockstarEditor()
	return _in(0x49DA8145672B2725)
end
Global.N_0x49da8145672b2725 = Global.ActivateRockstarEditor

function Global.AddAmmoToPed(ped, weaponHash, ammo)
	return _in(0x78F0424C34306220, ped, _ch(weaponHash), ammo)
end

--- Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
function Global.AddArmourToPed(ped, amount)
	return _in(0x5BA652A0CD14DF2F, ped, amount)
end

--- Adds a rectangular blip for the specified coordinates/area.
-- It is recommended to use [SET_BLIP_ROTATION](#_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
-- By default, the blip will show as a _regular_ blip with the specified color/sprite if it is outside of the minimap view.
-- Example image:
-- ![minimap](https://w.wew.wtf/pdcjig.png)
-- ![big map](https://w.wew.wtf/zgcjcm.png)
-- (Native name is _likely_ to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
-- @param x The X coordinate of the center of the blip.
-- @param y The Y coordinate of the center of the blip.
-- @param z The Z coordinate of the center of the blip.
-- @param width The width of the blip.
-- @param height The height of the blip.
-- @return A handle to the blip.
function Global.AddBlipForArea(x, y, z, width, height)
	return _in(0xCE5D0E5E315DB238, x, y, z, width, height, _r, _ri)
end
Global.N_0xce5d0e5e315db238 = Global.AddBlipForArea

--- Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
-- @param x The X coordinate to create the blip on.
-- @param y The Y coordinate.
-- @param z The Z coordinate.
-- @return A blip handle.
function Global.AddBlipForCoord(x, y, z)
	return _in(0x5A039BB0BCA604B6, x, y, z, _r, _ri)
end

--- Returns red ( default ) blip attached to entity.
-- Example:
-- Blip blip; //Put this outside your case or option
-- blip = UI::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);
-- UI::SET_BLIP_AS_FRIENDLY(blip, true);
function Global.AddBlipForEntity(entity)
	return _in(0x5CDE92C702A8FCE7, entity, _r, _ri)
end

function Global.AddBlipForPickup(pickup)
	return _in(0xBE339365C863BD36, pickup, _r, _ri)
end

function Global.AddBlipForRadius(posX, posY, posZ, radius)
	return _in(0x46818D79B1F7499A, posX, posY, posZ, radius, _r, _ri)
end

--- I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
-- p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
-- p8 big values ~100 will slow down the camera movement before reaching this node
-- p9 != 0 seems to override the rotation/pitch (bool?)
function Global.AddCamSplineNode(camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)
	return _in(0x8609C75EC438FB3B, camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)
end

function Global.AddCamSplineNodeUsingCamera(cam, cam2, p2, p3)
	return _in(0x0FB82563989CF4FB, cam, cam2, p2, p3)
end
Global.N_0x0fb82563989cf4fb = Global.AddCamSplineNodeUsingCamera

function Global.AddCamSplineNodeUsingCameraFrame(cam, cam2, p2, p3)
	return _in(0x0A9F2A468B328E74, cam, cam2, p2, p3)
end
Global.N_0x0a9f2a468b328e74 = Global.AddCamSplineNodeUsingCameraFrame

function Global.AddCamSplineNodeUsingGameplayFrame(cam, p1, p2)
	return _in(0x609278246A29CA34, cam, p1, p2)
end
Global.N_0x609278246a29ca34 = Global.AddCamSplineNodeUsingGameplayFrame

function Global.AddCoverBlockingArea(playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)
	return _in(0x45C597097DD7CB81, playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)
end

function Global.AddCoverPoint(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xD5C12A75C7B9497F, p0, p1, p2, p3, p4, p5, p6, p7, _r, _ri)
end

--- Most likely ADD_CURRENT_*
function Global.AddCurrentRise(xLow, yLow, xHigh, yHigh, height)
	return _in(0xFDBF4CDBC07E1706, xLow, yLow, xHigh, yHigh, height, _r, _ri)
end
Global.N_0xfdbf4cdbc07e1706 = Global.AddCurrentRise

--- decal types:
-- public enum DecalTypes
-- {
-- splatters_blood = 1010,
-- splatters_blood_dir = 1015,
-- splatters_blood_mist = 1017,
-- splatters_mud = 1020,
-- splatters_paint = 1030,
-- splatters_water = 1040,
-- splatters_water_hydrant = 1050,
-- splatters_blood2 = 1110,
-- weapImpact_metal = 4010,
-- weapImpact_concrete = 4020,
-- weapImpact_mattress = 4030,
-- weapImpact_mud = 4032,
-- weapImpact_wood = 4050,
-- weapImpact_sand = 4053,
-- weapImpact_cardboard = 4040,
-- weapImpact_melee_glass = 4100,
-- weapImpact_glass_blood = 4102,
-- weapImpact_glass_blood2 = 4104,
-- weapImpact_shotgun_paper = 4200,
-- weapImpact_shotgun_mattress,
-- weapImpact_shotgun_metal,
-- weapImpact_shotgun_wood,
-- weapImpact_shotgun_dirt,
-- weapImpact_shotgun_tvscreen,
-- weapImpact_shotgun_tvscreen2,
-- weapImpact_shotgun_tvscreen3,
-- weapImpact_melee_concrete = 4310,
-- weapImpact_melee_wood = 4312,
-- weapImpact_melee_metal = 4314,
-- burn1 = 4421,
-- burn2,
-- burn3,
-- burn4,
-- burn5,
-- bang_concrete_bang = 5000,
-- bang_concrete_bang2,
-- bang_bullet_bang,
-- bang_bullet_bang2 = 5004,
-- bang_glass = 5031,
-- bang_glass2,
-- solidPool_water = 9000,
-- solidPool_blood,
-- solidPool_oil,
-- solidPool_petrol,
-- solidPool_mud,
-- porousPool_water,
-- porousPool_blood,
-- porousPool_oil,
-- porousPool_petrol,
-- porousPool_mud,
-- porousPool_water_ped_drip,
-- liquidTrail_water = 9050
-- }
function Global.AddDecal(decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19)
	return _in(0xB302244A1839BDAD, decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19, _r, _ri)
end

function Global.AddDispatchSpawnBlockingAngledArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x918C7B2D2FF3928B, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end
Global.N_0x918c7b2d2ff3928b = Global.AddDispatchSpawnBlockingAngledArea

function Global.AddDispatchSpawnBlockingArea(p0, p1, p2, p3)
	return _in(0x2D4259F1FEB81DA9, p0, p1, p2, p3, _r, _ri)
end
Global.N_0x2d4259f1feb81da9 = Global.AddDispatchSpawnBlockingArea

function Global.AddDoorToSystem(doorHash, modelHash, x, y, z, p5, p6, p7)
	return _in(0x6F8838D03D1DC226, _ch(doorHash), _ch(modelHash), x, y, z, p5, p6, p7)
end

--- Example:
-- GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");
-- I tried this and nothing happened...
function Global.AddEntityIcon(entity, icon)
	return _in(0x9CD43EEE12BF4DD0, entity, _ts(icon), _r, _ri)
end

--- ADD_E* (most likely ADD_ENTITY_*)
-- All found occurrences in b678d:
-- pastebin.com/ceu67jz8
-- Still not sure on the functionality of this native but it has something to do with dynamic mixer groups defined in dynamix.dat15
function Global.AddEntityToAudioMixGroup(entity, groupName, p2)
	return _in(0x153973AB99FE8980, entity, _ts(groupName), p2)
end
Global.N_0x153973ab99fe8980 = Global.AddEntityToAudioMixGroup
Global.DynamicMixerRelatedFn = Global.AddEntityToAudioMixGroup

--- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
-- this native is missing a new argument: noDamage
-- nodamage = false: damage || nodamage = true: no damage
-- enum ExplosionTypes
-- {
-- EXPLOSION_GRENADE,
-- EXPLOSION_GRENADELAUNCHER,
-- EXPLOSION_STICKYBOMB,
-- EXPLOSION_MOLOTOV,
-- EXPLOSION_ROCKET,
-- EXPLOSION_TANKSHELL,
-- EXPLOSION_HI_OCTANE,
-- EXPLOSION_CAR,
-- EXPLOSION_PLANE,
-- EXPLOSION_PETROL_PUMP,
-- EXPLOSION_BIKE,
-- EXPLOSION_DIR_STEAM,
-- EXPLOSION_DIR_FLAME,
-- EXPLOSION_DIR_WATER_HYDRANT,
-- EXPLOSION_DIR_GAS_CANISTER,
-- EXPLOSION_BOAT,
-- EXPLOSION_SHIP_DESTROY,
-- EXPLOSION_TRUCK,
-- EXPLOSION_BULLET,
-- EXPLOSION_SMOKEGRENADELAUNCHER,
-- EXPLOSION_SMOKEGRENADE,
-- EXPLOSION_BZGAS,
-- EXPLOSION_FLARE,
-- EXPLOSION_GAS_CANISTER,
-- EXPLOSION_EXTINGUISHER,
-- EXPLOSION_PROGRAMMABLEAR,
-- EXPLOSION_TRAIN,
-- EXPLOSION_BARREL,
-- EXPLOSION_PROPANE,
-- EXPLOSION_BLIMP,
-- EXPLOSION_DIR_FLAME_EXPLODE,
-- EXPLOSION_TANKER,
-- EXPLOSION_PLANE_ROCKET,
-- EXPLOSION_VEHICLE_BULLET,
-- EXPLOSION_GAS_TANK,
-- EXPLOSION_BIRD_CRAP
-- };
-- ```
-- ```
-- NativeDB Added Parameter 9: BOOL noDamage
function Global.AddExplosion(x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0xE3AD2BDBAEE269AC, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
end

function Global.AddExplosionWithUserVfx(x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0x36DD3FE58B5E5212, x, y, z, explosionType, _ch(explosionFx), damageScale, isAudible, isInvisible, cameraShake)
end
Global.AddSpecfxExplosion = Global.AddExplosionWithUserVfx

--- Returns the index of the newly created hospital spawn point.
-- p3 might be radius?
function Global.AddHospitalRestart(x, y, z, p3, p4)
	return _in(0x1F464EF988465A81, x, y, z, p3, p4, _r, _ri)
end

--- NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
-- _GET_TEXT_SUBSTRING and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if it's 'z'. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.
-- p0 is -1, 0
-- p1 is a char or string (whatever you wanna call it)
-- p2 is Global 10597 + i * 6. 'i' is a while(i < 70) loop
-- p3 is again -1, 0 - 35
-- p4 is again -1, 0 - 35
-- p5 is either 0 or 1 (bool ?)
-- p6 is either 0 or 1 (The func to determine this is bool)
-- p7 is either 0 or 1 (The func to determine this is bool)
-- p8 is either 0 or 1 (The func to determine this is bool)
-- p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
-- p10 is either 0 or 1 (The func to determine this is bool)
-- p11 is either 0 or 1 (The func to determine this is bool)
-- p12 is unknown as in TU27 X360 scripts it only goes to p11.
function Global.AddLineToConversation(index, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xC5EF963405593646, index, _ts(p1), _ts(p2), p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
end

--- Loads a minimap overlay from a GFx file in the current resource.
-- @param name The path to a `.gfx` file in the current resource. It has to be specified as a `file`.
-- @return A minimap overlay ID.
function Global.AddMinimapOverlay(name)
	return _in(0x4afd2499, _ts(name), _r, _ri)
end

function Global.AddModelToCreatorBudget(modelHash)
	return _in(0x0BC3144DEB678666, _ch(modelHash), _r)
end
Global.N_0x0bc3144deb678666 = Global.AddModelToCreatorBudget

function Global.AddNavmeshBlockingObject(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xFCD5C8E06E502F5A, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r, _ri)
end

function Global.AddNavmeshRequiredRegion(x, y, radius)
	return _in(0x387EAD7EE42F6685, x, y, radius)
end

function Global.AddNextMessageToPreviousBriefs(p0)
	return _in(0x60296AF4BA14ABC5, p0)
end

--- enum ExplosionTypes
-- {
-- EXPLOSION_GRENADE,
-- EXPLOSION_GRENADELAUNCHER,
-- EXPLOSION_STICKYBOMB,
-- EXPLOSION_MOLOTOV,
-- EXPLOSION_ROCKET,
-- EXPLOSION_TANKSHELL,
-- EXPLOSION_HI_OCTANE,
-- EXPLOSION_CAR,
-- EXPLOSION_PLANE,
-- EXPLOSION_PETROL_PUMP,
-- EXPLOSION_BIKE,
-- EXPLOSION_DIR_STEAM,
-- EXPLOSION_DIR_FLAME,
-- EXPLOSION_DIR_WATER_HYDRANT,
-- EXPLOSION_DIR_GAS_CANISTER,
-- EXPLOSION_BOAT,
-- EXPLOSION_SHIP_DESTROY,
-- EXPLOSION_TRUCK,
-- EXPLOSION_BULLET,
-- EXPLOSION_SMOKEGRENADELAUNCHER,
-- EXPLOSION_SMOKEGRENADE,
-- EXPLOSION_BZGAS,
-- EXPLOSION_FLARE,
-- EXPLOSION_GAS_CANISTER,
-- EXPLOSION_EXTINGUISHER,
-- EXPLOSION_PROGRAMMABLEAR,
-- EXPLOSION_TRAIN,
-- EXPLOSION_BARREL,
-- EXPLOSION_PROPANE,
-- EXPLOSION_BLIMP,
-- EXPLOSION_DIR_FLAME_EXPLODE,
-- EXPLOSION_TANKER,
-- EXPLOSION_PLANE_ROCKET,
-- EXPLOSION_VEHICLE_BULLET,
-- EXPLOSION_GAS_TANK,
-- EXPLOSION_BIRD_CRAP
-- };
-- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
function Global.AddOwnedExplosion(ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0x172AA1B624FA1013, ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
end

function Global.AddPatrolRouteLink(p0, p1)
	return _in(0x23083260DEC3A551, p0, p1)
end

--- Example:
-- AI::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);
-- p0 is between 0 and 4 in the scripts.
-- p1 is "WORLD_HUMAN_GUARD_STAND" or "StandGuard".
-- p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates.
-- Examples:
-- AI::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_739[7/*3*/], 0.0, 0.0, 0.0, 0);
-- AI::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_B0[17/*44*/]._f3, l_B0[17/*44*/]._f3, 2000);
-- p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.
-- p8 is an int, often random set to for example: GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000).
function Global.AddPatrolRouteNode(p0, p1, x1, y1, z1, x2, y2, z2, p8)
	return _in(0x8EDF950167586B7C, p0, _ts(p1), x1, y1, z1, x2, y2, z2, p8)
end

--- NativeDB Parameter 1: Hash weaponHash
function Global.AddPedAmmo(ped, weaponHash, ammo)
	return _in(0x2472622CE1F2D45F, ped, weaponHash, ammo)
end
Global.N_0x2472622ce1f2d45f = Global.AddPedAmmo

--- Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
-- collection - PedDecorationCollection filename hash
-- overlay - Item name hash
-- Example:
-- Entry inside "mpbeach_overlays.xml" -
-- <Item>
-- <uvPos x="0.500000" y="0.500000" />
-- <scale x="0.600000" y="0.500000" />
-- <rotation value="0.000000" />
-- <nameHash>FM_Hair_Fuzz</nameHash>
-- <txdHash>mp_hair_fuzz</txdHash>
-- <txtHash>mp_hair_fuzz</txtHash>
-- <zone>ZONE_HEAD</zone>
-- <type>TYPE_TATTOO</type>
-- <faction>FM</faction>
-- <garment>All</garment>
-- <gender>GENDER_DONTCARE</gender>
-- <award />
-- <awardLevel />
-- </Item>
-- Code:
-- PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("mpbeach_overlays"), GAMEPLAY::GET_HASH_KEY("fm_hair_fuzz"))
function Global.AddPedDecorationFromHashes(ped, collection, overlay)
	return _in(0x5F5D1665E352A839, ped, _ch(collection), _ch(overlay))
end
Global.ApplyPedOverlay = Global.AddPedDecorationFromHashes
Global.SetPedDecoration = Global.AddPedDecorationFromHashes

function Global.AddPedDecorationFromHashesInCorona(ped, collection, overlay)
	return _in(0x5619BFA07CFD7833, ped, _ch(collection), _ch(overlay))
end
Global.N_0x5619bfa07cfd7833 = Global.AddPedDecorationFromHashesInCorona
Global.SetPedFacialDecoration = Global.AddPedDecorationFromHashesInCorona

--- 4 calls in the b617d scripts. The only one with p0 and p2 in clear text:
-- AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, "DINAPOLI");
-- =================================================
-- One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
-- Based on it asking if does_entity_exist for the global I have determined that p1 is, in fact, the ped, but could be wrong.
function Global.AddPedToConversation(index, ped, p2)
	return _in(0x95D9F4BC443956E7, index, ped, _ts(p2))
end

function Global.AddPetrolDecal(x, y, z, groundLvl, width, transparency)
	return _in(0x4F5212C7AD880DF8, x, y, z, groundLvl, width, transparency, _r, _ri)
end

function Global.AddPetrolTrailDecalInfo(x, y, z, p3)
	return _in(0x967278682CB6967A, x, y, z, p3)
end
Global.N_0x967278682cb6967a = Global.AddPetrolTrailDecalInfo

function Global.AddPickupToInteriorRoomByName(pickup, roomName)
	return _in(0x3F6167F351168730, pickup, _ts(roomName))
end

function Global.AddPointToGpsCustomRoute(x, y, z)
	return _in(0x311438A071DD9B1A, x, y, z)
end
Global.N_0x311438a071dd9b1a = Global.AddPointToGpsCustomRoute

function Global.AddPointToGpsMultiRoute(x, y, z)
	return _in(0xA905192A6781C41B, x, y, z)
end
Global.N_0xa905192a6781c41b = Global.AddPointToGpsMultiRoute

function Global.AddPoliceRestart(p0, p1, p2, p3, p4)
	return _in(0x452736765B31FC4B, p0, p1, p2, p3, p4, _r, _ri)
end

--- NativeDB Added Parameter 10: BOOL p9
function Global.AddPopMultiplierArea(x1, y1, z1, x2, y2, z2, p6, p7, p8)
	return _in(0x67F6413D3220E18D, x1, y1, z1, x2, y2, z2, p6, p7, p8, _r, _ri)
end
Global.N_0x67f6413d3220e18d = Global.AddPopMultiplierArea

function Global.AddPopMultiplierSphere(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x32C7A7E8C43A1F80, p0, p1, p2, p3, p4, p5, p6, p7, _r, _ri)
end
Global.N_0x32c7a7e8c43a1f80 = Global.AddPopMultiplierSphere

--- Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
function Global.AddRelationshipGroup(name, groupHash)
	return _in(0xF372BC22FCB88606, _ts(name), _ii(groupHash) --[[ may be optional ]], _r, _ri)
end

--- Experimental natives, please do not use in a live environment.
function Global.AddReplaceTexture(origTxd, origTxn, newTxd, newTxn)
	return _in(0xa66f8f75, _ts(origTxd), _ts(origTxn), _ts(newTxd), _ts(newTxn))
end

function Global.AddReplayStatValue(value)
	return _in(0x69FE6DC87BD2A5E9, value)
end
Global.N_0x69fe6dc87bd2a5e9 = Global.AddReplayStatValue

--- Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
-- __
-- Add_Rope(pos.x,pos.y,pos.z,0.0,0.0,0.0,20.0,4,20.0,1.0,0.0,false,false,false,5.0,false,NULL)
-- When attached, Position<vector> does not matter
-- When attached, Angle<vector> does not matter
-- Rope Type:
-- 4 and bellow is a thick rope
-- 5 and up are small metal wires
-- 0 crashes the game
-- Max_length - Rope is forced to this length, generally best to keep this the same as your rope length.
-- Rigid - If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
-- breakable - Whether or not shooting the rope will break it.
-- unkPtr - unknown ptr, always 0 in orig scripts
-- __
-- Lengths can be calculated like so:
-- float distance = abs(x1 - x2) + abs(y1 - y2) + abs(z1 - z2); // Rope length
-- NOTES:
-- Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
-- Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
function Global.AddRope(x, y, z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, p10, p11, p12, rigid, p14, breakWhenShot, unkPtr)
	return _in(0xE832D760399EB220, x, y, z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, p10, p11, p12, rigid, p14, breakWhenShot, _ii(unkPtr) --[[ may be optional ]], _r, _ri)
end

function Global.AddScenarioBlockingArea(x1, y1, z1, x2, y2, z2, p6, p7, p8, p9)
	return _in(0x1B5C85C612E5256E, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, _r, _ri)
end

--- BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);
-- -----
-- Hardcoded to not work in Multiplayer.
-- ------
-- Which I'm sure can easily be bypassed by nop'ing the branch preventing it from working if you are in multiplayer lol. Which would still be pointless since you don't need this to make peds do what you wish.
function Global.AddScriptToRandomPed(name, model, p2, p3)
	return _in(0x4EE5367468A65CCC, _ts(name), _ch(model), p2, p3)
end

--- duration is float here
-- Event types- camx.me/gtav/tasks/shockingevents.txt
function Global.AddShockingEventAtPosition(type, x, y, z, duration)
	return _in(0xD9F8455409B525E9, type, x, y, z, duration, _r, _ri)
end

--- duration is float here
-- Event types - camx.me/gtav/tasks/shockingevents.txt
function Global.AddShockingEventForEntity(type, entity, duration)
	return _in(0x7FD8F3BE76F89422, type, entity, duration, _r, _ri)
end

--- This is used to add a speedzone on a position.
-- Example usage C#:
-- uint speedZone = Function.Call<uint>((Hash) 0x2CE544C68FB812A0, Game.PlayerPed.Position.X, Game.PlayerPed.Position.Y, Game.PlayerPed.Position.Z, 100.0f, 0.0f, false);
-- (Thanks to alexguirre for his help!)
-- ==========================================
-- What is the point in adding a speed zone? Does it just generally affect the speed NPCs will drive? I can imagine running this on every section of the interstate setting it to 3 MPH rip.
function Global.AddSpeedZoneForCoord(x, y, z, radius, speed, p5)
	return _in(0x2CE544C68FB812A0, x, y, z, radius, speed, p5, _r, _ri)
end
Global.N_0x2ce544c68fb812a0 = Global.AddSpeedZoneForCoord

--- See description of [`ADD_STUNT_JUMP_ANGLED`](#_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
-- @param x1 Jump entry left far bottom corner coordinate X.
-- @param y1 Jump entry left far bottom corner coordinate Y.
-- @param z1 Jump entry left far bottom corner coordinate Z.
-- @param x2 Jump entry right near top corner coordinate X.
-- @param y2 Jump entry right near top corner coordinate Y.
-- @param z2 Jump entry right near top corner coordinate Z.
-- @param x3 Landing zone end coordinate X.
-- @param y3 Landing zone end coordinate Y.
-- @param z3 Landing zone end coordinate Z.
-- @param x4 Landing zone start coordinate X.
-- @param y4 Landing zone start coordinate Y.
-- @param z4 Landing zone start coordinate Z.
-- @param camX Stuntcam (cinematic) coordinate x.
-- @param camY Stuntcam (cinematic) coordinate y.
-- @param camZ Stuntcam (cinematic) coordinate z.
-- @param unk1 Unknown, always 150.
-- @param unk2 Unknown, always 0.
-- @param unk3 Unknown, always 0.
-- @return The ID of the stunt jump that was added.
function Global.AddStuntJump(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3)
	return _in(0x1A992DA297A4630C, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3, _r, _ri)
end

--- Creates a new stunt jump.
-- The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP\_**ANGLED**.
-- Info about the specific 'parameter sections':
-- **x1, y1, z1, x2, y2, z2 and radius1:**
-- First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
-- **x3, y3, z3, x4, y4, z4 and radius2:**
-- Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
-- **camX, camY and camZ:**
-- The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
-- **unk1, unk2 and unk3:**
-- Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
-- Visualized example in-game:
-- ![](https://d.fivem.dev/2019-03-15_18-24_c7802_846.png)
-- Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): <https://pastebin.com/EW1jBPkY>
-- @param x1 Entry zone bottom left corner x.
-- @param y1 Entry zone bottom left corner y.
-- @param z1 Entry zone bottom left corner z.
-- @param x2 Entry zone top right corner x.
-- @param y2 Entry zone top right corner y.
-- @param z2 Entry zone top right corner z.
-- @param radius1 Probably a "feather" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.
-- @param x3 Landing zone start corner coordinate x.
-- @param y3 Landing zone start corner coordinate y.
-- @param z3 Landing zone start corner coordinate z.
-- @param x4 Landing zone end corner coordinate x.
-- @param y4 Landing zone end corner coordinate y.
-- @param z4 Landing zone end corner coordinate z.
-- @param radius2 Probably a "feather" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.
-- @param camX Stunt (cinematic) camera x position.
-- @param camY Stunt (cinematic) camera y position.
-- @param camZ Stunt (cinematic) camera z position.
-- @param unk1 always 150
-- @param unk2 always 0
-- @param unk3 always 0
-- @return The ID of the stuntjump that was created.
function Global.AddStuntJumpAngled(x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3)
	return _in(0xBBE5D803A5360CBF, x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3, _r, _ri)
end

--- Add a point related to CTacticalAnalysis
function Global.AddTacticalAnalysisPoint(x, y, z)
	return _in(0xB8721407EE9C3FF6, x, y, z)
end
Global.N_0xb8721407ee9c3ff6 = Global.AddTacticalAnalysisPoint

function Global.AddTcmodifierOverride(modifierName1, modifierName2)
	return _in(0x1A8E2C8B9CF4549C, _ts(modifierName1), _ts(modifierName2))
end
Global.N_0x1a8e2c8b9cf4549c = Global.AddTcmodifierOverride

function Global.AddTextComponentFloat(value, decimalPlaces)
	return _in(0xE7DCB5B874BCD96E, value, decimalPlaces)
end

function Global.AddTextComponentFormattedInteger(value, commaSeparated)
	return _in(0x0E4C749FF9DE9CC4, value, commaSeparated)
end
Global.N_0x0e4c749ff9de9cc4 = Global.AddTextComponentFormattedInteger

function Global.AddTextComponentInteger(value)
	return _in(0x03B504CF259931BC, value)
end

function Global.AddTextComponentSubstringBlipName(blip)
	return _in(0x80EAD8E2E1D5D52E, blip)
end
Global.N_0x80ead8e2e1d5d52e = Global.AddTextComponentSubstringBlipName

function Global.AddTextComponentSubstringKeyboardDisplay(p0)
	return _in(0x5F68520888E69014, _ts(p0))
end
Global.AddTextComponentString3 = Global.AddTextComponentSubstringKeyboardDisplay
Global.AddTextComponentScaleform = Global.AddTextComponentSubstringKeyboardDisplay

--- p1 was always -1.
-- used for phone applications; scaleform
function Global.AddTextComponentSubstringPhoneNumber(p0, p1)
	return _in(0x761B77454205A61D, _ts(p0), p1)
end
Global.N_0x761b77454205a61d = Global.AddTextComponentSubstringPhoneNumber
Global.AddTextComponentAppTitle = Global.AddTextComponentSubstringPhoneNumber

--- Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
-- See the documentation on text formatting for more information.
-- @param text A string to add of up to 99 characters. This can contain additional `~` formatting directives.
function Global.AddTextComponentSubstringPlayerName(text)
	return _in(0x6C188BE134E074AA, _ts(text))
end
Global.AddTextComponentString = Global.AddTextComponentSubstringPlayerName

function Global.AddTextComponentSubstringTextLabel(labelName)
	return _in(0xC63CD5D2920ACBE7, _ts(labelName))
end
Global.AddTextComponentItemString = Global.AddTextComponentSubstringTextLabel

--- It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
function Global.AddTextComponentSubstringTextLabelHashKey(gxtEntryHash)
	return _in(0x17299B63C7683A2B, _ch(gxtEntryHash))
end
Global.N_0x17299b63c7683a2b = Global.AddTextComponentSubstringTextLabelHashKey

--- Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
function Global.AddTextComponentSubstringTime(timestamp, flags)
	return _in(0x1115F16B8AB9E8BF, timestamp, flags)
end

--- This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
function Global.AddTextComponentSubstringWebsite(website)
	return _in(0x94CF4AC034C9C986, _ts(website))
end
Global.AddTextComponentString2 = Global.AddTextComponentSubstringWebsite

function Global.AddTextEntry(entryKey, entryText)
	return _in(0x32ca01c3, _ts(entryKey), _ts(entryText))
end

function Global.AddTextEntryByHash(entryKey, entryText)
	return _in(0x289da860, _ch(entryKey), _ts(entryText))
end

function Global.AddToClockTime(hours, minutes, seconds)
	return _in(0xD716F30D8C8980E2, hours, minutes, seconds)
end

function Global.AddToItemset(p0, p1)
	return _in(0xE3945201F14637DD, p0, p1, _r)
end

--- ADD_*
function Global.AddVehicleCombatAngledAvoidanceArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x54B0F614960F4A5F, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end
Global.N_0x54b0f614960f4a5f = Global.AddVehicleCombatAngledAvoidanceArea
Global.AddVehicleCombatAvoidanceArea = Global.AddVehicleCombatAngledAvoidanceArea

--- Now has 15 parameters, previous declaration:
-- BOOL _0x428BDCB9DA58DA53(Any p0, Any p1, Any p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, Any p13)
-- boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone. They are usually rotations and measurements. Haven't reversed which are what yet.
-- Scale is how big the decal will be.
-- p13 is always 0.
-- For alpha, 200 seems to match what the game is doing, I think. I don't have access to the new scripts to see what this parameter is, but based on guessing this seems (kind of) accurate.
function Global.AddVehicleCrewEmblem(vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha)
	return _in(0x428BDCB9DA58DA53, vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha, _r)
end
Global.AddClanDecalToVehicle = Global.AddVehicleCrewEmblem

function Global.AddVehiclePhoneExplosiveDevice(vehicle)
	return _in(0x99AD4CCCB128CBC9, vehicle)
end
Global.N_0x99ad4cccb128cbc9 = Global.AddVehiclePhoneExplosiveDevice

function Global.AddVehicleStuckCheckWithWarp(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2FA9923062DD396C, p0, p1, p2, p3, p4, p5, p6)
end

--- x, y, z: offset in world coords from some entity.
function Global.AddVehicleSubtaskAttackCoord(ped, x, y, z)
	return _in(0x5CF0D8F9BBA0DD75, ped, x, y, z)
end

function Global.AddVehicleSubtaskAttackPed(ped, ped2)
	return _in(0x85F462BADC7DA47F, ped, ped2)
end

function Global.AddVehicleUpsidedownCheck(vehicle)
	return _in(0xB72E26D81006005B, vehicle)
end

function Global.AdvanceClockTimeTo(hour, minute, second)
	return _in(0xC8CA9670B9D83B3B, hour, minute, second)
end

--- Dr. Underscore (1/6/18):
-- Most references of this native come from the creator scripts. (creator, fm_capture_creator, fm_deathmatch_creator, fm_lts_creator, fm_race_creator).
-- Seems to have something to do with initializing/destroying creator shit.
function Global.AllowMissionCreatorWarp(toggle)
	return _in(0xDEA36202FC3382DF, toggle)
end
Global.N_0xdea36202fc3382df = Global.AllowMissionCreatorWarp

--- Allows opening the pause menu this frame, when the player is dead.
function Global.AllowPauseMenuWhenDeadThisFrame()
	return _in(0xCC3FDDED67BCFC63)
end
Global.N_0xcc3fdded67bcfc63 = Global.AllowPauseMenuWhenDeadThisFrame

function Global.AllowSonarBlips(p0)
	return _in(0x60734CC207C9833C, p0)
end
Global.N_0x60734cc207c9833c = Global.AllowSonarBlips

--- Seems to animate the gameplay camera zoom.
-- Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);
-- will animate the camera zooming in from 1000 meters away.
-- Game scripts use it like this:
-- // Setting this to 1 prevents V key from changing zoom
-- PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);
-- // These restrict how far you can move cam up/down left/right
-- CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);
-- CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);
-- CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);
function Global.AnimateGameplayCamZoom(p0, distance)
	return _in(0xDF2E1F7742402E81, p0, distance)
end

--- Example from michael2 script.
-- CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);
function Global.AnimatedShakeCam(cam, p1, p2, p3, amplitude)
	return _in(0xA2746EEAE3E577CD, cam, _ts(p1), _ts(p2), _ts(p3), amplitude)
end

--- CAM::_C2EAE3FB8CDBED31("SHAKE_CAM_medium", "medium", "", 0.5f);
function Global.AnimatedShakeScriptGlobal(p0, p1, p2, p3)
	return _in(0xC2EAE3FB8CDBED31, _ts(p0), _ts(p1), _ts(p2), p3)
end
Global.N_0xc2eae3fb8cdbed31 = Global.AnimatedShakeScriptGlobal

function Global.AnimpostfxGetUnk(effectName)
	return _in(0xE35B38A27E8E7179, _ts(effectName), _r, _rf)
end
Global.N_0xe35b38a27e8e7179 = Global.AnimpostfxGetUnk

--- Returns whether the specified screen effect is active.
-- See the effects list in _START_SCREEN_EFFECT
-- Example and list of screen FX: www.pastebin.com/dafBAjs0
function Global.AnimpostfxIsRunning(effectName)
	return _in(0x36AD3E690DA5ACEB, _ts(effectName), _r)
end
Global.GetScreenEffectIsActive = Global.AnimpostfxIsRunning

--- playLength - is how long to play the effect for in milliseconds. If 0, it plays the default length
-- if loop is true, the effect wont stop until you call _STOP_SCREEN_EFFECT on it. (only loopable effects)
-- Example and list of screen FX: www.pastebin.com/dafBAjs0
function Global.AnimpostfxPlay(effectName, duration, looped)
	return _in(0x2206BF9A37B7F724, _ts(effectName), duration, looped)
end
Global.StartScreenEffect = Global.AnimpostfxPlay

--- Example and list of screen FX: www.pastebin.com/dafBAjs0
function Global.AnimpostfxStop(effectName)
	return _in(0x068E835A1D0DC0E3, _ts(effectName))
end
Global.StopScreenEffect = Global.AnimpostfxStop

function Global.AnimpostfxStopAll()
	return _in(0xB4EDDC19532BFB85)
end
Global.StopAllScreenEffects = Global.AnimpostfxStopAll

--- "SwitchHUDFranklinOut",
-- "SwitchHUDMichaelOut",
-- "SwitchHUDOut",
-- "SwitchHUDTrevorOut",
-- "SwitchOpenFranklinOut",
-- "SwitchOpenMichaelIn",
-- "SwitchOpenNeutral"
function Global.AnimpostfxStopAndDoUnk(effectName)
	return _in(0xD2209BE128B5418C, _ts(effectName))
end
Global.N_0xd2209be128b5418c = Global.AnimpostfxStopAndDoUnk

function Global.AppClearBlock()
	return _in(0x5FE1DF3342DB7DBA)
end

function Global.AppCloseApp()
	return _in(0xE41C65E07A5F05FC)
end

function Global.AppCloseBlock()
	return _in(0xE8E3FCF72EAC0EF8)
end

--- NativeDB Return Type: BOOL
function Global.AppDataValid()
	return _in(0x846AA8E7D55EE5B6, _r, _ri)
end

function Global.AppDeleteAppData(appName)
	return _in(0x44151AEA95C8A003, _ts(appName), _r)
end

function Global.AppGetDeletedFileStatus()
	return _in(0xC9853A2BE3DED1A6, _r, _ri)
end

function Global.AppGetFloat(property)
	return _in(0x1514FB24C02C2322, _ts(property), _r, _rf)
end

--- NativeDB Parameter 0: char* property
-- NativeDB Return Type: int
function Global.AppGetInt(property)
	return _in(0xD3A58A12C77D9D4B, property)
end

function Global.AppGetString(property)
	return _in(0x749B023950D2311C, _ts(property), _r, _s)
end

function Global.AppHasLinkedSocialClubAccount()
	return _in(0x71EEE69745088DA0, _r)
end

function Global.AppHasSyncedData(appName)
	return _in(0xCA52279A7271517F, _ts(appName), _r)
end

function Global.AppSaveData()
	return _in(0x95C5D356CDA6E85F)
end

--- Called in the gamescripts like:
-- APP::APP_SET_APP("car");
-- APP::APP_SET_APP("dog");
function Global.AppSetApp(appName)
	return _in(0xCFD0406ADAF90D2B, _ts(appName))
end

function Global.AppSetBlock(blockName)
	return _in(0x262AB456A3D21F93, _ts(blockName))
end

function Global.AppSetFloat(property, value)
	return _in(0x25D7687C68E0DAA4, _ts(property), value)
end

function Global.AppSetInt(property, value)
	return _in(0x607E8E3D3E4F9611, _ts(property), value)
end

function Global.AppSetString(property, value)
	return _in(0x3FF2FCEC4B7721B4, _ts(property), _ts(value))
end

--- damages a ped with the given amount
-- ----
-- armorFirst means it will damage/lower the armor first before damaging the player.
-- setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.ApplyDamageToPed(ped, damageAmount, armorFirst)
	return _in(0x697157CED63F18D4, ped, damageAmount, armorFirst)
end

--- Applies a force to the specified entity.
-- **List of force types (p1)**:
-- ```
-- public enum ForceType
-- {
-- MinForce = 0,
-- MaxForceRot = 1,
-- MinForce2 = 2,
-- MaxForceRot2 = 3,
-- ForceNoRot = 4,
-- ForceRotPlusForce = 5
-- }
-- ```
-- Research/documentation on the gtaforums can be found [here](https://gtaforums.com/topic/885669-precisely-define-object-physics/) and [here](https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/).
-- @param entity The entity you want to apply a force on
-- @param forceType See native description above for a list of commonly used values
-- @param x Force amount (X)
-- @param y Force amount (Y)
-- @param z Force amount (Z)
-- @param offX Rotation/offset force (X)
-- @param offY Rotation/offset force (Y)
-- @param offZ Rotation/offset force (Z)
-- @param boneIndex (Often 0) Entity bone index
-- @param isDirectionRel (Usually false) Vector defined in local (body-fixed) coordinate frame
-- @param ignoreUpVec (Usually true)
-- @param isForceRel (Usually true) When true, force gets multiplied with the objects mass and different objects will have the same acceleration
-- @param p12 (Usually false)
-- @param p13 (Usually true)
function Global.ApplyForceToEntity(entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
	return _in(0xC5F68BE9613E2D18, entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
end

function Global.ApplyForceToEntityCenterOfMass(entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
	return _in(0x18FF00FC7EFF559E, entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
end

function Global.ApplyImpulseToCloth(posX, posY, posZ, vecX, vecY, vecZ, impulse)
	return _in(0xE37F721824571784, posX, posY, posZ, vecX, vecY, vecZ, impulse)
end

--- Found one occurence in re_crashrescue.c4
-- PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");
function Global.ApplyPedBlood(ped, boneIndex, xRot, yRot, zRot, woundType)
	return _in(0x83F7E01C7B769A26, ped, boneIndex, xRot, yRot, zRot, _ts(woundType))
end

function Global.ApplyPedBloodByZone(ped, p1, p2, p3, p4)
	return _in(0x3311E47B91EDCBBC, ped, p1, p2, p3, _ii(p4) --[[ may be optional ]])
end
Global.N_0x3311e47b91edcbbc = Global.ApplyPedBloodByZone

function Global.ApplyPedBloodDamageByZone(ped, p1, p2, p3, p4)
	return _in(0x816F6981C60BF53B, ped, p1, p2, p3, p4)
end
Global.N_0x816f6981c60bf53b = Global.ApplyPedBloodDamageByZone

function Global.ApplyPedBloodSpecific(ped, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xEF0D582CBF2D9B0F, ped, p1, p2, p3, p4, p5, p6, p7, _ii(p8) --[[ may be optional ]])
end
Global.N_0xef0d582cbf2d9b0f = Global.ApplyPedBloodSpecific

--- APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
function Global.ApplyPedDamageDecal(ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName)
	return _in(0x397C38AA7B4A5F83, ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, _ts(decalName))
end

--- Damage Packs:
-- "SCR_TrevorTreeBang"
-- "HOSPITAL_0"
-- "HOSPITAL_1"
-- "HOSPITAL_2"
-- "HOSPITAL_3"
-- "HOSPITAL_4"
-- "HOSPITAL_5"
-- "HOSPITAL_6"
-- "HOSPITAL_7"
-- "HOSPITAL_8"
-- "HOSPITAL_9"
-- "SCR_Dumpster"
-- "BigHitByVehicle"
-- "SCR_Finale_Michael_Face"
-- "SCR_Franklin_finb"
-- "SCR_Finale_Michael"
-- "SCR_Franklin_finb2"
-- "Explosion_Med"
-- "SCR_Torture"
-- "SCR_TracySplash"
-- "Skin_Melee_0"
-- Additional damage packs:
-- gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
function Global.ApplyPedDamagePack(ped, damagePack, damage, mult)
	return _in(0x46DF918788CB093F, ped, _ts(damagePack), damage, mult)
end

function Global.AreAllNavmeshRegionsLoaded()
	return _in(0x8415D95B194A3AEA, _r)
end

--- Appears to return false if any window is broken.
function Global.AreAllVehicleWindowsIntact(vehicle)
	return _in(0x11D862A3E977A9EF, vehicle, _r)
end
Global.AreAllVehicleWindowsIntact = Global.AreAllVehicleWindowsIntact

--- Returns false if every seat is occupied.
function Global.AreAnyVehicleSeatsFree(vehicle)
	return _in(0x2D34FC3BC4ADB780, vehicle, _r)
end
Global.IsAnyVehicleSeatEmpty = Global.AreAnyVehicleSeatsFree

--- Returns true when the bomb bay doors of this plane are open. False if they're closed.
-- @param aircraft The vehicle to check the bomb bay doors on.
-- @return A bool indicating the state of the doors (true = open, false = closed).
function Global.AreBombBayDoorsOpen(aircraft)
	return _in(0xD0917A423314BBA8, aircraft, _r)
end
Global.N_0xd0917a423314bba8 = Global.AreBombBayDoorsOpen
Global.GetAreBombBayDoorsOpen = Global.AreBombBayDoorsOpen

--- Returns true if the coords are colliding with the outdoors, and false if they collide with an interior.
function Global.AreCoordsCollidingWithExterior(x, y, z)
	return _in(0xEEA5AC2EDA7C33E8, x, y, z, _r)
end
Global.N_0xeea5ac2eda7c33e8 = Global.AreCoordsCollidingWithExterior

--- NativeDB Parameter 0: Hash garageHash
function Global.AreEntitiesEntirelyInsideGarage(garageHash, p1, p2, p3, p4)
	return _in(0x85B6C850546FDDE2, garageHash, p1, p2, p3, p4, _r)
end
Global.N_0x85b6c850546fdde2 = Global.AreEntitiesEntirelyInsideGarage

--- Only did a quick disassembly, but this function seems to load all path nodes in the given area. Parameters appear to be start x, start y, end x, end y.
function Global.ArePathNodesLoadedInArea(x1, y1, x2, y2)
	return _in(0xF7B79A50B905A30D, x1, y1, x2, y2, _r)
end
Global.N_0xf7b79a50b905a30d = Global.ArePathNodesLoadedInArea

--- Found this in the decompiled scripts, I'd do more research before changing the name --
-- if (!ENTITY::IS_ENTITY_DEAD(l_1911)) {
-- if (!VEHICLE::_755D6D5267CBBD7E(l_1911)) {
-- sub_1ba80("TRAFFICKING AIR: FAILING - PROPELLERS ARE DAMAGED");
-- l_12CE = 9;
-- }
-- }
function Global.ArePlanePropellersIntact(plane)
	return _in(0x755D6D5267CBBD7E, plane, _r)
end
Global.N_0x755d6d5267cbbd7e = Global.ArePlanePropellersIntact
Global.ArePropellersUndamaged = Global.ArePlanePropellersIntact

--- Can be used for planes only!
function Global.ArePlaneWingsIntact(plane)
	return _in(0x5991A01434CE9677, plane, _r)
end
Global.N_0x5991a01434ce9677 = Global.ArePlaneWingsIntact
Global.AddAMarkerOverVehicle = Global.ArePlaneWingsIntact
Global.AreVehicleWingsIntact = Global.ArePlaneWingsIntact

function Global.ArePlayerFlashingStarsAboutToDrop(player)
	return _in(0xAFAF86043E5874E9, player, _r)
end

function Global.ArePlayerStarsGreyedOut(player)
	return _in(0x0A6EB355EE14A2DB, player, _r)
end

function Global.AreProfileSettingsValid()
	return _in(0x5AA3BEFA29F03AD4, _r)
end
Global.N_0x5aa3befa29f03ad4 = Global.AreProfileSettingsValid

--- is this like strcmp??
function Global.AreStringsEqual(string1, string2)
	return _in(0x0C515FAB3FF9EA92, _ts(string1), _ts(string2), _r)
end

function Global.ArrayValueAddBoolean(value)
	return _in(0xF8B0F5A43E928C76, _i, value)
end

function Global.ArrayValueAddFloat(value)
	return _in(0x57A995FD75D37F56, _i, value)
end

function Global.ArrayValueAddInteger(value)
	return _in(0xCABDB751D86FE93B, _i, value)
end

function Global.ArrayValueAddObject(arrayData)
	return _in(0x6889498B3E19C797, _ii(arrayData) --[[ may be optional ]], _r, _ri)
end

function Global.ArrayValueAddString(value)
	return _in(0x2F0661C155AEEEAA, _i, _ts(value))
end

function Global.ArrayValueAddVector3(valueX, valueY, valueZ)
	return _in(0x407F8D034F70F0C2, _i, valueX, valueY, valueZ)
end

function Global.ArrayValueGetBoolean(arrayIndex)
	return _in(0x50C1B2874E50C114, _i, arrayIndex, _r)
end

function Global.ArrayValueGetFloat(arrayIndex)
	return _in(0xC0C527B525D7CFB5, _i, arrayIndex, _r, _rf)
end

function Global.ArrayValueGetInteger(arrayIndex)
	return _in(0x3E5AE19425CD74BE, _i, arrayIndex, _r, _ri)
end

function Global.ArrayValueGetObject(arrayIndex)
	return _in(0x8B5FADCC4E3A145F, _i, arrayIndex, _r, _ri)
end

function Global.ArrayValueGetSize(arrayData)
	return _in(0x065DB281590CEA2D, _ii(arrayData) --[[ may be optional ]], _r, _ri)
end

function Global.ArrayValueGetString(arrayIndex)
	return _in(0xD3F2FFEB8D836F52, _i, arrayIndex, _r, _s)
end

--- Types:
-- 1 = Boolean
-- 2 = Integer
-- 3 = Float
-- 4 = String
-- 5 = Vector3
-- 6 = Object
-- 7 = Array
function Global.ArrayValueGetType(arrayIndex)
	return _in(0x3A0014ADB172A3C5, _i, arrayIndex, _r, _ri)
end

function Global.ArrayValueGetVector3(arrayIndex)
	return _in(0x8D2064E5B64A628A, _i, arrayIndex, _r, _rv)
end

--- Returns arcsin value of p0.
function Global.Asin(p0)
	return _in(0xC843060B5765DCE7, p0, _r, _rf)
end

function Global.AssistedMovementCloseRoute()
	return _in(0xAEBF081FFC0A0E5E)
end

function Global.AssistedMovementFlushRoute()
	return _in(0x8621390F0CDCFE1F)
end

function Global.AssistedMovementIsRouteLoaded(route)
	return _in(0x60F9A4393A21F741, _ts(route), _r)
end

function Global.AssistedMovementOverrideLoadDistanceThisFrame(dist)
	return _in(0x13945951E16EF912, dist)
end

function Global.AssistedMovementRemoveRoute(route)
	return _in(0x3548536485DD792B, _ts(route))
end

--- Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
function Global.AssistedMovementRequestRoute(route)
	return _in(0x817268968605947A, _ts(route))
end

function Global.AssistedMovementSetRouteProperties(route, props)
	return _in(0xD5002D78B7162E1B, _ts(route), props)
end

--- Returns arctan value of p0.
function Global.Atan(p0)
	return _in(0xA9D1795CD5043663, p0, _r, _rf)
end

function Global.Atan2(p0, p1)
	return _in(0x8927CBF9D22261A4, p0, p1, _r, _rf)
end

--- Last param determines if its relative to the Entity
function Global.AttachCamToEntity(cam, entity, xOffset, yOffset, zOffset, isRelative)
	return _in(0xFEDB7D269E8C60E3, cam, entity, xOffset, yOffset, zOffset, isRelative)
end

function Global.AttachCamToPedBone(cam, ped, boneIndex, x, y, z, heading)
	return _in(0x61A3DBA14AB7F411, cam, ped, boneIndex, x, y, z, heading)
end

--- NativeDB Introduced: v1180
-- @param cam :
-- @param ped :
-- @param boneIndex :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
-- @param p8 :
-- @param p9 :
function Global.AttachCamToPedBone_2(cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x149916F50C34A40D, cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
end

--- This native works with vehicles only.
-- Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#_0xFB71170B7E76ACBA).
-- @param cam The camera handle.
-- @param vehicle The vehicle handle.
-- @param relativeRotation Whether or not the camera rotation will relative the vehicle rotation.
-- @param rotX The X rotation.
-- @param rotY The Y rotation.
-- @param rotZ The Z rotation.
-- @param offX The X offset direction.
-- @param offY The Y offset direction.
-- @param offZ The Z offset direction.
-- @param fixedDirection Whether or not the camera direction will relative to the vehicle direction.
function Global.AttachCamToVehicleBone(cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)
	return _in(0x8DB3F12A02CAEF72, cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)
end
Global.N_0x8db3f12a02caef72 = Global.AttachCamToVehicleBone

--- Attaches entity 1 to entity 2.
function Global.AttachEntitiesToRope(ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, boneName1, boneName2)
	return _in(0x3D95EC8B6D940AC3, ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, _ts(boneName1), _ts(boneName2))
end

function Global.AttachEntityBoneToEntityBone(entity1, entity2, entityBone, entityBone2, p4, p5)
	return _in(0x5C48B75732C8456C, entity1, entity2, entityBone, entityBone2, p4, p5)
end
Global.N_0x5c48b75732c8456c = Global.AttachEntityBoneToEntityBone

function Global.AttachEntityBoneToEntityBonePhysically(entity1, entity2, entityBone, entityBone2, p4, p5)
	return _in(0xFD1695C5D3B05439, entity1, entity2, entityBone, entityBone2, p4, p5)
end
Global.N_0xfd1695c5d3b05439 = Global.AttachEntityBoneToEntityBonePhysically

function Global.AttachEntityToCargobob(vehicle, entity, p2, x, y, z)
	return _in(0xA1DD82F3CCF9A01E, vehicle, entity, p2, x, y, z)
end
Global.N_0xa1dd82f3ccf9a01e = Global.AttachEntityToCargobob

--- Attaches entity1 to bone (boneIndex) of entity2.
-- boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
-- useSoftPinning - when 2 entities with collision collide and form into a ball they will break the attachment of the entity that they were attached to. Or when an entity is attached far away and then the resets.
-- collision - controls collision between the two entities (FALSE disables collision).
-- isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
-- vertexIndex - position of vertex
-- fixedRot - if false it ignores entity vector
function Global.AttachEntityToEntity(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot)
	return _in(0x6B9BBD38AB0796DF, entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot)
end

--- breakForce is the amount of force required to break the bond.
-- fixedRot - if false it ignores entity vector
-- p15 - is 1 or 0 in scripts - unknoun what it does
-- collision - controls collision between the two entities (FALSE disables collision).
-- teleport - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
-- p18 - is always 2 in scripts.
-- -------------------------
-- teleport is not exactly "doNotTeleport". What it actually does is the following:
-- if true, entities will be attached as if loosely tethered, up to the maximum offset position specified. Almost as if attached by an invisible rope.
-- if false, entities will be attached in a fixed position as specified in the offset position.
-- When p15 = true, it seems to force teleport to false.
-- It also lets the Rotation params actually work.
function Global.AttachEntityToEntityPhysically(entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)
	return _in(0xC3675780C92F90F9, entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)
end

function Global.AttachPortablePickupToPed(ped, p1)
	return _in(0x8DC39368BDD57755, ped, p1)
end

--- The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
function Global.AttachRopeToEntity(ropeId, entity, x, y, z, p5)
	return _in(0x4B490A6832559A65, ropeId, entity, x, y, z, p5)
end

function Global.AttachSynchronizedSceneToEntity(sceneID, entity, boneIndex)
	return _in(0x272E4723B56A3B96, sceneID, entity, boneIndex)
end

--- Might be more appropriate in AUDIO?
function Global.AttachTvAudioToEntity(entity)
	return _in(0x845BAD77CC770633, entity)
end

function Global.AttachVehicleOnToTrailer(vehicle, trailer, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x16B5E274BDE402F8, vehicle, trailer, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end
Global.N_0x16b5e274bde402f8 = Global.AttachVehicleOnToTrailer

function Global.AttachVehicleToCargobob(vehicle, cargobob, p2, x, y, z)
	return _in(0x4127F1D84E347769, vehicle, cargobob, p2, x, y, z)
end

--- HookOffset defines where the hook is attached. leave at 0 for default attachment.
-- When using the tow truck online, this is not used (set a breakpoint and never called during tow truck attachment)
function Global.AttachVehicleToTowTruck(towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
	return _in(0x29A16F8D621C4508, towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
end

function Global.AttachVehicleToTrailer(vehicle, trailer, radius)
	return _in(0x3C7D42D58F770B54, vehicle, trailer, radius)
end

--- NativeDB Return Type: BOOL
function Global.AudioIsScriptedMusicPlaying()
	return _in(0x845FFC3A4FEEFA3E, _r, _ri)
end

function Global.BadSportPlayerLeftDetected(event, amountReceived)
	return _in(0xEC5E3AF5289DCA81, _i, event, amountReceived, _r)
end
Global.N_0xec5e3af5289dca81 = Global.BadSportPlayerLeftDetected

function Global.BeginReplayStats(p0, p1)
	return _in(0xE0E500246FF73D66, p0, p1)
end

--- Push a function from the Scaleform onto the stack
function Global.BeginScaleformMovieMethod(scaleform, methodName)
	return _in(0xF6E48914C7A8694E, scaleform, _ts(methodName), _r)
end
Global.PushScaleformMovieFunction = Global.BeginScaleformMovieMethod

--- Starts frontend (pause menu) scaleform movie methods.
-- This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
-- Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#_0xB9449845F73F5E9C) for header scaleform functions.
-- @param functionName The function name of the scaleform to call.
function Global.BeginScaleformMovieMethodOnFrontend(functionName)
	return _in(0xAB58C27C2E6123C6, _ts(functionName), _r)
end
Global.N_0xab58c27c2e6123c6 = Global.BeginScaleformMovieMethodOnFrontend
Global.PushScaleformMovieFunctionN = Global.BeginScaleformMovieMethodOnFrontend
Global.BeginScaleformMovieMethodN = Global.BeginScaleformMovieMethodOnFrontend

--- Starts frontend (pause menu) scaleform movie methods for header options.
-- Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
-- @param functionName Scaleform function name.
function Global.BeginScaleformMovieMethodOnFrontendHeader(functionName)
	return _in(0xB9449845F73F5E9C, _ts(functionName), _r)
end
Global.N_0xb9449845f73f5e9c = Global.BeginScaleformMovieMethodOnFrontendHeader
Global.BeginScaleformMovieMethodV = Global.BeginScaleformMovieMethodOnFrontendHeader

--- Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION, just a hud component id instead of a Scaleform.
-- Known components:
-- 19
-- 20
-- This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
function Global.BeginScaleformScriptHudMovieMethod(hudComponent, methodName)
	return _in(0x98C494FD5BDFBFD5, hudComponent, _ts(methodName), _r)
end
Global.PushScaleformMovieFunctionFromHudComponent = Global.BeginScaleformScriptHudMovieMethod
Global.BeginScaleformMovieMethodHudComponent = Global.BeginScaleformScriptHudMovieMethod

function Global.BeginSrl()
	return _in(0x9BADDC94EF83B823)
end

--- Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
-- BEGIN_TEXT_COMMAND_PRINT
-- e.g
-- void StartLoadingMessage(char *text, int spinnerType = 3)
-- {
-- _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SHOW_LOADING_PROMPT(spinnerType);
-- }
-- /*OR*/
-- void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
-- {
-- _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SHOW_LOADING_PROMPT(spinnerType);
-- WAIT(timeMs);
-- _REMOVE_LOADING_PROMPT();
-- }
-- These are some localized strings used in the loading spinner.
-- "PM_WAIT"                   = Please Wait
-- "CELEB_WPLYRS"              = Waiting For Players.
-- "CELL_SPINNER2"             = Scanning storage.
-- "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
-- "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
-- "FM_COR_AUTOD"                        = Just spinner no text
-- "FM_IHELP_WAT2"                        = Waiting for other players
-- "FM_JIP_WAITO"                            = Game options are being set
-- "FMMC_DOWNLOAD"                    = Downloading
-- "FMMC_PLYLOAD"                         = Loading
-- "FMMC_STARTTRAN"                    = Launching session
-- "HUD_QUITTING"                           =  Quiting session
-- "KILL_STRIP_IDM"                         = Waiting for to accept
-- "MP_SPINLOADING"                      = Loading
function Global.BeginTextCommandBusyspinnerOn(string)
	return _in(0xABA17D7CE615ADBF, _ts(string))
end
Global.N_0xaba17d7ce615adbf = Global.BeginTextCommandBusyspinnerOn
Global.SetLoadingPromptTextEntry = Global.BeginTextCommandBusyspinnerOn
Global.BeginTextCommandBusyString = Global.BeginTextCommandBusyspinnerOn

--- clears a print text command with this text
function Global.BeginTextCommandClearPrint(text)
	return _in(0xE124FA80A759019C, _ts(text))
end
Global.N_0xe124fa80a759019c = Global.BeginTextCommandClearPrint

--- Used to be known as _SET_TEXT_COMPONENT_FORMAT
function Global.BeginTextCommandDisplayHelp(inputType)
	return _in(0x8509B634FBE7DA11, _ts(inputType))
end
Global.SetTextComponentFormat = Global.BeginTextCommandDisplayHelp

--- The following were found in the decompiled script files:
-- STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
-- ESDOLLA
-- ESMINDOLLA - cash (negative)
-- Used to be known as _SET_TEXT_ENTRY
function Global.BeginTextCommandDisplayText(text)
	return _in(0x25FBB336DF1804CB, _ts(text))
end
Global.SetTextEntry = Global.BeginTextCommandDisplayText

--- nothin doin.
-- BOOL Message(char* text)
-- {
-- BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
-- }
function Global.BeginTextCommandIsMessageDisplayed(text)
	return _in(0x853648FD1063A213, _ts(text))
end
Global.N_0x853648fd1063a213 = Global.BeginTextCommandIsMessageDisplayed

--- BOOL IsContextActive(char *ctx)
-- {
-- BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
-- return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
-- }
function Global.BeginTextCommandIsThisHelpMessageBeingDisplayed(labelName)
	return _in(0x0A24DA3A41B718F5, _ts(labelName))
end
Global.N_0x0a24da3a41b718f5 = Global.BeginTextCommandIsThisHelpMessageBeingDisplayed

--- get's line count
-- int GetLineCount(char *text, float x, float y)
-- {
-- _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
-- }
function Global.BeginTextCommandLineCount(entry)
	return _in(0x521FB041D93DD0E4, _ts(entry))
end
Global.SetTextGxtEntry = Global.BeginTextCommandLineCount

--- nothin doin.
-- void message()
-- {
-- _BEGIN_TEXT_COMMAND_OBJECTIVE("AHT_RTIT");
-- _END_TEXT_COMMAND_OBJECTIVE(0);
-- }
function Global.BeginTextCommandObjective(p0)
	return _in(0x23D69E0465570028, _ts(p0))
end
Global.N_0x23d69e0465570028 = Global.BeginTextCommandObjective

--- void message(char *text)
-- {
-- _BEGIN_TEXT_COMMAND_TIMER("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _END_TEXT_COMMAND_TIMER(0);
-- }
function Global.BeginTextCommandOverrideButtonText(gxtEntry)
	return _in(0x8F9EE5687F8EECCD, _ts(gxtEntry))
end
Global.N_0x8f9ee5687f8eeccd = Global.BeginTextCommandOverrideButtonText
Global.BeginTextCommandTimer = Global.BeginTextCommandOverrideButtonText

--- Used to be known as _SET_TEXT_ENTRY_2
-- void ShowSubtitle(char *text)
-- {
-- BEGIN_TEXT_COMMAND_PRINT("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- END_TEXT_COMMAND_PRINT(2000, 1);
-- }
function Global.BeginTextCommandPrint(GxtEntry)
	return _in(0xB87A37EEB7FAA67D, _ts(GxtEntry))
end
Global.SetTextEntry_2 = Global.BeginTextCommandPrint

--- Previously called _BEGIN_TEXT_COMPONENT
-- Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
-- Examples:
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
-- UI::ADD_TEXT_COMPONENT_INTEGER(GAMEPLAY::ABSI(a_1));
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
-- UI::_ADD_TEXT_COMPONENT_STRING(a_2);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
-- UI::_0x17299B63C7683A2B(v_3);
-- UI::_0x17299B63C7683A2B(v_4);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
-- UI::_0x17299B63C7683A2B(v_3);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
function Global.BeginTextCommandScaleformString(componentType)
	return _in(0x80338406F3475E55, _ts(componentType))
end
Global.BeginTextComponent = Global.BeginTextCommandScaleformString

--- Starts a text command to change the name of a blip displayed in the pause menu.
-- This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#_0xBC38B49BCB83BC9B), once adding all required text components.
-- @param textLabel The text label to set.
function Global.BeginTextCommandSetBlipName(textLabel)
	return _in(0xF9113A30DE5C6670, _ts(textLabel))
end

--- Example output preview:
-- ![](https://i.imgur.com/TJvqkYq.png)
-- @param text The text label to use.
function Global.BeginTextCommandThefeedPost(text)
	return _in(0x202709F4C58A0424, _ts(text))
end
Global.SetNotificationTextEntry = Global.BeginTextCommandThefeedPost

--- Example:
-- _BEGIN_TEXT_COMMAND_WIDTH("NUMBER");
-- ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
-- float width = _END_TEXT_COMMAND_GET_WIDTH(true);
function Global.BeginTextCommandWidth(text)
	return _in(0x54CE8AC98E120CAB, _ts(text))
end
Global.SetTextEntryForWidth = Global.BeginTextCommandWidth

--- Deletes the given context from the background scripts context map.
-- NativeDB Introduced: v323
-- @param contextName :
function Global.BgEndContext(contextName)
	return _in(0xDC2BACD920D0A0DD, _ts(contextName))
end

--- Hashed version of 0xDC2BACD920D0A0DD.
-- NativeDB Introduced: v323
-- @param contextHash :
function Global.BgEndContextHash(contextHash)
	return _in(0x107E5CC7CA942BC1, _ch(contextHash))
end

--- Inserts the given context into the background scripts context map.
-- NativeDB Introduced: v323
-- @param contextName :
function Global.BgStartContext(contextName)
	return _in(0x9D5A25BADB742ACD, _ts(contextName))
end

--- Hashed version of 0x9D5A25BADB742ACD.
-- NativeDB Introduced: v323
-- @param contextHash :
function Global.BgStartContextHash(contextHash)
	return _in(0x75B18E49607874C7, _ch(contextHash))
end

--- Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
-- Only works on vehicles with a police siren.
function Global.BlipSiren(vehicle)
	return _in(0x1B9025BDA76822B6, vehicle)
end

function Global.BlockDeathJingle(toggle)
	return _in(0xF154B8D1775B2DEC, toggle)
end
Global.N_0xf154b8d1775b2dec = Global.BlockDeathJingle

function Global.BlockDecisionMakerEvent(name, type)
	return _in(0xE42FCDFD0E4196F7, _ch(name), type)
end

function Global.BlockDispatchServiceResourceCreation(dispatchService, toggle)
	return _in(0x9B2BD3773123EA2F, dispatchService, toggle)
end
Global.N_0x9b2bd3773123ea2f = Global.BlockDispatchServiceResourceCreation

--- Related toggling CEventShockingDeadBody
function Global.BlockPedDeadBodyShockingEvents(ped, toggle)
	return _in(0xE43A13C9E4CCCBCF, ped, toggle)
end
Global.N_0xe43a13c9e4cccbcf = Global.BlockPedDeadBodyShockingEvents

function Global.BreakEntityGlass(entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0x2E648D16F6E308F3, entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- This native makes the vehicle stop immediately, as happens when we enter a MP garage.
-- . distance defines how far it will travel until stopping. Garage doors use 3.0.
-- . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
function Global.BringVehicleToHalt(vehicle, distance, duration, unknown)
	return _in(0x260BE8F09E326A20, vehicle, distance, duration, unknown)
end
Global.N_0x260be8f09e326a20 = Global.BringVehicleToHalt
Global.SetVehicleHalt = Global.BringVehicleToHalt

--- NativeDB Return Type: BOOL
function Global.BusyspinnerIsDisplaying()
	return _in(0xB2A592B04648A9CB, _r, _ri)
end
Global.N_0xb2a592b04648a9cb = Global.BusyspinnerIsDisplaying

function Global.BusyspinnerIsOn()
	return _in(0xD422FCC5F239A915, _r)
end
Global.N_0xd422fcc5f239a915 = Global.BusyspinnerIsOn
Global.IsLoadingPromptBeingDisplayed = Global.BusyspinnerIsOn

--- Removes the loading prompt at the bottom right of the screen, created by the UI::_SHOW_LOADING_PROMPT native.
function Global.BusyspinnerOff()
	return _in(0x10D373323E5B9C0D)
end
Global.N_0x10d373323e5b9c0d = Global.BusyspinnerOff
Global.RemoveLoadingPrompt = Global.BusyspinnerOff

--- Calculates the travel distance between a set of points.
-- Doesn't seem to correlate with distance on gps sometimes.
function Global.CalculateTravelDistanceBetweenPoints(x1, y1, z1, x2, y2, z2)
	return _in(0xADD95C7005C4A197, x1, y1, z1, x2, y2, z2, _r, _rf)
end

--- This is similar to the PushScaleformMovieFunction natives, except it calls in the `TIMELINE` of a minimap overlay.
-- @param miniMap The minimap overlay ID.
-- @param fnName A function in the overlay's TIMELINE.
function Global.CallMinimapScaleformFunction(miniMap, fnName)
	return _in(0x4c89c0ed, miniMap, _ts(fnName), _r)
end

--- Calls the Scaleform function.
function Global.CallScaleformMovieMethod(scaleform, method)
	return _in(0xFBD96D87AC96D533, scaleform, _ts(method))
end
Global.CallScaleformMovieFunctionVoid = Global.CallScaleformMovieMethod

--- Calls the Scaleform function and passes the parameters as floats.
-- The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
function Global.CallScaleformMovieMethodWithNumber(scaleform, methodName, param1, param2, param3, param4, param5)
	return _in(0xD0837058AE2E4BEE, scaleform, _ts(methodName), param1, param2, param3, param4, param5)
end
Global.CallScaleformMovieFunctionFloatParams = Global.CallScaleformMovieMethodWithNumber

--- Calls the Scaleform function and passes both float and string parameters (in their respective order).
-- The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
-- NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
-- Examples:
-- // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
-- GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);
-- // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
-- GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);
function Global.CallScaleformMovieMethodWithNumberAndString(scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5)
	return _in(0xEF662D8D57E290B1, scaleform, _ts(methodName), floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, _ts(stringParam1), _ts(stringParam2), _ts(stringParam3), _ts(stringParam4), _ts(stringParam5))
end
Global.CallScaleformMovieFunctionMixedParams = Global.CallScaleformMovieMethodWithNumberAndString

--- Calls the Scaleform function and passes the parameters as strings.
-- The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
function Global.CallScaleformMovieMethodWithString(scaleform, methodName, param1, param2, param3, param4, param5)
	return _in(0x51BC1ED3CC44E8F7, scaleform, _ts(methodName), _ts(param1), _ts(param2), _ts(param3), _ts(param4), _ts(param5))
end
Global.CallScaleformMovieFunctionStringParams = Global.CallScaleformMovieMethodWithString

function Global.CanAnchorBoatHere(vehicle)
	return _in(0x26C10ECBDA5D043B, vehicle, _r)
end
Global.GetBoatAnchor = Global.CanAnchorBoatHere
Global.CanBoatBeAnchored = Global.CanAnchorBoatHere

--- Differs from 0x26C10ECBDA5D043B in that 0x140EFCC10 (1604 retail) is called with a2 = true.
-- NativeDB Introduced: v678
-- @param vehicle :
function Global.CanBoatBeAnchored_2(vehicle)
	return _in(0x24F4121D07579880, vehicle, _r)
end

function Global.CanCreateRandomBikeRider()
	return _in(0xEACEEDA81751915C, _r)
end

function Global.CanCreateRandomCops()
	return _in(0x5EE2CAFF7F17770D, _r)
end

function Global.CanCreateRandomDriver()
	return _in(0xB8EB95E5B4E56978, _r)
end

function Global.CanCreateRandomPed(unk)
	return _in(0x3E8349C08E4B82E4, unk, _r)
end

function Global.CanKnockPedOffVehicle(ped)
	return _in(0x51AC07A44D4F5B8A, ped, _r)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int amount
-- NativeDB Added Parameter 4: int* p3
function Global.CanPayGoon()
	return _in(0x9777734DAD16992F, _r)
end
Global.N_0x9777734dad16992f = Global.CanPayGoon

function Global.CanPedHearPlayer(player, ped)
	return _in(0xF297383AA91DCA29, player, ped, _r)
end

function Global.CanPedInCombatSeeTarget(ped, target)
	return _in(0xEAD42DE3610D0721, ped, target, _r)
end

--- Prevents the ped from going limp.
-- [Example: Can prevent peds from falling when standing on moving vehicles.]
function Global.CanPedRagdoll(ped)
	return _in(0x128F79EDCECE4FD5, ped, _r)
end

--- Returns true if ped1 can see ped2 in their line of vision
function Global.CanPedSeeHatedPed(ped1, ped2)
	return _in(0x6CD5A433374D4CFB, ped1, ped2, _r)
end
Global.N_0x6cd5a433374d4cfb = Global.CanPedSeeHatedPed
Global.CanPedSeePed = Global.CanPedSeeHatedPed

--- Checks if the ped can play the speech or has the speech file, last parameter is usually 0
function Global.CanPedSpeak(ped, speechName, unk)
	return _in(0x49B99BF3FDA89A7A, ped, _ts(speechName), unk, _r)
end
Global.N_0x49b99bf3fda89a7a = Global.CanPedSpeak

--- This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
-- I can confirm the above. This function is hard-coded to always return 1.
function Global.CanPhoneBeSeenOnScreen()
	return _in(0xC4E2813898C97A4B, _r)
end

function Global.CanPlayerStartMission(player)
	return _in(0xDE7465A27D403C06, player, _r)
end

--- if (CAN_REGISTER_MISSION_ENTITIES(20, 20, 20, 10))
-- {
-- }
function Global.CanRegisterMissionEntities(ped_amt, vehicle_amt, object_amt, pickup_amt)
	return _in(0x69778E7564BADE6D, ped_amt, vehicle_amt, object_amt, pickup_amt, _r)
end

function Global.CanRegisterMissionObjects(amount)
	return _in(0x800DD4721A8B008B, amount, _r)
end

function Global.CanRegisterMissionPeds(amount)
	return _in(0xBCBF4FEF9FA5D781, amount, _r)
end

function Global.CanRegisterMissionPickups(amount)
	return _in(0x0A49D1CB6E34AF72, amount, _r)
end

function Global.CanRegisterMissionVehicles(amount)
	return _in(0x7277F1F2E085EE74, amount, _r)
end

--- "Can request assets for cutscene entity"? (found in decompiled scripts)
function Global.CanRequestAssetsForCutsceneEntity()
	return _in(0xB56BBBCC2955D9CB, _r)
end
Global.N_0xb56bbbcc2955d9cb = Global.CanRequestAssetsForCutsceneEntity

--- modelHash (p1) was always 0 in R* scripts
function Global.CanSetEnterStateForRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0x645D0B458D8E17B5, _ts(cutsceneEntName), _ch(modelHash), _r)
end

function Global.CanSetExitStateForCamera(p0)
	return _in(0xB2CBCD0930DFB420, p0, _r)
end

function Global.CanSetExitStateForRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0x4C6A6451C79E4662, _ts(cutsceneEntName), _ch(modelHash), _r)
end

function Global.CanShuffleSeat(vehicle, p1)
	return _in(0x30785D90C956BF35, vehicle, p1, _r)
end

--- this returns if you can use the weapon while using a parachute
function Global.CanUseWeaponOnParachute(weaponHash)
	return _in(0xBC7BE5ABC0879F74, _ch(weaponHash), _r)
end

function Global.CanVehicleParachuteBeActivated(vehicle)
	return _in(0xA916396DF4154EE3, vehicle, _r)
end

function Global.CancelCurrentPoliceReport()
	return _in(0xB4F90FAF7670B16F)
end
Global.N_0xb4f90faf7670b16f = Global.CancelCurrentPoliceReport
Global.DisablePoliceReports = Global.CancelCurrentPoliceReport

--- Cancels the currently executing event.
function Global.CancelEvent()
	return _in(0xfa29d35d)
end

--- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function Global.CancelMusicEvent(eventName)
	return _in(0x5B17A90291133DA5, _ts(eventName), _r)
end

--- Cancels an onscreen keyboard, if available.
function Global.CancelOnscreenKeyboard()
	return _in(0x58A39BE597CE99CD)
end
Global.N_0x58a39be597ce99cd = Global.CancelOnscreenKeyboard

function Global.CancelStuntJump()
	return _in(0xE6B7B0ACD4E4B75E)
end

--- Does something similar to INTERIOR::DISABLE_INTERIOR
function Global.CapInterior(interiorID, toggle)
	return _in(0xD9175F941610DB54, interiorID, toggle)
end

function Global.CascadeshadowsResetType()
	return _in(0x27CB772218215325)
end
Global.N_0x27cb772218215325 = Global.CascadeshadowsResetType

--- Has something to do with player switch.
-- Only possible values:
-- - "CSM_ST_BOX3x3"
function Global.CascadeshadowsSetType(type)
	return _in(0xB11D94BC55F41932, _ts(type))
end
Global.N_0xb11d94bc55f41932 = Global.CascadeshadowsSetType

--- I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
function Global.Ceil(value)
	return _in(0x11E019C8F43ACC8A, value, _r, _ri)
end

function Global.CellCamActivate(p0, p1)
	return _in(0xFDE8F069C542D126, p0, p1)
end

--- Disables the phone up-button, oddly enough.
-- i.e.: When the phone is out, and this method is called with false as it's parameter, the phone will not be able to scroll up. However, when you use the down arrow key, it's functionality still, works on the phone.
-- When the phone is not out, and this method is called with false as it's parameter, you will not be able to bring up the phone. Although the up arrow key still works for whatever functionality it's used for, just not for the phone.
-- This can be used for creating menu's when trying to disable the phone from being used.
-- You do not have to call the function again with false as a parameter, as soon as the function stops being called, the phone will again be usable.
function Global.CellCamDisableThisFrame(toggle)
	return _in(0x015C49A93E3E086E, toggle)
end
Global.N_0x015c49a93e3e086e = Global.CellCamDisableThisFrame
Global.DisablePhoneThisFrame = Global.CellCamDisableThisFrame

function Global.CellCamIsCharVisibleNoFaceCheck(entity)
	return _in(0x439E9BC95B7E7FBE, entity, _r)
end

--- For move the finger of player, the value of int goes 1 at 5.
function Global.CellCamMoveFinger(direction)
	return _in(0x95C9E72F3D7DEC9B, direction)
end
Global.MoveFinger = Global.CellCamMoveFinger

--- if the bool "Toggle" is "true" so the phone is lean.
-- if the bool "Toggle" is "false" so the phone is not lean.
function Global.CellCamSetLean(toggle)
	return _in(0x44E44169EF70138E, toggle)
end
Global.SetPhoneLean = Global.CellCamSetLean

--- b2 and/or b3 maybe got something to do with keeping values from the last ped. Both of them set to 1 works great. <br/><br/>Examples from the decompiled scripts:<br/><br/>PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), l_5C0[4/*14*/], 0, 1);<br/>PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), a_0[a_0._f7/*1*/], a_2, 0);<br/><br/><br/>===========================================================<br/>The only way I ever got this to work in GTA Online once is by setting both to 0, 0. However, when you switch from your online character to whomever, your character will start walking away 'as if you left the game.' If from there you attempt to call this native once more to switch back to you online ped. You will freeze or if you try changing to another ped. I've tried all posibilities so far.<br/>1, 1 (Freeze), 0, 0(Works Once), 1, 0 & 0, 1 (Freeze). Note of course trying to call this on another online player will crash. Anyone have any idea if implementing a blr within the xex itself on a possible check if it would prevent this freezing?<br/>===========================================================
function Global.ChangePlayerPed(player, ped, b2, resetDamage)
	return _in(0x048189FAC643DEEE, player, ped, b2, resetDamage)
end

--- minimum: Degrees between -90f and 90f.
-- maximum: Degrees between -90f and 90f.
-- Clamps the gameplay camera's current pitch.
-- Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.ClampGameplayCamPitch(minimum, maximum)
	return _in(0xA516C198B7DCA1E1, minimum, maximum, _r, _ri)
end

--- minimum: Degrees between -180f and 180f.
-- maximum: Degrees between -180f and 180f.
-- Clamps the gameplay camera's current yaw.
-- Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.ClampGameplayCamYaw(minimum, maximum)
	return _in(0x8F993D26E0CA5E8E, minimum, maximum, _r, _ri)
end

function Global.CleanItemset(p0)
	return _in(0x41BC0D722FC04221, p0)
end

function Global.CleanupAsyncInstall()
	return _in(0xC79AE21974B01FB2)
end
Global.N_0xc79ae21974b01fb2 = Global.CleanupAsyncInstall

function Global.ClearAdditionalText(p0, p1)
	return _in(0x2A179DF17CCF04CD, p0, p1)
end

--- Clears all active blip routes that have been set with [`SetBlipRoute`](#_0x3E160C90).
function Global.ClearAllBlipRoutes()
	return _in(0xD12882D3FF82BF11)
end
Global.N_0xd12882d3ff82bf11 = Global.ClearAllBlipRoutes

--- Removes broken glass particles.
function Global.ClearAllBrokenGlass()
	return _in(0xB32209EFFDC04913)
end

function Global.ClearAllHelpMessages()
	return _in(0x6178F68A87A4D3A0)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.ClearAllPedProps(ped)
	return _in(0xCD8A7537A9B52F06, ped)
end

function Global.ClearAllPedVehicleForcedSeatUsage(ped)
	return _in(0xE6CA85E7259CE16B, ped)
end
Global.N_0xe6ca85e7259ce16b = Global.ClearAllPedVehicleForcedSeatUsage

function Global.ClearAmbientZoneListState(p1)
	return _in(0x120C48C614909FA4, _i, p1)
end

--- This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(char* zoneName, bool p1, Any p2);
-- Still needs more research.
-- Here are the names I've found: pastebin.com/AfA0Qjyv
-- New Ambient Zone List (Combind with old): pastebin.com/h8BsKgUD -DasChaos
function Global.ClearAmbientZoneState(zoneName, p1)
	return _in(0x218DD44AAAC964FF, _ts(zoneName), p1)
end

--- NativeDB Added Parameter 13: Any p12
function Global.ClearAngledAreaOfVehicles(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x11DB3500F042A8AA, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end

--- Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
function Global.ClearArea(X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
	return _in(0xA56F01F3765B93A0, X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
end

--- flags appears to always be 0
function Global.ClearAreaOfCops(x, y, z, radius, flags)
	return _in(0x04F8FC8FCF58F88D, x, y, z, radius, flags)
end

--- GAMEPLAY::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
function Global.ClearAreaOfEverything(x, y, z, radius, p4, p5, p6, p7)
	return _in(0x957838AAF91BD12D, x, y, z, radius, p4, p5, p6, p7)
end
Global.N_0x957838aaf91bd12d = Global.ClearAreaOfEverything

--- I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
function Global.ClearAreaOfObjects(x, y, z, radius, flags)
	return _in(0xDD9B9B385AAC7F5B, x, y, z, radius, flags)
end

--- Example: 		CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
function Global.ClearAreaOfPeds(x, y, z, radius, flags)
	return _in(0xBE31FD6CE464AC59, x, y, z, radius, flags)
end

--- NativeDB Parameter 4: int flags
function Global.ClearAreaOfProjectiles(x, y, z, radius, flags)
	return _in(0x0A1CB9094635D1A6, x, y, z, radius, flags)
end

--- Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);
-- ```
-- ```
-- NativeDB Added Parameter 10: BOOL p9
function Global.ClearAreaOfVehicles(x, y, z, radius, p4, p5, p6, p7, p8)
	return _in(0x01C7B9B38428AEB6, x, y, z, radius, p4, p5, p6, p7, p8)
end

--- This sets bit [offset] of [address] to off.
-- Example:
-- GAMEPLAY::CLEAR_BIT(&bitAddress, 1);
-- To check if this bit has been enabled:
-- GAMEPLAY::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
function Global.ClearBit(offset)
	return _in(0xE80492A9AC099A93, _i, offset)
end

function Global.ClearBrief()
	return _in(0x9D292F73ADBD9313)
end

function Global.ClearCloudHat()
	return _in(0x957E790EA1727B64)
end

--- 3 calls in the b617d scripts, removed duplicate.
-- AUDIO::_1654F24A88A8E3FE("RADIO_16_SILVERLAKE");
-- AUDIO::_1654F24A88A8E3FE("RADIO_01_CLASS_ROCK");
function Global.ClearCustomRadioTrackList(radioStation)
	return _in(0x1654F24A88A8E3FE, _ts(radioStation))
end
Global.N_0x1654f24a88a8e3fe = Global.ClearCustomRadioTrackList

function Global.ClearDecisionMakerEventResponse(name, type)
	return _in(0x4FC9381A7AEE8968, _ch(name), type)
end

--- Resets the screen's draw-origin which was changed by the function GRAPHICS::SET_DRAW_ORIGIN(...) back to x=0,y=0.
-- See GRAPHICS::SET_DRAW_ORIGIN(...) for further information.
function Global.ClearDrawOrigin()
	return _in(0xFF0B610F6BE0D7AF)
end

function Global.ClearDrivebyTaskUnderneathDrivingTask(ped)
	return _in(0xC35B5CDB2824CF69, ped)
end

function Global.ClearDynamicPauseMenuErrorMessage()
	return _in(0x7792424AA0EAC32E)
end
Global.N_0x7792424aa0eac32e = Global.ClearDynamicPauseMenuErrorMessage

--- NativeDB Return Type: void
function Global.ClearEntityLastDamageEntity(entity)
	return _in(0xA72CD9CA74A5ECBA, entity, _r, _ri)
end

function Global.ClearEntityLastWeaponDamage(entity)
	return _in(0xAC678E40BE7C74D2, entity)
end

--- Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#_0x5096FD9CCB49056D)
function Global.ClearExtraTimecycleModifier()
	return _in(0x92CCC17A7A2285DA)
end
Global.N_0x92ccc17a7a2285da = Global.ClearExtraTimecycleModifier

function Global.ClearFacialIdleAnimOverride(ped)
	return _in(0x726256CC1EEB182F, ped)
end

--- p0 looks like int in script
function Global.ClearFloatingHelp(p0, p1)
	return _in(0x50085246ABD3FEFA, p0, p1)
end

function Global.ClearFocus()
	return _in(0x31B73D1EA9F01DA2)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.ClearGarageArea(garageHash, isNetwork)
	return _in(0xDA05194260CDCDF9, garageHash, isNetwork)
end
Global.N_0xda05194260cdcdf9 = Global.ClearGarageArea

function Global.ClearGpsCustomRoute()
	return _in(0xE6DE0561D9232A64)
end
Global.N_0xe6de0561d9232a64 = Global.ClearGpsCustomRoute

--- Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#_0xD0BC1C6FB18EE154).
-- @param index Index of disabled zone.
function Global.ClearGpsDisabledZoneAtIndex(index)
	return _in(0x2801D0012266DF07, index)
end
Global.N_0x2801d0012266df07 = Global.ClearGpsDisabledZoneAtIndex
Global.ClearGpsDisabledZoneAtIndex = Global.ClearGpsDisabledZoneAtIndex

--- Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
-- Doesn't seem like the flags are actually read by the game at all.
function Global.ClearGpsFlags()
	return _in(0x21986729D6A3A830)
end

--- Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](https://runtime.fivem.net/doc/reference.html#_0x3DDA37128DD1ACA8)
function Global.ClearGpsMultiRoute()
	return _in(0x67EEDEA1B9BAFD94)
end
Global.N_0x67eedea1b9bafd94 = Global.ClearGpsMultiRoute

function Global.ClearGpsPlayerWaypoint()
	return _in(0xFF4FB7C8CDFA3DA7)
end

--- Does the same as SET_RACE_TRACK_RENDER(false);
function Global.ClearGpsRaceTrack()
	return _in(0x7AA5B4CE533C858B)
end

function Global.ClearHdArea()
	return _in(0xCE58B1CFB9290813)
end

function Global.ClearHelp(toggle)
	return _in(0x8DFCED7A656F8802, toggle)
end

function Global.ClearLastDrivenVehicle()
	return _in(0xE01903C47C7AC89E)
end
Global.N_0xe01903c47c7ac89e = Global.ClearLastDrivenVehicle

function Global.ClearOverrideWeather()
	return _in(0x338D2E3477711050)
end

function Global.ClearPedAlternateMovementAnim(ped, stance, p2)
	return _in(0xD8D19675ED5FBDCE, ped, stance, p2)
end

function Global.ClearPedAlternateWalkAnim(ped, p1)
	return _in(0x8844BBFCE30AA9E9, ped, p1)
end

function Global.ClearPedBloodDamage(ped)
	return _in(0x8FE22675A5A45817, ped)
end

--- Somehow related to changing ped's clothes.
function Global.ClearPedBloodDamageByZone(ped, p1)
	return _in(0x56E3B78C5408D9F4, ped, p1)
end
Global.N_0x56e3b78c5408d9f4 = Global.ClearPedBloodDamageByZone

--- CLEAR_PED_*
function Global.ClearPedCoverClipsetOverride(ped)
	return _in(0xC79196DCB36F6121, ped)
end
Global.N_0xc79196dcb36f6121 = Global.ClearPedCoverClipsetOverride

--- p1: from 0 to 5 in the b617d scripts.
-- p2: "blushing" and "ALL" found in the b617d scripts.
function Global.ClearPedDamageDecalByZone(ped, p1, p2)
	return _in(0x523C79AEEFCC4A2A, ped, p1, _ts(p2))
end
Global.N_0x523c79aeefcc4a2a = Global.ClearPedDamageDecalByZone

function Global.ClearPedDecorations(ped)
	return _in(0x0E5173C163976E38, ped)
end

function Global.ClearPedDecorationsLeaveScars(ped)
	return _in(0xE3B27E70CEAB9F0C, ped)
end
Global.N_0xe3b27e70ceab9f0c = Global.ClearPedDecorationsLeaveScars
Global.ClearPedFacialDecorations = Global.ClearPedDecorationsLeaveScars

function Global.ClearPedDriveByClipsetOverride(ped)
	return _in(0x4AFE3690D7E0B5AC, ped)
end

--- Something related to clearing the ped because always used with CLEAR_PED_WETNESS, CLEAR_PED_BLOOD_DAMAGE and RESET_PED_VISIBLE_DAMAGE.
function Global.ClearPedEnvDirt(ped)
	return _in(0x6585D955A68452A5, ped)
end
Global.N_0x6585d955a68452a5 = Global.ClearPedEnvDirt

function Global.ClearPedInPauseMenu()
	return _in(0x5E62BE5DC58E9E06)
end

function Global.ClearPedLastDamageBone(ped)
	return _in(0x8EF6B7AC68E2F01B, ped)
end

--- Does NOT seem to work with HasPedBeenDamagedByWeapon.
-- Use ClearEntityLastWeaponDamage and HasEntityBeenDamagedByWeapon instead.
function Global.ClearPedLastWeaponDamage(ped)
	return _in(0x0E98F88A24C5F4B8, ped)
end

function Global.ClearPedNonCreationArea()
	return _in(0x2E05208086BA0651)
end

function Global.ClearPedParachutePackVariation(ped)
	return _in(0x1280804F7CFD2D6C, ped)
end
Global.N_0x1280804f7cfd2d6c = Global.ClearPedParachutePackVariation

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.ClearPedProp(ped, propId)
	return _in(0x0943E5B8E078E76E, ped, propId)
end

--- Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
-- @param ped The ped to remove the scuba gear from.
function Global.ClearPedScubaGearVariation(ped)
	return _in(0xB50EB4CCB29704AC, ped)
end
Global.N_0xb50eb4ccb29704ac = Global.ClearPedScubaGearVariation
Global.RemovePedScubaGearNow = Global.ClearPedScubaGearVariation

function Global.ClearPedSecondaryTask(ped)
	return _in(0x176CECF6F920D707, ped)
end

function Global.ClearPedTasks(ped)
	return _in(0xE1EF3C1216AFF2CD, ped)
end

--- Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
function Global.ClearPedTasksImmediately(ped)
	return _in(0xAAA34F8A7CB32098, ped)
end

--- It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
function Global.ClearPedWetness(ped)
	return _in(0x9C720776DAA43E7E, ped)
end

function Global.ClearPlayerHasDamagedAtLeastOneNonAnimalPed(player)
	return _in(0x4AACB96203D11A31, player)
end

function Global.ClearPlayerHasDamagedAtLeastOnePed(player)
	return _in(0xF0B67A4DE6AB5F98, player)
end

function Global.ClearPlayerParachuteModelOverride(player)
	return _in(0x8753997EB5F6EE3F, player)
end

function Global.ClearPlayerParachutePackModelOverride(player)
	return _in(0x10C54E4389C12B42, player)
end

function Global.ClearPlayerParachuteVariationOverride(player)
	return _in(0x0F4CC924CF8C7B21, player)
end

--- This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);
-- PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.
function Global.ClearPlayerWantedLevel(player)
	return _in(0xB302540597885499, player)
end

--- Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
-- Modified example from "am_imp_exp.c4", line 6418:
-- /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
-- etc.
-- */
-- STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);
-- ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);
function Global.ClearPopscheduleOverrideVehicleModel(scheduleId)
	return _in(0x5C0DE367AA0D911C, scheduleId)
end

function Global.ClearPrints()
	return _in(0xCC33FA791322B9D9)
end

--- Remove all BLIP_GALLERY blips from the map.
function Global.ClearRaceGalleryBlips()
	return _in(0x2708FC083123F9FF)
end
Global.N_0x2708fc083123f9ff = Global.ClearRaceGalleryBlips

--- There seem to be 26 flags
function Global.ClearRagdollBlockingFlags(ped, flags)
	return _in(0xD86D101FCFD00A4B, ped, flags)
end
Global.N_0xd86d101fcfd00a4b = Global.ClearRagdollBlockingFlags
Global.ResetPedRagdollBlockingFlags = Global.ClearRagdollBlockingFlags

--- Clears the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- (Credits: Inco)
-- Example:
-- PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
-- PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
function Global.ClearRelationshipBetweenGroups(relationship, group1, group2)
	return _in(0x5E29243FB56FC6D4, relationship, _ch(group1), _ch(group2))
end

--- **This native does absolutely nothing, just a nullsub**
function Global.ClearReminderMessage()
	return _in(0xB57D8DD645CFA2CF)
end
Global.N_0xb57d8dd645cfa2cf = Global.ClearReminderMessage

function Global.ClearReplayStats()
	return _in(0x1B1AB132A16FDA55)
end

--- Sets the next spawn location to the position supplied to _SET_CUSTOM_RESPAWN_POSITION.
function Global.ClearRestartCustomPosition()
	return _in(0xA2716D40842EAF79)
end
Global.N_0xa2716d40842eaf79 = Global.ClearRestartCustomPosition
Global.SetNextRespawnToCustom = Global.ClearRestartCustomPosition

function Global.ClearRoomForEntity(entity)
	return _in(0xB365FC0C4E27FFA7, entity)
end

function Global.ClearRoomForGameViewport()
	return _in(0x23B59D8912F94246)
end
Global.N_0x23b59d8912f94246 = Global.ClearRoomForGameViewport

--- NativeDB Return Type: void
function Global.ClearSequenceTask(taskSequenceId)
	return _in(0x3841422E9C488D8C, _ii(taskSequenceId) --[[ may be optional ]], _r, _ri)
end

function Global.ClearSmallPrints()
	return _in(0x2CEA2839313C09AC)
end

function Global.ClearTacticalAnalysisPoints()
	return _in(0xB3CD58CCA6CDA852)
end
Global.N_0xb3cd58cca6cda852 = Global.ClearTacticalAnalysisPoints

--- p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z
function Global.ClearThisPrint(p0)
	return _in(0xCF708001E1E536DD, _ts(p0))
end

function Global.ClearTimecycleModifier()
	return _in(0x0F07E7745A236711)
end

function Global.ClearTvChannelPlaylist(tvChannel)
	return _in(0xBEB3D46BB7F043C0, tvChannel)
end
Global.N_0xbeb3d46bb7f043c0 = Global.ClearTvChannelPlaylist

--- NativeDB Return Type: void
function Global.ClearVehicleCustomPrimaryColour(vehicle)
	return _in(0x55E1D2758F34E437, vehicle, _r, _ri)
end

--- NativeDB Return Type: void
function Global.ClearVehicleCustomSecondaryColour(vehicle)
	return _in(0x5FFBDEEC3E8E2009, vehicle, _r, _ri)
end

function Global.ClearVehiclePhoneExplosiveDevice()
	return _in(0xAA3F739ABDDCF21F)
end
Global.N_0xaa3f739abddcf21f = Global.ClearVehiclePhoneExplosiveDevice

function Global.ClearVehicleRouteHistory(vehicle)
	return _in(0x6D6AF961B72728AE, vehicle)
end
Global.N_0x6d6af961b72728ae = Global.ClearVehicleRouteHistory

function Global.ClearWeatherTypePersist()
	return _in(0xCCC39339BEF76CF5)
end

--- thisScriptCheck - can be destroyed if it belongs to the calling script.
-- Example of Cloning Your Player:
-- CLONE_PED(PLAYER_PED_ID(), GET_ENTITY_HEADING(PLAYER_PED_ID()), 0, 1);
function Global.ClonePed(ped, heading, isNetwork, thisScriptCheck)
	return _in(0xEF29A16337FACADB, ped, heading, isNetwork, thisScriptCheck, _r, _ri)
end

--- What exactly is the difference? What does this exactly do by chance?
-- ^ Copies ped's components and props to targetPed.
-- ---------------------------------------------------------------------------------
-- | Internally has a 3rd param (bool) which is set to true by default |
function Global.ClonePedToTarget(ped, targetPed)
	return _in(0xE952D6431689AD9A, ped, targetPed)
end
Global.AssignPlayerToPed = Global.ClonePedToTarget

function Global.ClonePedToTargetEx(ped, targetPed, p2)
	return _in(0x148B08C2D2ACB884, ped, targetPed, p2)
end
Global.N_0x148b08c2d2acb884 = Global.ClonePedToTargetEx

--- Used one time in fmmc_launcher.c instead of ClonePed because ?
-- ```
-- NativeDB Parameter 1: float heading
-- NativeDB Parameter 2: BOOL isNetwork
-- NativeDB Parameter 3: BOOL thisScriptCheck
-- ```
function Global.ClonePed_2(ped, heading, isNetwork, thisScriptCheck, p4)
	return _in(0x668FD40BCBA5DE48, ped, heading, isNetwork, thisScriptCheck, p4, _r, _ri)
end
Global.N_0x668fd40bcba5de48 = Global.ClonePed_2

function Global.CloseBombBayDoors(vehicle)
	return _in(0x3556041742A0DC74, vehicle)
end
Global.N_0x3556041742a0dc74 = Global.CloseBombBayDoors

--- Aborts the current message in the text chat.
function Global.CloseMultiplayerChat()
	return _in(0x1AC8F4AD40E22127)
end
Global.AbortTextChat = Global.CloseMultiplayerChat

function Global.ClosePatrolRoute()
	return _in(0xB043ECA801B8CBC1)
end

--- NativeDB Return Type: void
function Global.CloseSequenceTask(taskSequenceId)
	return _in(0x39E72BC99E6360CB, taskSequenceId, _r, _ri)
end

function Global.CloseSocialClubMenu()
	return _in(0xD2B32BE3FC1626C6)
end
Global.N_0xd2b32be3fc1626c6 = Global.CloseSocialClubMenu

--- Downloads prod.cloud.rockstargames.com/titles/gta5/<platform>/check.json
function Global.CloudCheckAvailability()
	return _in(0x4F18196C8D38768D)
end
Global.N_0x4f18196c8d38768d = Global.CloudCheckAvailability
Global.DownloadCheck = Global.CloudCheckAvailability

function Global.CloudDeleteMemberFile(p0)
	return _in(0xC64DED7EF0D2FE37, _ts(p0), _r, _ri)
end
Global.N_0xc64ded7ef0d2fe37 = Global.CloudDeleteMemberFile

function Global.CloudGetAvailabilityCheckResult()
	return _in(0x0B0CC10720653F3B, _r, _ri)
end
Global.NetworkEnableMotionDrugged = Global.CloudGetAvailabilityCheckResult
Global.N_0x0b0cc10720653f3b = Global.CloudGetAvailabilityCheckResult

function Global.CloudHasRequestCompleted(handle)
	return _in(0x4C61B39930D045DA, handle, _r)
end
Global.N_0x4c61b39930d045da = Global.CloudHasRequestCompleted

--- Commits the backing pixels to the specified runtime texture.
-- @param tex The runtime texture handle.
function Global.CommitRuntimeTexture(tex)
	return _in(0x19d81f4e, tex)
end

--- Compares two strings up to a specified number of characters.
-- Parameters:
-- str1 - String to be compared.
-- str2 - String to be compared.
-- matchCase - Comparison will be case-sensitive.
-- maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
-- Returns:
-- A value indicating the relationship between the strings:
-- <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
-- 0 - The contents of both strings are equal.
-- >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
-- Examples:
-- GAMEPLAY::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
-- GAMEPLAY::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
-- GAMEPLAY::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
-- GAMEPLAY::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
-- GAMEPLAY::COMPARE_STRINGS("A", "A", true, 1); // 0; equal
-- When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
-- GAMEPLAY::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
-- GAMEPLAY::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
function Global.CompareStrings(str1, str2, matchCase, maxLength)
	return _in(0x1E34710ECD4AB0EB, _ts(str1), _ts(str2), matchCase, maxLength, _r, _ri)
end

--- Works for vehicles with a retractable landing gear
-- landing gear states:
-- 0: Deployed
-- 1: Closing
-- 2: Opening
-- 3: Retracted
function Global.ControlLandingGear(vehicle, state)
	return _in(0xCFC8BE9A5E1FE575, vehicle, state)
end
Global.SetVehicleLandingGear = Global.ControlLandingGear

--- Forces the ped to use the mounted weapon.
-- Returns false if task is not possible.
function Global.ControlMountedWeapon(ped)
	return _in(0xDCFE42068FE0135A, ped, _r)
end

function Global.CopyMemory(src, size)
	return _in(0x213AEB2B90CBA7AC, _i, src, size)
end
Global.N_0x213aeb2b90cba7ac = Global.CopyMemory

--- Copy the damage like broken bumpers and broken lights from a vehicle and paste them on another vehicle.
-- @param sourceVehicle The source to copy the vehicle damage.
-- @param targetVehicle The target to paste the vehicle damage.
function Global.CopyVehicleDamages(sourceVehicle, targetVehicle)
	return _in(0xE44A982368A4AF23, sourceVehicle, targetVehicle)
end
Global.N_0xe44a982368a4af23 = Global.CopyVehicleDamages

function Global.Cos(value)
	return _in(0xD0FFB162F40A139C, value, _r, _rf)
end

--- NativeDB Parameter 10: Hash weaponHash
function Global.CreateAirDefenseArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, weaponHash)
	return _in(0x9DA58CDBF6BDBC08, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, weaponHash, _r, _ri)
end
Global.N_0x9da58cdbf6bdbc08 = Global.CreateAirDefenseArea

--- Both coordinates are from objects in the decompiled scripts.
-- Native related to [\_0xECDC202B25E5CF48](#_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
-- ```
-- NativeDB Parameter 3: float radius
-- ```
-- @param p0 X coordinate
-- @param p1 Y coordinate
-- @param p2 Z coordinate
-- @param radius Unknown float 150.0 is used in freemode script.
-- @param p4 X coordinate
-- @param p5 Y coordinate
-- @param p6 Z coordinate
-- @param weaponHash weapon_air_defence_gun and 0 are used in the decompiled scripts.
-- @return Seems to be some sort of handle, result is += 1 any time this native is called.
function Global.CreateAirDefenseSphere(p0, p1, p2, radius, p4, p5, p6, weaponHash)
	return _in(0x91EF34584710BE99, p0, p1, p2, radius, p4, p5, p6, _ch(weaponHash), _r, _ri)
end
Global.N_0x91ef34584710be99 = Global.CreateAirDefenseSphere

--- Used for doing money drop
-- Pickup hashes: pastebin.com/8EuSv2r1
function Global.CreateAmbientPickup(pickupHash, posX, posY, posZ, flags, value, modelHash, returnHandle, p8)
	return _in(0x673966A0C0FD7171, _ch(pickupHash), posX, posY, posZ, flags, value, _ch(modelHash), returnHandle, p8, _r, _ri)
end

--- "DEFAULT_SCRIPTED_CAMERA"
-- "DEFAULT_ANIMATED_CAMERA"
-- "DEFAULT_SPLINE_CAMERA"
-- "DEFAULT_SCRIPTED_FLY_CAMERA"
-- "TIMED_SPLINE_CAMERA"
function Global.CreateCam(camName, p1)
	return _in(0xC3981DCE61D9E13F, _ts(camName), p1, _r, _ri)
end

--- camName is always set to "DEFAULT_SCRIPTED_CAMERA" in Rockstar's scripts.
-- ------------
-- Camera names found in the b617d scripts:
-- "DEFAULT_ANIMATED_CAMERA"
-- "DEFAULT_SCRIPTED_CAMERA"
-- "DEFAULT_SCRIPTED_FLY_CAMERA"
-- "DEFAULT_SPLINE_CAMERA"
-- ------------
-- Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native. As well as the p9 since it's always 2 in scripts seems to represent what would be the last param within SET_CAM_ROT native which normally would be 2.
function Global.CreateCamWithParams(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9)
	return _in(0xB51194800B257161, _ts(camName), posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9, _r, _ri)
end

function Global.CreateCamera(camHash, p1)
	return _in(0x5E3CF89C6BCCA67D, _ch(camHash), p1, _r, _ri)
end

--- CAM::_GET_GAMEPLAY_CAM_COORDS can be used instead of posX,Y,Z
-- CAM::_GET_GAMEPLAY_CAM_ROT can be used instead of rotX,Y,Z
-- CAM::_80EC114669DAEFF4() can be used instead of p7 (Possible p7 is FOV parameter. )
-- p8 ???
-- p9 uses 2 by default
function Global.CreateCameraWithParams(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9)
	return _in(0x6ABFA3E16460F22D, _ch(camHash), posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9, _r, _ri)
end

--- Creates a checkpoint. Returns the handle of the checkpoint.
-- 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
-- Parameters:
-- * type - The type of checkpoint to create. See below for a list of checkpoint types.
-- * pos1 - The position of the checkpoint.
-- * pos2 - The position of the next checkpoint to point to.
-- * radius - The radius of the checkpoint.
-- * color - The color of the checkpoint.
-- * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
-- Checkpoint types:
-- 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
-- 39----------?
-- 40----------Ring: just a ring
-- 41----------?
-- 42-44-------Cylinder w/ number (uses 'reserved' parameter)
-- 45-47-------Cylinder no arrow or number
-- If using type 42-44, reserved sets number / number and shape to display
-- 0-99------------Just numbers (0-99)
-- 100-109-----------------Arrow (0-9)
-- 110-119------------Two arrows (0-9)
-- 120-129----------Three arrows (0-9)
-- 130-139----------------Circle (0-9)
-- 140-149------------CycleArrow (0-9)
-- 150-159----------------Circle (0-9)
-- 160-169----Circle  w/ pointer (0-9)
-- 170-179-------Perforated ring (0-9)
-- 180-189----------------Sphere (0-9)
function Global.CreateCheckpoint(type, posX1, posY1, posZ1, posX2, posY2, posZ2, radius, red, green, blue, alpha, reserved)
	return _in(0x0134F0835AB6BFCB, type, posX1, posY1, posZ1, posX2, posY2, posZ2, radius, red, green, blue, alpha, reserved, _r, _ri)
end

function Global.CreateCinematicShot(p0, p1, p2, entity)
	return _in(0x741B0129D4560F31, p0, p1, p2, entity)
end

--- Creates a DUI browser. This can be used to draw on a runtime texture using CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
-- @param url The initial URL to load in the browser.
-- @param width The width of the backing surface.
-- @param height The height of the backing surface.
-- @return A DUI object.
function Global.CreateDui(url, width, height)
	return _in(0x23eaf899, _ts(url), width, height, _r, _rl)
end

--- p0 was the return of NET_TO_PED in fm_mission_controler.
-- p4 was always "".
-- returns headDisplayId
-- @param clanFlag takes a number 0-5
function Global.CreateFakeMpGamerTag(ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag)
	return _in(0xBFEFE3321A3F5015, ped, _ts(username), pointedClanTag, isRockstarClan, _ts(clanTag), clanFlag, _r, _ri)
end
Global.N_0xbfefe3321a3f5015 = Global.CreateFakeMpGamerTag
Global.CreateMpGamerTag = Global.CreateFakeMpGamerTag

function Global.CreateForcedObject(x, y, z, p3, modelHash, p5)
	return _in(0x150E808B375A385A, x, y, z, p3, _ch(modelHash), p5)
end

--- Creates a new ped group.
-- Groups can contain up to 8 peds.
-- The parameter is unused.
-- Returns a handle to the created group, or 0 if a group couldn't be created.
function Global.CreateGroup(unused)
	return _in(0x90370EBE0FEE1A3D, unused, _r, _ri)
end

--- enum IncidentTypes
-- {
-- FireDepartment = 3,
-- Paramedics = 5,
-- Police = 7,
-- PedsInCavalcades = 11,
-- Merryweather = 14
-- };
-- As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
-- Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
-- Side Note 2: I say it breaks as if you call this proper,
-- if(CREATE_INCIDENT) etc it will return false if you do as I said above.
-- =====================================================
-- ```
-- ```
-- NativeDB Added Parameter 8: Any p7
-- NativeDB Added Parameter 9: Any p8
function Global.CreateIncident(dispatchService, x, y, z, numUnits, radius, outIncidentID)
	return _in(0x3F892CAF67444AE7, dispatchService, x, y, z, numUnits, radius, _ii(outIncidentID) --[[ may be optional ]], _r)
end

--- p0 could be type (valueused in scripts: 14, 7, 5, 3, 11)
-- p1 is a return from get_player_ped() in am_gang_call.c, but player_ped_id() in other (non am) scripts.
-- p3 is usually 0f or 3f
-- =====================================================
-- enum IncidentTypes
-- {
-- FireDepartment = 3,
-- Paramedics = 5,
-- Police = 7,
-- PedsInCavalcades = 11,
-- Merryweather = 14
-- };
-- As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
-- Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
-- Side Note 2: I say it breaks as if you call this proper,
-- if(CREATE_INCIDENT) etc it will return false if you do as I said above.
-- =====================================================
-- ```
-- ```
-- NativeDB Added Parameter 6: Any p5
-- NativeDB Added Parameter 7: Any p6
function Global.CreateIncidentWithEntity(dispatchService, ped, numUnits, radius, outIncidentID)
	return _in(0x05983472F0494E60, dispatchService, ped, numUnits, radius, _ii(outIncidentID) --[[ may be optional ]], _r)
end

--- NativeDB Parameter 0: BOOL distri
function Global.CreateItemset(distri)
	return _in(0x35AD299F50D91B24, distri, _r, _ri)
end

--- Train models HAVE TO be loaded (requested) before you use this.
-- For variation 15 - request:
-- freight
-- freightcar
-- freightgrain
-- freightcont1
-- freightcont2
-- freighttrailer
function Global.CreateMissionTrain(variation, x, y, z, direction)
	return _in(0x63C6CCA8E68AE8C8, variation, x, y, z, direction, _r, _ri)
end

--- Creates a mobile phone of the specified type.
-- Possible phone types:
-- 0 - Default phone / Michael's phone
-- 1 - Trevor's phone
-- 2 - Franklin's phone
-- 4 - Prologue phone
-- These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.
function Global.CreateMobilePhone(phoneType)
	return _in(0xA4E8E696C532FBC7, phoneType)
end

--- p5 = sets as true in scripts
-- Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
-- Network players do not see changes done with this.
function Global.CreateModelHide(x, y, z, radius, model, p5)
	return _in(0x8A97BCA30A0CE478, x, y, z, radius, _ch(model), p5)
end

function Global.CreateModelHideExcludingScriptObjects(x, y, z, radius, model, p5)
	return _in(0x3A52AE588830BF7F, x, y, z, radius, _ch(model), p5)
end

--- Only works with objects!
-- Network players do not see changes done with this.
function Global.CreateModelSwap(x, y, z, radius, originalModel, newModel, p6)
	return _in(0x92C47782FDA8B2A3, x, y, z, radius, _ch(originalModel), _ch(newModel), p6)
end

--- Spawns one or more money pickups.
-- x: The X-component of the world position to spawn the money pickups at.
-- y: The Y-component of the world position to spawn the money pickups at.
-- z: The Z-component of the world position to spawn the money pickups at.
-- value: The combined value of the pickups (in dollars).
-- amount: The number of pickups to spawn.
-- model: The model to use, or 0 for default money model.
-- Example:
-- CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
-- Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
-- ==============================================
-- Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
function Global.CreateMoneyPickups(x, y, z, value, amount, model)
	return _in(0x0589B5E791CE9B2B, x, y, z, value, amount, _ch(model))
end

function Global.CreateMpGamerTagWithCrewColor(player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag, r, g, b)
	return _in(0x6DD05E9D83EFA4C9, player, _ts(username), pointedClanTag, isRockstarClan, _ts(clanTag), clanFlag, r, g, b)
end
Global.N_0x6dd05e9d83efa4c9 = Global.CreateMpGamerTagWithCrewColor
Global.CreateMpGamerTagColor = Global.CreateMpGamerTagWithCrewColor
Global.SetMpGamerTagColor = Global.CreateMpGamerTagWithCrewColor
Global.CreateMpGamerTagForNetPlayer = Global.CreateMpGamerTagWithCrewColor

function Global.CreateNewScriptedConversation()
	return _in(0xD2C91A0B572AAE56)
end

--- Creates a new NaturalMotion message.
-- startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
-- messageId: The ID of the NaturalMotion message.
-- If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
function Global.CreateNmMessage(startImmediately, messageId)
	return _in(0x418EF2A1BCE56685, startImmediately, messageId)
end

--- thisScriptCheck - can be destroyed if it belongs to the calling script.
-- p5 - last parameter does not mean object handle is returned
-- maybe a quick view in disassembly will tell us what is actually does
-- ----------
-- prop_tt_screenstatic (0xE2E039BC) is handled different. Not sure how yet but it I know it is.
function Global.CreateObject(modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic)
	return _in(0x509D5878EB39E842, modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic, _r, _ri)
end

--- thisScriptCheck - can be destroyed if it belongs to the calling script.
-- p5 - does not mean object handle is returned
-- maybe a quick view in disassembly will tell us what is actually does
-- ----------
-- prop_tt_screenstatic (0xE2E039BC) is handled different. Not sure how yet but it I know it is.
function Global.CreateObjectNoOffset(modelHash, x, y, z, isNetwork, thisScriptCheck, dynamic)
	return _in(0x9A294B2138ABB884, _ch(modelHash), x, y, z, isNetwork, thisScriptCheck, dynamic, _r, _ri)
end

function Global.CreateParachuteObject(ped, p1, p2)
	return _in(0x8C4F3BF23B6237DB, ped, p1, p2, _r, _ri)
end
Global.N_0x8c4f3bf23b6237db = Global.CreateParachuteObject

function Global.CreatePatrolRoute()
	return _in(0xAF8A443CCC8018DC)
end

--- thisScriptCheck - can be destroyed if it belongs to the calling script.
-- p7 - last parameter does not mean ped handle is returned
-- maybe a quick view in disassembly will tell us what is actually does
-- *Heading*: 0.0
-- *Heading* is the Z axis spawn rotation of the ped 0->5th parameter.
-- Ped Types:
-- enum PedTypes
-- {
-- PED_TYPE_PLAYER_0,// michael
-- PED_TYPE_PLAYER_1,// franklin
-- PED_TYPE_NETWORK_PLAYER,	// mp character
-- PED_TYPE_PLAYER_2,// trevor
-- PED_TYPE_CIVMALE,
-- PED_TYPE_CIVFEMALE,
-- PED_TYPE_COP,
-- PED_TYPE_GANG_ALBANIAN,
-- PED_TYPE_GANG_BIKER_1,
-- PED_TYPE_GANG_BIKER_2,
-- PED_TYPE_GANG_ITALIAN,
-- PED_TYPE_GANG_RUSSIAN,
-- PED_TYPE_GANG_RUSSIAN_2,
-- PED_TYPE_GANG_IRISH,
-- PED_TYPE_GANG_JAMAICAN,
-- PED_TYPE_GANG_AFRICAN_AMERICAN,
-- PED_TYPE_GANG_KOREAN,
-- PED_TYPE_GANG_CHINESE_JAPANESE,
-- PED_TYPE_GANG_PUERTO_RICAN,
-- PED_TYPE_DEALER,
-- PED_TYPE_MEDIC,
-- PED_TYPE_FIREMAN,
-- PED_TYPE_CRIMINAL,
-- PED_TYPE_BUM,
-- PED_TYPE_PROSTITUTE,
-- PED_TYPE_SPECIAL,
-- PED_TYPE_MISSION,
-- PED_TYPE_SWAT,
-- PED_TYPE_ANIMAL,
-- PED_TYPE_ARMY
-- };
function Global.CreatePed(pedType, modelHash, x, y, z, heading, isNetwork, thisScriptCheck)
	return _in(0xD49F9B0955C367DE, pedType, _ch(modelHash), x, y, z, heading, isNetwork, thisScriptCheck, _r, _ri)
end

--- thisScriptCheck - can be destroyed if it belongs to the calling script.
-- p5 - last parameter does not mean ped handle is returned
-- maybe a quick view in disassembly will tell us what is actually does
-- Ped Types:
-- enum ePedType
-- {
-- PED_TYPE_PLAYER_0 = 0,
-- PED_TYPE_PLAYER_1 = 1,
-- PED_TYPE_PLAYER_2 = 3,
-- PED_TYPE_CIVMALE = 4,
-- PED_TYPE_CIVFEMALE = 5,
-- PED_TYPE_COP = 6,
-- PED_TYPE_UNKNOWN_7 = 7,
-- PED_TYPE_UNKNOWN_12 = 12, // gang member?
-- PED_TYPE_UNKNOWN_19 = 19,
-- PED_TYPE_MEDIC = 20,
-- PED_TYPE_FIREMAN = 21,
-- PED_TYPE_UNKNOWN_22 = 22,
-- PED_TYPE_UNKNOWN_25 = 25,
-- PED_TYPE_UNKNOWN_26 = 26,
-- PED_TYPE_SWAT = 27,
-- PED_TYPE_ANIMAL = 28,
-- PED_TYPE_ARMY = 29
-- };
function Global.CreatePedInsideVehicle(vehicle, pedType, modelHash, seat, isNetwork, thisScriptCheck)
	return _in(0x7DD959874C1FD534, vehicle, pedType, _ch(modelHash), seat, isNetwork, thisScriptCheck, _r, _ri)
end

--- Drops the Hook/Magnet on a cargobob
-- state
-- enum eCargobobHook
-- {
-- CARGOBOB_HOOK = 0,
-- CARGOBOB_MAGNET = 1,
-- };
function Global.CreatePickUpRopeForCargobob(cargobob, state)
	return _in(0x7BEB0C7A235F6F3B, cargobob, state)
end
Global.EnableCargobobHook = Global.CreatePickUpRopeForCargobob

--- Pickup hashes: pastebin.com/8EuSv2r1
function Global.CreatePickup(pickupHash, posX, posY, posZ, p4, value, p6, modelHash)
	return _in(0xFBA08C503DD5FA58, _ch(pickupHash), posX, posY, posZ, p4, value, p6, _ch(modelHash), _r, _ri)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
-- flags:
-- 8 (1 << 3): place on ground
-- 512 (1 << 9): spin around
function Global.CreatePickupRotate(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash)
	return _in(0x891804727E0A98B7, _ch(pickupHash), posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, _ch(modelHash), _r, _ri)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
function Global.CreatePortablePickup(pickupHash, x, y, z, placeOnGround, modelHash)
	return _in(0x2EAF1FDB2FB55698, _ch(pickupHash), x, y, z, placeOnGround, _ch(modelHash), _r, _ri)
end

--- CREATE_*
function Global.CreatePortablePickup_2(pickupHash, x, y, z, placeOnGround, modelHash)
	return _in(0x125494B98A21AAF7, _ch(pickupHash), x, y, z, placeOnGround, _ch(modelHash), _r, _ri)
end
Global.N_0x125494b98a21aaf7 = Global.CreatePortablePickup_2

--- vb.net
-- Dim ped_handle As Integer
-- With Game.Player.Character
-- Dim pos As Vector3 = .Position + .ForwardVector * 3
-- ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
-- End With
-- Creates a Ped at the specified location, returns the Ped Handle.
-- Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
function Global.CreateRandomPed(posX, posY, posZ)
	return _in(0xB4AC7D0CF06BFE8F, posX, posY, posZ, _r, _ri)
end

function Global.CreateRandomPedAsDriver(vehicle, returnHandle)
	return _in(0x9B62392B474F44A0, vehicle, returnHandle, _r, _ri)
end

--- Creates a blank runtime texture.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param width The width of the new texture.
-- @param height The height of the new texture.
-- @return A runtime texture handle.
function Global.CreateRuntimeTexture(txd, txn, width, height)
	return _in(0xfec3766d, txd, _ts(txn), width, height, _r, _rl)
end

--- Creates a runtime texture from a DUI handle.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param duiHandle The DUI handle returned from GET_DUI_HANDLE.
-- @return The runtime texture handle.
function Global.CreateRuntimeTextureFromDuiHandle(txd, txn, duiHandle)
	return _in(0xb135472b, txd, _ts(txn), _ts(duiHandle), _r, _rl)
end

--- Creates a runtime texture from the specified file in the current resource.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param fileName The file name of an image to load. This should preferably be a PNG, and has to be specified as a `file` in the resource manifest.
-- @return A runtime texture handle.
function Global.CreateRuntimeTextureFromImage(txd, txn, fileName)
	return _in(0x786d8bc3, txd, _ts(txn), _ts(fileName), _r, _rl)
end

--- Creates a runtime texture dictionary with the specified name.
-- Example:
-- ```lua
-- local txd = CreateRuntimeTxd('meow')
-- ```
-- @param name The name for the runtime TXD.
-- @return A handle to the runtime TXD.
function Global.CreateRuntimeTxd(name)
	return _in(0x1f3ac778, _ts(name), _r, _rl)
end

--- Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
-- Parameters:
-- a/w/s - Generator position
-- heading - Generator heading
-- p4 - Unknown (always 5.0)
-- p5 - Unknown (always 3.0)
-- modelHash - Vehicle model hash
-- p7/8/9/10 - Unknown (always -1)
-- p11 - Unknown (usually TRUE, only one instance of FALSE)
-- p12/13 - Unknown (always FALSE)
-- p14 - Unknown (usally FALSE, only two instances of TRUE)
-- p15 - Unknown (always TRUE)
-- p16 - Unknown (always -1)
-- Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
function Global.CreateScriptVehicleGenerator(x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16)
	return _in(0x9DEF883114668116, x, y, z, heading, p4, p5, _ch(modelHash), p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, _r, _ri)
end

--- p6 always 2 (but it doesnt seem to matter...)
-- roll and pitch 0
-- yaw to Ped.rotation
function Global.CreateSynchronizedScene(x, y, z, roll, pitch, yaw, p6)
	return _in(0x8C18E0F9080ADD73, x, y, z, roll, pitch, yaw, p6, _r, _ri)
end

function Global.CreateSynchronizedScene_2(x, y, z, radius, object)
	return _in(0x62EC273D00187DCA, x, y, z, radius, _ch(object), _r, _ri)
end
Global.N_0x62ec273d00187dca = Global.CreateSynchronizedScene_2

--- Creates a tracked point, useful for checking the visibility of a 3D point on screen.
function Global.CreateTrackedPoint()
	return _in(0xE2C9439ED45DEA60, _r, _ri)
end

--- thisScriptCheck - can be destroyed if it belongs to the calling script.
-- ```
-- ```
-- NativeDB Added Parameter 8: BOOL p7
function Global.CreateVehicle(modelHash, x, y, z, heading, isNetwork, thisScriptCheck)
	return _in(0xAF35D0D2583051B0, _ch(modelHash), x, y, z, heading, isNetwork, thisScriptCheck, _r, _ri)
end

--- Now has 8 params.
-- ```
-- ```
-- NativeDB Added Parameter 9: Any p8
-- NativeDB Added Parameter 10: Any p9
function Global.CreateWeaponObject(weaponHash, ammoCount, x, y, z, showWorldModel, heading, p7)
	return _in(0x9541D3CF0D398F36, _ch(weaponHash), ammoCount, x, y, z, showWorldModel, heading, p7, _r, _ri)
end

--- some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
function Global.CustomMenuCoordinates(p0)
	return _in(0x487A82C650EB7799, p0)
end
Global.N_0x487a82c650eb7799 = Global.CustomMenuCoordinates

function Global.DatafileClearWatchList()
	return _in(0x6CC86E78358D5119)
end
Global.N_0x6cc86e78358d5119 = Global.DatafileClearWatchList

function Global.DatafileCreate()
	return _in(0xD27058A1CA2B13EE)
end

function Global.DatafileDelete()
	return _in(0x9AB9C1CFC8862DFB)
end

function Global.DatafileDeleteRequestedFile(p0)
	return _in(0x8F5EA1C01D65A100, p0, _r)
end
Global.N_0x8f5ea1c01d65a100 = Global.DatafileDeleteRequestedFile

function Global.DatafileFlushMissionHeader()
	return _in(0xC55854C7D7274882)
end
Global.N_0xc55854c7d7274882 = Global.DatafileFlushMissionHeader

function Global.DatafileGetFileDict()
	return _in(0x906B778CA1DC72B6, _r, _s)
end
Global.N_0x906b778ca1dc72b6 = Global.DatafileGetFileDict

function Global.DatafileHasLoadedFileData(p0)
	return _in(0x15FF52B809DB2353, p0, _r)
end
Global.N_0x15ff52b809db2353 = Global.DatafileHasLoadedFileData

function Global.DatafileHasValidFileData(p0)
	return _in(0xF8CC1EBE0B62E29F, p0, _r)
end
Global.N_0xf8cc1ebe0b62e29f = Global.DatafileHasValidFileData

--- Example:
-- if (!DATAFILE::_BEDB96A7584AA8CF())
-- {
-- if (!g_109E3)
-- {
-- if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
-- {
-- if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())
-- {
-- g_17A8B = 0;
-- }
-- if (!g_D52C)
-- {
-- sub_730();
-- }
-- }
-- }
-- }
function Global.DatafileIsSavePending()
	return _in(0xBEDB96A7584AA8CF, _r)
end
Global.N_0xbedb96a7584aa8cf = Global.DatafileIsSavePending

function Global.DatafileIsValidRequestId(index)
	return _in(0xFCCAE5B92A830878, index, _r)
end
Global.N_0xfccae5b92a830878 = Global.DatafileIsValidRequestId

--- Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
-- Returns whether or not the file was successfully loaded.
-- Example:
-- DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
function Global.DatafileLoadOfflineUgc(filename)
	return _in(0xC5238C011AF405E4, _ts(filename), _r)
end
Global.LoadUgcFile = Global.DatafileLoadOfflineUgc

function Global.DatafileSelectActiveFile(p0)
	return _in(0x22DA66936E0FFF37, p0, _r)
end
Global.N_0x22da66936e0fff37 = Global.DatafileSelectActiveFile

function Global.DatafileSelectCreatorStats(p0)
	return _in(0x01095C95CD46B624, p0, _r)
end
Global.N_0x01095c95cd46b624 = Global.DatafileSelectCreatorStats

function Global.DatafileSelectUgcData(p0)
	return _in(0xA69AC4ADE82B57A4, p0, _r)
end
Global.N_0xa69ac4ade82b57a4 = Global.DatafileSelectUgcData

function Global.DatafileSelectUgcPlayerData(p0)
	return _in(0x52818819057F2B40, p0, _r)
end
Global.N_0x52818819057f2b40 = Global.DatafileSelectUgcPlayerData

function Global.DatafileSelectUgcStats(p0, p1)
	return _in(0x9CB0BFA7A9342C3D, p0, p1, _r)
end
Global.N_0x9cb0bfa7a9342c3d = Global.DatafileSelectUgcStats

--- Saves a JSON file? It might even be saving it to the Rockstar Cloud, but I have no way of verifying this
-- "shrinkletter.c4", line ~378:
-- DATAFILE::DATAFILE_CREATE();
-- v_5 = DATAFILE::_GET_ROOT_OBJECT();
-- DATAFILE::_OBJECT_VALUE_ADD_INTEGER(v_5, "in", a_2);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "st", &a_2._f1);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "mp", &a_2._f2);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "ms", &a_2._f3);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "sc", &a_2._f5);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "pr", &a_2._f6);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "fa", &a_2._f7);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "sm", &a_2._f8);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "kp", &a_2._f9);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "sv", &a_2._fA);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "yo", &a_2._fB);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "fi", &a_2._fC);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "rc", &a_2._fD);
-- DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, "co", &a_2._fE);
-- DATAFILE::_OBJECT_VALUE_ADD_INTEGER(v_5, "su", a_2._fF);
-- DATAFILE::_83BCCE3224735F05("gta5/psych/index.json"); // saves the file?
function Global.DatafileStartSaveToCloud(filename)
	return _in(0x83BCCE3224735F05, _ts(filename), _r)
end
Global.N_0x83bcce3224735f05 = Global.DatafileStartSaveToCloud

function Global.DatafileStoreMissionHeader()
	return _in(0x2ED61456317B8178)
end
Global.N_0x2ed61456317b8178 = Global.DatafileStoreMissionHeader

function Global.DatafileUpdateSaveToCloud(p0)
	return _in(0x4DFDD9EB705F8140, _i --[[ actually bool ]], _r)
end
Global.N_0x4dfdd9eb705f8140 = Global.DatafileUpdateSaveToCloud

--- Adds the given request ID to the watch list.
function Global.DatafileWatchRequestId(id)
	return _in(0xAD6875BBC0FC899C, id)
end
Global.N_0xad6875bbc0fc899c = Global.DatafileWatchRequestId

function Global.DeactivateAudioSlowmoMode(p0)
	return _in(0xDDC635D5B3262C56, _ts(p0))
end
Global.N_0xddc635d5b3262c56 = Global.DeactivateAudioSlowmoMode

function Global.DeactivateInteriorEntitySet(interior, entitySetName)
	return _in(0x420BD37289EEE162, interior, _ts(entitySetName))
end
Global.N_0x420bd37289eee162 = Global.DeactivateInteriorEntitySet
Global.DisableInteriorProp = Global.DeactivateInteriorEntitySet

--- Returns whether or not the specified property is set for the entity.
function Global.DecorExistOn(entity, propertyName)
	return _in(0x05661B80A8C9165F, entity, _ts(propertyName), _r)
end

function Global.DecorGetBool(entity, propertyName)
	return _in(0xDACE671663F2F5DB, entity, _ts(propertyName), _r)
end

--- The native name is correct but the db automatically prefixes "_" to unknown natives when changed.
function Global.DecorGetFloat(entity, propertyName)
	return _in(0x6524A2F114706F43, entity, _ts(propertyName), _r, _rf)
end
Global.DecorGetFloat = Global.DecorGetFloat

function Global.DecorGetInt(entity, propertyName)
	return _in(0xA06C969B02A97298, entity, _ts(propertyName), _r, _ri)
end

--- Is property of that type.
-- enum eDecorType
-- {
-- DECOR_TYPE_FLOAT = 1,
-- DECOR_TYPE_BOOL,
-- DECOR_TYPE_INT,
-- DECOR_TYPE_UNK,
-- DECOR_TYPE_TIME
-- };
function Global.DecorIsRegisteredAsType(propertyName, type)
	return _in(0x4F14F9F870D6FBC8, _ts(propertyName), type, _r)
end

--- Found this in standard_global_init.c4 line 1898
-- void sub_523a() {
-- DECORATOR::DECOR_REGISTER("Player_Vehicle", 3);
-- DECORATOR::DECOR_REGISTER("PV_Slot", 3);
-- DECORATOR::DECOR_REGISTER("Previous_Owner", 3);
-- DECORATOR::DECOR_REGISTER("Sprayed_Vehicle_Decorator", 2);
-- DECORATOR::DECOR_REGISTER("Sprayed_Vehicle_Timer_Dec", 5);
-- DECORATOR::DECOR_REGISTER("Vehicle_Reward", 3);
-- DECORATOR::DECOR_REGISTER("Vehicle_Reward_Teams", 3);
-- DECORATOR::DECOR_REGISTER("Skill_Blocker", 2);
-- DECORATOR::DECOR_REGISTER("TargetPlayerForTeam", 3);
-- DECORATOR::DECOR_REGISTER("XP_Blocker", 2);
-- DECORATOR::DECOR_REGISTER("CrowdControlSetUp", 3);
-- DECORATOR::DECOR_REGISTER("Bought_Drugs", 2);
-- DECORATOR::DECOR_REGISTER("HeroinInPossession", 1);
-- DECORATOR::DECOR_REGISTER("CokeInPossession", 1);
-- DECORATOR::DECOR_REGISTER("WeedInPossession", 1);
-- DECORATOR::DECOR_REGISTER("MethInPossession", 1);
-- DECORATOR::DECOR_REGISTER("bombdec", 3);
-- DECORATOR::DECOR_REGISTER("bombdec1", 3);
-- DECORATOR::DECOR_REGISTER("bombowner", 3);
-- DECORATOR::DECOR_REGISTER("noPlateScan", 2);
-- DECORATOR::DECOR_REGISTER("prisonBreakBoss", 2);
-- DECORATOR::DECOR_REGISTER("cashondeadbody", 3);
-- DECORATOR::DECOR_REGISTER("MissionType", 3);
-- DECORATOR::DECOR_REGISTER("MatchId", 3);
-- DECORATOR::DECOR_REGISTER("TeamId", 3);
-- DECORATOR::DECOR_REGISTER("Not_Allow_As_Saved_Veh", 3);
-- DECORATOR::DECOR_REGISTER("Veh_Modded_By_Player", 3);
-- DECORATOR::DECOR_REGISTER("MPBitset", 3);
-- DECORATOR::DECOR_REGISTER("MC_EntityID", 3);
-- DECORATOR::DECOR_REGISTER("MC_ChasePedID", 3);
-- DECORATOR::DECOR_REGISTER("MC_Team0_VehDeliveredRules", 3);
-- DECORATOR::DECOR_REGISTER("MC_Team1_VehDeliveredRules", 3);
-- DECORATOR::DECOR_REGISTER("MC_Team2_VehDeliveredRules", 3);
-- DECORATOR::DECOR_REGISTER("MC_Team3_VehDeliveredRules", 3);
-- DECORATOR::DECOR_REGISTER("AttributeDamage", 3);
-- DECORATOR::DECOR_REGISTER("GangBackup", 3);
-- DECORATOR::DECOR_REGISTER("CreatedByPegasus", 2);
-- DECORATOR::DECOR_REGISTER("BeforeCorona_0", 2);
-- }
-- -----------------------------------------------------------------------
-- Defines type of property for property name.
-- enum eDecorType
-- {
-- DECOR_TYPE_FLOAT = 1,
-- DECOR_TYPE_BOOL,
-- DECOR_TYPE_INT,
-- DECOR_TYPE_UNK,
-- DECOR_TYPE_TIME
-- };
function Global.DecorRegister(propertyName, type)
	return _in(0x9FD90732F56403CE, _ts(propertyName), type)
end

--- Called after all decorator type initializations.
function Global.DecorRegisterLock()
	return _in(0xA9D14EEA259F9248)
end

function Global.DecorRemove(entity, propertyName)
	return _in(0x00EE9F297C738720, entity, _ts(propertyName), _r)
end

--- This function sets metadata of type bool to specified entity.
function Global.DecorSetBool(entity, propertyName, value)
	return _in(0x6B1E8E2ED1335B71, entity, _ts(propertyName), value, _r)
end

--- The native name is correct but the db automatically prefixes "_" to unknown natives when changed.
function Global.DecorSetFloat(entity, propertyName, value)
	return _in(0x211AB1DD8D0F363A, entity, _ts(propertyName), value, _r)
end
Global.DecorSetFloat = Global.DecorSetFloat

--- Sets property to int.
function Global.DecorSetInt(entity, propertyName, value)
	return _in(0x0CE3AA5E1CA19E10, entity, _ts(propertyName), value, _r)
end

function Global.DecorSetTime(entity, propertyName, timestamp)
	return _in(0x95AED7B8E39ECAA4, entity, _ts(propertyName), timestamp, _r)
end

function Global.DeleteAllTrains()
	return _in(0x736A718577F39C7D)
end

function Global.DeleteCheckpoint(checkpoint)
	return _in(0xF5ED37F54CD4D52E, checkpoint)
end

--- NativeDB Return Type: void
function Global.DeleteChildRope(ropeId)
	return _in(0xAA5D6B1888E4DB20, ropeId, _r, _ri)
end

--- Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
-- @param entity The entity to delete.
function Global.DeleteEntity(entity)
	return _in(0xAE3CBE5BF394C9C9, _ii(entity) --[[ may be optional ]])
end

function Global.DeleteFunctionReference(referenceIdentity)
	return _in(0x1e86f206, _ts(referenceIdentity))
end

--- Delete an incident with a given id.
-- =======================================================
-- Correction, I have change this to int, instead of int*
-- as it doesn't use a pointer to the createdIncident.
-- If you try it you will crash (or) freeze.
-- =======================================================
function Global.DeleteIncident(incidentId)
	return _in(0x556C1AA270D5A207, incidentId)
end

function Global.DeleteMissionTrain(train)
	return _in(0x5B76B14AE875C795, _ii(train) --[[ may be optional ]])
end

--- Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
-- meme.
function Global.DeleteObject(object)
	return _in(0x539E0AE3E6634B9F, _ii(object) --[[ may be optional ]])
end

--- From the b617d scripts:
-- AI::DELETE_PATROL_ROUTE("miss_merc0");
-- AI::DELETE_PATROL_ROUTE("miss_merc1");
-- AI::DELETE_PATROL_ROUTE("miss_merc2");
-- AI::DELETE_PATROL_ROUTE("miss_dock");
function Global.DeletePatrolRoute(patrolRoute)
	return _in(0x7767DD9D65E91319, _ts(patrolRoute))
end

--- Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
function Global.DeletePed(ped)
	return _in(0x9614299DCB53E54B, _ii(ped) --[[ may be optional ]])
end

function Global.DeleteResourceKvp(key)
	return _in(0x7389b5df, _ts(key))
end

function Global.DeleteRope(ropeId)
	return _in(0x52B4829281364649, _ii(ropeId) --[[ may be optional ]])
end

function Global.DeleteScriptVehicleGenerator(vehicleGenerator)
	return _in(0x22102C9ABFCF125D, vehicleGenerator)
end

function Global.DeleteStuntJump(p0)
	return _in(0xDC518000E39DAE1F, p0)
end

--- Deletes a vehicle.
-- The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
-- eg how to use:
-- SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
-- DELETE_VEHICLE(&vehicle);
-- Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
function Global.DeleteVehicle(vehicle)
	return _in(0xEA386986E786A54F, _ii(vehicle) --[[ may be optional ]])
end

function Global.DeleteWaypoint()
	return _in(0xD8E694757BCEA8E9)
end
Global.N_0xd8e694757bcea8e9 = Global.DeleteWaypoint

--- Does nothing and always returns false.
function Global.DepositVc(amount)
	return _in(0xE260E0BB9CD995AC, amount, _r)
end
Global.N_0xe260e0bb9cd995ac = Global.DepositVc

--- BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
function Global.DestroyAllCams(thisScriptCheck)
	return _in(0x8E5FB15663F79120, thisScriptCheck)
end

--- BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
function Global.DestroyCam(cam, thisScriptCheck)
	return _in(0x865908C81A2C22E9, cam, thisScriptCheck)
end

--- Destroys a DUI browser.
-- @param duiObject The DUI browser handle.
function Global.DestroyDui(duiObject)
	return _in(0xa085cb10, duiObject)
end

function Global.DestroyItemset(p0)
	return _in(0xDE18220B1C183EDA, p0)
end

--- Destroys the currently active mobile phone.
function Global.DestroyMobilePhone()
	return _in(0x3BC861DF703E5097)
end

function Global.DestroyTrackedPoint(point)
	return _in(0xB25DC90BAD56CA42, point)
end

function Global.DetachCam(cam)
	return _in(0xA2FABBE87F4BAD82, cam)
end

function Global.DetachContainerFromHandlerFrame(vehicle)
	return _in(0x7C0043FDFF6436BC, vehicle)
end
Global.N_0x7c0043fdff6436bc = Global.DetachContainerFromHandlerFrame

--- p1 and p2 have no effect
-- maybe a quick disassembly will tell us what they do
-- the statement below seems to be false. when I tried it with 2 vehicles:
-- if p2 is set to true, the both entities won't collide with the other until the distance between them is above 4 meters.
function Global.DetachEntity(entity, p1, collision)
	return _in(0x961AC54BF0613F5D, entity, p1, collision)
end

function Global.DetachEntityFromCargobob(vehicle, entity)
	return _in(0xAF03011701811146, vehicle, entity, _r, _ri)
end
Global.N_0xaf03011701811146 = Global.DetachEntityFromCargobob

function Global.DetachPortablePickupFromPed(ped)
	return _in(0xCF463D1E9A0AECB1, ped)
end

function Global.DetachRopeFromEntity(ropeId, entity)
	return _in(0xBCF3026912A8647D, ropeId, entity)
end

function Global.DetachSynchronizedScene(sceneID)
	return _in(0x6D38F1F04CBB37EA, sceneID)
end

function Global.DetachVehicleFromAnyCargobob(vehicle)
	return _in(0xADF7BE450512C12F, vehicle, _r)
end

function Global.DetachVehicleFromAnyTowTruck(vehicle)
	return _in(0xD0E9CE05A1E68CD8, vehicle, _r)
end

function Global.DetachVehicleFromCargobob(vehicle, cargobob)
	return _in(0x0E21D3DF1051399D, vehicle, cargobob)
end

--- First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
function Global.DetachVehicleFromTowTruck(towTruck, vehicle)
	return _in(0xC2DB6B6708350ED8, towTruck, vehicle)
end

--- Public Sub detatchTrailer(vh1 As Vehicle)
-- Native.Function.Call(Hash.DETACH_VEHICLE_FROM_TRAILER, vh1)
-- End Sub
function Global.DetachVehicleFromTrailer(vehicle)
	return _in(0x90532EDF0D2BDD86, vehicle)
end

--- Detaches the vehicle's windscreen.
-- For further information, see : gtaforums.com/topic/859570-glass/#entry1068894566
function Global.DetachVehicleWindscreen(vehicle)
	return _in(0x6D645D59FB5F5AD3, vehicle)
end

--- used for the remote vehicle explode thing with phones
function Global.DetonateVehiclePhoneExplosiveDevice()
	return _in(0xEF49CF0270307CBE)
end
Global.N_0xef49cf0270307cbe = Global.DetonateVehiclePhoneExplosiveDevice
Global.RequestVehiclePhoneExplosion = Global.DetonateVehiclePhoneExplosiveDevice

function Global.DisableAimCamThisUpdate()
	return _in(0x1A31FE0049E542F6)
end
Global.N_0x1a31fe0049e542f6 = Global.DisableAimCamThisUpdate

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
function Global.DisableAllControlActions(inputGroup)
	return _in(0x5F4B6931816E599B, inputGroup)
end

--- control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Controls.cs
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
-- Control values from the decompiled scripts: 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,
-- 28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,5
-- 4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,
-- 79,80,81,82,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,105,
-- 107,108,109,110,111,112,113,114,115,116,117,118,119,123,126,129,130,131,132,
-- 133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,
-- 153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172
-- ,177,187,188,189,190,195,196,199,200,201,202,203,205,207,208,209,211,212,213, 217,219,220,221,225,226,230,234,235,236,237,238,239,240,241,242,243,244,257,
-- 261,262,263,264,265,270,271,272,273,274,278,279,280,281,282,283,284,285,286,
-- 287,288,289,337.
-- Example: CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true) disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.
-- Control group 1 and 0 gives the same results as 2. Same results for all players.
function Global.DisableControlAction(inputGroup, control, disable)
	return _in(0xFE99B66D079CF6BC, inputGroup, control, disable)
end

--- Disables first person camera for the current frame.
-- Found in decompiled scripts:
-- GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);
-- CAM::_DE2EF5DA284CC8DF();
function Global.DisableFirstPersonCamThisFrame()
	return _in(0xDE2EF5DA284CC8DF)
end

function Global.DisableFrontendThisFrame()
	return _in(0x6D3465A73092F0E6)
end

function Global.DisableHeadBlendPaletteColor(ped)
	return _in(0xA21C118553BBDF02, ped)
end
Global.N_0xa21c118553bbdf02 = Global.DisableHeadBlendPaletteColor

--- The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
-- Doesn't work....
function Global.DisableHospitalRestart(hospitalIndex, toggle)
	return _in(0xC8535819C450EBA8, hospitalIndex, toggle)
end

function Global.DisableInputGroup(inputGroup)
	return _in(0x7F4724035FDCA1DD, inputGroup)
end
Global.N_0x7f4724035fdca1dd = Global.DisableInputGroup

--- Example:
-- This removes the interior from the strip club and when trying to walk inside the player just falls:
-- INTERIOR::DISABLE_INTERIOR(118018, true);
function Global.DisableInterior(interiorID, toggle)
	return _in(0x6170941419D7D8EC, interiorID, toggle)
end

function Global.DisableNavmeshInArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x4C8872D8CDBE1B8B, p0, p1, p2, p3, p4, p5, p6)
end

function Global.DisableOcclusionThisFrame()
	return _in(0x3669F1B198DCAA4F)
end
Global.N_0x3669f1b198dcaa4f = Global.DisableOcclusionThisFrame

function Global.DisablePedHeatscaleOverride(ped)
	return _in(0x600048C60D5C2C51, ped)
end
Global.N_0x600048c60d5c2c51 = Global.DisablePedHeatscaleOverride

function Global.DisablePedPainAudio(ped, toggle)
	return _in(0xA9A41C1E940FB0E8, ped, toggle)
end

--- Ailerons are responsible for the rolling motion of a plane.
function Global.DisablePlaneAileron(vehicle, p1, p2)
	return _in(0x23428FC53C60919C, vehicle, p1, p2)
end

--- Disables propeller animation. Used in pilot_school_mp for the Titan's timed engine detonation.
function Global.DisablePlanePropeller(vehicle, propeller)
	return _in(0x500873A45724C863, vehicle, propeller)
end
Global.N_0x500873a45724c863 = Global.DisablePlanePropeller

--- Inhibits the player from using any method of combat including melee and firearms.
-- NOTE: Only disables the firing for one frame
function Global.DisablePlayerFiring(player, toggle)
	return _in(0x5E6CC07646BBEAB8, player, toggle)
end

function Global.DisablePlayerVehicleRewards(player)
	return _in(0xC142BE3BB9CE125F, player)
end

--- Disables the spawn point at the police house on the specified index.
-- policeIndex: The police house index.
-- toggle: true to enable the spawn point, false to disable.
function Global.DisablePoliceRestart(policeIndex, toggle)
	return _in(0x23285DED6EBD7EA3, policeIndex, toggle)
end

--- This will disable the ability to make camera changes in R* Editor.
-- RE*
function Global.DisableRockstarEditorCameraChanges()
	return _in(0xAF66DCEE6609B148)
end
Global.N_0xaf66dcee6609b148 = Global.DisableRockstarEditorCameraChanges

function Global.DisableScriptAmbientEffects(p0)
	return _in(0xEFD97FF47B745B8D, p0)
end
Global.N_0xefd97ff47b745b8d = Global.DisableScriptAmbientEffects

function Global.DisableScriptBrainSet(brainSet)
	return _in(0x14D8518E9760F08F, brainSet)
end

function Global.DisableStuntJumpSet(p0)
	return _in(0xA5272EBEDD4747F6, p0)
end

function Global.DisableSwitchOutroFx()
	return _in(0xBD605B8E0E18B3BB)
end
Global.N_0xbd605b8e0e18b3bb = Global.DisableSwitchOutroFx

function Global.DisableVehicleDistantlights(toggle)
	return _in(0xC9F98AC1884E73A2, toggle)
end

function Global.DisableVehicleFirstPersonCamThisFrame()
	return _in(0xADFF1B2A555F5FBA)
end

function Global.DisableVehicleNeonLights(vehicle, toggle)
	return _in(0x83F813570FF519DE, vehicle, toggle)
end
Global.N_0x83f813570ff519de = Global.DisableVehicleNeonLights

function Global.DisableVehicleTurretMovementThisFrame(vehicle)
	return _in(0x32CAEDF24A583345, vehicle)
end
Global.N_0x32caedf24a583345 = Global.DisableVehicleTurretMovementThisFrame

--- how does this work?
function Global.DisableVehicleWeapon(disabled, weaponHash, vehicle, owner)
	return _in(0xF4FC6A6F67D8D856, disabled, _ch(weaponHash), vehicle, owner)
end

function Global.DisplayAmmoThisFrame(display)
	return _in(0xA5E78BA2B1331C55, display)
end

function Global.DisplayAreaName(toggle)
	return _in(0x276B6CE369C33678, toggle)
end

--- "DISPLAY_CASH(false);" makes the cash amount render on the screen when appropriate
-- "DISPLAY_CASH(true);" disables cash amount rendering
function Global.DisplayCash(toggle)
	return _in(0x96DEC8D5430208B7, toggle)
end

--- The messages are localized strings.
-- Examples:
-- "No_bus_money"
-- "Enter_bus"
-- "Tour_help"
-- "LETTERS_HELP2"
-- "Dummy"
-- **The bool appears to always be false (if it even is a bool, as it's represented by a zero)**
-- --------
-- p1 doesn't seem to make a difference, regardless of the state it's in.
-- picture of where on the screen this is displayed?
function Global.DisplayHelpTextThisFrame(message, p1)
	return _in(0x960C9FF8F616E41C, _ts(message), p1)
end

--- If Hud should be displayed
function Global.DisplayHud(toggle)
	return _in(0xA6294919E56FF02A, toggle)
end

function Global.DisplayHudWhenPausedThisFrame()
	return _in(0x402F9ED62087E898)
end
Global.N_0x402f9ed62087e898 = Global.DisplayHudWhenPausedThisFrame

--- note, p0 is set to 6 for PC platform in at least 1 script, or to `unk::_get_ui_language_id() == 0` otherwise.
-- NOTE: windowTitle uses text labels, and an invalid value will display nothing.
-- Dr. Underscore: `UNK::_GET_UI_LANGUAGE_ID()` is now `UNK::_GET_CURRENT_LANGUAGE_ID()`
-- www.gtaforums.com/topic/788343-vrel-script-hook-v/?p=1067380474
-- windowTitle's
-- -----------------
-- CELL_EMAIL_BOD	=	"Enter your Eyefind message"
-- CELL_EMAIL_BODE	=	"Message too long. Try again"
-- CELL_EMAIL_BODF	=	"Forbidden message. Try again"
-- CELL_EMAIL_SOD	=	"Enter your Eyefind subject"
-- CELL_EMAIL_SODE	=	"Subject too long. Try again"
-- CELL_EMAIL_SODF	=	"Forbidden text. Try again"
-- CELL_EMASH_BOD	=	"Enter your Eyefind message"
-- CELL_EMASH_BODE	=	"Message too long. Try again"
-- CELL_EMASH_BODF	=	"Forbidden message. Try again"
-- CELL_EMASH_SOD	=	"Enter your Eyefind subject"
-- CELL_EMASH_SODE	=	"Subject too long. Try again"
-- CELL_EMASH_SODF	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP10	=	"Enter Synopsis"
-- FMMC_KEY_TIP12	=	"Enter Custom Team Name"
-- FMMC_KEY_TIP12F	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP12N	=	"Custom Team Name"
-- FMMC_KEY_TIP8	=	"Enter Message"
-- FMMC_KEY_TIP8F	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP8FS	=	"Invalid Message. Try again"
-- FMMC_KEY_TIP8S	=	"Enter Message"
-- FMMC_KEY_TIP9	=	"Enter Outfit Name"
-- FMMC_KEY_TIP9F	=	"Invalid Outfit Name. Try again"
-- FMMC_KEY_TIP9N	=	"Outfit Name"
-- PM_NAME_CHALL	=	"Enter Challenge Name"
function Global.DisplayOnscreenKeyboard(p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength)
	return _in(0x00DC833F2568DBF6, p0, _ts(windowTitle), _ts(p2), _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), maxInputLength)
end

function Global.DisplayOnscreenKeyboardWithLongerInitialString(p0, windowTitle, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength)
	return _in(0xCA78CFA0366592FE, p0, _ts(windowTitle), _i, _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), _ts(defaultConcat4), _ts(defaultConcat5), _ts(defaultConcat6), _ts(defaultConcat7), maxInputLength)
end
Global.N_0xca78cfa0366592fe = Global.DisplayOnscreenKeyboardWithLongerInitialString
Global.DisplayOnscreenKeyboard_2 = Global.DisplayOnscreenKeyboardWithLongerInitialString

--- If Minimap / Radar should be displayed.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.DisplayRadar(toggle)
	return _in(0xA0EBB943C300E693, toggle, _r, _ri)
end

--- Displays the crosshair for this frame.
function Global.DisplaySniperScopeThisFrame()
	return _in(0x73115226F4814E62)
end

--- Purpose of the BOOL currently unknown.
-- Both, true and false, work
function Global.DisplaySystemSigninUi(unk)
	return _in(0x94DD7888C10A979E, unk)
end

function Global.DisposeSynchronizedScene(scene)
	return _in(0xCD9CC7E200A52A6F, scene)
end
Global.N_0xcd9cc7e200a52a6f = Global.DisposeSynchronizedScene

--- if value is set to true, and ambient siren sound will be played.
function Global.DistantCopCarSirens(value)
	return _in(0x552369F549563AD5, value)
end
Global.N_0x552369f549563ad5 = Global.DistantCopCarSirens
Global.ForceAmbientSiren = Global.DistantCopCarSirens

function Global.DoAutoSave()
	return _in(0x50EEAAD86232EE55)
end

--- Fades the screen in.
-- duration: The time the fade should take, in milliseconds.
function Global.DoScreenFadeIn(duration)
	return _in(0xD4E8E24955024033, duration)
end

--- Fades the screen out.
-- duration: The time the fade should take, in milliseconds.
function Global.DoScreenFadeOut(duration)
	return _in(0x891B5B39AC6302AF, duration)
end

function Global.DoesAirDefenseZoneExist(zoneId)
	return _in(0xCD79A550999D7D4F, zoneId, _r)
end
Global.N_0xcd79a550999d7d4f = Global.DoesAirDefenseZoneExist

function Global.DoesAnimDictExist(animDict)
	return _in(0x2DA49C3B79856961, _ts(animDict), _r)
end

function Global.DoesBlipExist(blip)
	return _in(0xA6DB27D19ECBB7DA, blip, _r)
end

function Global.DoesBlipHaveGpsRoute(blip)
	return _in(0xDD2238F57B977751, blip, _r)
end
Global.N_0xdd2238f57b977751 = Global.DoesBlipHaveGpsRoute

--- Returns whether or not the passed camera handle exists.
function Global.DoesCamExist(cam)
	return _in(0xA7A932170592B50E, cam, _r)
end

--- Returns true only when the hook is active, will return false if the magnet is active
function Global.DoesCargobobHavePickUpRope(cargobob)
	return _in(0x1821D91AD4B56108, cargobob, _r)
end
Global.IsCargobobHookActive = Global.DoesCargobobHavePickUpRope

--- Returns true only when the magnet is active, will return false if the hook is active
function Global.DoesCargobobHavePickupMagnet(cargobob)
	return _in(0x6E08BF5B3722BAC9, cargobob, _r)
end
Global.IsCargobobMagnetActive = Global.DoesCargobobHavePickupMagnet
Global.DoesCargobobHavePickupMagnet = Global.DoesCargobobHavePickupMagnet

function Global.DoesCutsceneEntityExist(cutsceneEntName, modelHash)
	return _in(0x499EF20C5DB25C59, _ts(cutsceneEntName), _ch(modelHash), _r)
end

function Global.DoesEntityBelongToThisScript(entity, p2)
	return _in(0xDDE6DF5AE89981D2, entity, p2, _r)
end

--- Checks whether an entity exists in the game world.
-- @param entity The entity to check if it exists.
-- @return Whether the entity exists or not.
function Global.DoesEntityExist(entity)
	return _in(0x7239B21A38F536BA, entity, _r)
end

function Global.DoesEntityHaveDrawable(entity)
	return _in(0x060D6E96F8B8E48D, entity, _r)
end

--- GET_*
function Global.DoesEntityHaveFragInst(object)
	return _in(0x0C112765300C7E1E, object, _r)
end
Global.N_0x0c112765300c7e1e = Global.DoesEntityHaveFragInst

function Global.DoesEntityHavePhysics(entity)
	return _in(0xDA95EA3317CC5064, entity, _r)
end

--- Checks via CVehicleModelInfo
function Global.DoesExtraExist(vehicle, extraId)
	return _in(0x1262D55792428154, vehicle, extraId, _r)
end

function Global.DoesGroupExist(groupId)
	return _in(0x7C6B0C22F9F40BBE, groupId, _r)
end

function Global.DoesNavmeshBlockingObjectExist(p0)
	return _in(0x0EAEB0DB4B132399, p0, _r)
end
Global.N_0x0eaeb0db4b132399 = Global.DoesNavmeshBlockingObjectExist

--- p5 is usually 0.
function Global.DoesObjectOfTypeExistAtCoords(x, y, z, radius, hash, p5)
	return _in(0xBFA48E2FF417213F, x, y, z, radius, _ch(hash), p5, _r)
end

function Global.DoesParticleFxLoopedExist(ptfxHandle)
	return _in(0x74AFEF0D2E1E409B, ptfxHandle, _r)
end

--- Returns whether the ped's blip is controlled by the game.
-- It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).
function Global.DoesPedHaveAiBlip(ped)
	return _in(0x15B8ECF844EE67ED, ped, _r)
end

function Global.DoesPickupExist(pickup)
	return _in(0xAFC1CA75AD4074D1, pickup, _r)
end

function Global.DoesPickupObjectExist(pickupObject)
	return _in(0xD9EFB6DBF7DAAEA3, pickupObject, _r)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
function Global.DoesPickupOfTypeExistInArea(pickupHash, x, y, z, radius)
	return _in(0xF9C36251F6E48E33, _ch(pickupHash), x, y, z, radius, _r)
end
Global.IsPickupWithinRadius = Global.DoesPickupOfTypeExistInArea

function Global.DoesPlayerVehHaveRadio()
	return _in(0x109697E2FFBAC8A1, _r)
end
Global.N_0x109697e2ffbac8a1 = Global.DoesPlayerVehHaveRadio

function Global.DoesPopMultiplierAreaExist(id)
	return _in(0x1327E2FE9746BAEE, id, _r)
end
Global.N_0x1327e2fe9746baee = Global.DoesPopMultiplierAreaExist

function Global.DoesPopMultiplierSphereExist(id)
	return _in(0x171BAFB3C60389F4, id, _r)
end
Global.N_0x171bafb3c60389f4 = Global.DoesPopMultiplierSphereExist

--- Returns true if a destructible object with this handle exists, false otherwise.
function Global.DoesRayfireMapObjectExist(object)
	return _in(0x52AF537A0C5B8AAD, object, _r)
end
Global.N_0x52af537a0c5b8aad = Global.DoesRayfireMapObjectExist
Global.DoesDesObjectExist = Global.DoesRayfireMapObjectExist

--- NativeDB Parameter 0: Hash groupHash
function Global.DoesRelationshipGroupExist(groupHash)
	return _in(0xCC6E3B6BB69501F1, groupHash, _r)
end
Global.N_0xcc6e3b6bb69501f1 = Global.DoesRelationshipGroupExist

function Global.DoesRopeBelongToThisScript(ropeId)
	return _in(0x271C9D3ACA5D6409, ropeId, _r)
end
Global.N_0x271c9d3aca5d6409 = Global.DoesRopeBelongToThisScript

--- Ptr is correct
function Global.DoesRopeExist(ropeId)
	return _in(0xFD5448BE3111ED96, _ii(ropeId) --[[ may be optional ]], _r)
end

function Global.DoesScenarioBlockingAreaExist(x1, y1, z1, x2, y2, z2)
	return _in(0x8A24B067D175A7BD, x1, y1, z1, x2, y2, z2, _r)
end
Global.N_0x8a24b067d175a7bd = Global.DoesScenarioBlockingAreaExist

function Global.DoesScenarioExistInArea(x, y, z, radius, b)
	return _in(0x5A59271FFADD33C1, x, y, z, radius, b, _r)
end

--- Occurrences in the b617d scripts:
-- "ARMY_GUARD",
-- "ARMY_HELI",
-- "Cinema_Downtown",
-- "Cinema_Morningwood",
-- "Cinema_Textile",
-- "City_Banks",
-- "Countryside_Banks",
-- "DEALERSHIP",
-- "GRAPESEED_PLANES",
-- "KORTZ_SECURITY",
-- "LOST_BIKERS",
-- "LSA_Planes",
-- "LSA_Planes",
-- "MP_POLICE",
-- "Observatory_Bikers",
-- "POLICE_POUND1",
-- "POLICE_POUND2",
-- "POLICE_POUND3",
-- "POLICE_POUND4",
-- "POLICE_POUND5"
-- "QUARRY",
-- "SANDY_PLANES",
-- "SCRAP_SECURITY",
-- "SEW_MACHINE",
-- "SOLOMON_GATE",
-- "Triathlon_1_Start",
-- "Triathlon_2_Start",
-- "Triathlon_3_Start"
-- Sometimes used with IS_SCENARIO_GROUP_ENABLED:
-- if (AI::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!AI::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
-- else if (AI::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
function Global.DoesScenarioGroupExist(scenarioGroup)
	return _in(0xF9034C136C9E00D3, _ts(scenarioGroup), _r)
end

function Global.DoesScenarioOfTypeExistInArea(p0, p1, p2, p4, p5)
	return _in(0x0A9D0C2A3BBC86C1, p0, p1, p2, _i, p4, p5, _r)
end

--- For a full list, see here: pastebin.com/yLNWicUi
function Global.DoesScriptExist(scriptName)
	return _in(0xFC04745FBE67C19A, _ts(scriptName), _r)
end

function Global.DoesScriptVehicleGeneratorExist(vehicleGenerator)
	return _in(0xF6086BC836400876, vehicleGenerator, _r)
end

--- formerly _IS_STREAMED_SCRIPT_RUNNING
-- Jenkins hash: 0x19EAE282
function Global.DoesScriptWithNameHashExist(scriptHash)
	return _in(0xF86AA3C56BA31381, _ch(scriptHash), _r)
end
Global.N_0xf86aa3c56ba31381 = Global.DoesScriptWithNameHashExist
Global.DoesScriptWithNameHashExist = Global.DoesScriptWithNameHashExist

--- Checks if there is a cover point at position
function Global.DoesScriptedCoverPointExistAtCoords(x, y, z)
	return _in(0xA98B8E3C088E5A31, x, y, z, _r)
end

function Global.DoesShopPedApparelHaveRestrictionTag(componentHash, drawableSlotHash, componentId)
	return _in(0x341DE7ED1D2A1BFD, _ch(componentHash), _ch(drawableSlotHash), componentId, _r)
end
Global.N_0x341de7ed1d2a1bfd = Global.DoesShopPedApparelHaveRestrictionTag

function Global.DoesTextBlockExist(gxt)
	return _in(0x1C7302E725259789, _ts(gxt), _r)
end

--- Checks if the passed gxt name exists in the game files.
function Global.DoesTextLabelExist(gxt)
	return _in(0xAC09CA973C564252, _ts(gxt), _r)
end

--- Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
function Global.DoesVehicleAllowRappel(vehicle)
	return _in(0x4E417C547182C84D, vehicle, _r)
end
Global.N_0x4e417c547182c84d = Global.DoesVehicleAllowRappel

function Global.DoesVehicleExistWithDecorator(decorator)
	return _in(0x956B409B984D9BF7, _ts(decorator), _r)
end

--- This function is called before ADD_CLAN_DECAL_TO_VEHICLE to see if it needs to run. IDK if it's for clan decal or not, but the 2nd parameter might be decal index? It's always passed 0. Not sure what this function really does. But it does return 0 if the clan tag is not on, and 1 if it is.
function Global.DoesVehicleHaveCrewEmblem(vehicle, p1)
	return _in(0x060D935D3981A275, vehicle, p1, _r)
end
Global.HasVehicleGotDecal = Global.DoesVehicleHaveCrewEmblem
Global.DoesVehicleHaveDecal = Global.DoesVehicleHaveCrewEmblem

function Global.DoesVehicleHaveDoor(vehicle, doorIndex)
	return _in(0x645F4B6E8499F632, vehicle, doorIndex, _r)
end

--- Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
function Global.DoesVehicleHaveJumpingAbility(vehicle)
	return _in(0x9078C0C5EF8C19E9, vehicle, _r)
end
Global.HasVehicleJumpingAbility = Global.DoesVehicleHaveJumpingAbility

function Global.DoesVehicleHaveParachute(vehicle)
	return _in(0xBC9CFF381338CB4F, vehicle, _r)
end
Global.HasVehicleParachute = Global.DoesVehicleHaveParachute

function Global.DoesVehicleHaveRetractableWheels(vehicle)
	return _in(0xDCA174A42133F08C, vehicle, _r)
end
Global.GetHasLowerableWheels = Global.DoesVehicleHaveRetractableWheels

function Global.DoesVehicleHaveRocketBoost(vehicle)
	return _in(0x36D782F68B309BDA, vehicle, _r)
end
Global.HasVehicleRocketBoost = Global.DoesVehicleHaveRocketBoost

function Global.DoesVehicleHaveRoof(vehicle)
	return _in(0x8AC862B0B32C5B80, vehicle, _r)
end

--- Maximum amount of vehicles with vehicle stuck check appears to be 16.
function Global.DoesVehicleHaveStuckVehicleCheck(vehicle)
	return _in(0x57E4C39DE5EE8470, vehicle, _r)
end

function Global.DoesVehicleHaveWeapons(vehicle)
	return _in(0x25ECB9F8017D98E0, vehicle, _r)
end

function Global.DoesWeaponTakeWeaponComponent(weaponHash, componentHash)
	return _in(0x5CEE3DF569CECAB0, _ch(weaponHash), _ch(componentHash), _r)
end

--- When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
function Global.DontTiltMinimapThisFrame()
	return _in(0x6D14BFDC33B34F55)
end
Global.CenterPlayerOnRadarThisFrame = Global.DontTiltMinimapThisFrame

--- OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked
-- OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked
-- locked simply tells the game whether or not the door is locked.
-- x,y,z RotMult are multipliers that specify how fast the door/gate will rotate in degrees per second.
function Global.DoorControl(doorHash, x, y, z, locked, xRotMult, yRotMult, zRotMult)
	return _in(0x9B12F9A24FABEDB0, _ch(doorHash), x, y, z, locked, xRotMult, yRotMult, zRotMult)
end

--- NativeDB Parameter 3: Hash modelHash
function Global.DoorSystemFindExistingDoor(x, y, z, modelHash, doorOutPointer)
	return _in(0x589F80B325CC82C5, x, y, z, modelHash, _ii(doorOutPointer) --[[ may be optional ]], _r)
end
Global.N_0x589f80b325cc82c5 = Global.DoorSystemFindExistingDoor

function Global.DoorSystemGetDoorPendingState(doorHash)
	return _in(0x4BC2854478F3A749, _ch(doorHash), _r, _ri)
end
Global.N_0x4bc2854478f3a749 = Global.DoorSystemGetDoorPendingState

function Global.DoorSystemGetDoorState(doorHash)
	return _in(0x160AA1B32F6139B8, _ch(doorHash), _r, _ri)
end
Global.N_0x160aa1b32f6139b8 = Global.DoorSystemGetDoorState

--- NativeDB Parameter 0: Hash doorHash
function Global.DoorSystemGetIsPhysicsLoaded(doorHash)
	return _in(0xDF97CDD4FC08FD34, doorHash, _r)
end
Global.N_0xdf97cdd4fc08fd34 = Global.DoorSystemGetIsPhysicsLoaded

function Global.DoorSystemGetOpenRatio(doorHash)
	return _in(0x65499865FCA6E5EC, _ch(doorHash), _r, _rf)
end
Global.N_0x65499865fca6e5ec = Global.DoorSystemGetOpenRatio

function Global.DoorSystemSetAutomaticDistance(doorHash, heading, p2, p3)
	return _in(0x9BA001CB45CBF627, _ch(doorHash), heading, p2, p3)
end
Global.N_0x9ba001cb45cbf627 = Global.DoorSystemSetAutomaticDistance

function Global.DoorSystemSetAutomaticRate(doorHash, p1, p2, p3)
	return _in(0x03C27E13B42A0E82, _ch(doorHash), p1, p2, p3)
end
Global.N_0x03c27e13b42a0e82 = Global.DoorSystemSetAutomaticRate

--- Sets the acceleration limit of a door.
-- How fast it can open, or the inverse hinge resistance.
-- A limit of 0 seems to lock doors.
-- p2 is always 0, p3 is always 1.
function Global.DoorSystemSetDoorState(doorHash, limit, p2, p3)
	return _in(0x6BAB9442830C7F53, _ch(doorHash), limit, p2, p3)
end
Global.N_0x6bab9442830c7f53 = Global.DoorSystemSetDoorState
Global.SetDoorAccelerationLimit = Global.DoorSystemSetDoorState

function Global.DoorSystemSetHoldOpen(doorHash, p1)
	return _in(0xD9B71952F78A2640, _ch(doorHash), p1)
end
Global.N_0xd9b71952f78a2640 = Global.DoorSystemSetHoldOpen

--- Sets the ajar angle of a door.
-- Ranges from -1.0 to 1.0, and 0.0 is closed / default.
-- p2 is always 0, p3 is always 1.
function Global.DoorSystemSetOpenRatio(doorHash, ajar, p2, p3)
	return _in(0xB6E6FBA95C7324AC, _ch(doorHash), ajar, p2, p3)
end
Global.N_0xb6e6fba95c7324ac = Global.DoorSystemSetOpenRatio
Global.SetDoorAjarAngle = Global.DoorSystemSetOpenRatio

function Global.DoorSystemSetSpringRemoved(doorHash, p1, p2, p3)
	return _in(0xC485E07E4F0B7958, _ch(doorHash), p1, p2, p3)
end
Global.N_0xc485e07e4f0b7958 = Global.DoorSystemSetSpringRemoved

--- NativeDB Introduced: v1290
-- @param binkMovie :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param r :
-- @param g :
-- @param b :
-- @param a :
function Global.DrawBinkMovie(binkMovie, p1, p2, p3, p4, p5, r, g, b, a)
	return _in(0x7118E83EEB9F7238, binkMovie, p1, p2, p3, p4, p5, r, g, b, a)
end

--- x,y,z = start pos
-- x2,y2,z2 = end pos
-- Draw's a 3D Box between the two x,y,z coords.
-- --------------
-- Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawBox(Vector3 a, Vector3 b, Color col)
-- {
-- Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
-- }
function Global.DrawBox(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
	return _in(0xD3A9971CADAC7252, x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugBox(x1, y1, z1, x2, y2, z2, r, g, b, a)
	return _in(0x083A2CA4F2E573BD, x1, y1, z1, x2, y2, z2, r, g, b, a)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugCross(x, y, z, size, red, green, blue, alpha)
	return _in(0x73B1189623049839, x, y, z, size, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugLine(x1, y1, z1, x2, y2, z2, r, g, b, a)
	return _in(0x7FDFADE676AA3CB0, x1, y1, z1, x2, y2, z2, r, g, b, a)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugLineWithTwoColours(x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
	return _in(0xD8B9A8AC5608FF94, x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugSphere(x, y, z, radius, red, green, blue, alpha)
	return _in(0xAAD68E1AB39DA632, x, y, z, radius, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugText(text, x, y, z, red, green, blue, alpha)
	return _in(0x3903E216620488E8, _ts(text), x, y, z, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.DrawDebugText_2d(text, x, y, z, red, green, blue, alpha)
	return _in(0xA3BB2E9555C05A8F, _ts(text), x, y, z, red, green, blue, alpha)
end

--- instructionalKey enum list:
-- ```
-- Buttons = {
-- Empty = 0,
-- Select = 1, -- (RETURN)
-- Ok = 2, -- (RETURN)
-- Yes = 4, -- (RETURN)
-- Back = 8, -- (ESC)
-- Cancel = 16, -- (ESC)
-- No = 32, -- (ESC)
-- RetrySpace = 64, -- (SPACE)
-- Restart = 128, -- (SPACE)
-- Skip = 256, -- (SPACE)
-- Quit = 512, -- (ESC)
-- Adjust = 1024, -- (ARROWS)
-- SpaceKey = 2048, -- (SPACE)
-- Share = 4096, -- (SPACE)
-- SignIn = 8192, -- (SPACE)
-- Continue = 16384, -- (RETURN)
-- AdjustLeftRight = 32768, -- (SCROLL L/R)
-- AdjustUpDown = 65536, -- (SCROLL U/D)
-- Overwrite = 131072, -- (SPACE)
-- SocialClubSignup = 262144, -- (RETURN)
-- Confirm = 524288, -- (RETURN)
-- Queue = 1048576, -- (RETURN)
-- RetryReturn = 2097152, -- (RETURN)
-- BackEsc = 4194304, -- (ESC)
-- SocialClub = 8388608, -- (RETURN)
-- Spectate = 16777216, -- (SPACE)
-- OkEsc = 33554432, -- (ESC)
-- CancelTransfer = 67108864, -- (ESC)
-- LoadingSpinner = 134217728,
-- NoReturnToGTA = 268435456, -- (ESC)
-- CancelEsc = 536870912, -- (ESC)
-- }
-- Alt = {
-- Empty = 0,
-- No = 1, -- (SPACE)
-- Host = 2, -- (ESC)
-- SearchForJob = 4, -- (RETURN)
-- ReturnKey = 8, -- (TURN)
-- Freemode = 16, -- (ESC)
-- }
-- ```
-- **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
-- ```
-- NativeDB Parameter 5: BOOL p5
-- NativeDB Return Type: void
-- ```
-- @param labelTitle Label of the alert's title.
-- @param labelMsg Label of the alert's message.
-- @param p2 This is an enum, check the description for a list.
-- @param p3 This is an enum, check the description for a list.
-- @param labelMsg2 Label of another message line
-- @param p5 usually 0
-- @param p6 usually -1
-- @param p7 usually 0
-- @param p8 unknown label
-- @param p9 unknown label
-- @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param errorCode Error code, shown at the bottom left if set to value other than 0.
function Global.DrawFrontendAlert(labelTitle, labelMsg, p2, p3, labelMsg2, p5, p6, p7, p8, p9, background, errorCode)
	return _in(0x15803FEC3B9A872B, _ts(labelTitle), _ts(labelMsg), p2, p3, _ts(labelMsg2), p5, p6, p7, _ts(p8), _ts(p9), background, errorCode, _r, _ri)
end
Global.N_0x15803fec3b9a872b = Global.DrawFrontendAlert

--- Similar to [\_DRAW_SPRITE](#_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
-- These seem to be the only dicts ever requested by this native:
-- ```
-- prop_screen_biker_laptop
-- Prop_Screen_GR_Disruption
-- Prop_Screen_TaleOfUs
-- prop_screen_nightclub
-- Prop_Screen_IE_Adhawk
-- prop_screen_sm_free_trade_shipping
-- prop_screen_hacker_truck
-- MPDesktop
-- Prop_Screen_Nightclub
-- And a few others
-- ```
-- @param textureDict Name of texture dictionary to load texture from
-- @param textureName Name of texture to load from texture dictionary
-- @param screenX Screen X
-- @param screenY Screen Y
-- @param width Scale X
-- @param height Scale Y
-- @param heading Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- @param red Color
-- @param green Color
-- @param blue Color
-- @param alpha Opacity level
function Global.DrawInteractiveSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)
	return _in(0x2BC54A8188768488, _ts(textureDict), _ts(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha)
end
Global.N_0x2bc54a8188768488 = Global.DrawInteractiveSprite

function Global.DrawLightWithRange(posX, posY, posZ, colorR, colorG, colorB, range, intensity)
	return _in(0xF2A1B2771A01DBD4, posX, posY, posZ, colorR, colorG, colorB, range, intensity)
end

function Global.DrawLightWithRangeAndShadow(x, y, z, r, g, b, range, intensity, shadow)
	return _in(0xF49E9A9716A04595, x, y, z, r, g, b, range, intensity, shadow)
end
Global.DrawLightWithRangeWithShadow = Global.DrawLightWithRangeAndShadow

--- Draws a depth-tested line from one point to another.
-- ----------------
-- x1, y1, z1 : Coordinates for the first point
-- x2, y2, z2 : Coordinates for the second point
-- r, g, b, alpha : Color with RGBA-Values
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawLine(Vector3 from, Vector3 to, Color col)
-- {
-- Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
-- }
function Global.DrawLine(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
	return _in(0x6B7256074AE34680, x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
end

--- Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.
-- There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
-- @param type The marker type to draw.
-- @param posX The X coordinate to draw the marker at.
-- @param posY The Y coordinate to draw the marker at.
-- @param posZ The Z coordinate to draw the marker at.
-- @param dirX The X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirY The Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirZ The Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param rotX The X rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotY The Y rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotZ The Z rotation for the marker. Only used if the direction vector is 0.0.
-- @param scaleX The scale for the marker on the X axis.
-- @param scaleY The scale for the marker on the Y axis.
-- @param scaleZ The scale for the marker on the Z axis.
-- @param red The red component of the marker color, on a scale from 0-255.
-- @param green The green component of the marker color, on a scale from 0-255.
-- @param blue The blue component of the marker color, on a scale from 0-255.
-- @param alpha The alpha component of the marker color, on a scale from 0-255.
-- @param bobUpAndDown Whether or not the marker should slowly animate up/down.
-- @param faceCamera Whether the marker should be a 'billboard', as in, should constantly face the camera.
-- @param p19 Typically set to `2`. Does not seem to matter directly.
-- @param rotate Rotations only apply to the heading.
-- @param textureDict A texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'
-- @param textureName A texture name in `textureDict` to draw the marker with, or NULL. Example: 'PuttingMarker'
-- @param drawOnEnts Whether or not the marker should draw on intersecting entities.
function Global.DrawMarker(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts)
	return _in(0x28477EC23D892089, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts)
end

--- NativeDB Added Parameter 26: BOOL p25
function Global.DrawMarker_2(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24)
	return _in(0xE82728F0DE75D13A, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts, p24)
end
Global.N_0xe82728f0de75d13a = Global.DrawMarker_2

--- x/y/z - Location of a vertex (in world coords), presumably.
-- ----------------
-- x1, y1, z1     : Coordinates for the first point
-- x2, y2, z2     : Coordinates for the second point
-- x3, y3, z3     : Coordinates for the third point
-- r, g, b, alpha : Color with RGBA-Values
-- Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
-- But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
-- {
-- Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
-- }
-- BTW: Intersecting triangles are not supported: They overlap in the order they were called.
function Global.DrawPoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
	return _in(0xAC26716048436851, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
end

--- Draws a rectangle on the screen.
-- -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
-- -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
-- -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
-- -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
-- -R: Red part of the color. (0-255)
-- -G: Green part of the color. (0-255)
-- -B: Blue part of the color. (0-255)
-- -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
-- The total number of rectangles to be drawn in one frame is apparently limited to 399.
-- ```
-- ```
-- NativeDB Added Parameter 9: BOOL p8
function Global.DrawRect(x, y, width, height, r, g, b, a)
	return _in(0x3A618A217E5154F0, x, y, width, height, r, g, b, a)
end

--- GTA V Scaleforms Decompiled
-- pastebin.com/mmNdjX2k
function Global.DrawScaleformMovie(scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)
	return _in(0x54972ADAF0294A93, scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)
end

--- unk is not used so no need
function Global.DrawScaleformMovieFullscreen(scaleform, red, green, blue, alpha, unk)
	return _in(0x0DF606929C105BE1, scaleform, red, green, blue, alpha, unk)
end

function Global.DrawScaleformMovieFullscreenMasked(scaleform1, scaleform2, red, green, blue, alpha)
	return _in(0xCF537FDE4FBD4CE5, scaleform1, scaleform2, red, green, blue, alpha)
end

--- sharpness goes from 0.0 to 1.0
function Global.DrawScaleformMovie_3d(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)
	return _in(0x87D51D72255D4E78, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)
end
Global.N_0x87d51d72255d4e78 = Global.DrawScaleformMovie_3d

--- what the heck does this one do differently from the one above?
function Global.DrawScaleformMovie_3dSolid(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)
	return _in(0x1CE592FDC749D6F5, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)
end
Global.N_0x1ce592fdc749d6f5 = Global.DrawScaleformMovie_3dSolid
Global.DrawScaleformMovie_3dNonAdditive = Global.DrawScaleformMovie_3dSolid

--- It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
-- p0 was always "CELEBRATION_WINNER"
function Global.DrawShowroom(p0, ped, p2, posX, posY, posZ)
	return _in(0x98C4FE6EC34154CA, _ts(p0), ped, p2, posX, posY, posZ, _r)
end
Global.N_0x98c4fe6ec34154ca = Global.DrawShowroom

--- Parameters:
-- * pos - coordinate where the spotlight is located
-- * dir - the direction vector the spotlight should aim at from its current position
-- * r,g,b - color of the spotlight
-- * distance - the maximum distance the light can reach
-- * brightness - the brightness of the light
-- * roundness - "smoothness" of the circle edge
-- * radius - the radius size of the spotlight
-- * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
-- Example in C# (spotlight aims at the closest vehicle):
-- Vector3 myPos = Game.Player.Character.Position;
-- Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
-- Vector3 destinationCoords = nearest.Position;
-- Vector3 dirVector = destinationCoords - myPos;
-- dirVector.Normalize();
-- Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
function Global.DrawSpotLight(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
	return _in(0xD0F64B265C8C8B33, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
end

--- shadowId: each call to this native in the same tick should have a different value passed to this parameter, if two or more calls have the same values, only the first one will render its shadow properly
function Global.DrawSpotLightWithShadow(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
	return _in(0x5BCA583A583194DB, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
end

--- Draws a 2D sprite on the screen.
-- Parameters:
-- textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
-- textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
-- screenX/Y - Screen offset (0.5 = center)
-- scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
-- heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- red,green,blue - Sprite color (default = 255/255/255)
-- alpha - opacity level
-- ```
-- ```
-- NativeDB Added Parameter 12: BOOL p11
function Global.DrawSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)
	return _in(0xE7FFAE5EBF23D890, _ts(textureDict), _ts(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha)
end

--- All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
-- "act_cinema.ysc", line 1483:
-- UI::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
-- UI::SET_TEXT_RENDER_ID(l_AE);
-- GRAPHICS::_0x61BB1D9B3A95D802(4);
-- GRAPHICS::_0xC6372ECD45D73BCD(1);
-- if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
-- } else {
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
-- }
-- "am_mp_property_int.ysc", line 102545:
-- if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
-- if (UI::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
-- UI::SET_TEXT_RENDER_ID(a_2._f1);
-- GRAPHICS::_0x61BB1D9B3A95D802(4);
-- GRAPHICS::_0xC6372ECD45D73BCD(1);
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
-- if (GRAPHICS::GET_TV_CHANNEL() == -1) {
-- sub_a8fa5(a_2, 1);
-- } else {
-- sub_a8fa5(a_2, 1);
-- GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
-- }
-- UI::SET_TEXT_RENDER_ID(UI::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
-- }
-- }
function Global.DrawTvChannel(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
	return _in(0xFDDC2B4ED3C69DF0, xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
end

function Global.DropAmbientProp(ped)
	return _in(0xAFF4710E2A0A6C12, ped)
end
Global.N_0xaff4710e2a0a6c12 = Global.DropAmbientProp

function Global.DuplicateFunctionReference(referenceIdentity)
	return _in(0xf4e2079d, _ts(referenceIdentity), _r, _s)
end

function Global.EjectJb700Roof(vehicle, x, y, z)
	return _in(0xE38CB9D7D39FDBCC, vehicle, x, y, z)
end
Global.N_0xe38cb9d7d39fdbcc = Global.EjectJb700Roof

--- Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`START_SCREEN_EFFECT`](#_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
-- This native does not seem to work, however by using the [START_SCREEN_EFFECT](https://runtime.fivem.net/doc/natives/#_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
function Global.EnableAlienBloodVfx(toggle)
	return _in(0x9DCE1F0F78260875, toggle)
end
Global.N_0x9dce1f0f78260875 = Global.EnableAlienBloodVfx

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
function Global.EnableAllControlActions(inputGroup)
	return _in(0xA5FFE9B05F199DE7, inputGroup)
end

--- Creates cartoon effect when Michel smokes the weed
function Global.EnableClownBloodVfx(toggle)
	return _in(0xD821490579791273, toggle)
end
Global.SetCameraEndtime = Global.EnableClownBloodVfx

--- control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Control.cs
-- and
-- https://docs.fivem.net/game-references/controls/
-- 0, 1 and 2 used in the scripts.
-- Control values from the decompiled scripts:
-- 0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,
-- 37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100
-- ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19
-- 0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2
-- 20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,
-- 261,262,263,264,286,287,288,289,337,338,339,340,341,342,343
-- INPUTGROUP_MOVE
-- INPUTGROUP_LOOK
-- INPUTGROUP_WHEEL
-- INPUTGROUP_CELLPHONE_NAVIGATE
-- INPUTGROUP_CELLPHONE_NAVIGATE_UD
-- INPUTGROUP_CELLPHONE_NAVIGATE_LR
-- INPUTGROUP_FRONTEND_DPAD_ALL
-- INPUTGROUP_FRONTEND_DPAD_UD
-- INPUTGROUP_FRONTEND_DPAD_LR
-- INPUTGROUP_FRONTEND_LSTICK_ALL
-- INPUTGROUP_FRONTEND_RSTICK_ALL
-- INPUTGROUP_FRONTEND_GENERIC_UD
-- INPUTGROUP_FRONTEND_GENERIC_LR
-- INPUTGROUP_FRONTEND_GENERIC_ALL
-- INPUTGROUP_FRONTEND_BUMPERS
-- INPUTGROUP_FRONTEND_TRIGGERS
-- INPUTGROUP_FRONTEND_STICKS
-- INPUTGROUP_SCRIPT_DPAD_ALL
-- INPUTGROUP_SCRIPT_DPAD_UD
-- INPUTGROUP_SCRIPT_DPAD_LR
-- INPUTGROUP_SCRIPT_LSTICK_ALL
-- INPUTGROUP_SCRIPT_RSTICK_ALL
-- INPUTGROUP_SCRIPT_BUMPERS
-- INPUTGROUP_SCRIPT_TRIGGERS
-- INPUTGROUP_WEAPON_WHEEL_CYCLE
-- INPUTGROUP_FLY
-- INPUTGROUP_SUB
-- INPUTGROUP_VEH_MOVE_ALL
-- INPUTGROUP_CURSOR
-- INPUTGROUP_CURSOR_SCROLL
-- INPUTGROUP_SNIPER_ZOOM_SECONDARY
-- INPUTGROUP_VEH_HYDRAULICS_CONTROL
-- Took those in IDA Pro.Not sure in which order they go
function Global.EnableControlAction(inputGroup, control, enable)
	return _in(0x351220255D64C155, inputGroup, control, enable)
end

--- Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
function Global.EnableCrosshairThisFrame()
	return _in(0xEA7F0AD7E9BA676F)
end

--- Directly from R*:
-- enum eDispatchType : UINT16
-- {
-- DT_PoliceAutomobile = 1,
-- DT_PoliceHelicopter = 2,
-- DT_FireDepartment = 3,
-- DT_SwatAutomobile = 4,
-- DT_AmbulanceDepartment = 5,
-- DT_PoliceRiders = 6,
-- DT_PoliceVehicleRequest = 7,
-- DT_PoliceRoadBlock = 8,
-- DT_PoliceAutomobileWaitPulledOver = 9,
-- DT_PoliceAutomobileWaitCruising = 10,
-- DT_Gangs = 11,
-- DT_SwatHelicopter = 12,
-- DT_PoliceBoat = 13,
-- DT_ArmyVehicle = 14,
-- DT_BikerBackup = 15
-- };
-- By making toggle false it disables the dispatch.
-- curious if this is what they used when you toggled on and off cops in a GTA IV freemode you hosted. Sad they got rid of the option to make a private session without cops.
-- Also on x360 seems with or without neverWanted on, setting these to all false in SP of course doesn't seem to work. I would understand getting stars, but cops are still dispatched and combat you.
function Global.EnableDispatchService(dispatchService, toggle)
	return _in(0xDC0F817884CDD856, dispatchService, toggle)
end
Global.N_0xdc0f817884cdd856 = Global.EnableDispatchService

--- ENABLE_*
function Global.EnableEntityUnk(entity)
	return _in(0x6CE177D014502E8A, entity)
end
Global.N_0x6ce177d014502e8a = Global.EnableEntityUnk

--- This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
function Global.EnableExteriorCullModelThisFrame(mapObjectHash)
	return _in(0xA97F257D0151A6AB, _ch(mapObjectHash))
end
Global.N_0xa97f257d0151a6ab = Global.EnableExteriorCullModelThisFrame
Global.HideMapObjectThisFrame = Global.EnableExteriorCullModelThisFrame

--- Enables laser sight on any weapon.
-- It doesn't work. Neither on tick nor OnKeyDown
function Global.EnableLaserSightRendering(toggle)
	return _in(0xC8B46D7727D864AA, toggle)
end

function Global.EnableMovieKeyframeWait(toggle)
	return _in(0x74C180030FDE4B69, toggle)
end
Global.N_0x74c180030fde4b69 = Global.EnableMovieKeyframeWait

function Global.EnableMovieSubtitles(toggle)
	return _in(0x873FA65C778AD970, toggle)
end

function Global.EnableSavingInGarage(garageHash, toggle)
	return _in(0xF2E1A7133DD356A6, _ch(garageHash), toggle)
end
Global.N_0xf2e1a7133dd356a6 = Global.EnableSavingInGarage

--- #4
function Global.EnableScriptBrainSet(brainSet)
	return _in(0x67AA4D73F0CFA86B, brainSet)
end

--- NativeDB Parameter 0: Hash mapObjectHash
function Global.EnableScriptCullModelThisFrame(mapObjectHash)
	return _in(0x50C375537449F369, mapObjectHash)
end
Global.N_0x50c375537449f369 = Global.EnableScriptCullModelThisFrame

function Global.EnableSpecialAbility(player, toggle)
	return _in(0x181EC197DAEFE121, player, toggle)
end

function Global.EnableStallWarningSounds(vehicle, toggle)
	return _in(0xC15907D667F7CFB2, vehicle, toggle)
end
Global.N_0xc15907d667f7cfb2 = Global.EnableStallWarningSounds

function Global.EnableStuntJumpSet(p0)
	return _in(0xE369A5783B866016, p0)
end

function Global.EnableSwitchPauseBeforeDescent()
	return _in(0xD4793DFF3AF2ABCD)
end
Global.N_0xd4793dff3af2abcd = Global.EnableSwitchPauseBeforeDescent

--- Makes the ped jump around like they're in a tennis match
function Global.EnableTennisMode(ped, toggle, p2)
	return _in(0x28A04B411933F8A6, ped, toggle, p2)
end

function Global.EnableVehicleExhaustPops(vehicle, toggle)
	return _in(0x2BE4BC731D039D5A, vehicle, toggle)
end
Global.N_0x2be4bc731d039d5a = Global.EnableVehicleExhaustPops

function Global.EndFindKvp(handle)
	return _in(0xb3210203, handle)
end

function Global.EndFindObject(findHandle)
	return _in(0xdeda4e50, findHandle)
end

function Global.EndFindPed(findHandle)
	return _in(0x9615c2ad, findHandle)
end

function Global.EndFindPickup(findHandle)
	return _in(0x3c407d53, findHandle)
end

function Global.EndFindVehicle(findHandle)
	return _in(0x9227415a, findHandle)
end

function Global.EndPetrolTrailDecals()
	return _in(0x0A123435A26C36CD)
end
Global.N_0x0a123435a26c36cd = Global.EndPetrolTrailDecals

function Global.EndReplayStats()
	return _in(0xA23E821FBDF8A5F2)
end

--- Pops and calls the Scaleform function on the stack
function Global.EndScaleformMovieMethod()
	return _in(0xC6796A8FFA375E53)
end
Global.PopScaleformMovieFunctionVoid = Global.EndScaleformMovieMethod

--- Pops and calls the Scaleform movie on the stack. Returns data from the function (not sure if this is a string).
function Global.EndScaleformMovieMethodReturnValue()
	return _in(0xC50AA39A577AF886, _r, _ri)
end
Global.PopScaleformMovieFunction = Global.EndScaleformMovieMethodReturnValue
Global.EndScaleformMovieMethodReturn = Global.EndScaleformMovieMethodReturnValue

--- Clear the current srl and stop rendering the area selected by PrefetchSrl and started with BeginSrl.
function Global.EndSrl()
	return _in(0x0A41540E63C9EE17)
end

--- This does NOT get called per frame. Call it once to show, then use UI::_REMOVE_LOADING_PROMPT to remove it
-- Changes the the above native's (UI::_SET_LOADING_PROMPT_TEXT_ENTRY) spinning circle type.
-- Types:
-- enum LoadingPromptTypes
-- {
-- LOADING_PROMPT_LEFT,
-- LOADING_PROMPT_LEFT_2,
-- LOADING_PROMPT_LEFT_3,
-- SAVE_PROMPT_LEFT,
-- LOADING_PROMPT_RIGHT,
-- };
function Global.EndTextCommandBusyspinnerOn(busySpinnerType)
	return _in(0xBD12F8228410D9B4, busySpinnerType)
end
Global.N_0xbd12f8228410d9b4 = Global.EndTextCommandBusyspinnerOn
Global.ShowLoadingPrompt = Global.EndTextCommandBusyspinnerOn
Global.EndTextCommandBusyString = Global.EndTextCommandBusyspinnerOn

function Global.EndTextCommandClearPrint()
	return _in(0xFCC75460ABA29378)
end
Global.N_0xfcc75460aba29378 = Global.EndTextCommandClearPrint

--- -----------
-- p3 (duration in MS) was previously mentioned as "shape", but with some more testing it seems that it's more likely to be a duration in MS. (Tested this when not calling it every tick, but instead only once and let it display for the specified duration).
-- -1 seems to be default delay (around 3 seconds), 5000 (ms) seems to be the max. Anything > 5000 will still result in 5 seconds of display time.
-- Old p3 (shape) description: "shape goes from -1 to 50 (may be more)."
-- --------------
-- p0 is always 0.
-- Example:
-- void FloatingHelpText(char* text)
-- {
-- BEGIN_TEXT_COMMAND_DISPLAY_HELP("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
-- }
-- Image:
-- - imgbin.org/images/26209.jpg
-- more inputs/icons:
-- - pastebin.com/nqNYWMSB
-- Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
function Global.EndTextCommandDisplayHelp(p0, loop, beep, shape)
	return _in(0x238FFE5C7B0498A6, p0, loop, beep, shape)
end
Global.DisplayHelpTextFromStringLabel = Global.EndTextCommandDisplayHelp

--- After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.
-- Used to be known as _DRAW_TEXT
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.EndTextCommandDisplayText(x, y)
	return _in(0xCD015E5BB0D96A57, x, y)
end
Global.DrawText = Global.EndTextCommandDisplayText

--- Determines how many lines the text string will use when drawn on screen.
-- Must use _BEGIN_TEXT_COMMAND_LINE_COUNT for setting up
function Global.EndTextCommandGetLineCount(x, y)
	return _in(0x9040DFB09BE75706, x, y, _r, _ri)
end
Global.N_0x9040dfb09be75706 = Global.EndTextCommandGetLineCount
Global.GetTextScreenLineCount = Global.EndTextCommandGetLineCount

--- Used with _BEGIN_TEXT_COMMAND_WIDTH.
-- In scripts, p0 is false when used in combination with "ESMINDOLLA" or "ESDOLLA", otherwise it's true.
-- Returns from range 0 to 1.
function Global.EndTextCommandGetWidth(p0)
	return _in(0x85F061DA64ED2F67, p0, _r, _rf)
end
Global.GetTextScreenWidth = Global.EndTextCommandGetWidth

function Global.EndTextCommandIsMessageDisplayed()
	return _in(0x8A9BA1AB3E237613, _r)
end
Global.N_0x8a9ba1ab3e237613 = Global.EndTextCommandIsMessageDisplayed

function Global.EndTextCommandIsThisHelpMessageBeingDisplayed(p0)
	return _in(0x10BDDBFC529428DD, p0, _r)
end
Global.N_0x10bddbfc529428dd = Global.EndTextCommandIsThisHelpMessageBeingDisplayed

--- p0 is always false in scripts.
function Global.EndTextCommandObjective(p0)
	return _in(0xCFDBDF5AE59BA0F4, p0)
end
Global.N_0xcfdbdf5ae59ba0f4 = Global.EndTextCommandObjective

--- NativeDB Parameter 0: int p0
function Global.EndTextCommandOverrideButtonText(p0)
	return _in(0xA86911979638106F, p0)
end
Global.N_0xa86911979638106f = Global.EndTextCommandOverrideButtonText
Global.EndTextCommandTimer = Global.EndTextCommandOverrideButtonText

--- Draws the subtitle at middle center of the screen.
-- int duration = time in milliseconds to show text on screen before disappearing
-- drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
-- Used to be known as _DRAW_SUBTITLE_TIMED
function Global.EndTextCommandPrint(duration, drawImmediately)
	return _in(0x9D77056A530643F6, duration, drawImmediately)
end
Global.DrawSubtitleTimed = Global.EndTextCommandPrint

--- Previously called _END_TEXT_COMPONENT
function Global.EndTextCommandScaleformString()
	return _in(0x362E2D3FE93A9959)
end
Global.EndTextComponent = Global.EndTextCommandScaleformString

--- Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
function Global.EndTextCommandScaleformString_2()
	return _in(0xAE4E8157D9ECF087)
end
Global.N_0xae4e8157d9ecf087 = Global.EndTextCommandScaleformString_2

--- Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#_0xF9113A30DE5C6670), setting the name
-- of the specified blip.
-- @param blip The blip to change the name for.
function Global.EndTextCommandSetBlipName(blip)
	return _in(0xBC38B49BCB83BC9B, blip)
end

--- Shows an "award" notification above the minimap, lua example result:
-- ![](https://i.imgur.com/e2DNaKX.png)
-- Old description:
-- ```
-- Example:
-- UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
-- UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
-- ```
-- @param textureDict The texture dictionary name for the icon on the left.
-- @param textureName The texture name for the icon on the left.
-- @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
-- @param colorOverlay Hudcolor overlay that gets applied on top of the notification, fucks up text/image visibility in most cases if set to something other than 0.
-- @param titleLabel The label that will be displayed at the top of the notification (title).
-- @return The notification handle.
function Global.EndTextCommandThefeedPostAward(textureDict, textureName, rpBonus, colorOverlay, titleLabel)
	return _in(0xAA295B6F28BD587D, _ts(textureDict), _ts(textureName), rpBonus, colorOverlay, _ts(titleLabel), _r, _ri)
end
Global.N_0xaa295b6f28bd587d = Global.EndTextCommandThefeedPostAward
Global.DrawNotificationIcon = Global.EndTextCommandThefeedPostAward
Global.DrawNotificationAward = Global.EndTextCommandThefeedPostAward

--- Example, only occurrence in the scripts:
-- UI::_8EFCCF6EC66D85E4(&v_23, &v_13, &v_13, 1, v_34);
function Global.EndTextCommandThefeedPostCrewRankup(chTitle, clanTxd, clanTxn, isImportant, showSubtitle)
	return _in(0x8EFCCF6EC66D85E4, _ts(chTitle), _ts(clanTxd), _ts(clanTxn), isImportant, showSubtitle, _r, _ri)
end
Global.N_0x8efccf6ec66d85e4 = Global.EndTextCommandThefeedPostCrewRankup

--- This function and the one below it are for after you receive an invite, not sending it.
-- p0 = 1 or 0
-- nothin doin.
-- int invite(Player player)
-- {
-- int iVar2, iVar3;
-- networkHandleMgr handle;
-- NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
-- networkClanMgr clan;
-- char *playerName = GET_PLAYER_NAME(player);
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- _SET_NOTIFACTION_COLOR_NEXT(0);
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
-- if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
-- {
-- iVar2 = 0;
-- if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
-- {
-- iVar2 = 1;
-- }
-- if (clan.unk21 > 0)
-- {
-- iVar3 = 0;
-- }
-- else
-- {
-- iVar3 = 1;
-- }
-- BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
-- return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
-- }
-- }
function Global.EndTextCommandThefeedPostCrewtag(crewTypeIsPrivate, crewTagContainsRockstar, rank, hasFounderStatus, isImportant, clanHandle, r, g, b)
	return _in(0x97C9E4E7024A8F2C, crewTypeIsPrivate, crewTagContainsRockstar, _i, rank, hasFounderStatus, isImportant, clanHandle, r, g, b, _r, _ri)
end
Global.N_0x97c9e4e7024a8f2c = Global.EndTextCommandThefeedPostCrewtag
Global.NotificationSendApartmentInvite = Global.EndTextCommandThefeedPostCrewtag
Global.DrawNotificationApartmentInvite = Global.EndTextCommandThefeedPostCrewtag

--- p0 = 1 or 0
-- crashes my game...
-- this is for sending invites to network players - jobs/apartment/ect...
-- return notification handle
-- int invite(Player player)
-- {
-- networkHandleMgr netHandle;
-- networkClanMgr clan;
-- char *playerName = GET_PLAYER_NAME(player);
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- _SET_NOTIFACTION_COLOR_NEXT(1);
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
-- NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
-- if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
-- {
-- NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
-- _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
-- }
-- }
function Global.EndTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate, crewTagContainsRockstar, rank, isLeader, isImportant, clanHandle, gamerStr, r, g, b)
	return _in(0x137BC35589E34E1E, crewTypeIsPrivate, crewTagContainsRockstar, _i, rank, isLeader, isImportant, clanHandle, _ts(gamerStr), r, g, b, _r, _ri)
end
Global.N_0x137bc35589e34e1e = Global.EndTextCommandThefeedPostCrewtagWithGameName
Global.NotificationSendClanInvite = Global.EndTextCommandThefeedPostCrewtagWithGameName
Global.DrawNotificationClanInvite = Global.EndTextCommandThefeedPostCrewtagWithGameName

--- Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
-- Texture dictionary and texture name parameters are usually the same exact value.
-- Example result:
-- ![](https://i.imgur.com/LviutDl.png)
-- Old description with list of possible icons and texture names:
-- ```
-- List of picNames: pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- ```
-- @param textureDict The texture dictionary for the icon.
-- @param textureName The texture name for the icon.
-- @param flash Flash, doesn't seem to work no matter what.
-- @param iconType The icon type, see the list in the description below.
-- @param sender The notification title.
-- @param subject The notification subtitle.
-- @return The notification handle.
function Global.EndTextCommandThefeedPostMessagetext(textureDict, textureName, flash, iconType, sender, subject)
	return _in(0x1CCD9A37359072CF, _ts(textureDict), _ts(textureName), flash, iconType, _ts(sender), _ts(subject), _r, _ri)
end
Global.SetNotificationMessage = Global.EndTextCommandThefeedPostMessagetext

--- Needs more research.
-- Only one type of usage in the scripts:
-- ```
-- UI::_SET_NOTIFICATION_MESSAGE_3("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a_0);
-- ```
-- Example result:
-- ![](https://i.imgur.com/UglK7Gq.png)
function Global.EndTextCommandThefeedPostMessagetextEntry(picTxd, picTxn, flash, iconType, entryText, text)
	return _in(0xC6F580E4C94926AC, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(entryText), _ts(text), _r, _ri)
end
Global.N_0xc6f580e4c94926ac = Global.EndTextCommandThefeedPostMessagetextEntry
Global.SetNotificationMessage_3 = Global.EndTextCommandThefeedPostMessagetextEntry

--- NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- Example, only occurrence in the scripts:
-- ```
-- v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
-- ```
-- Example result:
-- ![](https://i.imgur.com/YrN4Bcm.png)
function Global.EndTextCommandThefeedPostMessagetextTu(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, duration)
	return _in(0x1E6611149DB3DB6B, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(nameStr), _ts(subtitleStr), duration, _r, _ri)
end
Global.N_0x1e6611149db3db6b = Global.EndTextCommandThefeedPostMessagetextTu
Global.SetNotificationMessage_4 = Global.EndTextCommandThefeedPostMessagetextTu

--- List of picNames pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
function Global.EndTextCommandThefeedPostMessagetextWithCrewTag(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, duration, crewPackedStr)
	return _in(0x5CBF7BADE20DB93E, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(nameStr), _ts(subtitleStr), duration, _ts(crewPackedStr), _r, _ri)
end
Global.SetNotificationMessageClanTag = Global.EndTextCommandThefeedPostMessagetextWithCrewTag

--- List of picNames: pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
-- iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
-- int IconNotification(char *text, char *text2, char *Subject)
-- {
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
-- return _DRAW_NOTIFICATION(1, 1);
-- }
function Global.EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd, picTxn, flash, iconType1, nameStr, subtitleStr, duration, crewPackedStr, iconType2, textColor)
	return _in(0x531B84E7DA981FB6, _ts(picTxd), _ts(picTxn), flash, iconType1, _ts(nameStr), _ts(subtitleStr), duration, _ts(crewPackedStr), iconType2, textColor, _r, _ri)
end
Global.SetNotificationMessageClanTag_2 = Global.EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon

--- Alias of 0x2ED7843F8F801023
function Global.EndTextCommandThefeedPostMpticker(isImportant, bHasTokens)
	return _in(0xF020C96915705B3A, isImportant, bHasTokens, _r, _ri)
end
Global.DrawNotification_4 = Global.EndTextCommandThefeedPostMpticker

--- returns a notification handle, prints out a notification like below:
-- type range: 0
-- if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
-- example:
-- UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
function Global.EndTextCommandThefeedPostReplayIcon(eType, iIcon, sTitle)
	return _in(0xD202B92CBF1D816F, eType, iIcon, _ts(sTitle), _r, _ri)
end
Global.N_0xd202b92cbf1d816f = Global.EndTextCommandThefeedPostReplayIcon
Global.DrawNotificationWithIcon = Global.EndTextCommandThefeedPostReplayIcon

--- returns a notification handle, prints out a notification like below:
-- type range: 0
-- if you set type to 1, button accepts "~INPUT_SOMETHING~"
-- example:
-- UI::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
-- - imgur.com/UPy0Ial
-- Examples from the scripts:
-- l_D1[1/*1*/]=UI::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
-- l_D1[2/*1*/]=UI::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
-- l_D1[1/*1*/]=UI::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
-- l_D1[2/*1*/]=UI::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
function Global.EndTextCommandThefeedPostReplayInput(eType, sIcon, sSubtitle)
	return _in(0xDD6CB2CCE7C2735C, eType, _ts(sIcon), _ts(sSubtitle), _r, _ri)
end
Global.N_0xdd6cb2cce7c2735c = Global.EndTextCommandThefeedPostReplayInput
Global.DrawNotificationWithButton = Global.EndTextCommandThefeedPostReplayInput

--- [List of picture names](https://pastebin.com/XdpJVbHz)
-- Example result:
-- ![](https://i.imgur.com/SdEZ22m.png)
-- @return The notification handle.
function Global.EndTextCommandThefeedPostStats(statTitle, iconEnum, stepVal, barValue, isImportant, picTxd, picTxn)
	return _in(0x2B7E9A4EAAA93C89, _ts(statTitle), iconEnum, stepVal, barValue, isImportant, _ts(picTxd), _ts(picTxn), _r, _ri)
end
Global.N_0x2b7e9a4eaaa93c89 = Global.EndTextCommandThefeedPostStats
Global.SetNotificationMessage_2 = Global.EndTextCommandThefeedPostStats

--- Example output preview:
-- ![](https://i.imgur.com/TJvqkYq.png)
-- @param isImportant Makes the notification flash on the screen.
-- @param bHasTokens Makes the notification appear in the "Pause Menu > Info/Brief > Notifications" section.
-- @return The notification handle.
function Global.EndTextCommandThefeedPostTicker(isImportant, bHasTokens)
	return _in(0x2ED7843F8F801023, isImportant, bHasTokens, _r, _ri)
end
Global.DrawNotification = Global.EndTextCommandThefeedPostTicker

--- Removes all game feed posts and unfreezes (see 0xFDB423997FA30340) CGameStreamMgr
function Global.EndTextCommandThefeedPostTickerForced(isImportant, bHasTokens)
	return _in(0x44FA03975424A0EE, isImportant, bHasTokens, _r, _ri)
end
Global.DrawNotification_2 = Global.EndTextCommandThefeedPostTickerForced

function Global.EndTextCommandThefeedPostTickerWithTokens(isImportant, bHasTokens)
	return _in(0x378E809BF61EC840, isImportant, bHasTokens, _r, _ri)
end
Global.DrawNotification_3 = Global.EndTextCommandThefeedPostTickerWithTokens

function Global.EndTextCommandThefeedPostUnlock(chTitle, iconType, chSubtitle)
	return _in(0x33EE12743CCD6343, _ts(chTitle), iconType, _ts(chSubtitle), _r, _ri)
end
Global.N_0x33ee12743ccd6343 = Global.EndTextCommandThefeedPostUnlock

function Global.EndTextCommandThefeedPostUnlockTu(chTitle, iconType, chSubtitle, isImportant)
	return _in(0xC8F3AAF93D0600BF, _ts(chTitle), iconType, _ts(chSubtitle), isImportant, _r, _ri)
end
Global.N_0xc8f3aaf93d0600bf = Global.EndTextCommandThefeedPostUnlockTu

function Global.EndTextCommandThefeedPostUnlockTuWithColor(chTitle, iconType, chSubtitle, isImportant, titleColor, p5)
	return _in(0x7AE0589093A2E088, _ts(chTitle), iconType, _ts(chSubtitle), isImportant, titleColor, p5, _r, _ri)
end
Global.N_0x7ae0589093a2e088 = Global.EndTextCommandThefeedPostUnlockTuWithColor

--- NativeDB Added Parameter 7: int hudColorIndex1
-- NativeDB Added Parameter 8: int hudColorIndex2
function Global.EndTextCommandThefeedPostVersusTu(ch1TXD, ch1TXN, val1, ch2TXD, ch2TXN, val2)
	return _in(0xB6871B0555B02996, _ts(ch1TXD), _ts(ch1TXN), val1, _ts(ch2TXD), _ts(ch2TXN), val2, _r, _ri)
end
Global.N_0xb6871b0555b02996 = Global.EndTextCommandThefeedPostVersusTu

function Global.ExecuteCommand(commandString)
	return _in(0x561c060b, _ts(commandString))
end

--- This native is not implemented.
function Global.ExperimentalLoadCloneCreate(data, objectId, tree)
	return _in(0xd2cb95a3, _ts(data), objectId, _ts(tree), _r, _ri)
end

--- This native is not implemented.
function Global.ExperimentalLoadCloneSync(entity, data)
	return _in(0x6bc189ac, entity, _ts(data))
end

--- This native is not implemented.
function Global.ExperimentalSaveCloneCreate(entity)
	return _in(0x9d65cad2, entity, _r, _s)
end

--- This native is not implemented.
function Global.ExperimentalSaveCloneSync(entity)
	return _in(0x38d19210, entity, _r, _s)
end

--- Forces the ped to fall back and kills it.
-- It doesn't really explode the ped's head but it kills the ped
function Global.ExplodePedHead(ped, weaponHash)
	return _in(0x2D05CED3A38D0F3A, ped, _ch(weaponHash))
end

--- WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);
function Global.ExplodeProjectiles(ped, weaponHash, p2)
	return _in(0xFC4BD125DE7611E4, ped, _ch(weaponHash), p2)
end

--- Explodes a selected vehicle.
-- Vehicle vehicle = Vehicle you want to explode.
-- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
-- First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
function Global.ExplodeVehicle(vehicle, isAudible, isInvisible)
	return _in(0xBA71116ADF5B514C, vehicle, isAudible, isInvisible)
end

function Global.ExplodeVehicleInCutscene(vehicle, p1)
	return _in(0x786A4EB67B01BF0B, vehicle, p1)
end

--- Will change world AABB so that given point will be inside of the world limits.
-- Example:
-- You want world limits to be -9000<X<10000 -11000<Y<12000 and leave Z limits as is.
-- You should call this function two times:
-- _EXPAND_WORLD_LIMITS(-9000.0,-11000.0,30.0)
-- _EXPAND_WORLD_LIMITS(10000.0,12000.0,30.0)
-- Appears only 3 times in the scripts, more specifically in michael1.ysc
-- -
-- This can be used to prevent dying if you are "out of the world"
function Global.ExtendWorldBoundaryForPlayer(x, y, z)
	return _in(0x5006D96C995A5827, x, y, z)
end
Global.N_0x5006d96c995a5827 = Global.ExtendWorldBoundaryForPlayer
Global.ExpandWorldLimits = Global.ExtendWorldBoundaryForPlayer

function Global.FacebookDoUnkCheck()
	return _in(0xA75E2B6733DA5142, _r)
end
Global.N_0xa75e2b6733da5142 = Global.FacebookDoUnkCheck

function Global.FacebookIsAvailable()
	return _in(0x43865688AE10F0D7, _r)
end
Global.N_0x43865688ae10f0d7 = Global.FacebookIsAvailable

function Global.FacebookIsSendingData()
	return _in(0x62B9FEC9A11F10EF, _r)
end
Global.N_0x62b9fec9a11f10ef = Global.FacebookIsSendingData

--- GTA Online character creation
function Global.FacebookSetCreateCharacterComplete()
	return _in(0xDC48473142545431, _r)
end
Global.N_0xdc48473142545431 = Global.FacebookSetCreateCharacterComplete

function Global.FacebookSetHeistComplete(heistName, cashEarned, xpEarned)
	return _in(0x098AB65B9ED9A9EC, _ts(heistName), cashEarned, xpEarned, _r)
end
Global.N_0x098ab65b9ed9a9ec = Global.FacebookSetHeistComplete

--- milestoneId:
-- 0 = "percentcomplete"
-- 1 = "storycomplete"
-- 2 = "vehicles"
-- 3 = "properties"
-- 4 = "psych"
-- 5 = "mapreveal"
-- 6 = "prologue"
function Global.FacebookSetMilestoneComplete(milestoneId)
	return _in(0x0AE1F1653B554AB9, milestoneId, _r)
end
Global.N_0x0ae1f1653b554ab9 = Global.FacebookSetMilestoneComplete

--- Fades nearby decals within the range specified
function Global.FadeDecalsInRange(p0, p1, p2, p3, p4)
	return _in(0xD77EDADB0420E6E0, p0, p1, p2, p3, p4)
end

--- Hardcoded to not work in SP.
function Global.FadeOutLocalPlayer(p0)
	return _in(0x416DBD4CD6ED8DD2, p0)
end

function Global.FadeUpPedLight(p0)
	return _in(0xC9B18B4619F48F7B, p0)
end
Global.N_0xc9b18b4619f48f7b = Global.FadeUpPedLight

function Global.FilloutPmPlayerList(p1, p2)
	return _in(0xCBBD7C4991B64809, _i, p1, p2, _r)
end

function Global.FilloutPmPlayerListWithNames(p2, p3)
	return _in(0x716B6DB9D1886106, _i, _i, p2, p3, _r)
end

--- ```
-- In the script "player_scene_t_bbfight.c4":
-- "if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))"
-- -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
-- -- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the "animation" param.
-- -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
-- --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
-- "if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"
-- Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
-- -alphazolam
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.FindAnimEventPhase(animDictionary, animName, p2)
	return _in(0x07F1BE2BCCAA27A7, _ts(animDictionary), _ts(animName), _ts(p2), _i, _i, _r)
end

function Global.FindFirstObject(outEntity)
	return _in(0xfaa6cb5d, _ii(outEntity) --[[ may be optional ]], _r, _ri)
end

function Global.FindFirstPed(outEntity)
	return _in(0xfb012961, _ii(outEntity) --[[ may be optional ]], _r, _ri)
end

function Global.FindFirstPickup(outEntity)
	return _in(0x3ff9d340, _ii(outEntity) --[[ may be optional ]], _r, _ri)
end

function Global.FindFirstVehicle(outEntity)
	return _in(0x15e55694, _ii(outEntity) --[[ may be optional ]], _r, _ri)
end

function Global.FindKvp(handle)
	return _in(0xbd7bebc5, handle, _r, _s)
end

function Global.FindNextObject(findHandle, outEntity)
	return _in(0x4e129dbf, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function Global.FindNextPed(findHandle, outEntity)
	return _in(0xab09b548, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function Global.FindNextPickup(findHandle, outEntity)
	return _in(0x4107ef0f, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function Global.FindNextVehicle(findHandle, outEntity)
	return _in(0x8839120d, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function Global.FindRadioStationIndex(station)
	return _in(0x8D67489793FF428B, station, _r, _ri)
end

--- Finds a position ahead of the player by predicting the players next actions.
-- The positions match path finding node positions.
-- When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
-- =======================================================
-- I may sort this with alter research, but if someone
-- already knows please tell what the difference in
-- X2, Y2, Z2 is. I doubt it's rotation. Is it like
-- checkpoints where X1, Y1, Z1 is your/a position and
-- X2, Y2, Z2 is a given position ahead of that position?
-- =======================================================
function Global.FindSpawnPointInDirection(x1, y1, z1, x2, y2, z2, distance, spawnPoint)
	return _in(0x6874E2190B0C1972, x1, y1, z1, x2, y2, z2, distance, _v, _r)
end

function Global.FireAirDefenseWeapon(zoneId, x, y, z)
	return _in(0x44F1012B69313374, zoneId, x, y, z)
end
Global.N_0x44f1012b69313374 = Global.FireAirDefenseWeapon

--- int index = 0 to 13
-- 0 = front right window
-- 1 = front left window
-- 2 = rear right window
-- 3 = rear left window
-- 4 = unsure
-- 5 = unsure
-- 6 = windowscreen
-- 7 = unsure
-- 8 = rear windowscreen
-- 9 = unsure
-- 10 = unsure
-- 11 = unsure
-- 12 = unsure
-- 13 = unsure
-- Additional information: `FIX_VEHICLE_WINDOW` (0x140D0BB88) references an array of bone vehicle indices (0x141D4B3E0) `{ 2Ah, 2Bh, 2Ch, 2Dh, 2Eh, 2Fh, 28h, 29h }` that correspond to: `window_lf`, `window_rf`, `window_lr`, `window_rr`, `window_lm`, `window_rm`, `windscreen`, `windscreen_r`. This array is used by most vehwindow natives.
-- Also, this function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
function Global.FixVehicleWindow(vehicle, index)
	return _in(0x772282EBEB95E682, vehicle, index, _r, _ri)
end

function Global.FlagPlayerContextInTournament(toggle)
	return _in(0xCEF214315D276FD1, toggle)
end
Global.N_0xcef214315d276fd1 = Global.FlagPlayerContextInTournament
Global.SetIsInTournament = Global.FlagPlayerContextInTournament

--- If set to true ability bar will flash
-- ```
-- ```
-- NativeDB Parameter 0: int millisecondsToFlash
function Global.FlashAbilityBar(millisecondsToFlash)
	return _in(0x02CFBA0C9E9275CE, millisecondsToFlash)
end

--- adds a short flash to the Radar/Minimap
-- Usage: UI.FLASH_MINIMAP_DISPLAY
function Global.FlashMinimapDisplay()
	return _in(0xF2DD778C22B15BDA)
end

function Global.FlashMinimapDisplayWithColor(hudColorIndex)
	return _in(0x6B1DE27EE78E6A19, hudColorIndex)
end
Global.N_0x6b1de27ee78e6a19 = Global.FlashMinimapDisplayWithColor

--- NativeDB Return Type: void
function Global.FlashWantedDisplay(p0)
	return _in(0xA18AFB39081B6A1F, p0, _r, _ri)
end

function Global.Floor(value)
	return _in(0xF34EE736CF047844, value, _r, _ri)
end

--- used with 1,2,8,64,128 in the scripts
function Global.ForceCleanup(cleanupFlags)
	return _in(0xBC8983F38F78ED51, cleanupFlags)
end

--- PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation
function Global.ForceCleanupForAllThreadsWithThisName(name, cleanupFlags)
	return _in(0x4C68DDDDF0097317, _ts(name), cleanupFlags)
end

function Global.ForceCleanupForThreadWithThisId(id, cleanupFlags)
	return _in(0xF745B37630DF176B, id, cleanupFlags)
end

--- Hides the hud element displayed by _0x523A590C1A3CC0D3
function Global.ForceCloseReportugcMenu()
	return _in(0xEE4C0E6DBC6F2C6F)
end
Global.N_0xee4c0e6dbc6f2c6f = Global.ForceCloseReportugcMenu

function Global.ForceCloseTextInputBox()
	return _in(0x8817605C2BA76200)
end
Global.N_0x8817605c2ba76200 = Global.ForceCloseTextInputBox

--- Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
function Global.ForceEntityAiAndAnimationUpdate(entity)
	return _in(0x40FDEDB72F8293B2, entity)
end

--- creates single lightning+thunder at random position
function Global.ForceLightningFlash()
	return _in(0xF6062E089251C898)
end
Global.CreateLightningThunder = Global.ForceLightningFlash

--- Some motionstate hashes are
-- 0xec17e58 (standing idle), 0xbac0f10b (nothing?), 0x3f67c6af (aiming with pistol 2-h), 0x422d7a25 (stealth), 0xbd8817db, 0x916e828c
-- and those for the strings
-- "motionstate_idle", "motionstate_walk", "motionstate_run", "motionstate_actionmode_idle", and "motionstate_actionmode_walk".
-- Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in the scripts. p4 is very rarely something other than 0.
-- [31/03/2017] ins1de :
-- enum MotionState
-- {
-- StopRunning = -530524,
-- StopWalking = -668482597,
-- Idle = 247561816, // 1, 1, 0
-- Idl2 = -1871534317,
-- SkyDive =-1161760501, // 0, 1, 0
-- Stealth = 1110276645,
-- Sprint = -1115154469,
-- Swim = -1855028596,
-- Unknown1 = 1063765679,
-- Unknown2 = -633298724,
-- }
-- ```
-- ```
-- NativeDB Parameter 3: int p3
function Global.ForcePedMotionState(ped, motionStateHash, p2, p3, p4)
	return _in(0xF28965D04F570DCA, ped, _ch(motionStateHash), p2, p3, p4, _r)
end

function Global.ForcePedToOpenParachute(ped)
	return _in(0x16E42E800B472221, ped)
end

--- Forces the particular room in an interior to load incase not teleporting into the portal.
function Global.ForceRoomForEntity(entity, interior, roomHashKey)
	return _in(0x52923C4710DD9907, entity, interior, _ch(roomHashKey))
end

function Global.ForceRoomForGameViewport(interiorID, roomHashKey)
	return _in(0x920D853F3E17F1DA, interiorID, _ch(roomHashKey))
end
Global.N_0x920d853f3e17f1da = Global.ForceRoomForGameViewport

--- Forces the game snow pass to render.
-- @param enabled Whether or not to force rendering to use a snow pass.
function Global.ForceSnowPass(enabled)
	return _in(0xe6e16170, enabled)
end

--- Exits the game and downloads a fresh social club update on next restart.
function Global.ForceSocialClubUpdate()
	return _in(0xEB6891F03362FB12)
end

--- Doesn't actually return anything.
function Global.ForceSonarBlipsThisFrame()
	return _in(0x1121BFA1A1A522A8, _r, _ri)
end
Global.N_0x1121bfa1a1a522a8 = Global.ForceSonarBlipsThisFrame

function Global.ForceSubmarineSurfaceMode(vehicle, toggle)
	return _in(0x33506883545AC0DF, vehicle, toggle)
end
Global.N_0x33506883545ac0df = Global.ForceSubmarineSurfaceMode

--- This native sets the audio of the specified vehicle to audioName (p1).
-- Use the audioNameHash found in vehicles.meta
-- Example:
-- _FORCE_VEHICLE_ENGINE_SOUND(veh, "ADDER");
-- The selected vehicle will now have the audio of the Adder.
-- FORCE_VEHICLE_???
function Global.ForceVehicleEngineAudio(vehicle, audioName)
	return _in(0x4F0C413926060B38, vehicle, _ts(audioName))
end
Global.N_0x4f0c413926060b38 = Global.ForceVehicleEngineAudio
Global.SetVehicleAudio = Global.ForceVehicleEngineAudio

function Global.FormatFocusHeading(x, y, z, rad, p4, p5)
	return _in(0x219C7B8D53E429FD, x, y, z, rad, p4, p5, _r, _ri)
end
Global.N_0x219c7b8d53e429fd = Global.FormatFocusHeading

--- ```
-- No, this should be called SET_ENTITY_KINEMATIC. It does more than just "freeze" it's position.
-- ^Rockstar Devs named it like that, Now cry about it.
-- ```
-- Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
-- @param entity The entity to freeze/unfreeze.
-- @param toggle Freeze or unfreeze entity.
function Global.FreezeEntityPosition(entity, toggle)
	return _in(0x428CA6DBD1094446, entity, toggle)
end

function Global.FreezeMicrophone()
	return _in(0xD57AAAE0E2214D11)
end
Global.N_0xd57aaae0e2214d11 = Global.FreezeMicrophone

function Global.FreezePedCameraRotation(ped)
	return _in(0xFF287323B0E2C69A, ped)
end
Global.N_0xff287323b0e2c69a = Global.FreezePedCameraRotation

function Global.FreezeRadioStation(radioStation)
	return _in(0x344F393B027E38C3, _ts(radioStation))
end

--- Usage example:
-- Public Function GenerateDirectionsToCoord(Pos As Vector3) As Tuple(Of String, Single, Single)
-- Dim f4, f5, f6 As New OutputArgument()
-- Native.Function.Call(Hash.GENERATE_DIRECTIONS_TO_COORD, Pos.X, Pos.Y, Pos.Z, True, f4, f5, f6)
-- Dim direction As String = f4.GetResult(Of Single)()
-- Return New Tuple(Of String, Single, Single)(direction.Substring(0, 1), f5.GetResult(Of Single)(), f6.GetResult(Of Single)())
-- End Function
-- p3 I use 1
-- direction:
-- 0 = You Have Arrived
-- 1 = Recalculating Route, Please make a u-turn where safe
-- 2 = Please Proceed the Highlighted Route
-- 3 = In (distToNxJunction) Turn Left
-- 4 = In (distToNxJunction) Turn Right
-- 5 = In (distToNxJunction) Go Straight
-- 6 = In (distToNxJunction) Keep Left
-- 7 = In (distToNxJunction) Keep Right
-- 8 = In (distToNxJunction) Join the freeway
-- 9 = In (distToNxJunction) Exit Freeway
-- return value set to 0 always
function Global.GenerateDirectionsToCoord(x, y, z, p3)
	return _in(0xF90125F1F79ECDF8, x, y, z, p3, _i, _f, _f, _r, _ri)
end

--- p0 = int (?)
-- Dr. Underscore (1/6/18):
-- This gets the progression of an achievement. Returns 0 if the achievement cannot be progressed.
function Global.GetAchievementProgression(achievement)
	return _in(0x1C186837D0619335, achievement, _r, _ri)
end
Global.N_0x1c186837d0619335 = Global.GetAchievementProgression

--- Returns all player indices for 'active' physical players known to the client.
-- The data returned adheres to the following layout:
-- ```
-- [127, 42, 13, 37]
-- ```
-- @return An object containing a list of player indices.
function Global.GetActivePlayers()
	return msgpack.unpack(_in(0xcf143fb9, _r, _ro))
end

--- Returns current screen resolution.
function Global.GetActiveScreenResolution()
	return _in(0x873C9F3104101DD3, _i, _i)
end
Global.GetScreenActiveResolution = Global.GetActiveScreenResolution

function Global.GetActiveVehicleMissionType(vehicle)
	return _in(0x534AEBA6E5ED4CAB, vehicle, _r, _ri)
end

--- Returns the current AI BLIP for the specified ped
function Global.GetAiBlip(ped)
	return _in(0x56176892826A4FE8, ped, _r, _ri)
end
Global.N_0x56176892826a4fe8 = Global.GetAiBlip

--- NativeDB Return Type: Blip
function Global.GetAiBlip_2(ped)
	return _in(0x7CD934010E115C2C, ped)
end
Global.N_0x7cd934010e115c2c = Global.GetAiBlip_2

--- NativeDB Parameter 0: int* vehArray
function Global.GetAllVehicles(vehArray)
	return _in(0x9B8E1BF04B51F2E8, _ii(vehArray) --[[ may be optional ]], _r, _ri)
end

function Global.GetAllocatedStackSize()
	return _in(0x8B3CA62B1EF19B62, _r, _ri)
end

--- Returns profile setting 17.
function Global.GetAllowMovementWhileZoomed()
	return _in(0xFC859E2374407556, _r)
end
Global.N_0xfc859e2374407556 = Global.GetAllowMovementWhileZoomed

--- A getter for [SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME](#_0x0B919E1FB47CC4E0).
-- @return Returns ambient ped range multiplier value.
function Global.GetAmbientPedRangeMultiplier()
	return _in(0xb550232d, _r, _rf)
end

--- A getter for [SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME](#_0x90B6DA738A9A25DA).
-- @return Returns ambient vehicle range multiplier value.
function Global.GetAmbientVehicleRangeMultiplier()
	return _in(0x667ec929, _r, _rf)
end

--- NativeDB Return Type: Hash
function Global.GetAmbientVoiceNameHash(ped)
	return _in(0x5E203DA2BA15D436, ped, _r, _ri)
end
Global.N_0x5e203da2ba15d436 = Global.GetAmbientVoiceNameHash

function Global.GetAmmoInClip(ped, weaponHash, ammo)
	return _in(0x2E1202248937775C, ped, _ch(weaponHash), _ii(ammo) --[[ may be optional ]], _r)
end

--- WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)
-- From decompiled scripts
-- Returns total ammo in weapon
-- GTALua Example :
-- natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
function Global.GetAmmoInPedWeapon(ped, weaponhash)
	return _in(0x015A522136D7F951, ped, _ch(weaponhash), _r, _ri)
end

--- Returns the degree of angle between (x1, y1) and (x2, y2) lines in 2D coordinate system.
function Global.GetAngleBetween_2dVectors(x1, y1, x2, y2)
	return _in(0x186FC4BE848E1C92, x1, y1, x2, y2, _r, _rf)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetAnimDuration(animDict, animName)
	return _in(0xFEDDF04D62B8D790, _ts(animDict), _ts(animName), _r, _rf)
end
Global.GetAnimDuration = Global.GetAnimDuration

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetAnimInitialOffsetPosition(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
	return _in(0xBE22B26DD764C040, _ts(animDict), _ts(animName), x, y, z, xRot, yRot, zRot, p8, p9, _r, _rv)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetAnimInitialOffsetRotation(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
	return _in(0x4B805E6046EE9E47, _ts(animDict), _ts(animName), x, y, z, xRot, yRot, zRot, p8, p9, _r, _rv)
end

function Global.GetAspectRatio(b)
	return _in(0xF1307EF624A80D87, b, _r, _rf)
end
Global.GetScreenAspectRatio = Global.GetAspectRatio

function Global.GetAudibleMusicTrackTextId()
	return _in(0x50B196FC9ED6545B, _r, _ri)
end

--- This line found 48 times in the scripts:
-- GAMEPLAY::_B335F761606DB47C(&v_4, &v_7, a_0, v_A);
function Global.GetBaseElementMetadata(p3, p4)
	return _in(0xB335F761606DB47C, _i, _i, p3, p4, _r)
end
Global.N_0xb335f761606db47c = Global.GetBaseElementMetadata

--- Returns value of the '-benchmarkIterations' command line option.
function Global.GetBenchmarkIterationsFromCommandLine()
	return _in(0x4750FC27570311EC, _r, _ri)
end
Global.N_0x4750fc27570311ec = Global.GetBenchmarkIterationsFromCommandLine

--- Returns value of the '-benchmarkPass' command line option.
function Global.GetBenchmarkPassFromCommandLine()
	return _in(0x1B2366C3F2A5C8DF, _r, _ri)
end
Global.N_0x1b2366c3f2a5c8df = Global.GetBenchmarkPassFromCommandLine

function Global.GetBenchmarkTime()
	return _in(0xE599A503B3837E1B, _r, _rf)
end
Global.N_0xe599a503b3837e1b = Global.GetBenchmarkTime

--- p1 is always 0 in the scripts.
function Global.GetBestPedWeapon(ped, p1)
	return _in(0x8483E98E8B888AE2, ped, p1, _r, _ri)
end

function Global.GetBitsInRange(var, rangeStart, rangeEnd)
	return _in(0x53158863FCC0893A, var, rangeStart, rangeEnd, _r, _ri)
end

function Global.GetBlipAlpha(blip)
	return _in(0x970F608F0EE6C885, blip, _r, _ri)
end

function Global.GetBlipColour(blip)
	return _in(0xDF729E8D20CF7327, blip, _r, _ri)
end

function Global.GetBlipCoords(blip)
	return _in(0x586AFE3FF72D996E, blip, _r, _rv)
end

--- Returns the Blip handle of given Entity.
function Global.GetBlipFromEntity(entity)
	return _in(0xBC8DBDCA2436F7E8, entity, _r, _ri)
end

function Global.GetBlipHudColour(blip)
	return _in(0x729B5F1EFBC0AAEE, blip, _r, _ri)
end

function Global.GetBlipInfoIdCoord(blip)
	return _in(0xFA7C7F0AADF25D09, blip, _r, _rv)
end

function Global.GetBlipInfoIdDisplay(blip)
	return _in(0x1E314167F701DC3B, blip, _r, _ri)
end

function Global.GetBlipInfoIdEntityIndex(blip)
	return _in(0x4BA4E2553AFEDC2C, blip, _r, _ri)
end

function Global.GetBlipInfoIdIterator()
	return _in(0x186E5D252FA50E7D, _r, _ri)
end

--- This function is hard-coded to always return 0.
function Global.GetBlipInfoIdPickupIndex(blip)
	return _in(0x9B6786E4C03DD382, blip, _r, _ri)
end

--- Returns a value based on what the blip is attached to
-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
function Global.GetBlipInfoIdType(blip)
	return _in(0xBE9B0959FFD0779B, blip, _r, _ri)
end

--- Blips Images + IDs:
-- gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
function Global.GetBlipSprite(blip)
	return _in(0x1FC877464A04FC4F, blip, _r, _ri)
end

function Global.GetBoatBoomPositionRatio(vehicle)
	return _in(0x6636C535F6CC2725, vehicle, _r, _rf)
end
Global.N_0x6636c535f6cc2725 = Global.GetBoatBoomPositionRatio

function Global.GetCamAnimCurrentPhase(cam)
	return _in(0xA10B2DB49E92A6B0, cam, _r, _rf)
end

function Global.GetCamCoord(cam)
	return _in(0xBAC038F7459AE5AE, cam, _r, _rv)
end

function Global.GetCamFarClip(cam)
	return _in(0xB60A9CFEB21CA6AA, cam, _r, _rf)
end

function Global.GetCamFarDof(cam)
	return _in(0x255F8DAFD540D397, cam, _r, _rf)
end

function Global.GetCamFov(cam)
	return _in(0xC3330A45CCCDB26A, cam, _r, _rf)
end

--- Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inverse.
function Global.GetCamMatrix(camera)
	return _in(0x8f57a89d, camera, _v, _v, _v, _v)
end

function Global.GetCamNearClip(cam)
	return _in(0xC520A34DAFBF24B1, cam, _r, _rf)
end

--- The last parameter, as in other "ROT" methods, is usually 2.
function Global.GetCamRot(cam, rotationOrder)
	return _in(0x7D304C1C955E3E12, cam, rotationOrder, _r, _rv)
end

--- I named the beginning from Any to BOOL as this native is used in an if statement as well.
-- Big surprise it returns an int.
function Global.GetCamSplineNodeIndex(cam)
	return _in(0xB22B17DF858716A6, cam, _r, _ri)
end

--- I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
function Global.GetCamSplineNodePhase(cam)
	return _in(0xD9D0E694C8282C96, cam, _r, _rf)
end

--- Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
-- (returns 1.0f when no nodes has been added, reached end of non existing spline)
function Global.GetCamSplinePhase(cam)
	return _in(0xB5349E36C546509A, cam, _r, _rf)
end

--- Gets the position of the cargobob hook, in world coords.
function Global.GetCargobobHookPosition(cargobob)
	return _in(0xCBDB9B923CACC92D, cargobob, _r, _rv)
end
Global.N_0xcbdb9b923cacc92d = Global.GetCargobobHookPosition

function Global.GetCauseOfMostRecentForceCleanup()
	return _in(0x9A41CF4674A12272, _r, _ri)
end

function Global.GetCgoffset(entity)
	return _in(0x8214A4B5A7A33612, entity, _r, _rv)
end

function Global.GetClipSetForScriptedGunTask(p0)
	return _in(0x3A8CADC7D37AACC5, p0, _r, _s)
end

function Global.GetClockDayOfMonth()
	return _in(0x3D10BC92A4DB1D35, _r, _ri)
end

--- Gets the current day of the week.
-- 0: Sunday
-- 1: Monday
-- 2: Tuesday
-- 3: Wednesday
-- 4: Thursday
-- 5: Friday
-- 6: Saturday
function Global.GetClockDayOfWeek()
	return _in(0xD972E4BD7AEB235F, _r, _ri)
end

--- Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
function Global.GetClockHours()
	return _in(0x25223CA6B4D20B7F, _r, _ri)
end

--- Gets the current ingame clock minute.
function Global.GetClockMinutes()
	return _in(0x13D2B8ADD79640F2, _r, _ri)
end

function Global.GetClockMonth()
	return _in(0xBBC72712E80257A1, _r, _ri)
end

--- Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
function Global.GetClockSeconds()
	return _in(0x494E97C2EF27C470, _r, _ri)
end

function Global.GetClockYear()
	return _in(0x961777E64BDAF717, _r, _ri)
end

--- Returns TRUE if it found something. FALSE if not.
function Global.GetClosestFirePos(x, y, z)
	return _in(0x352A9F6BCF90081F, _v, x, y, z, _r)
end

--- Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0
function Global.GetClosestMajorVehicleNode(x, y, z, unknown1, unknown2)
	return _in(0x2EABE3B06F58C1BE, x, y, z, _v, unknown1, unknown2, _r)
end

--- Has 8 params in the latest patches.
-- isMission - if true doesn't return mission objects
function Global.GetClosestObjectOfType(x, y, z, radius, modelHash, isMission, p6, p7)
	return _in(0xE143FA2249364369, x, y, z, radius, _ch(modelHash), isMission, p6, p7, _r, _ri)
end

--- Gets the closest ped in a radius.
-- Ped Types:
-- Any ped = -1
-- Player = 1
-- Male = 4
-- Female = 5
-- Cop = 6
-- Human = 26
-- SWAT = 27
-- Animal = 28
-- Army = 29
-- ------------------
-- P4 P5 P7 P8
-- 1  0  x  x  = return nearest walking Ped
-- 1  x  0  x  = return nearest walking Ped
-- x  1  1  x  = return Ped you are using
-- 0  0  x  x  = no effect
-- 0  x  0  x  = no effect
-- x = can be 1 or 0. Does not have any obvious changes.
-- This function does not return ped who is:
-- 1. Standing still
-- 2. Driving
-- 3. Fleeing
-- 4. Attacking
-- This function only work if the ped is:
-- 1. walking normally.
-- 2. waiting to cross a road.
-- Note: PED::GET_PED_NEARBY_PEDS works for more peds.
function Global.GetClosestPed(x, y, z, radius, p4, p5, p7, p8, pedType)
	return _in(0xC33AB876A77F8164, x, y, z, radius, p4, p5, _i, p7, p8, pedType, _r)
end

--- p1 seems to be always 1.0f in the scripts
function Global.GetClosestRoad(x, y, z, p3, p4, p10)
	return _in(0x132F52BBA570FE92, x, y, z, p3, p4, _v, _v, _i, _i, _f, p10, _r, _ri)
end

--- Example usage
-- VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)
-- x, y, z: Position to get closest vehicle to.
-- radius: Max radius to get a vehicle.
-- modelHash: Limit to vehicles with this model. 0 for any.
-- flags: The bitwise flags altering the function's behaviour.
-- Does not return police cars or helicopters.
-- It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
-- Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
-- These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
-- Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
-- Conversion of found flags to binary: pastebin.com/kghNFkRi
-- At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
-- It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT
-- -------------------------------------------------------------------------
-- Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
function Global.GetClosestVehicle(x, y, z, radius, modelHash, flags)
	return _in(0xF73EB622C4F1689B, x, y, z, radius, _ch(modelHash), flags, _r, _ri)
end

--- FYI: When falling through the map (or however you got under it) you will respawn when your player ped's height is <= -200.0 meters (I think you all know this) and when in a vehicle you will actually respawn at the closest vehicle node.
-- ----------
-- Vector3 nodePos;
-- GET_CLOSEST_VEHICLE_NODE(x,y,z,&nodePos,...)
-- p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (asphalt) road.
-- p5, p6 are always the same:
-- 0x40400000 (3.0), 0
-- p5 can also be 100.0 and p6 can be 2.5:
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, &v_5, v_9, 100.0, 2.5)
-- Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
-- The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
-- Starting at 2, every fourth node is under the map, always same coords.
-- Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
-- gtaforums.com/topic/843561-pathfind-node-types
function Global.GetClosestVehicleNode(x, y, z, nodeType, p5, p6)
	return _in(0x240A18690AE96513, x, y, z, _v, nodeType, p5, p6, _r)
end

--- p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
-- p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (asphalt) road.
-- p6 is always 3.0
-- p7 is always 0.
-- Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
-- The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
-- Starting at 2, every fourth node is under the map, always same coords.
-- Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
-- gtaforums.com/topic/843561-pathfind-node-types
-- Example of usage, moving vehicle to closest path/road:
-- Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);
-- Vector3 closestVehicleNodeCoords;
-- float roadHeading;
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);
-- ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);
-- ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);
-- VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);
-- ------------------------------------------------------------------
-- C# Example (ins1de) : pastebin.com/fxtMWAHD
function Global.GetClosestVehicleNodeWithHeading(x, y, z, nodeType, p6, p7)
	return _in(0xFF071FB798B803B0, x, y, z, _v, _f, nodeType, p6, p7, _r)
end

function Global.GetCloudHatOpacity()
	return _in(0x20AC25E781AE4A84, _r, _rf)
end
Global.N_0x20ac25e781ae4a84 = Global.GetCloudHatOpacity

--- Returns POSIX timestamp.
-- Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#_0xDA488F299A5B164E))
-- @return An int representing the cloud time.
function Global.GetCloudTimeAsInt()
	return _in(0x9A73240B49945C76, _r, _ri)
end
Global.N_0x9a73240b49945c76 = Global.GetCloudTimeAsInt

function Global.GetCollisionNormalOfLastHitForEntity(entity)
	return _in(0xE465D4AB7CA6AE72, entity, _r, _rv)
end

--- p0: Ped Handle
-- p1: int i | 0 <= i <= 27
-- p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
-- <BlindFireChance value="0.1"/>
-- <WeaponShootRateModifier value="1.0"/>
-- <TimeBetweenBurstsInCover value="1.25"/>
-- <BurstDurationInCover value="2.0"/>
-- <TimeBetweenPeeks value="10.0"/>
-- <WeaponAccuracy value="0.18"/>
-- <FightProficiency value="0.8"/>
-- <StrafeWhenMovingChance value="1.0"/>
-- <WalkWhenStrafingChance value="0.0"/>
-- <AttackWindowDistanceForCover value="55.0"/>
-- <TimeToInvalidateInjuredTarget value="9.0"/>
-- <TriggerChargeTime_Near value="4.0"/>
-- <TriggerChargeTime_Far value="10.0"/>
-- -------------Confirmed by editing combatbehavior.meta:
-- p1:
-- 0=BlindFireChance
-- 1=BurstDurationInCover
-- 3=TimeBetweenBurstsInCover
-- 4=TimeBetweenPeeks
-- 5=StrafeWhenMovingChance
-- 8=WalkWhenStrafingChance
-- 11=AttackWindowDistanceForCover
-- 12=TimeToInvalidateInjuredTarget
-- 16=OptimalCoverDistance
function Global.GetCombatFloat(ped, p1)
	return _in(0x52DFF8A10508090A, ped, p1, _r, _rf)
end

--- index2 is unused
function Global.GetCommerceItemCat(index, index2)
	return _in(0x6F44CBF56D79FAC0, index, index2, _r, _s)
end
Global.N_0x6f44cbf56d79fac0 = Global.GetCommerceItemCat

function Global.GetCommerceItemId(index)
	return _in(0x662635855957C411, index, _r, _s)
end
Global.N_0x662635855957c411 = Global.GetCommerceItemId

function Global.GetCommerceItemName(index)
	return _in(0xB4271092CA7EDF48, index, _r, _s)
end
Global.N_0xb4271092ca7edf48 = Global.GetCommerceItemName

function Global.GetCommerceItemNumCats(index)
	return _in(0x2A7776C709904AB0, index, _r, _ri)
end
Global.N_0x2a7776c709904ab0 = Global.GetCommerceItemNumCats

function Global.GetCommerceProductPrice(index)
	return _in(0xCA94551B50B4932C, index, _r, _ri)
end
Global.N_0xca94551b50b4932c = Global.GetCommerceProductPrice

--- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetControlGroupInstructionalButton(inputGroup, control, p2)
	return _in(0x80C2FD58D720C801, inputGroup, control, p2, _r, _s)
end
Global.N_0x80c2fd58d720c801 = Global.GetControlGroupInstructionalButton

--- formerly called _GET_CONTROL_ACTION_NAME incorrectly
-- p2 appears to always be true.
-- p2 is unused variable in function.
-- EG:
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/
-- gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
-- ```
-- ```
-- NativeDB Parameter 2: BOOL p2
function Global.GetControlInstructionalButton(inputGroup, control, p2)
	return _in(0x0499D7B09FC9B407, inputGroup, control, p2, _r, _s)
end
Global.N_0x0499d7b09fc9b407 = Global.GetControlInstructionalButton

--- Returns the value of CONTROLS::GET_CONTROL_VALUE Normalized (ie a real number value between -1 and 1)
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetControlNormal(inputGroup, control)
	return _in(0xEC3C9B8D5327B563, inputGroup, control, _r, _rf)
end

--- Seems to return values between -1 and 1 for controls like gas and steering.
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetControlUnboundNormal(inputGroup, control)
	return _in(0x5B84D09CEC5209C5, inputGroup, control, _r, _rf)
end
Global.N_0x5b84d09cec5209c5 = Global.GetControlUnboundNormal

--- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetControlValue(inputGroup, control)
	return _in(0xD95E79E8686D2C27, inputGroup, control, _r, _ri)
end

function Global.GetConvar(varName, default_)
	return _in(0x6ccd2564, _ts(varName), _ts(default_), _r, _s)
end

function Global.GetConvarInt(varName, default_)
	return _in(0x935c0ab2, _ts(varName), default_, _r, _ri)
end

--- 0 -> up
-- 1 -> lowering down
-- 2 -> down
-- 3 -> raising up
-- enum RoofState
-- {
-- ROOFSTATE_UP = 0;
-- ROOFSTATE_LOWERING,
-- ROOFSTATE_DOWN,
-- ROOFSTATE_RAISING
-- };
function Global.GetConvertibleRoofState(vehicle)
	return _in(0xF8C397922FC03F41, vehicle, _r, _ri)
end

function Global.GetCoordsAndRotationOfClosestObjectOfType(x, y, z, radius, modelHash, rotationOrder)
	return _in(0x163F8B586BC95F2A, x, y, z, radius, _ch(modelHash), _v, _v, rotationOrder, _r, _ri)
end
Global.N_0x163f8b586bc95f2a = Global.GetCoordsAndRotationOfClosestObjectOfType

--- if (UI::_2309595AD6145265() == ${fe_menu_version_empty_no_background})
-- Seems to get the current frontend menu
function Global.GetCurrentFrontendMenuVersion()
	return _in(0x2309595AD6145265, _r, _ri)
end
Global.N_0x2309595ad6145265 = Global.GetCurrentFrontendMenuVersion
Global.GetCurrentFrontendMenu = Global.GetCurrentFrontendMenuVersion

--- american = 0
-- french = 1
-- german = 2
-- italian =3
-- spanish = 4
-- portuguese = 5
-- polish = 6
-- russian = 7
-- korean = 8
-- chinesetraditional = 9
-- japanese = 10
-- mexican = 11
-- chinesesimplified = 12
function Global.GetCurrentLanguage()
	return _in(0x2BDD44CC428A7EAE, _r, _ri)
end
Global.GetUiLanguageId = Global.GetCurrentLanguage
Global.GetCurrentLanguageId = Global.GetCurrentLanguage

--- GET_CURRENT_*
function Global.GetCurrentNumberOfPhotos()
	return _in(0x473151EBC762C6DA, _r, _ri)
end
Global.N_0x473151ebc762c6da = Global.GetCurrentNumberOfPhotos
Global.GetNumberOfPhotos = Global.GetCurrentNumberOfPhotos

--- Example in VB
-- Public Shared Function GetVehicleCurrentWeapon(Ped As Ped) As Integer
-- Dim arg As New OutputArgument()
-- Native.Function.Call(Hash.GET_CURRENT_PED_VEHICLE_WEAPON, Ped, arg)
-- Return arg.GetResult(Of Integer)()
-- End Function
-- Usage:
-- If GetVehicleCurrentWeapon(Game.Player.Character) = -821520672 Then ...Do something
-- Note: -821520672 = VEHICLE_WEAPON_PLANE_ROCKET
function Global.GetCurrentPedVehicleWeapon(ped, weaponHash)
	return _in(0x1017582BCD3832DC, ped, _ii(weaponHash) --[[ may be optional ]], _r)
end

--- The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
-- p2 seems to be 1 most of the time.
-- p2 is not implemented
-- disassembly said that?
-- ------
-- yes on disassembly p2 it seems not implemented i just have:
-- bool __fastcall sub_7FF6C56CE684(__int64 a1, _DWORD *a2)
-- Found At: 7ff6c56ce684
function Global.GetCurrentPedWeapon(ped, p2)
	return _in(0x3A87E44BB9A01D54, ped, _i, p2, _r)
end

function Global.GetCurrentPedWeaponEntityIndex(ped)
	return _in(0x3B390A939AF0B5FC, ped, _r, _ri)
end

function Global.GetCurrentPlaybackForVehicle(vehicle)
	return _in(0x42BC05C27A946054, vehicle, _r, _ri)
end

--- Returns the name of the currently executing resource.
-- @return The name of the resource.
function Global.GetCurrentResourceName()
	return _in(0xe5e9ebbb, _r, _s)
end

function Global.GetCurrentScriptedConversationLine()
	return _in(0x480357EE890C295A, _r, _ri)
end

--- Returns the peer address of the remote game server that the user is currently connected to.
-- @return The peer address of the game server (e.g. `127.0.0.1:30120`), or NULL if not available.
function Global.GetCurrentServerEndpoint()
	return _in(0xea11bfba, _r, _s)
end

--- native only found once in appinternet.c4
-- same thing as this but does not need websiteID
-- Any _0xE3B05614DCE1D014(Any p0) // 0xE3B05614DCE1D014 0xD217EE7E
-- returns current websitePageID
function Global.GetCurrentWebpageId()
	return _in(0x01A358D9128B7A86, _r, _ri)
end
Global.N_0x01a358d9128b7a86 = Global.GetCurrentWebpageId
Global.GetActiveWebsiteId = Global.GetCurrentWebpageId

function Global.GetCurrentWebsiteId()
	return _in(0x97D47996FC48CBAD, _r, _ri)
end

--- Jenkins hash probably is 0xFD8B1AC2
function Global.GetCutFileNumSections(cutsceneName)
	return _in(0x0ABC54DE641DC0FC, _ts(cutsceneName), _r, _ri)
end
Global.N_0x0abc54de641dc0fc = Global.GetCutFileNumSections

function Global.GetCutsceneSectionPlaying()
	return _in(0x49010A6A396553D8, _r, _ri)
end

function Global.GetCutsceneTime()
	return _in(0xE625BEABBAFFDAB9, _r, _ri)
end

function Global.GetCutsceneTotalDuration()
	return _in(0xEE53B14A19E480D4, _r, _ri)
end

--- Takes the specified time and writes it to the structure specified in the second argument.
-- struct date_time
-- {
-- alignas(8) int year;
-- alignas(8) int month;
-- alignas(8) int day;
-- alignas(8) int hour;
-- alignas(8) int minute;
-- alignas(8) int second;
-- };
function Global.GetDateAndTimeFromUnixEpoch(unixEpoch, timeStructure)
	return _in(0xAC97AF97FA68E5D5, unixEpoch, _ii(timeStructure) --[[ may be optional ]])
end

function Global.GetDeadPedPickupCoords(ped, p1, p2)
	return _in(0xCD5003B097200F36, ped, p1, p2, _r, _rv)
end

function Global.GetDecalWashLevel(decal)
	return _in(0x323F647679A09103, decal, _r, _rf)
end

--- Gets the aggressiveness factor of the ocean waves.
function Global.GetDeepOceanScaler()
	return _in(0x2B2A2CC86778B619, _r, _rf)
end
Global.N_0x2b2a2cc86778b619 = Global.GetDeepOceanScaler
Global.GetWavesIntensity = Global.GetDeepOceanScaler
Global.GetCurrentIntensity = Global.GetDeepOceanScaler

--- This function is hard-coded to always return 1.
function Global.GetDefaultScriptRendertargetRenderId()
	return _in(0x52F0982D7FD156B6, _r, _ri)
end

--- control - c# works with (int)GTA.Control.CursorY / (int)GTA.Control.CursorX and returns the mouse movement (additive).
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetDisabledControlNormal(inputGroup, control)
	return _in(0x11E65974A982637C, inputGroup, control, _r, _rf)
end

--- The "disabled" variant of _0x5B84D09CEC5209C5.
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.GetDisabledControlUnboundNormal(inputGroup, control)
	return _in(0x4F8A26A890FD62FB, inputGroup, control, _r, _rf)
end
Global.N_0x4f8a26a890fd62fb = Global.GetDisabledControlUnboundNormal

--- Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
-- Using UI::_GET_LABEL_TEXT, you can get the localized name.
-- For a full list, see here: pastebin.com/wvpyS4kS (pastebin.com/dA3TbkZw)
function Global.GetDisplayNameFromVehicleModel(modelHash)
	return _in(0xB215AAC32D25D019, _ch(modelHash), _r, _s)
end

--- Returns the distance between two three-dimensional points, optionally ignoring the Z values.
-- You'll most likely want to use your language's native vector functionality instead.
-- @param x1 The X coordinate of the first point.
-- @param y1 The Y coordinate of the first point.
-- @param z1 The Z coordinate of the first point.
-- @param x2 The X coordinate of the second point.
-- @param y2 The Y coordinate of the second point.
-- @param z2 The Z coordinate of the second point.
-- @param useZ Whether or not to use the Z coordinate.
-- @return The distance between the passed points in units.
function Global.GetDistanceBetweenCoords(x1, y1, z1, x2, y2, z2, useZ)
	return _in(0xF1B760881820C952, x1, y1, z1, x2, y2, z2, useZ, _r, _rf)
end

--- dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.
-- outData is a struct of 3 8-byte items.
-- The Second item in the struct *(Hash *)(outData + 1) is the vehicle hash.
function Global.GetDlcVehicleData(dlcVehicleIndex, outData)
	return _in(0x33468EDC08E371F6, dlcVehicleIndex, _ii(outData) --[[ may be optional ]], _r)
end

function Global.GetDlcVehicleFlags(dlcVehicleIndex)
	return _in(0x5549EE11FA22FCF2, dlcVehicleIndex, _r, _ri)
end

--- Use _GET_VEHICLE_MOD_DATA for modData
-- Appears to be a GET_DLC_VEHICLE_MOD_* native.
-- ```
-- ```
-- NativeDB Parameter 0: Hash hash
-- NativeDB Return Type: Hash
function Global.GetDlcVehicleModLockHash(hash)
	return _in(0xC098810437312FFF, hash, _r, _ri)
end
Global.N_0xc098810437312fff = Global.GetDlcVehicleModLockHash

--- dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()
function Global.GetDlcVehicleModel(dlcVehicleIndex)
	return _in(0xECC01B7C5763333C, dlcVehicleIndex, _r, _ri)
end

--- p0 seems to be the weapon index
-- p1 seems to be the weapon component index
-- struct DlcComponentData{
-- int attachBone;
-- int padding1;
-- int bActiveByDefault;
-- int padding2;
-- int unk;
-- int padding3;
-- int componentHash;
-- int padding4;
-- int unk2;
-- int padding5;
-- int componentCost;
-- int padding6;
-- char nameLabel[64];
-- char descLabel[64];
-- };
-- ```
-- ```
-- NativeDB Parameter 2: int* ComponentDataPtr
function Global.GetDlcWeaponComponentData(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
	return _in(0x6CF598A2957C2BF8, dlcWeaponIndex, dlcWeapCompIndex, _ii(ComponentDataPtr) --[[ may be optional ]], _r)
end

--- dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
-- struct DlcWeaponData
-- {
-- int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this
-- int padding1;
-- int weaponHash;
-- int padding2;
-- int unk;
-- int padding3;
-- int weaponCost;
-- int padding4;
-- int ammoCost;
-- int padding5;
-- int ammoType;
-- int padding6;
-- int defaultClipSize;
-- int padding7;
-- char nameLabel[64];
-- char descLabel[64];
-- char desc2Label[64]; // usually "the" + name
-- char upperCaseNameLabel[64];
-- };
function Global.GetDlcWeaponData(dlcWeaponIndex, outData)
	return _in(0x79923CD21BECE14E, dlcWeaponIndex, _ii(outData) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1604
-- @param vehicle :
function Global.GetDoesVehicleHaveTombstone(vehicle)
	return _in(0x71AFB258CCED3A27, vehicle, _r)
end

--- Returns the NUI window handle for a specified DUI browser object.
-- @param duiObject The DUI browser handle.
-- @return The NUI window handle, for use in e.g. CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
function Global.GetDuiHandle(duiObject)
	return _in(0x1655d41d, duiObject, _r, _s)
end

function Global.GetEntityAlpha(entity)
	return _in(0x5A47B3B5E63E94C6, entity, _r, _ri)
end

--- ```
-- Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
-- Example:
-- 0.000000 - mark the starting of animation.
-- 0.500000 - mark the midpoint of the animation.
-- 1.000000 - mark the end of animation.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetEntityAnimCurrentTime(entity, animDict, animName)
	return _in(0x346D81500D088F42, entity, _ts(animDict), _ts(animName), _r, _rf)
end

--- ```
-- Returns a float value representing animation's total playtime in milliseconds.
-- Example:
-- GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
-- return 20800.000000
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.GetEntityAnimTotalTime(entity, animDict, animName)
	return _in(0x50BD2730B191E360, entity, _ts(animDict), _ts(animName), _r, _rf)
end

function Global.GetEntityAttachedTo(entity)
	return _in(0x48C2BED9180FE123, entity, _r, _ri)
end

function Global.GetEntityAttachedToCargobob(vehicle)
	return _in(0x99093F60746708CA, vehicle, _r, _ri)
end
Global.N_0x99093f60746708ca = Global.GetEntityAttachedToCargobob

function Global.GetEntityAttachedToTowTruck(towTruck)
	return _in(0xEFEA18DCF10F8F75, towTruck, _r, _ri)
end

--- Returns the index of the bone. If the bone was not found, -1 will be returned.
-- list:
-- pastebin.com/D7JMnX1g
-- BoneNames:
-- chassis,
-- windscreen,
-- seat_pside_r,
-- seat_dside_r,
-- bodyshell,
-- suspension_lm,
-- suspension_lr,
-- platelight,
-- attach_female,
-- attach_male,
-- bonnet,
-- boot,
-- chassis_dummy,	//Center of the dummy
-- chassis_Control,	//Not found yet
-- door_dside_f,	//Door left, front
-- door_dside_r,	//Door left, back
-- door_pside_f,	//Door right, front
-- door_pside_r,	//Door right, back
-- Gun_GripR,
-- windscreen_f,
-- platelight,	//Position where the light above the numberplate is located
-- VFX_Emitter,
-- window_lf,	//Window left, front
-- window_lr,	//Window left, back
-- window_rf,	//Window right, front
-- window_rr,	//Window right, back
-- engine,	//Position of the engine
-- gun_ammo,
-- ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".
-- wheel_lf,	//Wheel left, front
-- wheel_lr,	//Wheel left, back
-- wheel_rf,	//Wheel right, front
-- wheel_rr,	//Wheel right, back
-- exhaust,	//Exhaust. shows only the position of the stock-exhaust
-- overheat,	//A position on the engine(not exactly sure, how to name it)
-- misc_e,	//Not a car-bone.
-- seat_dside_f,	//Driver-seat
-- seat_pside_f,	//Seat next to driver
-- Gun_Nuzzle,
-- seat_r
-- I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
function Global.GetEntityBoneIndexByName(entity, boneName)
	return _in(0xFB71170B7E76ACBA, entity, _ts(boneName), _r, _ri)
end

function Global.GetEntityCanBeDamaged(entity)
	return _in(0xD95CC5D2AB15A09F, entity, _r)
end
Global.N_0xd95cc5d2ab15a09f = Global.GetEntityCanBeDamaged

function Global.GetEntityCollisionDisabled(entity)
	return _in(0xCCF1E97BEFDAE480, entity, _r)
end
Global.N_0xccf1e97befdae480 = Global.GetEntityCollisionDisabled
Global.GetEntityCollisonDisabled = Global.GetEntityCollisionDisabled

--- Gets the current coordinates for a specified entity.
-- @param entity The entity to get the coordinates from.
-- @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @return The current entity coordinates.
function Global.GetEntityCoords(entity, alive)
	return _in(0x3FEF770D40960D5A, entity, alive, _r, _rv)
end

--- Gets the entity's forward vector.
-- @param entity The entity to get the forward vector for.
-- @return The forward vector.
function Global.GetEntityForwardVector(entity)
	return _in(0x0A794A5A57F8DF91, entity, _r, _rv)
end

--- Gets the X-component of the entity's forward vector.
function Global.GetEntityForwardX(entity)
	return _in(0x8BB4EF4214E0E6D5, entity, _r, _rf)
end

--- Gets the Y-component of the entity's forward vector.
function Global.GetEntityForwardY(entity)
	return _in(0x866A4A5FAE349510, entity, _r, _rf)
end

--- Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
-- @param entity The entity to get the heading from.
-- @return The current entity heading.
function Global.GetEntityHeading(entity)
	return _in(0xE83D4F9BA2A38914, entity, _r, _rf)
end

--- Returns an integer value of entity's current health.
-- Example of range for ped:
-- - Player [0 to 200]
-- - Ped [100 to 200]
-- - Vehicle [0 to 1000]
-- - Object [0 to 1000]
-- Health is actually a float value but this native casts it to int.
-- In order to get the actual value, do:
-- float health = *(float *)(entityAddress + 0x280);
-- @param entity The entity to get the health from.
-- @return The current entity health.
function Global.GetEntityHealth(entity)
	return _in(0xEEF059FAD016D209, entity, _r, _ri)
end

function Global.GetEntityHeight(entity, X, Y, Z, atTop, inWorldCoords)
	return _in(0x5A504562485944DD, entity, X, Y, Z, atTop, inWorldCoords, _r, _rf)
end

--- Return height (z-dimension) above ground.
-- Example: The pilot in a titan plane is 1.844176 above ground.
-- How can i convert it to meters?
-- Everything seems to be in meters, probably this too.
function Global.GetEntityHeightAboveGround(entity)
	return _in(0x1DD55701034110E5, entity, _r, _rf)
end

function Global.GetEntityIndexOfCutsceneEntity(cutsceneEntName, modelHash)
	return _in(0x0A2E9FDB9A8C62F6, _ts(cutsceneEntName), _ch(modelHash), _r, _ri)
end

function Global.GetEntityIndexOfRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0xC0741A26499654CD, _ts(cutsceneEntName), _ch(modelHash), _r, _ri)
end

--- Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius. It could return a ped or an entity, but the scripts expect a ped, but still check if it's a ped.
function Global.GetEntityInsideExplosionArea(explosionType, x1, y1, z1, x2, y2, z2, radius)
	return _in(0x14BA4BA137AF6CEC, explosionType, x1, y1, z1, x2, y2, z2, radius, _r, _ri)
end
Global.GetPedInsideExplosionArea = Global.GetEntityInsideExplosionArea

--- NativeDB Introduced: v1290
-- @param explosionType :
-- @param x :
-- @param y :
-- @param z :
-- @param radius :
function Global.GetEntityInsideExplosionSphere(explosionType, x, y, z, radius)
	return _in(0xB3CD51E3DB86F176, explosionType, x, y, z, radius, _r, _ri)
end

--- Returns the LOD distance of an entity.
function Global.GetEntityLodDist(entity)
	return _in(0x4159C2762B5791D6, entity, _r, _ri)
end

function Global.GetEntityMatrix(entity)
	return _in(0xECB2FC7235A7D137, entity, _v, _v, _v, _v)
end

--- Return an integer value of entity's maximum health.
-- Example:
-- - Player = 200
function Global.GetEntityMaxHealth(entity)
	return _in(0x15D757606D170C3C, entity, _r, _ri)
end

--- Returns the model hash from the entity
-- Sometimes throws an exception, idk what causes it though.
-- @param entity The entity to get the model for.
-- @return The model hash from the entity.
function Global.GetEntityModel(entity)
	return _in(0x9F47B058362C84B5, entity, _r, _ri)
end

--- Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
-- NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
function Global.GetEntityPhysicsHeading(entity)
	return _in(0x846BF6291198A71E, entity, _r, _rf)
end
Global.N_0x846bf6291198a71e = Global.GetEntityPhysicsHeading

--- GET_ENTITY_*
-- Seems to return the handle of the entity's portable pickup.
-- NativeDB Introduced: v1180
-- @param entity :
-- @param modelHash :
function Global.GetEntityPickup(entity, modelHash)
	return _in(0x1F922734E259BD26, entity, _ch(modelHash), _r, _ri)
end

function Global.GetEntityPitch(entity)
	return _in(0xD45DC2893621E1FE, entity, _r, _rf)
end

--- Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
-- Returns false if no entity found.
function Global.GetEntityPlayerIsFreeAimingAt(player, entity)
	return _in(0x2975C866E6713290, player, _ii(entity) --[[ may be optional ]], _r)
end

--- Gets an entity's population type.
-- **Valid population types:**
-- ```cpp
-- enum ePopulationType
-- {
-- POPTYPE_UNKNOWN = 0,
-- POPTYPE_RANDOM_PERMANENT,
-- POPTYPE_RANDOM_PARKED,
-- POPTYPE_RANDOM_PATROL,
-- POPTYPE_RANDOM_SCENARIO,
-- POPTYPE_RANDOM_AMBIENT,
-- POPTYPE_PERMANENT,
-- POPTYPE_MISSION,
-- POPTYPE_REPLAY,
-- POPTYPE_CACHE,
-- POPTYPE_TOOL
-- };
-- ```
-- @param entity The entity to obtain the population type from.
-- @return A population type, from the enumeration above.
function Global.GetEntityPopulationType(entity)
	return _in(0xF6F5161F4534EDFF, entity, _r, _ri)
end

--- NativeDB Introduced: v1604
-- @param entity :
-- @param bulletProof :
-- @param fireProof :
-- @param explosionProof :
-- @param collisionProof :
-- @param meleeProof :
-- @param p6 :
-- @param p7 :
-- @param drownProof :
function Global.GetEntityProofs(entity)
	return _in(0xBE8CD9BE829BBEBF, entity, _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- w is the correct parameter name!
function Global.GetEntityQuaternion(entity)
	return _in(0x7B3703D2D32DFA18, entity, _f, _f, _f, _f)
end

--- Displays the current ROLL axis of the entity [-180.0000/180.0000+]
-- (Sideways Roll) such as a vehicle tipped on its side
function Global.GetEntityRoll(entity)
	return _in(0x831E0242595560DF, entity, _r, _rf)
end

--- rotationOrder refers to the order yaw pitch roll is applied
-- value ranges from 0 to 5. What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
-- Unsure what value corresponds to what rotation order, more testing will be needed for that.
-- ------
-- rotationOrder is usually 2 in scripts
-- ------
-- ENTITY::GET_ENTITY_ROTATION(Any p0, false or true);
-- if false than return from -180 to 180
-- if true than return from -90 to 90
-- ---
-- As said above, the value of p1 affects the outcome. R* uses 1 and 2 instead of 0 and 1, so I marked it as an int.
-- What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll:
-- www.allstar.fiu.edu/aero/images/pic5-1.gif
-- I don't know why it returns a Vec3, but sometimes the values x and y go negative, yet they're always zero. Just use GET_ENTITY_PITCH and GET_ENTITY_ROLL for pitch and roll.
-- @param entity The entity to get the rotation for.
-- @param rotationOrder The order yaw, pitch and roll is applied. Usually 2.
-- @return A vector where the Z coordinate is the yaw.
function Global.GetEntityRotation(entity, rotationOrder)
	return _in(0xAFBD61CC738D9EB9, entity, rotationOrder, _r, _rv)
end

function Global.GetEntityRotationVelocity(entity)
	return _in(0x213B91045D09B983, entity, _r, _rv)
end

--- All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.
function Global.GetEntityScript(entity, script)
	return _in(0xA6E9C38DB51D7748, entity, _ii(script) --[[ may be optional ]], _r, _s)
end

--- result is in meters per second
-- ------------------------------------------------------------
-- So would the conversion to mph and km/h, be along the lines of this.
-- float speed = GET_ENTITY_SPEED(veh);
-- float kmh = (speed * 3.6);
-- float mph = (speed * 2.236936);
function Global.GetEntitySpeed(entity)
	return _in(0xD5037BA82E12416F, entity, _r, _rf)
end

--- Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
function Global.GetEntitySpeedVector(entity, relative)
	return _in(0x9A8D700A51CB7B0D, entity, relative, _r, _rv)
end

--- Get how much of the entity is submerged.  1.0f is whole entity.
function Global.GetEntitySubmergedLevel(entity)
	return _in(0xE81AFC1BC4CC41CE, entity, _r, _rf)
end

--- Returns:
-- 0 = no entity
-- 1 = ped
-- 2 = vehicle
-- 3 = object
-- This is weird, because in memory atleast on xbox360 it stores it from testing with a variety of (ped, vehicle, and objects).
-- 03
-- 04
-- 05
-- The above is more then likely true for the native's return, but if you were to skip using the native it's a bit weird it returns different results.
function Global.GetEntityType(entity)
	return _in(0x8ACD366038D14505, entity, _r, _ri)
end

function Global.GetEntityUprightValue(entity)
	return _in(0x95EED5A694951F9F, entity, _r, _rf)
end

--- the unit is m/s along each axis
-- GET_ENTITY_VELOCITY(aEntity) is the same as GET_ENTITY_SPEED_VECTOR(aEntity,false)
function Global.GetEntityVelocity(entity)
	return _in(0x4805D2B1D8CF94A9, entity, _r, _rv)
end

function Global.GetEntryPositionOfDoor(vehicle, doorIndex)
	return _in(0xC0572928C0ABFDA3, vehicle, doorIndex, _r, _rv)
end

--- eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork
function Global.GetEventAtIndex(eventGroup, eventIndex)
	return _in(0xD8F66A3A60C62153, eventGroup, eventIndex, _r, _ri)
end

--- eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork
function Global.GetEventData(eventGroup, eventIndex, argStructSize)
	return _in(0x2902843FCD2B2D79, eventGroup, eventIndex, _i, argStructSize, _r)
end

--- eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork
function Global.GetEventExists(eventGroup, eventIndex)
	return _in(0x936E6168A9BCEDB5, eventGroup, eventIndex, _r)
end

function Global.GetExtraContentPackHasBeenInstalled()
	return _in(0x8D30F648014A92B5, _r)
end
Global.N_0x8d30f648014a92b5 = Global.GetExtraContentPackHasBeenInstalled

--- See [`GetTimecycleModifierIndex`](#_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
-- @return An integer representing the Timecycle modifier
function Global.GetExtraTimecycleModifierIndex()
	return _in(0xBB0527EC6341496D, _r, _ri)
end
Global.N_0xbb0527ec6341496d = Global.GetExtraTimecycleModifierIndex

function Global.GetFakeWantedLevel()
	return _in(0x4C9296CBCD1B971E, _r, _ri)
end
Global.N_0x4c9296cbcd1b971e = Global.GetFakeWantedLevel

function Global.GetFinalRenderedCamCoord()
	return _in(0xA200EB1EE790F448, _r, _rv)
end
Global.GetGameplayCamCoords = Global.GetFinalRenderedCamCoord

function Global.GetFinalRenderedCamFarClip()
	return _in(0xDFC8CBC606FDB0FC, _r, _rf)
end
Global.N_0xdfc8cbc606fdb0fc = Global.GetFinalRenderedCamFarClip
Global.GetGameplayCamFarClip = Global.GetFinalRenderedCamFarClip

function Global.GetFinalRenderedCamFarDof()
	return _in(0x9780F32BCAF72431, _r, _rf)
end
Global.N_0x9780f32bcaf72431 = Global.GetFinalRenderedCamFarDof
Global.GetGameplayCamFarDof = Global.GetFinalRenderedCamFarDof

function Global.GetFinalRenderedCamFov()
	return _in(0x80EC114669DAEFF4, _r, _rf)
end
Global.N_0x80ec114669daeff4 = Global.GetFinalRenderedCamFov

function Global.GetFinalRenderedCamMotionBlurStrength()
	return _in(0x162F9D995753DC19, _r, _rf)
end
Global.N_0x162f9d995753dc19 = Global.GetFinalRenderedCamMotionBlurStrength
Global.GetGameplayCamFarClip_2 = Global.GetFinalRenderedCamMotionBlurStrength

function Global.GetFinalRenderedCamNearClip()
	return _in(0xD0082607100D7193, _r, _rf)
end
Global.N_0xd0082607100d7193 = Global.GetFinalRenderedCamNearClip
Global.GetGameplayCamNearClip = Global.GetFinalRenderedCamNearClip

function Global.GetFinalRenderedCamNearDof()
	return _in(0xA03502FC581F7D9B, _r, _rf)
end
Global.N_0xa03502fc581f7d9b = Global.GetFinalRenderedCamNearDof
Global.GetGameplayCamNearDof = Global.GetFinalRenderedCamNearDof

function Global.GetFinalRenderedCamRot(rotationOrder)
	return _in(0x5B4E4C817FCC2DFB, rotationOrder, _r, _rv)
end
Global.GetGameplayCamRot_2 = Global.GetFinalRenderedCamRot

function Global.GetFinalRenderedInWhenFriendlyFov(player)
	return _in(0x5F35F6732C3FBBA0, player, _r, _rf)
end
Global.N_0x5f35f6732c3fbba0 = Global.GetFinalRenderedInWhenFriendlyFov

function Global.GetFinalRenderedInWhenFriendlyRot(player, rotationOrder)
	return _in(0x26903D9CD1175F2C, player, rotationOrder, _r, _rv)
end
Global.N_0x26903d9cd1175f2c = Global.GetFinalRenderedInWhenFriendlyRot

--- 8 = waypoint
function Global.GetFirstBlipInfoId(blipSprite)
	return _in(0x1BEDE233E6CD2A1F, blipSprite, _r, _ri)
end

function Global.GetFirstPersonAimCamZoomFactor()
	return _in(0x7EC52CC40597D170, _r, _rf)
end
Global.GetGameplayCamZoom = Global.GetFirstPersonAimCamZoomFactor

function Global.GetFocusPedOnScreen(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x89215EC747DF244A, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r, _ri)
end
Global.N_0x89215ec747df244a = Global.GetFocusPedOnScreen

--- Returns
-- 0 - Third Person Close
-- 1 - Third Person Mid
-- 2 - Third Person Far
-- 4 - First Person
function Global.GetFollowPedCamViewMode()
	return _in(0x8D4D46230B2C353A, _r, _ri)
end

function Global.GetFollowPedCamZoomLevel()
	return _in(0x33E6C8EFD0CD93E9, _r, _ri)
end

--- Returns the type of camera:
-- 0 - Third Person Close
-- 1 - Third Person Mid
-- 2 - Third Person Far
-- 4 - First Person
function Global.GetFollowVehicleCamViewMode()
	return _in(0xA4FF579AC0E3AAAE, _r, _ri)
end

function Global.GetFollowVehicleCamZoomLevel()
	return _in(0xEE82280AB767B690, _r, _ri)
end

--- NativeDB Parameter 2: Hash* nameHash
-- NativeDB Parameter 3: int* enumValue
-- NativeDB Parameter 4: int* componentType
function Global.GetForcedComponent(componentHash, componentId)
	return _in(0x6C93ED8C2F74859B, _ch(componentHash), componentId, _i, _i, _i)
end

function Global.GetForcedProp(p0, p1)
	return _in(0xE1CA84EBF72E691D, p0, p1, _i, _i, _i)
end
Global.N_0xe1ca84ebf72e691d = Global.GetForcedProp

function Global.GetFrameCount()
	return _in(0xFC8202EFC642E6F2, _r, _ri)
end

function Global.GetFrameTime()
	return _in(0x15C40837039FFAF7, _r, _rf)
end

function Global.GetGameTimer()
	return _in(0x9CD27B0045628463, _r, _ri)
end

function Global.GetGameplayCamCoord()
	return _in(0x14D6F5678D8F1B37, _r, _rv)
end

function Global.GetGameplayCamFov()
	return _in(0x65019750A0324133, _r, _rf)
end

function Global.GetGameplayCamRelativeHeading()
	return _in(0x743607648ADD4587, _r, _rf)
end

function Global.GetGameplayCamRelativePitch()
	return _in(0x3A6867B4845BEDA2, _r, _rf)
end

--- p0 dosen't seem to change much, I tried it with 0, 1, 2:
-- 0-Pitch(X): -70.000092
-- 0-Roll(Y): -0.000001
-- 0-Yaw(Z): -43.886459
-- 1-Pitch(X): -70.000092
-- 1-Roll(Y): -0.000001
-- 1-Yaw(Z): -43.886463
-- 2-Pitch(X): -70.000092
-- 2-Roll(Y): -0.000002
-- 2-Yaw(Z): -43.886467
function Global.GetGameplayCamRot(rotationOrder)
	return _in(0x837765A25378F0BB, rotationOrder, _r, _rv)
end

--- it returns a reference to an empty string, the same empty string that's used by 1687 internal gta functions.   if it was used in a script (and i cannot find an instance of it being used), it would be as the source for a StringCopy or somesuch.
function Global.GetGlobalCharBuffer()
	return _in(0x24DA7D7667FD7B09, _r, _s)
end
Global.N_0x24da7d7667fd7b09 = Global.GetGlobalCharBuffer

function Global.GetGpsBlipRouteFound()
	return _in(0x869DAACBBE9FA006, _r)
end
Global.N_0x869daacbbe9fa006 = Global.GetGpsBlipRouteFound

function Global.GetGpsBlipRouteLength()
	return _in(0xBBB45C3CF5C8AA85, _r, _ri)
end
Global.N_0xbbb45c3cf5c8aa85 = Global.GetGpsBlipRouteLength

function Global.GetGroundZAndNormalFor_3dCoord(x, y, z)
	return _in(0x8BDC7BFC57A81E76, x, y, z, _f, _v, _r)
end
Global.N_0x8bdc7bfc57a81e76 = Global.GetGroundZAndNormalFor_3dCoord
Global.GetGroundZCoordWithOffsets = Global.GetGroundZAndNormalFor_3dCoord

--- Gets the ground elevation at the specified position. Note that if the specified position is below ground level, the function will output zero!
-- x: Position on the X-axis to get ground elevation at.
-- y: Position on the Y-axis to get ground elevation at.
-- z: Position on the Z-axis to get ground elevation at.
-- groundZ: The ground elevation at the specified position.
-- unk: Nearly always 0, very rarely 1 in the scripts.
-- ```
-- ```
-- NativeDB Added Parameter 6: BOOL p5
function Global.GetGroundZFor_3dCoord(x, y, z, unk)
	return _in(0xC906A7DAB05C8D2B, x, y, z, _f, unk, _r)
end

--- NativeDB Added Parameter 6: BOOL p5
function Global.GetGroundZFor_3dCoord_2(x, y, z, p4)
	return _in(0x9E82F0F362881B29, x, y, z, _f, p4, _r)
end
Global.N_0x9e82f0f362881b29 = Global.GetGroundZFor_3dCoord_2

--- p1 may be a BOOL representing whether or not the group even exists
function Global.GetGroupSize(groupID)
	return _in(0x8DE69FE35CA09A45, groupID, _i, _i)
end

--- Gets the (case-insensitive, lower-cased) hash value for the passed string. This uses the 'Jenkins one-at-a-time' hashing
-- algorithm.
-- @param string The string to hash.
-- @return The hash of `string`.
function Global.GetHashKey(string)
	return _in(0xD24D37CC275948CC, _ts(string), _r, _ri)
end

function Global.GetHashNameForComponent(entity, componentId, drawableVariant, textureVariant)
	return _in(0x0368B3A838070348, entity, componentId, drawableVariant, textureVariant, _r, _ri)
end

function Global.GetHashNameForProp(entity, componentId, propIndex, propTextureIndex)
	return _in(0x5D6160275CAEC8DD, entity, componentId, propIndex, propTextureIndex, _r, _ri)
end

--- Returns a hash representing which part of the map the given coords are located.
-- Possible return values:
-- (Hash of) city -> -289320599
-- (Hash of) countryside -> 2072609373
-- C# Example :
-- Ped player = Game.Player.Character;
-- Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
function Global.GetHashOfMapAreaAtCoords(x, y, z)
	return _in(0x7EE64D51E8498728, x, y, z, _r, _ri)
end

function Global.GetHashOfThisScriptName()
	return _in(0x8A1C8B1738FFE87E, _r, _ri)
end
Global.GetThisScriptHash = Global.GetHashOfThisScriptName

--- dx = x1
-- dy = y1
function Global.GetHeadingFromVector_2d(dx, dy)
	return _in(0x2FFB6B224F4B2926, dx, dy, _r, _rf)
end

--- Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
function Global.GetHeightmapBottomZForArea(x1, y1, x2, y2)
	return _in(0x3599D741C9AC6310, x1, y1, x2, y2, _r, _rf)
end
Global.N_0x3599d741c9ac6310 = Global.GetHeightmapBottomZForArea

--- Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
function Global.GetHeightmapBottomZForPosition(x, y)
	return _in(0x336511A34F2E5185, x, y, _r, _rf)
end
Global.N_0x336511a34f2e5185 = Global.GetHeightmapBottomZForPosition

--- Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
function Global.GetHeightmapTopZForArea(x1, y1, x2, y2)
	return _in(0x8ABE8608576D9CE3, x1, y1, x2, y2, _r, _rf)
end
Global.N_0x8abe8608576d9ce3 = Global.GetHeightmapTopZForArea

--- Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
function Global.GetHeightmapTopZForPosition(x, y)
	return _in(0x29C24BFBED8AB8FB, x, y, _r, _rf)
end
Global.N_0x29c24bfbed8ab8fb = Global.GetHeightmapTopZForPosition

--- Max 1000.
-- At 0 the main rotor will stall.
function Global.GetHeliMainRotorHealth(vehicle)
	return _in(0xE4CB7541F413D2C5, vehicle, _r, _rf)
end
Global.GetHeliMainRotorHealth = Global.GetHeliMainRotorHealth

--- Max 1000.
-- At -100 both helicopter rotors will stall.
function Global.GetHeliTailBoomHealth(vehicle)
	return _in(0xAC51915D27E4A5F7, vehicle, _r, _rf)
end
Global.GetHeliEngineHealth = Global.GetHeliTailBoomHealth

--- Max 1000.
-- At 0 the tail rotor will stall.
function Global.GetHeliTailRotorHealth(vehicle)
	return _in(0xAE8CE82A4219AC8C, vehicle, _r, _rf)
end
Global.GetHeliTailRotorHealth = Global.GetHeliTailRotorHealth

--- HUD colors and their values: pastebin.com/d9aHPbXN
function Global.GetHudColour(hudColorIndex)
	return _in(0x7C9C91AB74A0360F, hudColorIndex, _i, _i, _i, _i)
end

function Global.GetHudComponentPosition(id)
	return _in(0x223CA69A8C4417FD, id, _r, _rv)
end

--- World to relative screen coords
-- this world to screen will keep the text on screen. it will keep it in the screen pos
function Global.GetHudScreenPositionFromWorldPosition(worldX, worldY, worldZ)
	return _in(0xF9904D11F1ACBEC3, worldX, worldY, worldZ, _f, _f, _r)
end
Global.N_0xf9904d11f1acbec3 = Global.GetHudScreenPositionFromWorldPosition
Global.Get_2dCoordFrom_3dCoord = Global.GetHudScreenPositionFromWorldPosition

function Global.GetIdOfThisThread()
	return _in(0xC30338E8088E2E21, _r, _ri)
end

--- x1, y1, z1 -- Coords of your ped model
-- x2, y2, z2 -- Coords of the ped you want to switch to
function Global.GetIdealPlayerSwitchType(x1, y1, z1, x2, y2, z2)
	return _in(0xB5D7B26B45720E05, x1, y1, z1, x2, y2, z2, _r, _ri)
end

function Global.GetIndexOfCurrentLevel()
	return _in(0xCBAD6729F7B1F4FC, _r, _ri)
end

function Global.GetIndexedItemInItemset(p0, p1)
	return _in(0x7A197E2521EE2BAB, p0, p1, _r, _ri)
end

function Global.GetInstanceId()
	return _in(0x9f1c4383, _r, _ri)
end

--- Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
-- Example for VB.NET
-- Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
function Global.GetInteriorAtCoords(x, y, z)
	return _in(0xB0F7F8663821D9C3, x, y, z, _r, _ri)
end

--- Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
-- Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))
-- Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
-- Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
function Global.GetInteriorAtCoordsWithType(x, y, z, interiorType)
	return _in(0x05B7A89BD78797FC, x, y, z, _ts(interiorType), _r, _ri)
end
Global.N_0x05b7a89bd78797fc = Global.GetInteriorAtCoordsWithType

--- Returns the interior ID at the given coords, but only if the unknown variable is set to 0, otherwise it will return 0.
-- ```
-- ```
-- NativeDB Parameter 3: Hash typeHash
function Global.GetInteriorAtCoordsWithTypehash(x, y, z, typeHash)
	return _in(0xF0F77ADB9F67E79D, x, y, z, typeHash, _r, _ri)
end
Global.N_0xf0f77adb9f67e79d = Global.GetInteriorAtCoordsWithTypehash
Global.UnkGetInteriorAtCoords = Global.GetInteriorAtCoordsWithTypehash

function Global.GetInteriorEntitiesExtents(interiorId)
	return _in(0x322b1192, interiorId, _f, _f, _f, _f, _f, _f)
end

function Global.GetInteriorFromCollision(x, y, z)
	return _in(0xEC4CF9FCB29A4424, x, y, z, _r, _ri)
end

--- Returns the handle of the interior that the entity is in. Returns 0 if outside.
function Global.GetInteriorFromEntity(entity)
	return _in(0x2107BA504071A6BB, entity, _r, _ri)
end

--- NativeDB Introduced: v1604
function Global.GetInteriorFromGameplayCam()
	return _in(0xE7D267EC6CA966C3, _r, _ri)
end
Global.N_0xe7d267ec6ca966c3 = Global.GetInteriorFromGameplayCam

--- Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.
function Global.GetInteriorGroupId(interior)
	return _in(0xE4A84ABF135EF91A, interior, _r, _ri)
end

--- GET_INTERIOR_*
-- NativeDB Introduced: v1493
-- @param interior :
function Global.GetInteriorHeading(interior)
	return _in(0xF49B58631D9E22D9, interior, _r, _rf)
end

--- GET_INTERIOR_*
-- NativeDB Introduced: v1290
-- @param interior :
-- @param position :
-- @param nameHash :
function Global.GetInteriorInfo(interior)
	return _in(0x252BDC06B73FA6EA, interior, _v, _i)
end

function Global.GetInteriorPortalCornerPosition(interiorId, portalIndex, cornerIndex)
	return _in(0xf772bb2c, interiorId, portalIndex, cornerIndex, _f, _f, _f)
end

function Global.GetInteriorPortalCount(interiorId)
	return _in(0xd05bb8b1, interiorId, _r, _ri)
end

function Global.GetInteriorPortalFlag(interiorId, portalIndex)
	return _in(0xc74da47c, interiorId, portalIndex, _r, _ri)
end

function Global.GetInteriorPortalRoomFrom(interiorId, portalIndex)
	return _in(0xaa9c141d, interiorId, portalIndex, _r, _ri)
end

function Global.GetInteriorPortalRoomTo(interiorId, portalIndex)
	return _in(0x3f47f0e8, interiorId, portalIndex, _r, _ri)
end

function Global.GetInteriorPosition(interiorId)
	return _in(0x77a435b0, interiorId, _f, _f, _f)
end

function Global.GetInteriorRoomCount(interiorId)
	return _in(0xa2737c2c, interiorId, _r, _ri)
end

function Global.GetInteriorRoomExtents(interiorId, roomIndex)
	return _in(0xf9e795dd, interiorId, roomIndex, _f, _f, _f, _f, _f, _f)
end

function Global.GetInteriorRoomFlag(interiorId, roomIndex)
	return _in(0x6b7af743, interiorId, roomIndex, _r, _ri)
end

function Global.GetInteriorRoomIndexByHash(interiorId, roomHash)
	return _in(0xe0ee05f8, interiorId, roomHash, _r, _ri)
end

function Global.GetInteriorRoomName(interiorId, roomIndex)
	return _in(0x11755df2, interiorId, roomIndex, _r, _s)
end

function Global.GetInteriorRoomTimecycle(interiorId, roomIndex)
	return _in(0x82ba3f88, interiorId, roomIndex, _r, _ri)
end

function Global.GetInteriorRotation(interiorId)
	return _in(0x5a039998, interiorId, _f, _f, _f, _f)
end

--- NativeDB Introduced: v1604
-- @param entity :
-- @param p1 :
function Global.GetIsArenaPropPhysicsDisabled(entity, p1)
	return _in(0x43C677F1E1158005, entity, p1, _r, _ri)
end
Global.N_0x43c677f1e1158005 = Global.GetIsArenaPropPhysicsDisabled

--- Returns true if profile setting 208 is equal to 0.
function Global.GetIsAutoSaveOff()
	return _in(0x6E04F06094C87047, _r)
end
Global.N_0x6e04f06094c87047 = Global.GetIsAutoSaveOff

--- false = Any resolution < 1280x720
-- true = Any resolution >= 1280x720
function Global.GetIsHidef()
	return _in(0x84ED31191CC5D2C9, _r)
end

--- From the driver's perspective, is the left headlight broken.
function Global.GetIsLeftVehicleHeadlightDamaged(vehicle)
	return _in(0x5EF77C9ADD3B11A3, vehicle, _r)
end
Global.IsHeadlightLBroken = Global.GetIsLeftVehicleHeadlightDamaged

function Global.GetIsLoadingScreenActive()
	return _in(0x10D0A8F259E93EC9, _r)
end

--- gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
function Global.GetIsPedGadgetEquipped(ped, gadgetHash)
	return _in(0xF731332072F5156C, ped, _ch(gadgetHash), _r)
end

--- only documented. to be continued...
function Global.GetIsPetrolDecalInRange(xCoord, yCoord, zCoord, radius)
	return _in(0x2F09F7976C512404, xCoord, yCoord, zCoord, radius, _r)
end
Global.N_0x2f09f7976c512404 = Global.GetIsPetrolDecalInRange

--- Although we don't have a jenkins hash for this one, the name is 100% confirmed.
function Global.GetIsPlayerInAnimalForm()
	return _in(0x9689123E3F213AA5, _r)
end
Global.N_0x9689123e3f213aa5 = Global.GetIsPlayerInAnimalForm

function Global.GetIsPreloadedConversationReady()
	return _in(0xE73364DB90778FFA, _r)
end
Global.N_0xe73364db90778ffa = Global.GetIsPreloadedConversationReady

--- Dr. Underscore (1/6/18):
-- Works exactly like IS_PROJECTILE_TYPE_IN_AREA, but it puts the position of the projectile in the vector.
-- p8 is probably ownedByPlayer, but not known for sure. (see IS_PROJECTILE_IN_AREA for info)
-- Unsure of the hash name, could someone confirm this?
function Global.GetIsProjectileTypeInArea(x1, y1, z1, x2, y2, z2, projHash, ownedByPlayer)
	return _in(0x8D7A43EC6A5FEA45, x1, y1, z1, x2, y2, z2, _ch(projHash), _v, ownedByPlayer, _r)
end
Global.N_0x8d7a43ec6a5fea45 = Global.GetIsProjectileTypeInArea

--- From the driver's perspective, is the right headlight broken.
function Global.GetIsRightVehicleHeadlightDamaged(vehicle)
	return _in(0xA7ECB73355EB2F20, vehicle, _r)
end
Global.IsHeadlightRBroken = Global.GetIsRightVehicleHeadlightDamaged

--- NativeDB Introduced: v1290
-- @param vehicle :
function Global.GetIsSubmarineVehicleTransformed(vehicle)
	return _in(0xA77DC70BD689A1E5, vehicle, _r)
end

--- from docks_heistb.c4:
-- AI::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))
-- Known Tasks: pastebin.com/2gFqJ3Px
function Global.GetIsTaskActive(ped, taskIndex)
	return _in(0xB0760331C7AA4155, ped, taskIndex, _r)
end

--- Returns profile setting 225.
function Global.GetIsUsingAlternateDriveby()
	return _in(0x0F70731BACCFBB96, _r)
end
Global.N_0x0f70731baccfbb96 = Global.GetIsUsingAlternateDriveby

--- Returns whether this vehicle is currently disabled by an EMP mine.
-- NativeDB Introduced: v1604
-- @param vehicle :
function Global.GetIsVehicleEmpDisabled(vehicle)
	return _in(0x0506ED94363AD905, vehicle, _r)
end

--- Returns true when in a vehicle, false whilst entering/exiting.
function Global.GetIsVehicleEngineRunning(vehicle)
	return _in(0xAE31E7DF9B5B132E, vehicle, _r)
end
Global.IsVehicleEngineOn = Global.GetIsVehicleEngineRunning

function Global.GetIsVehiclePrimaryColourCustom(vehicle)
	return _in(0xF095C0405307B21B, vehicle, _r)
end

--- Check if Vehicle Secondary is avaliable for customize
function Global.GetIsVehicleSecondaryColourCustom(vehicle)
	return _in(0x910A32E7AAD2656C, vehicle, _r)
end

--- NativeDB Introduced: v1604
-- @param vehicle :
function Global.GetIsVehicleShuntBoostActive(vehicle)
	return _in(0xA2459F72C14E2E8D, vehicle, _r)
end

--- For a full list, see here: pastebin.com/Tp0XpBMN
function Global.GetIsWaypointRecordingLoaded(name)
	return _in(0xCB4E8BE8A0063C5D, _ts(name), _r)
end

function Global.GetIsWheelsLoweredStateActive(vehicle)
	return _in(0x1DA0DA9CB3F0C8BF, vehicle, _r)
end
Global.N_0x1da0da9cb3f0c8bf = Global.GetIsWheelsLoweredStateActive

--- Setting Aspect Ratio Manually in game will return:
-- false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
-- true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
-- Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
function Global.GetIsWidescreen()
	return _in(0x30CF4BDA4FCB1905, _r)
end

function Global.GetItemsetSize(x)
	return _in(0xD9127E83ABF7C631, x, _r, _ri)
end

function Global.GetJackTarget(ped)
	return _in(0x5486A79D9FBD342D, ped, _r, _ri)
end

--- Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
function Global.GetKeyForEntityInRoom(entity)
	return _in(0x399685DB942336BC, entity, _r, _ri)
end

--- Gets a string literal from a label name.
function Global.GetLabelText(labelName)
	return _in(0x7B5280EBA9840C72, _ts(labelName), _r, _s)
end

--- ```
-- Landing gear states:
-- 0: Deployed
-- 1: Closing (Retracting)
-- 3: Opening (Deploying)
-- 4: Retracted
-- ```
-- Landing gear state 2 is never used.
-- @param vehicle The vehicle to check.
-- @return The current state of the vehicles landing gear.
function Global.GetLandingGearState(vehicle)
	return _in(0x9B0F3DCA3DB0F4CD, vehicle, _r, _ri)
end
Global.GetVehicleLandingGear = Global.GetLandingGearState

--- Not exactly sure on this one, but here's a snippet of code:
-- if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
-- v_2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);
-- } else {
-- v_2 = VEHICLE::_B2D06FAEDE65B577();
-- }
function Global.GetLastDrivenVehicle()
	return _in(0xB2D06FAEDE65B577, _r, _ri)
end
Global.N_0xb2d06faede65b577 = Global.GetLastDrivenVehicle

function Global.GetLastMaterialHitByEntity(entity)
	return _in(0x5C3D0A935F535C4C, entity, _r, _ri)
end

function Global.GetLastPedInVehicleSeat(vehicle, seatIndex)
	return _in(0x83F969AA1EE2A664, vehicle, seatIndex, _r, _ri)
end

--- Returns last vehicle that was rammed by the given vehicle using the shunt boost.
-- NativeDB Introduced: v1604
-- @param vehicle :
function Global.GetLastRammedVehicle(vehicle)
	return _in(0x04F2FA6E234162F7, vehicle, _r, _ri)
end

--- Returns the length of the string passed (much like strlen).
function Global.GetLengthOfLiteralString(string)
	return _in(0xF030907CCBB8A9FD, _ts(string), _r, _ri)
end

--- gets the length of a null terminated string, without checking unicode encodings
function Global.GetLengthOfLiteralStringInBytes(string)
	return _in(0x43E4111189E54F0E, _ts(string), _r, _ri)
end
Global.N_0x43e4111189e54f0e = Global.GetLengthOfLiteralStringInBytes
Global.GetLengthOfString = Global.GetLengthOfLiteralStringInBytes

--- Returns the string length of the string from the gxt string .
function Global.GetLengthOfStringWithThisTextLabel(gxt)
	return _in(0x801BD273D3A23F74, _ts(gxt), _r, _ri)
end

--- NativeDB Return Type: int
function Global.GetLevelBlipSprite()
	return _in(0x4A9923385BDB9DAD, _r)
end
Global.N_0x4a9923385bdb9dad = Global.GetLevelBlipSprite

--- Second Param = LiveryIndex
-- example
-- int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);
-- for (int i = 0; i < count; i++)
-- {
-- char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);
-- }
-- this example will work fine to fetch all names
-- for example for Sanchez we get
-- SANC_LV1
-- SANC_LV2
-- SANC_LV3
-- SANC_LV4
-- SANC_LV5
-- Use _GET_LABEL_TEXT, to get the localized livery name.
-- -----------
-- NOTE: You may need to set the vehicle's modKit to 0 by using this function: SET_VEHICLE_MOD_KIT() before getting the name, otherwise this native may return NULL.
-- dev-c.com/nativedb/func/info/1f2aa07f00b3217a
function Global.GetLiveryName(vehicle, liveryIndex)
	return _in(0xB4C7A93837C91A1F, vehicle, liveryIndex, _r, _s)
end

function Global.GetLocalPlayerAimState()
	return _in(0xBB41AFBBBC0A0287, _r, _ri)
end

--- Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.
function Global.GetLocalPlayerAimState_2()
	return _in(0x59B9A7AF4C95133C, _r, _ri)
end
Global.N_0x59b9a7af4c95133c = Global.GetLocalPlayerAimState_2

--- Gets local system time as year, month, day, hour, minute and second.
-- Example usage:
-- int year;
-- int month;
-- int day;
-- int hour;
-- int minute;
-- int second;
-- or use std::tm struct
-- TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);
function Global.GetLocalTime()
	return _in(0x50C7A99057A69748, _i, _i, _i, _i, _i, _i)
end

function Global.GetLockonDistanceOfCurrentPedWeapon(ped)
	return _in(0x840F03E9041E2C9C, ped, _r, _rf)
end
Global.N_0x840f03e9041e2c9c = Global.GetLockonDistanceOfCurrentPedWeapon
Global.GetLockonRangeOfCurrentPedWeapon = Global.GetLockonDistanceOfCurrentPedWeapon

function Global.GetMainPlayerBlipId()
	return _in(0xDCD4EC3F419D02FA, _r, _ri)
end

--- Returns the zoom level data by index from mapzoomdata.meta file.
-- @param index Zoom level index.
-- @param zoomScale fZoomScale value.
-- @param zoomSpeed fZoomSpeed value.
-- @param scrollSpeed fScrollSpeed value.
-- @param tilesX vTiles X.
-- @param tilesY vTiles Y.
-- @return A boolean indicating TRUE if the data was received successfully.
function Global.GetMapZoomDataLevel(index)
	return _in(0x1363a998, index, _f, _f, _f, _f, _f, _r)
end

function Global.GetMaxAmmo(ped, weaponHash, ammo)
	return _in(0xDC16122C7A20C933, ped, _ch(weaponHash), _ii(ammo) --[[ may be optional ]], _r)
end

--- p2 is mostly 1 in the scripts.
function Global.GetMaxAmmoInClip(ped, weaponHash, p2)
	return _in(0xA38DCFFCEA8962FA, ped, _ch(weaponHash), p2, _r, _ri)
end

--- NativeDB Parameter 1: Hash weaponHash
function Global.GetMaxAmmo_2(ped, weaponHash, ammo)
	return _in(0x585847C5E4E11709, ped, weaponHash, _ii(ammo) --[[ may be optional ]], _r)
end
Global.N_0x585847c5e4e11709 = Global.GetMaxAmmo_2

function Global.GetMaxNumNetworkObjects()
	return _in(0xC7BE335216B5EC7C, _r, _ri)
end
Global.N_0xc7be335216b5ec7c = Global.GetMaxNumNetworkObjects

function Global.GetMaxNumNetworkPeds()
	return _in(0x0C1F7D49C39D2289, _r, _ri)
end
Global.N_0x0c1f7d49c39d2289 = Global.GetMaxNumNetworkPeds

function Global.GetMaxNumNetworkPickups()
	return _in(0xA72835064DD63E4C, _r, _ri)
end
Global.N_0xa72835064dd63e4c = Global.GetMaxNumNetworkPickups

function Global.GetMaxNumNetworkVehicles()
	return _in(0x0AFCE529F69B21FF, _r, _ri)
end
Global.N_0x0afce529f69b21ff = Global.GetMaxNumNetworkVehicles

function Global.GetMaxRangeOfCurrentPedWeapon(ped)
	return _in(0x814C9D19DFD69679, ped, _r, _rf)
end

--- Gets the maximum wanted level the player can get.
-- Ranges from 0 to 5.
function Global.GetMaxWantedLevel()
	return _in(0x462E0DB9B137DC5F, _r, _ri)
end

--- This is the "actual" GET_MAXIMUM_NUMBER_OF_PHOTOS native. Always returns 96.
function Global.GetMaximumNumberOfCloudPhotos()
	return _in(0xDC54A7AF8B3A14EF, _r, _ri)
end
Global.N_0xdc54a7af8b3a14ef = Global.GetMaximumNumberOfCloudPhotos
Global.GetMaximumNumberOfPhotos_2 = Global.GetMaximumNumberOfCloudPhotos

--- This function is hard-coded to always return 0.
-- Limit is 96, see _GET_MAXIMUM_NUMBER_OF_PHOTOS_2 (0xDC54A7AF8B3A14EF).
function Global.GetMaximumNumberOfPhotos()
	return _in(0x34D23450F028B0BF, _r, _ri)
end

function Global.GetMeleeTargetForPed(ped)
	return _in(0x18A3E9EE1297FD39, ped, _r, _ri)
end

--- Returns how many real ms are equal to one game minute.
-- A getter for [`SetMillisecondsPerGameMinute`](#_0x36CA2554).
-- @return A number of milliseconds that equals to one game minute.
function Global.GetMillisecondsPerGameMinute()
	return _in(0x2F8B4D1C595B11DB, _r, _ri)
end

function Global.GetMinimapRevealPercentage()
	return _in(0xE0130B41D3CF4574, _r, _rf)
end
Global.N_0xe0130b41d3cf4574 = Global.GetMinimapRevealPercentage

function Global.GetMissionFlag()
	return _in(0xA33CDCCDA663159E, _r)
end

function Global.GetMobilePhonePosition(position)
	return _in(0x584FDFDA48805B86, _v)
end

function Global.GetMobilePhoneRenderId(renderId)
	return _in(0xB4A53E05F68B6FA1, _ii(renderId) --[[ may be optional ]])
end

function Global.GetMobilePhoneRotation(p1)
	return _in(0x1CEFB61F193070AE, _v, p1)
end

--- Returns the name for the type of vehicle mod(Armour, engine etc)
-- -----------
-- for some reason this native seems unreliable: sometimes returns NULL, and when retval != NULL the string can be empty
function Global.GetModSlotName(vehicle, modType)
	return _in(0x51F0FEB9F6AE98C0, vehicle, modType, _r, _s)
end

--- Returns the text label of a mod type for a given vehicle
-- Use _GET_LABEL_TEXT to get the part name in the game's language
function Global.GetModTextLabel(vehicle, modType, modValue)
	return _in(0x8935624F8C5592CC, vehicle, modType, modValue, _r, _s)
end

--- Gets the dimensions of a model.
-- Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
-- Vector3 GetDimensions(Hash model)
-- {
-- Vector3 right, left;
-- GET_MODEL_DIMENSIONS(model, &right, &left);
-- return Vector3::Subtract(left, right);
-- }
-- Example from the scripts: GAMEPLAY::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
function Global.GetModelDimensions(modelHash)
	return _in(0x03E8D3D5F549087A, _ch(modelHash), _v, _v)
end

--- Function just returns 0
-- void __fastcall ped__get_mount(NativeContext *a1)
-- {
-- NativeContext *v1; // rbx@1
-- v1 = a1;
-- GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
-- v1->Returns->Item1= 0;
-- }
function Global.GetMount(ped)
	return _in(0xE7E11B8DCBED1058, ped, _r, _ri)
end

function Global.GetMusicPlaytime()
	return _in(0xE7A0D23DC414507B, _r, _ri)
end

--- The reversed code looks like this (Sasuke78200)
-- //
-- char g_szScriptName[64];
-- char* _0xBE7ACD89(int a_iThreadID)
-- {
-- scrThread* l_pThread;
-- // Get the script thread
-- l_pThread = GetThreadByID(a_iThreadID);
-- if(l_pThread == 0 || l_pThread->m_iThreadState == 2)
-- {
-- strncpy(g_szScriptName, "", 64);
-- }
-- else
-- {
-- strncpy(g_szScriptName, l_pThread->m_szScriptName, 64);
-- }
-- return g_szScriptName;
-- }
function Global.GetNameOfThread(threadId)
	return _in(0x05A42BA9FC8DA96B, threadId, _r, _s)
end
Global.GetThreadName = Global.GetNameOfThread

--- AIRP = Los Santos International Airport
-- ALAMO = Alamo Sea
-- ALTA = Alta
-- ARMYB = Fort Zancudo
-- BANHAMC = Banham Canyon Dr
-- BANNING = Banning
-- BEACH = Vespucci Beach
-- BHAMCA = Banham Canyon
-- BRADP = Braddock Pass
-- BRADT = Braddock Tunnel
-- BURTON = Burton
-- CALAFB = Calafia Bridge
-- CANNY = Raton Canyon
-- CCREAK = Cassidy Creek
-- CHAMH = Chamberlain Hills
-- CHIL = Vinewood Hills
-- CHU = Chumash
-- CMSW = Chiliad Mountain State Wilderness
-- CYPRE = Cypress Flats
-- DAVIS = Davis
-- DELBE = Del Perro Beach
-- DELPE = Del Perro
-- DELSOL = La Puerta
-- DESRT = Grand Senora Desert
-- DOWNT = Downtown
-- DTVINE = Downtown Vinewood
-- EAST_V = East Vinewood
-- EBURO = El Burro Heights
-- ELGORL = El Gordo Lighthouse
-- ELYSIAN = Elysian Island
-- GALFISH = Galilee
-- GOLF = GWC and Golfing Society
-- GRAPES = Grapeseed
-- GREATC = Great Chaparral
-- HARMO = Harmony
-- HAWICK = Hawick
-- HORS = Vinewood Racetrack
-- HUMLAB = Humane Labs and Research
-- JAIL = Bolingbroke Penitentiary
-- KOREAT = Little Seoul
-- LACT = Land Act Reservoir
-- LAGO = Lago Zancudo
-- LDAM = Land Act Dam
-- LEGSQU = Legion Square
-- LMESA = La Mesa
-- LOSPUER = La Puerta
-- MIRR = Mirror Park
-- MORN = Morningwood
-- MOVIE = Richards Majestic
-- MTCHIL = Mount Chiliad
-- MTGORDO = Mount Gordo
-- MTJOSE = Mount Josiah
-- MURRI = Murrieta Heights
-- NCHU = North Chumash
-- NOOSE = N.O.O.S.E
-- OCEANA = Pacific Ocean
-- PALCOV = Paleto Cove
-- PALETO = Paleto Bay
-- PALFOR = Paleto Forest
-- PALHIGH = Palomino Highlands
-- PALMPOW = Palmer-Taylor Power Station
-- PBLUFF = Pacific Bluffs
-- PBOX = Pillbox Hill
-- PROCOB = Procopio Beach
-- RANCHO = Rancho
-- RGLEN = Richman Glen
-- RICHM = Richman
-- ROCKF = Rockford Hills
-- RTRAK = Redwood Lights Track
-- SANAND = San Andreas
-- SANCHIA = San Chianski Mountain Range
-- SANDY = Sandy Shores
-- SKID = Mission Row
-- SLAB = Stab City
-- STAD = Maze Bank Arena
-- STRAW = Strawberry
-- TATAMO = Tataviam Mountains
-- TERMINA = Terminal
-- TEXTI = Textile City
-- TONGVAH = Tongva Hills
-- TONGVAV = Tongva Valley
-- VCANA = Vespucci Canals
-- VESP = Vespucci
-- VINE = Vinewood
-- WINDF = Ron Alternates Wind Farm
-- WVINE = West Vinewood
-- ZANCUDO = Zancudo River
-- ZP_ORT = Port of South Los Santos
-- ZQ_UAR = Davis Quartz
function Global.GetNameOfZone(x, y, z)
	return _in(0xCD90657D4C30E1CA, x, y, z, _r, _s)
end

function Global.GetNamedRendertargetRenderId(name)
	return _in(0x1A6478B61C6BDC3B, _ts(name), _r, _ri)
end

--- Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
-- Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
-- Looks like the native returns an int for the path's state:
-- 1 - ???
-- 2
-- 3 - Finished Generating
function Global.GetNavmeshRouteDistanceRemaining(ped)
	return _in(0xC6F5C0BCDC74D62D, ped, _f, _i --[[ actually bool ]], _r, _ri)
end

--- See GET_NAVMESH_ROUTE_DISTANCE_REMAINING for more details.
function Global.GetNavmeshRouteResult(ped)
	return _in(0x632E831F382A0FA8, ped, _r, _ri)
end

function Global.GetNearestPlayerToEntity(entity)
	return _in(0x7196842CB375CDB3, entity, _r, _ri)
end

function Global.GetNearestPlayerToEntityOnTeam(entity, team)
	return _in(0x4DC9A62F844D9337, entity, team, _r, _ri)
end

--- Could this be used alongside either,
-- SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online? It'd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
function Global.GetNetworkIdFromSoundId(soundId)
	return _in(0x2DE3F0A134FFBC0D, soundId, _r, _ri)
end

function Global.GetNetworkTime()
	return _in(0x7A5487FE9FAA6B48, _r, _ri)
end

--- returns the same value as NETWORK::GET_NETWORK_TIME in freemode.
function Global.GetNetworkTimeAccurate()
	return _in(0x89023FBBF9200E9F, _r, _ri)
end
Global.N_0x89023fbbf9200e9f = Global.GetNetworkTimeAccurate

function Global.GetNewSelectedMissionCreatorBlip()
	return _in(0x5C90988E7C8E1AF4, _r, _ri)
end
Global.DisableBlipNameForVar = Global.GetNewSelectedMissionCreatorBlip
Global.N_0x5c90988e7c8e1af4 = Global.GetNewSelectedMissionCreatorBlip

function Global.GetNextBlipInfoId(blipSprite)
	return _in(0x14F96AA50D6FBEA7, blipSprite, _r, _ri)
end

--- Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
-- ```
-- NativeDB Removed Parameter 1: int index
-- ```
-- @return The disabled zone index
function Global.GetNextGpsDisabledZoneIndex(index)
	return _in(0xD3A6A0EF48823A8C, index, _r, _ri)
end
Global.N_0xd3a6a0ef48823a8c = Global.GetNextGpsDisabledZoneIndex

--- Returns weather name hash
function Global.GetNextWeatherTypeHashName()
	return _in(0x711327CD09C8F162, _r, _ri)
end
Global.GetNextWeatherType = Global.GetNextWeatherTypeHashName

--- Needs more research. Gets the stat name of a masked bool?
-- p4 - Usually "_NGPSTAT_BOOL" or "_NGTATPSTAT_BOOL". There may be more that I missed.
function Global.GetNgstatBoolHash(index, spStat, charStat, character, section)
	return _in(0xBA52FF538ED2BC71, index, spStat, charStat, character, _ts(section), _r, _ri)
end
Global.N_0xba52ff538ed2bc71 = Global.GetNgstatBoolHash

--- Needs more research. Gets the stat name of a masked int?
-- p4 - Usually one of the following (there may be more that I missed):
-- -----> "_APAPSTAT_INT"
-- -----> "_LRPSTAT_INT"
-- -----> "_NGPSTAT_INT"
-- -----> "_MP_APAPSTAT_INT"
-- -----> "_MP_LRPSTAT_INT"
function Global.GetNgstatIntHash(index, spStat, charStat, character, section)
	return _in(0x2B4CDCA6F07FF3DA, index, spStat, charStat, character, _ts(section), _r, _ri)
end
Global.N_0x2b4cdca6f07ff3da = Global.GetNgstatIntHash

function Global.GetNoLoadingScreen()
	return _in(0x18C1270EA7F199BC, _r)
end
Global.GetNoLoadingScreen = Global.GetNoLoadingScreen

function Global.GetNthClosestVehicleNode(x, y, z, nthClosest, unknown1, unknown2, unknown3)
	return _in(0xE50E52416CCF948B, x, y, z, nthClosest, _v, unknown1, unknown2, unknown3, _r)
end

--- See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
-- p10 always equal 0x40400000
-- p11 always equal 0
function Global.GetNthClosestVehicleNodeFavourDirection(x, y, z, desiredX, desiredY, desiredZ, nthClosest, nodetype, p10, p11)
	return _in(0x45905BE8654AE067, x, y, z, desiredX, desiredY, desiredZ, nthClosest, _v, _f, nodetype, p10, p11, _r)
end

--- Returns the id.
function Global.GetNthClosestVehicleNodeId(x, y, z, nth, nodetype, p5, p6)
	return _in(0x22D7275A79FE8215, x, y, z, nth, nodetype, p5, p6, _r, _ri)
end

--- NativeDB Return Type: BOOL
function Global.GetNthClosestVehicleNodeIdWithHeading(x, y, z, nthClosest, outHeading, p6, p7, p8)
	return _in(0x6448050E9C2A7207, x, y, z, nthClosest, _v, outHeading, p6, p7, p8, _r, _ri)
end

--- Get the nth closest vehicle node and its heading. (unknown2 = 9, unknown3 = 3.0, unknown4 = 2.5)
function Global.GetNthClosestVehicleNodeWithHeading(x, y, z, nthClosest, unknown2, unknown3, unknown4)
	return _in(0x80CA6A8B6C094CC4, x, y, z, nthClosest, _v, _f, _i, unknown2, unknown3, unknown4, _r)
end

function Global.GetNuiCursorPosition()
	return _in(0xbdba226f, _i, _i)
end

function Global.GetNumCommerceItems()
	return _in(0xF2EAC213D5EA0623, _r, _ri)
end
Global.N_0xf2eac213d5ea0623 = Global.GetNumCommerceItems

function Global.GetNumCreatedMissionObjects(p0)
	return _in(0x12B6281B6C6706C0, p0, _r, _ri)
end
Global.N_0x12b6281b6c6706c0 = Global.GetNumCreatedMissionObjects

function Global.GetNumCreatedMissionPeds(p0)
	return _in(0xCB215C4B56A7FAE7, p0, _r, _ri)
end
Global.N_0xcb215c4b56a7fae7 = Global.GetNumCreatedMissionPeds

function Global.GetNumCreatedMissionVehicles(p0)
	return _in(0x0CD9AB83489430EA, p0, _r, _ri)
end
Global.N_0x0cd9ab83489430ea = Global.GetNumCreatedMissionVehicles

--- only documented to be continued...
function Global.GetNumDecorations(character)
	return _in(0x278F76C3B0A8F109, character, _r, _ri)
end
Global.N_0x278f76c3b0a8f109 = Global.GetNumDecorations

function Global.GetNumDlcVehicles()
	return _in(0xA7A866D21CD2329B, _r, _ri)
end

--- Allowed Values from 0 - DLC1::GET_NUM_DLC_WEAPONS()
function Global.GetNumDlcWeaponComponents(dlcWeaponIndex)
	return _in(0x405425358A7D61FE, dlcWeaponIndex, _r, _ri)
end

--- Gets the total number of DLC weapons.
function Global.GetNumDlcWeapons()
	return _in(0xEE47635F352DA367, _r, _ri)
end

--- Used for freemode (online) characters.
function Global.GetNumHairColors()
	return _in(0xE5C0CF872C2AD150, _r, _ri)
end

function Global.GetNumMakeupColors()
	return _in(0xD1F7CA1535D22818, _r, _ri)
end
Global.N_0xd1f7ca1535d22818 = Global.GetNumMakeupColors

function Global.GetNumModColors(p0, p1)
	return _in(0xA551BE18C11A476D, p0, p1, _r, _ri)
end

function Global.GetNumModKits(vehicle)
	return _in(0x33F2E3FE70EAAE1D, vehicle, _r, _ri)
end

--- Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
function Global.GetNumParentPedsOfType(type)
	return _in(0x5EF37013A6539C9D, type, _r, _ri)
end

--- character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
-- componentId is between 0 and 11 and corresponds to the usual component slots.
-- p1 could be the outfit number; unsure.
-- p2 is usually -1; unknown function.
-- p3 appears to be a boolean flag; unknown function.
-- p4 is usually -1; unknown function.
function Global.GetNumPropsFromOutfit(character, p1, p2, p3, p4, componentId)
	return _in(0x9BDF59818B1E38C1, character, p1, p2, p3, p4, componentId, _r, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.GetNumReservedMissionObjects(p0)
	return _in(0xAA81B5F10BC43AC2, p0, _r, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.GetNumReservedMissionPeds(p0)
	return _in(0x1F13D5AE5CB17E17, p0, _r, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.GetNumReservedMissionVehicles(p0)
	return _in(0xCF3A965906452031, p0, _r, _ri)
end

--- Gets the amount of metadata values with the specified key existing in the specified resource's manifest.
-- See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
-- @param resourceName The resource name.
-- @param metadataKey The key to look up in the resource manifest.
function Global.GetNumResourceMetadata(resourceName, metadataKey)
	return _in(0x776e864, _ts(resourceName), _ts(metadataKey), _r, _ri)
end

function Global.GetNumResources()
	return _in(0x863f27b, _r, _ri)
end

function Global.GetNumSuccessfulStuntJumps()
	return _in(0x996DD1E1E02F1008, _r, _ri)
end
Global.N_0x996dd1e1e02f1008 = Global.GetNumSuccessfulStuntJumps

function Global.GetNumUnlockedRadioStations()
	return _in(0xF1620ECB50E01DE7, _r, _ri)
end
Global.MaxRadioStationIndex = Global.GetNumUnlockedRadioStations

--- Returns how many possible mods a vehicle has for a given mod type
function Global.GetNumVehicleMods(vehicle, modType)
	return _in(0xE38E9162A2500646, vehicle, modType, _r, _ri)
end

function Global.GetNumVehicleWindowTints()
	return _in(0x9D1224004B3A6707, _r, _ri)
end

function Global.GetNumberOfActiveBlips()
	return _in(0x9A3FF3DE163034E8, _r, _ri)
end

function Global.GetNumberOfDispatchedUnitsForPlayer(dispatchService)
	return _in(0xEB4A0C2D56441717, dispatchService, _r, _ri)
end
Global.N_0xeb4a0c2d56441717 = Global.GetNumberOfDispatchedUnitsForPlayer

--- eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork
function Global.GetNumberOfEvents(eventGroup)
	return _in(0x5F92A689A06620AA, eventGroup, _r, _ri)
end

function Global.GetNumberOfFiresInRange(x, y, z, radius)
	return _in(0x50CAD495A460B305, x, y, z, radius, _r, _ri)
end

function Global.GetNumberOfFreeStacksOfThisSize(stackSize)
	return _in(0xFEAD16FC8F9DFC0F, stackSize, _r, _ri)
end
Global.GetFreeStackSlotsCount = Global.GetNumberOfFreeStacksOfThisSize

--- Gets the number of instances of the specified script is currently running.
-- Actually returns numInstances - 1.
-- if (scriptPtr)
-- v3 = GetNumberOfInstancesOfScript(scriptPtr) - 1;
-- return v3;
function Global.GetNumberOfInstancesOfScriptWithNameHash(scriptHash)
	return _in(0x2C83A9DA6BFFC4F9, _ch(scriptHash), _r, _ri)
end
Global.GetNumberOfInstancesOfStreamedScript = Global.GetNumberOfInstancesOfScriptWithNameHash

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetNumberOfPedDrawableVariations(ped, componentId)
	return _in(0x27561561732A7842, ped, componentId, _r, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetNumberOfPedPropDrawableVariations(ped, propId)
	return _in(0x5FAF9754E789FB47, ped, propId, _r, _ri)
end

--- Need to check behavior when drawableId = -1
-- - Doofy.Ass
-- Why this function doesn't work and return nill value?
-- GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(PLAYER.PLAYER_PED_ID(), 0, 5)
-- tick: scripts/addins/menu_execute.lua:51: attempt to call field 'GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS' (a nil value)
-- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetNumberOfPedPropTextureVariations(ped, propId, drawableId)
	return _in(0xA6E7F1CEB523E171, ped, propId, drawableId, _r, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetNumberOfPedTextureVariations(ped, componentId, drawableId)
	return _in(0x8F7156A3142A6BAD, ped, componentId, drawableId, _r, _ri)
end

--- Gets the number of players in the current session.
-- If not multiplayer, always returns 1.
function Global.GetNumberOfPlayers()
	return _in(0x407C7F91DDB46C16, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param team :
function Global.GetNumberOfPlayersInTeam(team)
	return _in(0x1FC200409F10E6F1, team, _r, _ri)
end

function Global.GetNumberOfStreamingRequests()
	return _in(0x4060057271CEBC89, _r, _ri)
end

--- Actually number of color combinations
function Global.GetNumberOfVehicleColours(vehicle)
	return _in(0x3B963160CD65D41E, vehicle, _r, _ri)
end

function Global.GetNumberOfVehicleDoors(vehicle)
	return _in(0x92922A607497B14D, vehicle, _r, _ri)
end

--- Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
function Global.GetNumberOfVehicleNumberPlates()
	return _in(0x4C4D6B2644F458CB, _r, _ri)
end

function Global.GetObjectFragmentDamageHealth(p0, p1)
	return _in(0xB6FBFD079B8D0596, p0, p1, _r, _rf)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.GetObjectIndexFromEntityIndex(entity)
	return _in(0xD7E3B9735C0F89D6, entity, _r, _ri)
end

function Global.GetObjectOffsetFromCoords(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset)
	return _in(0x163E252DE035A133, xPos, yPos, zPos, heading, xOffset, yOffset, zOffset, _r, _rv)
end

function Global.GetObjectTextureVariation(object)
	return _in(0xE84EB93729C5F36A, object, _r, _ri)
end
Global.N_0xe84eb93729c5f36a = Global.GetObjectTextureVariation

--- Converts world coords (posX - Z) to coords relative to the entity
-- Example:
-- posX = 50
-- posY = 1000
-- posZ = 60
-- Entity's coords are: x=30, y=1000, z=60.
-- All three returned coords will then be in range of [-20,20] depending on rotation of the entity.
function Global.GetOffsetFromEntityGivenWorldCoords(entity, posX, posY, posZ)
	return _in(0x2274BC1C4885E333, entity, posX, posY, posZ, _r, _rv)
end

--- Offset values are relative to the entity.
-- x = left/right
-- y = forward/backward
-- z = up/down
function Global.GetOffsetFromEntityInWorldCoords(entity, offsetX, offsetY, offsetZ)
	return _in(0x1899F328B0E12848, entity, offsetX, offsetY, offsetZ, _r, _rv)
end

function Global.GetOffsetFromInteriorInWorldCoords(interior, x, y, z)
	return _in(0x9E3B3E6D66F6E22F, interior, x, y, z, _r, _rv)
end

--- Online version is defined here: update\update.rpf\common\data\version.txt
-- Example:
-- [ONLINE_VERSION_NUMBER]
-- 1.33
-- _GET_ONLINE_VERSION() will return "1.33"
-- Belongs in NETWORK
function Global.GetOnlineVersion()
	return _in(0xFCA9373EF340AC0A, _r, _s)
end
Global.GetGameVersion = Global.GetOnlineVersion

--- Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
function Global.GetOnscreenKeyboardResult()
	return _in(0x8362B09B91893647, _r, _s)
end

function Global.GetPackedBoolStatKey(index, spStat, charStat, character)
	return _in(0x80C75307B1C42837, index, spStat, charStat, character, _r, _ri)
end
Global.N_0x80c75307b1c42837 = Global.GetPackedBoolStatKey
Global.GetPstatBoolHash = Global.GetPackedBoolStatKey

function Global.GetPackedIntStatKey(index, spStat, charStat, character)
	return _in(0x61E111E323419E07, index, spStat, charStat, character, _r, _ri)
end
Global.N_0x61e111e323419e07 = Global.GetPackedIntStatKey
Global.GetPstatIntHash = Global.GetPackedIntStatKey

function Global.GetPackedTitleUpdateBoolStatKey(index, spStat, charStat, character)
	return _in(0xC4BB08EE7907471E, index, spStat, charStat, character, _r, _ri)
end
Global.N_0xc4bb08ee7907471e = Global.GetPackedTitleUpdateBoolStatKey
Global.GetTupstatBoolHash = Global.GetPackedTitleUpdateBoolStatKey

function Global.GetPackedTitleUpdateIntStatKey(index, spStat, charStat, character)
	return _in(0xD16C2AD6B8E32854, index, spStat, charStat, character, _r, _ri)
end
Global.N_0xd16c2ad6b8e32854 = Global.GetPackedTitleUpdateIntStatKey
Global.GetTupstatIntHash = Global.GetPackedTitleUpdateIntStatKey

--- A getter for [SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#_0xEAE6DCC7EEE3DB1D).
-- @return Returns parked vehicle density multiplier value.
function Global.GetParkedVehicleDensityMultiplier()
	return _in(0xff72df84, _r, _rf)
end

--- Returns:
-- 5
-- 10
-- 15
-- 20
-- 25
-- 30
-- 35
function Global.GetPauseMenuState()
	return _in(0x272ACD84970869C5, _r, _ri)
end

function Global.GetPedAccuracy(ped)
	return _in(0x37F4AD56ECBC0CD6, ped, _r, _ri)
end

--- Returns the ped's alertness (0-3).
-- Values :
-- 0 : Neutral
-- 1 : Heard something (gun shot, hit, etc)
-- 2 : Knows (the origin of the event)
-- 3 : Fully alerted (is facing the event?)
-- If the Ped does not exist, returns -1.
function Global.GetPedAlertness(ped)
	return _in(0xF6AA118530443FD2, ped, _r, _ri)
end

function Global.GetPedAmmoByType(ped, ammoType)
	return _in(0x39D22031557946C1, ped, ammoType, _r, _ri)
end

--- Returns an ammo type hash, which is defined in AmmoInfo.
function Global.GetPedAmmoTypeFromWeapon(ped, weaponHash)
	return _in(0x7FEAD38B326B9F74, ped, _ch(weaponHash), _r, _ri)
end
Global.GetPedAmmoType = Global.GetPedAmmoTypeFromWeapon

function Global.GetPedAmmoTypeFromWeapon_2(ped, weaponHash)
	return _in(0xF489B44DD5AF4BD9, ped, _ch(weaponHash), _r, _ri)
end

function Global.GetPedArmour(ped)
	return _in(0x9483AF821605B1D8, ped, _r, _ri)
end

function Global.GetPedAsGroupLeader(groupID)
	return _in(0x5CCE68DBD5FE93EC, groupID, _r, _ri)
end
Global.GetPedAsGroupLeader = Global.GetPedAsGroupLeader

--- from fm_mission_controller.c4 (variable names changed for clarity):
-- int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());
-- PED::GET_GROUP_SIZE(group, &unused, &groupSize);
-- if (groupSize >= 1) {
-- . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
-- . . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);
-- . . . . . . . . //and so on
function Global.GetPedAsGroupMember(groupID, memberNumber)
	return _in(0x51455483CF23ED97, groupID, memberNumber, _r, _ri)
end

--- Gets the position of the specified bone of the specified ped.
-- ped: The ped to get the position of a bone from.
-- boneId: The ID of the bone to get the position from. This is NOT the index.
-- offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
-- offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
-- offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
function Global.GetPedBoneCoords(ped, boneId, offsetX, offsetY, offsetZ)
	return _in(0x17C07FC640E86B4E, ped, boneId, offsetX, offsetY, offsetZ, _r, _rv)
end

--- Bone ID enum: pastebin.com/3pz17QGd
function Global.GetPedBoneIndex(ped, boneId)
	return _in(0x3F428D08BE5AAE31, ped, boneId, _r, _ri)
end

--- Returns the hash of the weapon/model/object that killed the ped.
function Global.GetPedCauseOfDeath(ped)
	return _in(0x16FFE42AB2D2DC59, ped, _r, _ri)
end

function Global.GetPedCombatMovement(ped)
	return _in(0xDEA92412FCAEB3F5, ped, _r, _ri)
end

function Global.GetPedCombatRange(ped)
	return _in(0xF9D9F7F2DB8E2FA0, ped, _r, _ri)
end

--- p2 is always 1 in the scripts.
-- if (GET_PED_CONFIG_FLAG(ped, 78, 1))
-- = returns true if ped is aiming/shooting a gun
function Global.GetPedConfigFlag(ped, flagId, p2)
	return _in(0x7EE53118C892B513, ped, flagId, p2, _r)
end

--- Returns the zoneID for the overlay if it is a member of collection.
-- enum TattooZoneData
-- {
-- ZONE_TORSO = 0,
-- ZONE_HEAD = 1,
-- ZONE_LEFT_ARM = 2,
-- ZONE_RIGHT_ARM = 3,
-- ZONE_LEFT_LEG = 4,
-- ZONE_RIGHT_LEG = 5,
-- ZONE_UNKNOWN = 6,
-- ZONE_NONE = 7,
-- };
function Global.GetPedDecorationZoneFromHashes(collection, overlay)
	return _in(0x9FD452BFBE7A7A8B, _ch(collection), _ch(overlay), _r, _ri)
end
Global.GetTattooZone = Global.GetPedDecorationZoneFromHashes

function Global.GetPedDecorationsState(ped)
	return _in(0x71EAB450D86954A1, ped, _r, _ri)
end
Global.N_0x71eab450d86954a1 = Global.GetPedDecorationsState

function Global.GetPedDefensiveAreaPosition(ped, p1)
	return _in(0x3C06B8786DD94CD1, ped, p1, _r, _rv)
end

--- A getter for [SET_PED_DENSITY_MULTIPLIER_THIS_FRAME](#_0x95E3D6257B166CF2).
-- @return Returns ped density multiplier value.
function Global.GetPedDensityMultiplier()
	return _in(0xf5a904f9, _r, _rf)
end

function Global.GetPedDesiredMoveBlendRatio(ped)
	return _in(0x8517D4A6CA8513ED, ped, _r, _rf)
end

--- Ids
-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7 - ------
-- 8 - Accessories 1
-- 9 - Accessories 2
-- 10
-- 11 - Auxiliary parts for torso
function Global.GetPedDrawableVariation(ped, componentId)
	return _in(0x67F3780DD425D4FC, ped, componentId, _r, _ri)
end

function Global.GetPedEnveffScale(ped)
	return _in(0x9C14D30395A51A3C, ped, _r, _rf)
end

--- Gets the offset the specified ped has moved since the previous tick.
-- If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
-- If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
function Global.GetPedExtractedDisplacement(ped, worldSpace)
	return _in(0xE0AF41401ADF87E3, ped, worldSpace, _r, _rv)
end

--- A getter for [\_SET_PED_EYE_COLOR](#_0x50B56988B170AFDF). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's eye colour, or -1 if fails to get.
function Global.GetPedEyeColor(ped)
	return _in(0xa47b860f, ped, _r, _ri)
end

--- A getter for [\_SET_PED_FACE_FEATURE](#_0x71A5C1DBA060049E). Returns 0.0 if fails to get.
-- @param ped The target ped
-- @param index Face feature index
-- @return Returns ped's face feature value, or 0.0 if fails to get.
function Global.GetPedFaceFeature(ped, index)
	return _in(0xba352add, ped, index, _r, _rf)
end

--- Returns the group id of which the specified ped is a member of.
function Global.GetPedGroupIndex(ped)
	return _in(0xF162E133B4E7A675, ped, _r, _ri)
end

--- A getter for [\_SET_PED_HAIR_COLOR](#_0x4CFFC65454C93A49). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's primary hair colour.
function Global.GetPedHairColor(ped)
	return _in(0xa3ea2893, ped, _r, _ri)
end

--- A getter for [\_SET_PED_HAIR_COLOR](#_0x4CFFC65454C93A49). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's secondary hair colour.
function Global.GetPedHairHighlightColor(ped)
	return _in(0x4b087305, ped, _r, _ri)
end

--- Input: Haircolor index, value between 0 and 63 (inclusive).
-- Output: RGB values for the haircolor specified in the input.
-- This is used with the hair color swatches scaleform.
-- Use [`_0x013E5CFC38CD5387`](#_0x013E5CFC38CD5387) to get the makeup colors.
-- @param hairColorIndex The hair color index. Value between 0-63 (inclusive).
-- @param outR Output red value.
-- @param outG Output green value.
-- @param outB Output blue value.
function Global.GetPedHairRgbColor(hairColorIndex)
	return _in(0x4852FC386E2E1BB5, hairColorIndex, _i, _i, _i)
end
Global.N_0x4852fc386e2e1bb5 = Global.GetPedHairRgbColor
Global.GetHairRgbColor = Global.GetPedHairRgbColor

--- The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
-- pass this struct in the second parameter
-- typedef struct
-- {
-- int shapeFirst, shapeSecond, shapeThird;
-- int skinFirst, skinSecond, skinThird;
-- float shapeMix, skinMix, thirdMix;
-- } headBlendData;
function Global.GetPedHeadBlendData(ped, headBlendData)
	return _in(0x2746BD9D88C5C5D0, ped, _ii(headBlendData) --[[ may be optional ]], _r)
end
Global.GetPedHeadBlendData = Global.GetPedHeadBlendData

--- Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
-- Used when calling SET_PED_HEAD_BLEND_DATA.
function Global.GetPedHeadBlendFirstIndex(type)
	return _in(0x68D353AB88B97E0C, type, _r, _ri)
end
Global.GetFirstParentIdForPedType = Global.GetPedHeadBlendFirstIndex

--- A getter for [SET_PED_HEAD_OVERLAY](#_0x48F44967FA05CC1E) and [\_SET_PED_HEAD_OVERLAY_COLOR](#_0x497BF74A7B9CB952) natives.
-- @param ped The target ped
-- @param index Overlay index
-- @param overlayValue Overlay value pointer
-- @param colourType Colour type pointer
-- @param firstColour First colour pointer
-- @param secondColour Second colour pointer
-- @param overlayOpacity Opacity pointer
-- @return Returns ped's head overlay data.
function Global.GetPedHeadOverlayData(ped, index)
	return _in(0xc46ee605, ped, index, _i, _i, _i, _i, _f, _r)
end

--- Used with freemode (online) characters.
function Global.GetPedHeadOverlayNum(overlayID)
	return _in(0xCF1CE768BB43480E, overlayID, _r, _ri)
end
Global.GetNumHeadOverlayValues = Global.GetPedHeadOverlayNum

--- Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
function Global.GetPedHeadOverlayValue(ped, overlayID)
	return _in(0xA60EF3B6461A4D43, ped, overlayID, _r, _ri)
end

--- Use [`SetPedIlluminatedClothingGlowIntensity`](#_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
-- @param ped The ped to get the glow intensity from.
-- @return A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
function Global.GetPedIlluminatedClothingGlowIntensity(ped)
	return _in(0x1461B28A06717D68, ped, _r, _rf)
end
Global.N_0x1461b28a06717d68 = Global.GetPedIlluminatedClothingGlowIntensity

--- indexes:
-- -1 = Driver
-- 0 = Front Right Passenger
-- 1 = Back Left Passenger
-- 2 = Back Right Passenger
-- 3 = Further Back Left Passenger (vehicles > 4 seats)
-- 4 = Further Back Right Passenger (vehicles > 4 seats)
-- Can use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) to help get max index
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.GetPedInVehicleSeat(vehicle, index)
	return _in(0xBB40DD2270B65366, vehicle, index, _r, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.GetPedIndexFromEntityIndex(entity)
	return _in(0x04A2A40C73395041, entity, _r, _ri)
end

--- Pretty sure outBone is an int.
function Global.GetPedLastDamageBone(ped, outBone)
	return _in(0xD75960F6BD9EA49C, ped, _ii(outBone) --[[ may be optional ]], _r)
end

--- Pass ped. Pass address of Vector3.
-- The coord will be put into the Vector3.
-- The return will determine whether there was a coord found or not.
function Global.GetPedLastWeaponImpactCoord(ped, coords)
	return _in(0x6C4D0409BA1A2BC2, ped, _v, _r)
end

--- Input: Makeup color index, value between 0 and 63 (inclusive).
-- Output: RGB values for the makeup color specified in the input.
-- This is used with the makeup color swatches scaleform.
-- Use [`_0x4852FC386E2E1BB5`](#_0x4852FC386E2E1BB5) to get the hair colors.
-- @param makeupColorIndex The hair color index. Value between 0-63 (inclusive).
-- @param outR Output red value.
-- @param outG Output green value.
-- @param outB Output blue value.
function Global.GetPedMakeupRgbColor(makeupColorIndex)
	return _in(0x013E5CFC38CD5387, makeupColorIndex, _i, _i, _i)
end
Global.N_0x013e5cfc38cd5387 = Global.GetPedMakeupRgbColor
Global.GetMakeupRgbColor = Global.GetPedMakeupRgbColor

function Global.GetPedMaxHealth(ped)
	return _in(0x4700A416E8324EF3, ped, _r, _ri)
end

function Global.GetPedMoney(ped)
	return _in(0x3F69145BBA87BAE7, ped, _r, _ri)
end

--- sizeAndPeds - is a pointer to an array. The array is filled with peds found nearby the ped supplied to the first argument.
-- ignore - ped type to ignore
-- Return value is the number of peds found and added to the array passed.
-- -----------------------------------
-- To make this work in most menu bases at least in C++ do it like so,
-- Formatted Example: pastebin.com/D8an9wwp
-- -----------------------------------
-- Example: gtaforums.com/topic/789788-function-args-to-pedget-ped-nearby-peds/?p=1067386687
-- Here's the right way to do it (console and pc):
-- pastebin.com/SsFej963
function Global.GetPedNearbyPeds(ped, ignore)
	return _in(0x23F8F5FC7E8C4A6B, ped, _i, ignore, _r, _ri)
end

--- Returns size of array, passed into the second variable.
-- See below for usage information.
-- This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
-- //Setup the array
-- const int numElements = 10;
-- const int arrSize = numElements * 2 + 2;
-- Any veh[arrSize];
-- //0 index is the size of the array
-- veh[0] = numElements;
-- int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);
-- if (veh != NULL)
-- {
-- //Simple loop to go through results
-- for (int i = 0; i < count; i++)
-- {
-- int offsettedID = i * 2 + 2;
-- //Make sure it exists
-- if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))
-- {
-- //Do something
-- }
-- }
-- }
-- Here's the right way to do it (console and pc):
-- pastebin.com/SsFej963
function Global.GetPedNearbyVehicles(ped, sizeAndVehs)
	return _in(0xCFF869CBFA210D82, ped, _ii(sizeAndVehs) --[[ may be optional ]], _r, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetPedPaletteVariation(ped, componentId)
	return _in(0xE3DD5F2A84B42281, ped, componentId, _r, _ri)
end

--- -1: no landing
-- 0: landing on both feet
-- 1: stumbling
-- 2: rolling
-- 3: ragdoll
function Global.GetPedParachuteLandingType(ped)
	return _in(0x8B9F1FC6AE8166C0, ped, _r, _ri)
end

--- Returns:
-- -1: Normal
-- 0: Wearing parachute on back
-- 1: Parachute opening
-- 2: Parachute open
-- 3: Falling to doom (e.g. after exiting parachute)
-- Normal means no parachute?
function Global.GetPedParachuteState(ped)
	return _in(0x79CFD9827CC979B6, ped, _r, _ri)
end

function Global.GetPedParachuteTintIndex(ped, outTintIndex)
	return _in(0xEAF5F7E5AE7C6C9D, ped, _ii(outTintIndex) --[[ may be optional ]])
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetPedPropIndex(ped, componentId)
	return _in(0x898CC20EA75BACD8, ped, componentId, _r, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetPedPropTextureIndex(ped, componentId)
	return _in(0xE131A28626F81AB2, ped, componentId, _r, _ri)
end

function Global.GetPedRagdollBoneIndex(ped, bone)
	return _in(0x2057EF813397A772, ped, bone, _r, _ri)
end

function Global.GetPedRelationshipGroupDefaultHash(ped)
	return _in(0x42FDD0F017B1E38E, ped, _r, _ri)
end

function Global.GetPedRelationshipGroupHash(ped)
	return _in(0x7DBDD04862D95F04, ped, _r, _ri)
end

function Global.GetPedResetFlag(ped, flagId)
	return _in(0xAF9E59B1B1FBF2A0, ped, flagId, _r)
end

--- Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
-- Is best to check if the Ped is dead before asking for its killer.
function Global.GetPedSourceOfDeath(ped)
	return _in(0x93C8B64DEB84728C, ped, _r, _ri)
end
Global.GetPedKiller = Global.GetPedSourceOfDeath

--- Returns whether the entity is in stealth mode
function Global.GetPedStealthMovement(ped)
	return _in(0x7C2AC9CA66575FBF, ped, _r)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.GetPedTextureVariation(ped, componentId)
	return _in(0x04A355E041E004E6, ped, componentId, _r, _ri)
end

--- Name was _GET_PED_TIME_OF_DEATH
-- -----------------------------------------------------------------
-- There is no way this is the correct name. The only time this is called it's compared with the game timer and I used this to test something and noticed when I was killed by no matter what it was my 'Time Of Death' via this native was always 0, but my friends was some random big number like so, 147591.
-- Retreives [CPed + 15CC] (as of 944)
function Global.GetPedTimeOfDeath(ped)
	return _in(0x1E98817B311AE98A, ped, _r, _ri)
end
Global.GetPedTimeOfDeath = Global.GetPedTimeOfDeath
Global.N_0x1e98817b311ae98a = Global.GetPedTimeOfDeath

--- Ped Types: (ordered by return priority)
-- Michael = 0
-- Franklin = 1
-- Trevor = 2
-- Army = 29
-- Animal = 28
-- SWAT = 27
-- LSFD = 21
-- Paramedic = 20
-- Cop = 6
-- Male = 4
-- Female = 5
-- Human = 26
-- Note/Exception
-- hc_gunman : 4 // Mix male and female
-- hc_hacker : 4 // Mix male and female
-- mp_f_misty_01 : 4 // Female character
-- s_f_y_ranger_01 : 5 // Ranger
-- s_m_y_ranger_01 : 4 // Ranger
-- s_m_y_uscg_01 : 6 // US Coast Guard
function Global.GetPedType(ped)
	return _in(0xFF059E1E4C01E63C, ped, _r, _ri)
end

--- Quick disassembly and test seems to indicate that this native gets the Ped currently using the specified door.
function Global.GetPedUsingVehicleDoor(vehicle, doorIndex)
	return _in(0x218297BF0CFD853B, vehicle, doorIndex, _r, _ri)
end
Global.N_0x218297bf0cfd853b = Global.GetPedUsingVehicleDoor
Global.GetPedUsingVehicleDoor = Global.GetPedUsingVehicleDoor

--- NativeDB Introduced: v1493
-- @param ped :
function Global.GetPedVisualFieldCenterAngle(ped)
	return _in(0xEF2C71A32CAD5FBD, ped, _r, _rf)
end

function Global.GetPedWaypointDistance(p0)
	return _in(0xE6A877C64CAF1BC5, p0, _r, _rf)
end

--- Returns the progress percent to current waypoint.
function Global.GetPedWaypointProgress(ped)
	return _in(0x2720AAA75001E094, ped, _r, _ri)
end

--- NativeDB Parameter 1: Hash weaponHash
-- NativeDB Parameter 2: Hash camoComponentHash
function Global.GetPedWeaponLiveryColor(ped, weaponHash, camoComponentHash)
	return _in(0xF0A60040BE558F2D, ped, weaponHash, camoComponentHash, _r, _ri)
end
Global.N_0xf0a60040be558f2d = Global.GetPedWeaponLiveryColor

function Global.GetPedWeaponTintIndex(ped, weaponHash)
	return _in(0x2B9EEDC07BD06B9F, ped, _ch(weaponHash), _r, _ri)
end

function Global.GetPedWeapontypeInSlot(ped, weaponSlot)
	return _in(0xEFFED78E9011134D, ped, _ch(weaponSlot), _r, _ri)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.GetPedheadshotTxdString(handle)
	return _in(0xDB4EACD4AD0A5D6B, handle, _r, _s)
end

function Global.GetPedsJacker(ped)
	return _in(0x9B128DC36C1E04CF, ped, _r, _ri)
end

function Global.GetPhoneGestureAnimCurrentTime(ped)
	return _in(0x47619ABE8B268C60, ped, _r, _rf)
end

function Global.GetPhoneGestureAnimTotalTime(ped)
	return _in(0x1EE0F68A7C25DEC6, ped, _r, _rf)
end

function Global.GetPickupCoords(pickup)
	return _in(0x225B8B35C88029B3, pickup, _r, _rv)
end

function Global.GetPickupGenerationRangeMultiplier()
	return _in(0xB3ECA65C7317F174, _r, _rf)
end
Global.N_0xb3eca65c7317f174 = Global.GetPickupGenerationRangeMultiplier

--- returns pickup hash.
-- ```
-- ```
-- NativeDB Parameter 0: Hash pickupHash
function Global.GetPickupHash(pickupHash)
	return _in(0x5EAAD83F8CFB4575, pickupHash, _r, _ri)
end
Global.N_0x5eaad83f8cfb4575 = Global.GetPickupHash

function Global.GetPickupObject(pickup)
	return _in(0x5099BC55630B25AE, pickup, _r, _ri)
end
Global.N_0x5099bc55630b25ae = Global.GetPickupObject

--- A float indicating the percentage of the hover mode. 1.0 = in VTOL mode, 0.0 = in normal flying mode.
-- @param aircraft The vehicle to check the hover mode on.
-- @return A float indicating the percentage of the hover mode. 1.0 = in VTOL mode, 0.0 = in normal flying mode.
function Global.GetPlaneVtolDirection(aircraft)
	return _in(0xDA62027C8BDB326E, aircraft, _r, _rf)
end
Global.N_0xda62027c8bdb326e = Global.GetPlaneVtolDirection
Global.GetPlaneHoverModePercentage = Global.GetPlaneVtolDirection
Global.GetVehicleHoverModePercentage = Global.GetPlaneVtolDirection

function Global.GetPlayerAdvancedModifierPrivileges(p0)
	return _in(0xCD67AD041A394C9C, p0, _r, _s)
end
Global.N_0xcd67ad041a394c9c = Global.GetPlayerAdvancedModifierPrivileges
Global.GetContentUserId = Global.GetPlayerAdvancedModifierPrivileges

function Global.GetPlayerCurrentStealthNoise(player)
	return _in(0x2F395D61F3A1F877, player, _r, _rf)
end

--- Seems to do something with network (?)
-- PLAYER::_56105E599CAB0EFA(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(ped))
function Global.GetPlayerFakeWantedLevel(player)
	return _in(0x56105E599CAB0EFA, player, _r, _ri)
end
Global.N_0x56105e599cab0efa = Global.GetPlayerFakeWantedLevel

function Global.GetPlayerFromServerId(serverId)
	return _in(0x344ea166, serverId, _r, _ri)
end

--- Returns the group ID the player is member of.
function Global.GetPlayerGroup(player)
	return _in(0x0D127585F77030AF, player, _r, _ri)
end

function Global.GetPlayerHasReserveParachute(player)
	return _in(0x5DDFE2FF727F3CA3, player, _r)
end

function Global.GetPlayerHealthRechargeLimit(player)
	return _in(0x8BC515BAE4AAF8FF, player, _r, _rf)
end
Global.N_0x8bc515bae4aaf8ff = Global.GetPlayerHealthRechargeLimit

--- Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
function Global.GetPlayerIndex()
	return _in(0xA5EDC40EF369B48D, _r, _ri)
end

--- Returns the Player's Invincible status.
-- This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
-- bool IsPlayerInvincible(Player player)
-- {
-- auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x188);
-- return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
-- }
-- return false;
-- }
-- ============================================================
-- This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash? 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?
function Global.GetPlayerInvincible(player)
	return _in(0xB721981B2B939E07, player, _r)
end

function Global.GetPlayerMaxArmour(player)
	return _in(0x92659B4CE1863CB3, player, _r, _ri)
end

--- A getter for [SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER](#_0xAE540335B4ABC4E2).
-- @param playerId The player index.
-- @return The value of player melee weapon defense modifier.
function Global.GetPlayerMeleeWeaponDefenseModifier(playerId)
	return _in(0x27e94ef8, playerId, _r, _rf)
end

--- Returns the players name
function Global.GetPlayerName(player)
	return _in(0x6D0DE6A7B5DA71F8, player, _r, _s)
end

function Global.GetPlayerParachutePackTintIndex(player, tintIndex)
	return _in(0x6E9C742F340CE5A2, player, _ii(tintIndex) --[[ may be optional ]])
end

function Global.GetPlayerParachuteSmokeTrailColor(player)
	return _in(0xEF56DBABD3CD4887, player, _i, _i, _i)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.GetPlayerParachuteTintIndex(player, tintIndex)
	return _in(0x75D3F7A1B0D9B145, player, _ii(tintIndex) --[[ may be optional ]])
end

--- Gets the ped for a specified player index.
-- @param playerId The player index, or -1 to get the local player ped.
-- @return The specified player's ped, or 0 if invalid.
function Global.GetPlayerPed(playerId)
	return _in(0x43A66C31C68491C0, playerId, _r, _ri)
end

function Global.GetPlayerPedIsFollowing(ped)
	return _in(0x6A3975DEA89F9A17, ped, _r, _ri)
end

--- Does the same like PLAYER::GET_PLAYER_PED<br/>
function Global.GetPlayerPedScriptIndex(player)
	return _in(0x50FAC3A3E030A6E1, player, _r, _ri)
end

function Global.GetPlayerRadioStationGenre()
	return _in(0xA571991A7FE6CCEB, _r, _ri)
end

--- Returns 255 (radio off index) if the function fails.
function Global.GetPlayerRadioStationIndex()
	return _in(0xE8AF77C4C06ADC93, _r, _ri)
end

--- Returns active radio station name
function Global.GetPlayerRadioStationName()
	return _in(0xF6D733C32076AD03, _r, _s)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.GetPlayerReserveParachuteTintIndex(player, index)
	return _in(0xD5A016BC3C09CF40, player, _ii(index) --[[ may be optional ]])
end

--- Returns RGB color of the player
function Global.GetPlayerRgbColour(player)
	return _in(0xE902EF951DCE178F, player, _i, _i, _i)
end

function Global.GetPlayerServerId(player)
	return _in(0x4d97bcc7, player, _r, _ri)
end

function Global.GetPlayerShortSwitchState()
	return _in(0x20F898A5D9782800, _r, _ri)
end

function Global.GetPlayerSprintStaminaRemaining(player)
	return _in(0x3F9F16F8E65A7ED7, player, _r, _rf)
end

function Global.GetPlayerSprintTimeRemaining(player)
	return _in(0x1885BC9B108B4C99, player, _r, _rf)
end

function Global.GetPlayerSwitchInterpOutDuration()
	return _in(0x08C2D6C52A3104BB, _r, _ri)
end
Global.SetPlayerInvertedUp = Global.GetPlayerSwitchInterpOutDuration
Global.N_0x08c2d6c52a3104bb = Global.GetPlayerSwitchInterpOutDuration

function Global.GetPlayerSwitchJumpCutIndex()
	return _in(0x78C0D93253149435, _r, _ri)
end
Global.N_0x78c0d93253149435 = Global.GetPlayerSwitchJumpCutIndex

function Global.GetPlayerSwitchState()
	return _in(0x470555300D10B2A5, _r, _ri)
end

function Global.GetPlayerSwitchType()
	return _in(0xB3C94A90D9FC9E62, _r, _ri)
end

--- Assigns the handle of locked-on melee target to *entity that you pass it.
-- Returns false if no entity found.
function Global.GetPlayerTargetEntity(player, entity)
	return _in(0x13EDE1A5DBF797C9, player, _ii(entity) --[[ may be optional ]], _r)
end

--- Gets the player's team.
-- Does nothing in singleplayer.
function Global.GetPlayerTeam(player)
	return _in(0x37039302F4E0A008, player, _r, _ri)
end

function Global.GetPlayerUnderwaterTimeRemaining(player)
	return _in(0xA1FCF8E6AF40B731, player, _r, _rf)
end

--- A getter for [SET_PLAYER_VEHICLE_DAMAGE_MODIFIER](#_0xA50E117CDDF82F0C).
-- @param playerId The player index.
-- @return The value of player vehicle damage modifier.
function Global.GetPlayerVehicleDamageModifier(playerId)
	return _in(0x78f27b1f, playerId, _r, _rf)
end

--- A getter for [SET_PLAYER_VEHICLE_DEFENSE_MODIFIER](#_0x4C60E6EFDAFF2462).
-- @param playerId The player index.
-- @return The value of player vehicle defense modifier.
function Global.GetPlayerVehicleDefenseModifier(playerId)
	return _in(0x8326e7cd, playerId, _r, _rf)
end

function Global.GetPlayerWantedCentrePosition(player)
	return _in(0x0C92BA89F1AF26F8, player, _r, _rv)
end

function Global.GetPlayerWantedLevel(player)
	return _in(0xE28E54788CE8F12D, player, _r, _ri)
end

--- A getter for [SET_PLAYER_WEAPON_DAMAGE_MODIFIER](#_0xCE07B9F7817AADA3).
-- @param playerId The player index.
-- @return The value of player weapon damage modifier.
function Global.GetPlayerWeaponDamageModifier(playerId)
	return _in(0x2a3d7cda, playerId, _r, _rf)
end

--- A getter for [SET_PLAYER_WEAPON_DEFENSE_MODIFIER](#_0x2D83BC011CA14A3C).
-- @param playerId The player index.
-- @return The value of player weapon defense modifier.
function Global.GetPlayerWeaponDefenseModifier(playerId)
	return _in(0xf1543251, playerId, _r, _rf)
end

--- A getter for [\_SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2](#_0xBCFDE9EDE4CF27DC).
-- @param playerId The player index.
-- @return The value of player weapon defense modifier 2.
function Global.GetPlayerWeaponDefenseModifier_2(playerId)
	return _in(0x986b65ff, playerId, _r, _rf)
end

--- Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
function Global.GetPlayersLastVehicle()
	return _in(0xB6997A7EB3F5C8C0, _r, _ri)
end

function Global.GetPointOnRoadSide(x, y, z, p3, outPosition)
	return _in(0x16F46FB18C8009E4, x, y, z, p3, _v, _r)
end
Global.N_0x16f46fb18c8009e4 = Global.GetPointOnRoadSide

function Global.GetPositionInRecording(p0)
	return _in(0x2DACD605FC681475, p0, _r, _rf)
end

--- p1 is some kind of tolerance
function Global.GetPositionOfVehicleRecordingAtTime(p0, p1, p2)
	return _in(0xD242728AA6F0FBA2, p0, p1, _ts(p2), _r, _rv)
end

--- NativeDB Return Type: Vector3
function Global.GetPositionOfVehicleRecordingIdAtTime(id, time)
	return _in(0x92523B76657A517D, id, time, _r, _ri)
end
Global.N_0x92523b76657a517d = Global.GetPositionOfVehicleRecordingIdAtTime

--- Gets system time as year, month, day, hour, minute and second.
-- Example usage:
-- int year;
-- int month;
-- int day;
-- int hour;
-- int minute;
-- int second;
-- TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);
function Global.GetPosixTime()
	return _in(0xDA488F299A5B164E, _i, _i, _i, _i, _i, _i)
end

--- Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
function Global.GetPowerSavingModeDuration()
	return _in(0xABB2FA71C83A1B72, _r, _ri)
end
Global.N_0xabb2fa71c83a1b72 = Global.GetPowerSavingModeDuration

--- Returns current weather name hash
function Global.GetPrevWeatherTypeHashName()
	return _in(0x564B884A05EC45A3, _r, _ri)
end
Global.GetPrevWeatherType = Global.GetPrevWeatherTypeHashName

--- gtaforums.com/topic/799843-stats-profile-settings/
function Global.GetProfileSetting(profileSetting)
	return _in(0xC488FF2356EA7791, profileSetting, _r, _ri)
end

--- only documented to be continued...
-- Dr. Underscore (1/6/18):
-- Exactly like _GET_PROJECTILE_NEAR_PED_COORDS (_0xDFB4138EEFED7B81), but it gives us the Entity that was found aswell.
-- p6 is (most likely) ownedByPlayer. (see IS_PROJECTILE_IN_AREA for info)
-- ```
-- ```
-- NativeDB Parameter 3: float projPos
-- NativeDB Parameter 4: float projEnt
function Global.GetProjectileNearPed(ped, weaponhash, radius, ownedByPlayer)
	return _in(0x82FDE6A57EE4EE44, ped, _ch(weaponhash), radius, _v, _i, ownedByPlayer, _r)
end
Global.N_0x82fde6a57ee4ee44 = Global.GetProjectileNearPed

--- From a quick disassembly I can say that this has something to do with weapons.
-- Added params according to what I could see in IDA.
-- Dr. Underscore (1/6/18):
-- Returns if any projectiles of projHash type are in a radius around this ped. If true, projPos is filled with the position of that entity.
-- This native was only ever used with projectiles, but may not be limited to.
-- p4 isn't an Entity*, it's actually a Vector3*, which outputs the position of the found entity.
-- p5 is (most likely) ownedByPlayer. (see IS_PROJECTILE_IN_AREA for info)
-- ```
-- ```
-- NativeDB Parameter 3: Entity* entity
function Global.GetProjectileNearPedCoords(ped, weaponHash, radius, ownedByPlayer)
	return _in(0xDFB4138EEFED7B81, ped, _ch(weaponHash), radius, _v, ownedByPlayer, _r)
end
Global.N_0xdfb4138eefed7b81 = Global.GetProjectileNearPedCoords

--- Returns String with radio station name.
function Global.GetRadioStationName(radioStation)
	return _in(0xB28ECA15046CA8B9, radioStation, _r, _s)
end

function Global.GetRainLevel()
	return _in(0x96695E368AD855F3, _r, _rf)
end

--- NativeDB Return Type: BOOL
function Global.GetRandomEventFlag()
	return _in(0xD2D57F1D764117B1, _r, _ri)
end

function Global.GetRandomFloatInRange(startRange, endRange)
	return _in(0x313CE5879CEB6FCD, startRange, endRange, _r, _rf)
end

--- Another extremely useful native.
-- You can use it simply like:
-- if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2))
function Global.GetRandomIntInRange(startRange, endRange)
	return _in(0xD53343AA4FB7DD28, startRange, endRange, _r, _ri)
end

--- Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
-- Ped Types:
-- Any = -1
-- Player = 1
-- Male = 4
-- Female = 5
-- Cop = 6
-- Human = 26
-- SWAT = 27
-- Animal = 28
-- Army = 29
function Global.GetRandomPedAtCoord(x, y, z, xRadius, yRadius, zRadius, pedType)
	return _in(0x876046A8E3A4B71C, x, y, z, xRadius, yRadius, zRadius, pedType, _r, _ri)
end

function Global.GetRandomVehicleBackBumperInSphere(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xB50807EABE20A8DC, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end

--- A getter for [SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#_0xB3B3359379FE77D3).
-- Same as vehicle density multiplier.
-- @return Returns random vehicle density multiplier value.
function Global.GetRandomVehicleDensityMultiplier()
	return _in(0x7b0d00c5, _r, _rf)
end

function Global.GetRandomVehicleFrontBumperInSphere(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xC5574E0AEB86BA68, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end

--- Gets a random vehicle in a sphere at the specified position, of the specified radius.
-- x: The X-component of the position of the sphere.
-- y: The Y-component of the position of the sphere.
-- z: The Z-component of the position of the sphere.
-- radius: The radius of the sphere. Max is 9999.9004.
-- modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
-- flags: The bitwise flags that modifies the behaviour of this function.
function Global.GetRandomVehicleInSphere(x, y, z, radius, modelHash, flags)
	return _in(0x386F6CE5BAF6091C, x, y, z, radius, _ch(modelHash), flags, _r, _ri)
end

--- Not present in the retail version! It's just a nullsub.
-- p0 always true (except in one case)
-- p1 a random vehicle hash loaded in memory
-- p2 0 if success, -1 if failed
function Global.GetRandomVehicleModelInMemory(p0)
	return _in(0x055BF0AC0C34F4FD, p0, _i, _i)
end

function Global.GetRandomVehicleNode(x, y, z, radius, p4, p5, p6)
	return _in(0x93E0DB8440B73A7D, x, y, z, radius, p4, p5, p6, _v, _i, _r)
end

--- Gets a destructible object's handle
-- Example:
-- OBJECT::_B48FCED898292E52(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
-- All found arguments for p4 starts with "des_" like "DES_FIB_Floor" and "des_shipsink".
function Global.GetRayfireMapObject(x, y, z, radius, name)
	return _in(0xB48FCED898292E52, x, y, z, radius, _ts(name), _r, _ri)
end
Global.N_0xb48fced898292e52 = Global.GetRayfireMapObject
Global.GetDesObject = Global.GetRayfireMapObject

function Global.GetRayfireMapObjectAnimPhase(object)
	return _in(0x260EE4FDBDF4DB01, object, _r, _rf)
end
Global.N_0x260ee4fdbdf4db01 = Global.GetRayfireMapObjectAnimPhase
Global.GetDesObjectAnimProgress = Global.GetRayfireMapObjectAnimPhase

--- Returns all commands that are registered in the command system.
-- The data returned adheres to the following layout:
-- ```
-- [
-- {
-- "name": "cmdlist"
-- },
-- {
-- "name": "command1"
-- }
-- ]
-- ```
-- @return An object containing registered commands.
function Global.GetRegisteredCommands()
	return msgpack.unpack(_in(0xd4bef069, _r, _ro))
end

--- Gets the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- Example:
-- PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);
-- PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);
function Global.GetRelationshipBetweenGroups(group1, group2)
	return _in(0x9E6B70061662AE5C, _ch(group1), _ch(group2), _r, _ri)
end

--- Gets the relationship between two peds. This should be called twice (once for each ped).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- (Credits: Inco)
-- Example:
-- PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);
-- PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);
function Global.GetRelationshipBetweenPeds(ped1, ped2)
	return _in(0xEBA5AD3A0EAF7121, ped1, ped2, _r, _ri)
end

function Global.GetRenderingCam()
	return _in(0x5234F9F10919EABA, _r, _ri)
end

function Global.GetReplayStatAtIndex(index)
	return _in(0x8098C8D6597AAE18, index, _r, _ri)
end
Global.N_0x8098c8d6597aae18 = Global.GetReplayStatAtIndex

function Global.GetReplayStatCount()
	return _in(0xDC9274A7EF6B2867, _r, _ri)
end
Global.N_0xdc9274a7ef6b2867 = Global.GetReplayStatCount

function Global.GetReplayStatMissionType()
	return _in(0x2B626A0150E4D449, _r, _ri)
end
Global.N_0x2b626a0150e4d449 = Global.GetReplayStatMissionType

function Global.GetRequestingnightvision()
	return _in(0x35FB78DC42B7BD21, _r)
end
Global.N_0x35fb78dc42b7bd21 = Global.GetRequestingnightvision

function Global.GetResourceByFindIndex(findIndex)
	return _in(0x387246b7, findIndex, _r, _s)
end

function Global.GetResourceKvpFloat(key)
	return _in(0x35bdceea, _ts(key), _r, _rf)
end

function Global.GetResourceKvpInt(key)
	return _in(0x557b586a, _ts(key), _r, _ri)
end

function Global.GetResourceKvpString(key)
	return _in(0x5240da5a, _ts(key), _r, _s)
end

--- Gets the metadata value at a specified key/index from a resource's manifest.
-- See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
-- @param resourceName The resource name.
-- @param metadataKey The key in the resource manifest.
-- @param index The value index, in a range from [0..GET_NUM_RESOURCE_METDATA-1].
function Global.GetResourceMetadata(resourceName, metadataKey, index)
	return _in(0x964bab1d, _ts(resourceName), _ts(metadataKey), index, _r, _s)
end

--- Returns the current state of the specified resource.
-- @param resourceName The name of the resource.
-- @return The resource state. One of `"missing", "started", "starting", "stopped", "stopping", "uninitialized" or "unknown"`.
function Global.GetResourceState(resourceName)
	return _in(0x4039b485, _ts(resourceName), _r, _s)
end

function Global.GetRoadSidePointWithHeading(x, y, z, heading, outPosition)
	return _in(0xA0F8A7517A273C05, x, y, z, heading, _v, _r)
end
Global.N_0xa0f8a7517a273c05 = Global.GetRoadSidePointWithHeading

--- Returns the room hash key from the current gameplay cam.
function Global.GetRoomKeyForGameViewport()
	return _in(0xA6575914D2A0B450, _r, _ri)
end
Global.N_0xa6575914d2a0b450 = Global.GetRoomKeyForGameViewport
Global.GetRoomKeyFromGameplayCam = Global.GetRoomKeyForGameViewport

--- Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
function Global.GetRoomKeyFromEntity(entity)
	return _in(0x47C2A06D4F5F424B, entity, _r, _ri)
end

--- NativeDB Return Type: Vector3
function Global.GetRopeLastVertexCoord(ropeId)
	return _in(0x21BB0FBD3E217C2D, ropeId, _r, _ri)
end

function Global.GetRopeVertexCoord(ropeId, vertex)
	return _in(0xEA61CA8E80F09E4D, ropeId, vertex, _r, _rv)
end

function Global.GetRopeVertexCount(ropeId)
	return _in(0x3655F544CD30F0B5, ropeId, _r, _ri)
end

--- NativeDB Return Type: Vector3
function Global.GetRotationOfVehicleRecordingAtTime(p0, p1, p2)
	return _in(0x2058206FBE79A8AD, p0, p1, _ii(p2) --[[ may be optional ]], _r, _ri)
end

function Global.GetRotationOfVehicleRecordingIdAtTime(id, time)
	return _in(0xF0F2103EFAF8CBA7, id, time, _r, _rv)
end
Global.N_0xf0f2103efaf8cba7 = Global.GetRotationOfVehicleRecordingIdAtTime

--- Gets the height of the specified runtime texture.
-- @param tex A handle to the runtime texture.
-- @return The height in pixels.
function Global.GetRuntimeTextureHeight(tex)
	return _in(0x3574aace, tex, _r, _ri)
end

--- Gets the row pitch of the specified runtime texture, for use when creating data for `SET_RUNTIME_TEXTURE_ARGB_DATA`.
-- @param tex A handle to the runtime texture.
-- @return The row pitch in bytes.
function Global.GetRuntimeTexturePitch(tex)
	return _in(0xca0a085f, tex, _r, _ri)
end

--- Gets the width of the specified runtime texture.
-- @param tex A handle to the runtime texture.
-- @return The width in pixels.
function Global.GetRuntimeTextureWidth(tex)
	return _in(0xc9f55558, tex, _r, _ri)
end

--- When onGround == true outPosition is a position located on the nearest pavement.
-- When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
-- In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
-- 16 works for me, 0 crashed the script.
function Global.GetSafeCoordForPed(x, y, z, onGround, flags)
	return _in(0xB61C8E878A4199CA, x, y, z, onGround, _v, flags, _r)
end

--- NativeDB Parameter 3: float p3
-- NativeDB Parameter 4: float p4
function Global.GetSafePickupCoords(x, y, z, p3, p4)
	return _in(0x6E16BC2503FF1FF0, x, y, z, p3, p4, _r, _rv)
end

--- Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
function Global.GetSafeZoneSize()
	return _in(0xBAF107B6BB2C97F0, _r, _rf)
end

function Global.GetScaleformMovieMethodReturnValueBool(returnValueData)
	return _in(0xD80A80346A45D761, returnValueData, _r)
end
Global.N_0xd80a80346a45d761 = Global.GetScaleformMovieMethodReturnValueBool

--- Used to get a return value from a scaleform function.
-- Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
-- Old description:
-- ```
-- Needs a bit more research, but it seems to return an int.
-- Testing with the scaleform "HACKING_PC" it seems to return an int depending on the clicked App/Program ID
-- "agency_heist3b.ysc", line 71836:
-- if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
-- GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(l_46, "SET_INPUT_EVENT_SELECT");
-- l_45 = GRAPHICS::_END_SCALEFORM_MOVIE_METHOD_RETURN();
-- }
-- if (GRAPHICS::IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(l_45)) {
-- v_13 = GRAPHICS::GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(l_45);
-- if (v_13 == 6) {
-- sub_73269(a_0);
-- }
-- }
-- ```
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
function Global.GetScaleformMovieMethodReturnValueInt(method_return)
	return _in(0x2DE7EFA66B906036, method_return, _r, _ri)
end
Global.N_0x2de7efa66b906036 = Global.GetScaleformMovieMethodReturnValueInt
Global.GetScaleformMovieFunctionReturnInt = Global.GetScaleformMovieMethodReturnValueInt

--- Used to get a return value from a scaleform function.
-- Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns a string in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT` returns an int.
function Global.GetScaleformMovieMethodReturnValueString(method_return)
	return _in(0xE1E258829A885245, method_return, _r, _s)
end
Global.SittingTv = Global.GetScaleformMovieMethodReturnValueString
Global.GetScaleformMovieFunctionReturnString = Global.GetScaleformMovieMethodReturnValueString

--- A getter for [SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME](#_0x7A556143A1C03898).
-- @return Returns scenario ped density multiplier value.
function Global.GetScenarioPedDensityMultiplier()
	return _in(0x77c598b2, _r, _rf)
end

--- Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
-- Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
-- For .NET users...
-- VB:
-- Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
-- Dim x2dp, y2dp As New Native.OutputArgument
-- Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
-- Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
-- End Function
-- C#:
-- Vector2 World3DToScreen2d(Vector3 pos)
-- {
-- var x2dp = new OutputArgument();
-- var y2dp = new OutputArgument();
-- Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
-- return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
-- }
-- //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
-- Used to be called _WORLD3D_TO_SCREEN2D
-- I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
function Global.GetScreenCoordFromWorldCoord(worldX, worldY, worldZ)
	return _in(0x34E82F05DF2974F5, worldX, worldY, worldZ, _f, _f, _r)
end
Global.World3dToScreen2d = Global.GetScreenCoordFromWorldCoord

--- int screenresx,screenresy;
-- GET_SCREEN_RESOLUTION(&screenresx,&screenresy);
-- Hardcoded to always return 1280 x 720
function Global.GetScreenResolution()
	return _in(0x888D57E407E63624, _i, _i)
end

--- Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
-- `SET_SCRIPT_GFX_ALIGN_PARAMS`.
-- @param x The input X coordinate.
-- @param y The input Y coordinate.
-- @param calculatedX A pointer to the calculated X value.
-- @param calculatedY A pointer to the calculated Y value.
function Global.GetScriptGfxPosition(x, y)
	return _in(0x6DD8F5AA635EB4B2, x, y, _f, _f)
end
Global.N_0x6dd8f5aa635eb4b2 = Global.GetScriptGfxPosition

--- Gets the status of a script-assigned task. The hash does not seem to match the actual native name, but is assigned hardcoded from the executable during task creation.
-- Statuses are specific to tasks, in addition '7' means the specified task is not assigned to the ped.
-- A few hashes found in the executable (although not a complete list) can be found at pastebin.com/R9iK6M9W as it was too long for this wiki.
function Global.GetScriptTaskStatus(targetPed, taskHash)
	return _in(0x77F1BEB8863288D5, targetPed, _ch(taskHash), _r, _ri)
end

function Global.GetScriptedCoverPointCoords(coverpoint)
	return _in(0x594A1028FC2A3E85, coverpoint, _r, _rv)
end

function Global.GetSeatPedIsTryingToEnter(ped)
	return _in(0x6F4C85ACD641BCD2, ped, _r, _ri)
end

--- Returns the hash of the weapon.
-- var num7 = WEAPON::GET_SELECTED_PED_WEAPON(num4);
-- sub_27D3(num7);
-- switch (num7)
-- {
-- case 0x24B17070:
-- Also see WEAPON::GET_CURRENT_PED_WEAPON. Difference?
-- -------------------------------------------------------------------------
-- The difference is that GET_SELECTED_PED_WEAPON simply returns the ped's current weapon hash but GET_CURRENT_PED_WEAPON also checks the weapon object and returns true if the hash of the weapon object equals the weapon hash
function Global.GetSelectedPedWeapon(ped)
	return _in(0x0A6DB4965674D243, ped, _r, _ri)
end

--- returned values:
-- 0 to 7 = task that's currently in progress, 0 meaning the first one.
function Global.GetSequenceProgress(ped)
	return _in(0x00A9010CFE1E3533, ped, _r, _ri)
end

--- Parameters:
-- rayHandle - Ray Handle from a casted ray, as returned by CAST_RAY_POINT_TO_POINT
-- hit - Where to store whether or not it hit anything. False is when the ray reached its destination.
-- endCoords - Where to store the world-coords of where the ray was stopped (by hitting its desired max range or by colliding with an entity/the map)
-- surfaceNormal - Where to store the surface-normal coords (NOT relative to the game world) of where the entity was hit by the ray
-- entityHit - Where to store the handle of the entity hit by the ray
-- Returns:
-- Result? Some type of enum.
-- NOTE: To get the offset-coords of where the ray hit relative to the entity that it hit (which is NOT the same as surfaceNormal), you can use these two natives:
-- Vector3 offset = ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(entityHit, endCoords.x, endCoords.y, endCoords.z);
-- Vector3 entitySpotCoords = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entityHit, offset.x, offset.y, offset.z);
-- Use ENTITY::GET_ENTITY_TYPE(entityHit) to quickly distinguish what type of entity you hit (ped/vehicle/object - 1/2/3)
function Global.GetShapeTestResult(rayHandle)
	return _in(0x3D87450E15D98694, rayHandle, _i --[[ actually bool ]], _v, _v, _i, _r, _ri)
end
Global.GetRaycastResult = Global.GetShapeTestResult

--- behaves exactly the same way as GET_SHAPE_TEST_RESULT except it has one extra parameter (_materialHash).
-- Quick disassembly seems to indicate that the unknown is a hash. EDIT: Seems to be the hash of the hit material or surface type.
-- found a materialFX.dat list of them but not sure if it has to do with this native yet.
-- materials (full list): pastebin.com/gyHjsYBK
function Global.GetShapeTestResultIncludingMaterial(rayHandle)
	return _in(0x65287525D951F6BE, rayHandle, _i --[[ actually bool ]], _v, _v, _i, _i, _r, _ri)
end
Global.N_0x65287525d951f6be = Global.GetShapeTestResultIncludingMaterial
Global.GetShapeTestResultEx = Global.GetShapeTestResultIncludingMaterial

--- Returns number of possible values of the componentId argument of GET_FORCED_COMPONENT.
function Global.GetShopPedApparelForcedComponentCount(componentHash)
	return _in(0xC6B9DB42C04DD8C3, _ch(componentHash), _r, _ri)
end
Global.GetNumForcedComponents = Global.GetShopPedApparelForcedComponentCount

function Global.GetShopPedApparelForcedPropCount(p0)
	return _in(0x017568A8182D98A6, p0, _r, _ri)
end
Global.N_0x017568a8182d98a6 = Global.GetShopPedApparelForcedPropCount

function Global.GetShopPedApparelVariantComponentCount(componentHash)
	return _in(0xC17AD0E5752BECDA, _ch(componentHash), _r, _ri)
end
Global.N_0xc17ad0e5752becda = Global.GetShopPedApparelVariantComponentCount

function Global.GetShopPedApparelVariantPropCount(propHash)
	return _in(0xD40AAC51E8E4C663, _ch(propHash), _r, _ri)
end
Global.N_0xd40aac51e8e4c663 = Global.GetShopPedApparelVariantPropCount

--- More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
function Global.GetShopPedComponent(componentHash, outComponent)
	return _in(0x74C0E2A57EC66760, _ch(componentHash), _ii(outComponent) --[[ may be optional ]])
end

function Global.GetShopPedOutfit(p0, p1)
	return _in(0xB7952076E444979D, p0, _ii(p1) --[[ may be optional ]])
end

--- outfit = a structure passing though it - see GET_SHOP_PED_QUERY_OUTFIT
-- slot - outfit slot
-- item - hold 3 ints in a struct, you can use Vector3 structure
function Global.GetShopPedOutfitComponentVariant(outfit, slot, item)
	return _in(0x19F2A026EDF0013F, outfit, slot, _ii(item) --[[ may be optional ]], _r)
end
Global.GetPropFromOutfit = Global.GetShopPedOutfitComponentVariant

function Global.GetShopPedOutfitLocate(p0)
	return _in(0x073CA26B079F956E, p0, _r, _ri)
end
Global.N_0x073ca26b079f956e = Global.GetShopPedOutfitLocate

function Global.GetShopPedOutfitPropVariant(outfit, slot, item)
	return _in(0xA9F9C2E0FDE11CBB, outfit, slot, _ii(item) --[[ may be optional ]], _r)
end
Global.N_0xa9f9c2e0fde11cbb = Global.GetShopPedOutfitPropVariant

--- NativeDB Parameter 0: Hash componentHash
function Global.GetShopPedProp(componentHash, outProp)
	return _in(0x5D5CAFF661DDF6FC, componentHash, _ii(outProp) --[[ may be optional ]])
end
Global.N_0x5d5caff661ddf6fc = Global.GetShopPedProp

function Global.GetShopPedQueryComponent(componentId, outComponent)
	return _in(0x249E310B2D920699, componentId, _ii(outComponent) --[[ may be optional ]])
end

--- struct Outfit_s
-- {
-- int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;
-- int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,
-- armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;
-- };
function Global.GetShopPedQueryOutfit(p0, outfit)
	return _in(0x6D793F03A631FE56, p0, _ii(outfit) --[[ may be optional ]])
end

function Global.GetShopPedQueryProp(p0, p1)
	return _in(0xDE44A00999B2837D, p0, _ii(p1) --[[ may be optional ]])
end

--- NativeDB Return Type: float
function Global.GetSnowLevel()
	return _in(0xC5868A966E5BE3AE, _r, _ri)
end

function Global.GetSoundId()
	return _in(0x430386FE9BF80B45, _r, _ri)
end

function Global.GetSoundIdFromNetworkId(netId)
	return _in(0x75262FD12D0A1C84, netId, _r, _ri)
end
Global.N_0x75262fd12d0a1c84 = Global.GetSoundIdFromNetworkId

--- locked is 0 if no door is found
-- locked is 0 if door is unlocked
-- locked is 1 if door is found and unlocked.
-- -------------
-- the locked bool is either 0(unlocked)(false) or 1(locked)(true)
function Global.GetStateOfClosestDoorOfType(type, x, y, z)
	return _in(0xEDC1A5B84AEF33FF, _ch(type), x, y, z, _i --[[ actually bool ]], _f)
end

--- Get a destructible object's state.
-- Substract 1 to get the real state.
-- See SET_STATE_OF_RAYFIRE_MAP_OBJECT to see the different states
-- For example, if the object just spawned (state 2), the native will return 3.
function Global.GetStateOfRayfireMapObject(object)
	return _in(0x899BA936634A322E, object, _r, _ri)
end
Global.N_0x899ba936634a322e = Global.GetStateOfRayfireMapObject
Global.GetDesObjectState = Global.GetStateOfRayfireMapObject

--- 0 = succeeded
-- 1 = pending
-- 2 = failed
-- GET_ST*
function Global.GetStatusOfTextureDownload(p0)
	return _in(0x8BD6C6DEA20E82C6, p0, _r, _ri)
end
Global.N_0x8bd6c6dea20e82c6 = Global.GetStatusOfTextureDownload

function Global.GetStreamPlayTime()
	return _in(0x4E72BBDBCA58A3DB, _r, _ri)
end

--- Determines the name of the street which is the closest to the given coordinates.
-- x,y,z - the coordinates of the street
-- streetName - returns a hash to the name of the street the coords are on
-- crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
-- Note: the names are returned as hashes, the strings can be returned using the function UI::GET_STREET_NAME_FROM_HASH_KEY.
function Global.GetStreetNameAtCoord(x, y, z)
	return _in(0x2EB41072B4C1E4C0, x, y, z, _i, _i)
end

--- This functions converts the hash of a street name into a readable string.
-- For how to get the hashes, see PATHFIND::GET_STREET_NAME_AT_COORD.
function Global.GetStreetNameFromHashKey(hash)
	return _in(0xD0EF8A959B8A4CB9, _ch(hash), _r, _s)
end

function Global.GetSynchronizedScenePhase(sceneID)
	return _in(0xE4A310B1D7FA73CC, sceneID, _r, _rf)
end

function Global.GetSynchronizedSceneRate(sceneID)
	return _in(0xD80932D577274D40, sceneID, _r, _rf)
end

function Global.GetTaskMoveNetworkEvent(ped, eventName)
	return _in(0xB4F47213DF45A64C, ped, _ts(eventName), _r)
end
Global.N_0xb4f47213df45a64c = Global.GetTaskMoveNetworkEvent

--- Found in scripts:
-- if (AI::_A7FFBA498E4AAF67(l_9BC, "Run")) {
-- if (AI::_A7FFBA498E4AAF67(l_9BC, "Escape")) {
function Global.GetTaskMoveNetworkSignalBool(ped, signalName)
	return _in(0xA7FFBA498E4AAF67, ped, _ts(signalName), _r)
end
Global.N_0xa7ffba498e4aaf67 = Global.GetTaskMoveNetworkSignalBool

--- NativeDB Introduced: v1493
-- @param ped :
-- @param signalName :
function Global.GetTaskMoveNetworkSignalFloat(ped, signalName)
	return _in(0x44AB0B3AFECCE242, ped, _ts(signalName), _r, _rf)
end

--- If the function fails, returns "Unknown".
-- Could be task (sequence) name. Needs more research.
function Global.GetTaskMoveNetworkState(ped)
	return _in(0x717E4D1F2048376D, ped, _r, _s)
end
Global.N_0x717e4d1f2048376d = Global.GetTaskMoveNetworkState

--- Character types:
-- ```
-- 0 = Michael,
-- 1 = Franklin,
-- 2 = Trevor,
-- 3 = MPMale,
-- 4 = MPFemale
-- ```
-- ```csharp
-- enum TattooZoneData
-- {
-- ZONE_TORSO = 0,
-- ZONE_HEAD = 1,
-- ZONE_LEFT_ARM = 2,
-- ZONE_RIGHT_ARM = 3,
-- ZONE_LEFT_LEG = 4,
-- ZONE_RIGHT_LEG = 5,
-- ZONE_UNKNOWN = 6,
-- ZONE_NONE = 7,
-- };
-- struct outComponent
-- {
-- // these vars are suffixed with 4 bytes of padding each.
-- uint unk;
-- int unk2;
-- uint tattooCollectionHash;
-- uint tattooNameHash;
-- int unk3;
-- TattooZoneData zoneId;
-- uint unk4;
-- uint unk5;
-- // maybe more, not sure exactly, decompiled scripts are very vague around this part.
-- }
-- ```
-- @param characterType Character types 0 = Michael, 1 = Franklin, 2 = Trevor, 3 = MPMale, 4 = MPFemale.
-- @param decorationIndex Tattoo index, value between 0 and GetNumDecorations(characterType).
-- @param outComponent The referenced struct.
-- @return A bool indicating that the tattoo data could be fetched(?)
function Global.GetTattooCollectionData(characterType, decorationIndex, outComponent)
	return _in(0xFF56381874F82086, characterType, decorationIndex, _ii(outComponent) --[[ may be optional ]], _r)
end
Global.N_0xff56381874f82086 = Global.GetTattooCollectionData

function Global.GetTennisSwingAnimComplete(ped)
	return _in(0x17DF68D720AA77F8, ped, _r)
end
Global.N_0x17df68d720aa77f8 = Global.GetTennisSwingAnimComplete

--- This get's the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
function Global.GetTextScaleHeight(size, font)
	return _in(0xDB88A37483346780, size, font, _r, _rf)
end
Global.N_0xdb88a37483346780 = Global.GetTextScaleHeight

--- Returns a substring of a specified length starting at a specified position.
-- Example:
-- // Get "STRING" text from "MY_STRING"
-- subStr = UI::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);
function Global.GetTextSubstring(text, position, length)
	return _in(0x169BD9382084C8C0, _ts(text), position, length, _r, _s)
end

--- Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
-- NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
-- Example:
-- // Condensed example of how Rockstar uses this function
-- strLen = UI::GET_LENGTH_OF_LITERAL_STRING(GAMEPLAY::GET_ONSCREEN_KEYBOARD_RESULT());
-- subStr = UI::_GET_TEXT_SUBSTRING_SAFE(GAMEPLAY::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
-- --
-- "fm_race_creator.ysc", line 85115:
-- // parameters modified for clarity
-- BOOL sub_8e5aa(char *text, int length) {
-- for (i = 0; i <= (length - 2); i += 1) {
-- if (!GAMEPLAY::ARE_STRINGS_EQUAL(UI::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {
-- return FALSE;
-- }
-- }
-- return TRUE;
-- }
function Global.GetTextSubstringSafe(text, position, length, maxLength)
	return _in(0xB2798643312205C5, _ts(text), position, length, maxLength, _r, _s)
end

--- Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
-- Example:
-- // Get "STRING" text from "MY_STRING"
-- subStr = UI::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);
-- // Overflows are possibly replaced with underscores (needs verification)
-- subStr = UI::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?
function Global.GetTextSubstringSlice(text, startPosition, endPosition)
	return _in(0xCE94AEBA5D82908A, _ts(text), startPosition, endPosition, _r, _s)
end

--- Returns the texture resolution of the passed texture dict+name.
-- Note: Most texture resolutions are doubled compared to the console version of the game.
function Global.GetTextureResolution(textureDict, textureName)
	return _in(0x35736EE65BD00C11, _ts(textureDict), _ts(textureName), _r, _rv)
end

function Global.GetThisScriptName()
	return _in(0x442E0A7EDE4A738A, _r, _s)
end

--- Previously named, '_FORMAT_TIME' for people who can't find it's uses in decompiled scripts.
function Global.GetTimeAsString(time)
	return _in(0x9E23B1777A927DAD, time, _r, _s)
end
Global.FormatTime = Global.GetTimeAsString

--- Subtracts the second argument from the first.
function Global.GetTimeDifference(timeA, timeB)
	return _in(0xA2C6FC031D46FFF0, timeA, timeB, _r, _ri)
end

--- GET_TIME_SINCE_???
-- ```
-- ```
-- NativeDB Parameter 1: Hash weaponHash
function Global.GetTimeOfLastPedWeaponDamage(ped, weaponHash)
	return _in(0x36B77BB84687C318, ped, weaponHash, _r, _ri)
end
Global.N_0x36b77bb84687c318 = Global.GetTimeOfLastPedWeaponDamage

--- Adds the first argument to the second.
function Global.GetTimeOffset(timeA, timeB)
	return _in(0x017008CCDAD48503, timeA, timeB, _r, _ri)
end

function Global.GetTimePositionInRecording(p0)
	return _in(0x5746F3A7AB7FE544, p0, _r, _rf)
end

--- Returns the time since the character was arrested in (ms) milliseconds.
-- example
-- var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
-- UI.DrawSubtitle(time.ToString());
-- if player has not been arrested, the int returned will be -1.
function Global.GetTimeSinceLastArrest()
	return _in(0x5063F92F07C2A316, _r, _ri)
end

--- Returns the time since the character died in (ms) milliseconds.
-- example
-- var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
-- UI.DrawSubtitle(time.ToString());
-- if player has not died, the int returned will be -1.
function Global.GetTimeSinceLastDeath()
	return _in(0xC7034807558DDFCA, _r, _ri)
end

--- The number of milliseconds since last inputGroup registered pressed
function Global.GetTimeSinceLastInput(inputGroup)
	return _in(0xD7D22F5592AED8BA, inputGroup, _r, _ri)
end
Global.N_0xd7d22f5592aed8ba = Global.GetTimeSinceLastInput

function Global.GetTimeSincePlayerDroveAgainstTraffic(player)
	return _in(0xDB89591E290D9182, player, _r, _ri)
end

function Global.GetTimeSincePlayerDroveOnPavement(player)
	return _in(0xD559D2BE9E37853B, player, _r, _ri)
end

function Global.GetTimeSincePlayerHitPed(player)
	return _in(0xE36A25322DC35F42, player, _r, _ri)
end

function Global.GetTimeSincePlayerHitVehicle(player)
	return _in(0x5D35ECF3A81A0EE0, player, _r, _ri)
end

--- Only use for this in the PC scripts is:
-- if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
-- For a full list, see here: pastebin.com/cnk7FTF2
-- can someone update this pastebin???
function Global.GetTimecycleModifierIndex()
	return _in(0xFDF3D97C674AFB66, _r, _ri)
end

function Global.GetTimecycleTransitionModifierIndex()
	return _in(0x459FD2C8D0AB78BC, _r, _ri)
end
Global.N_0x459fd2c8d0ab78bc = Global.GetTimecycleTransitionModifierIndex

function Global.GetTogglePausedRenderphasesStatus()
	return _in(0xEB3DAC2C86001E5E, _r)
end
Global.N_0xeb3dac2c86001e5e = Global.GetTogglePausedRenderphasesStatus

--- NativeDB Return Type: float
function Global.GetTotalDurationOfVehicleRecording(p0, p1)
	return _in(0x0E48D1C262390950, p0, p1, _r, _ri)
end

function Global.GetTotalDurationOfVehicleRecordingId(p0)
	return _in(0x102D125411A7B6E6, p0, _r, _rf)
end

function Global.GetTotalScInboxIds()
	return _in(0x03A93FF1A2CA0864, _r, _ri)
end
Global.N_0x03a93ff1a2ca0864 = Global.GetTotalScInboxIds

function Global.GetTotalSuccessfulStuntJumps()
	return _in(0x6856EC3D35C81EA4, _r, _ri)
end
Global.N_0x6856ec3d35c81ea4 = Global.GetTotalSuccessfulStuntJumps

--- Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
function Global.GetTrainCarriage(train, trailerNumber)
	return _in(0x08AAFD0814722BC3, train, trailerNumber, _r, _ri)
end

function Global.GetTrainCurrentTrackNode(train)
	return _in(0xe015e854, train, _r, _ri)
end

function Global.GetTvChannel()
	return _in(0xFC1E275A90D39995, _r, _ri)
end

function Global.GetTvVolume()
	return _in(0x2170813D3DD8661B, _r, _rf)
end

--- 0.0 = no memory used
-- 1.0 = all memory used
-- Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
-- GET_*
function Global.GetUsedCreatorModelMemoryPercentage()
	return _in(0x3D3D8B3BE5A83D35, _r, _rf)
end
Global.N_0x3d3d8b3be5a83d35 = Global.GetUsedCreatorModelMemoryPercentage

--- Returns the user's defined langauge as ID
-- english: 12
-- french = 7
-- german = 22
-- italian = 21
-- japanese = 9
-- korean = 17
-- portuguese = 16
-- spanish = 10
-- russian = 25
function Global.GetUserLanguageId()
	return _in(0xA8AE43AEC1A61314, _r, _ri)
end

--- Gets whether or not NIGHTVISION is Active.
-- Note:  When nightvision is actually active, this native will return TRUE!
function Global.GetUsingnightvision()
	return _in(0x2202A3F42C8E5F79, _r)
end
Global.IsNightvisionInactive = Global.GetUsingnightvision
Global.IsNightvisionActive = Global.GetUsingnightvision

--- Returns whether or not SEETHROUGH is active.
function Global.GetUsingseethrough()
	return _in(0x44B80ABAB9D80BD3, _r)
end
Global.IsSeethroughActive = Global.GetUsingseethrough

--- gets current UTC time
function Global.GetUtcTime()
	return _in(0x8117E09A19EEF4D3, _i, _i, _i, _i, _i, _i)
end
Global.GetLocalTime = Global.GetUtcTime
Global.GetUtcTime = Global.GetUtcTime

function Global.GetVariantComponent(componentHash, componentId)
	return _in(0x6E11F282F11863B6, _ch(componentHash), componentId, _i, _i, _i)
end

function Global.GetVariantProp(p0, p1, p2, p3, p4)
	return _in(0xD81B7F27BC773E66, p0, p1, p2, p3, p4)
end
Global.N_0xd81b7f27bc773e66 = Global.GetVariantProp

--- static - max acceleration
function Global.GetVehicleAcceleration(vehicle)
	return _in(0x5DD35C8D074E57AE, vehicle, _r, _rf)
end

function Global.GetVehicleAlarmTimeLeft(vehicle)
	return _in(0xc62aac98, vehicle, _r, _ri)
end

--- Returns attached vehicle (Vehicle in parameter must be cargobob)
function Global.GetVehicleAttachedToCargobob(cargobob)
	return _in(0x873B82D42AC2B9E5, cargobob, _r, _ri)
end

--- Get the vehicle attached to the object/entity? May also just convert it to a vehicle, but I'm not sure.
function Global.GetVehicleAttachedToEntity(entity)
	return _in(0x375E7FC44F21C8AB, entity, _r, _ri)
end
Global.N_0x375e7fc44f21c8ab = Global.GetVehicleAttachedToEntity

--- Seems related to vehicle health, like the one in IV.
-- Max 1000, min 0.
-- Vehicle does not necessarily explode or become undrivable at 0.
function Global.GetVehicleBodyHealth(vehicle)
	return _in(0xF271147EB7B40F12, vehicle, _r, _rf)
end

--- 0 min 100 max
-- starts at 100
-- Seams to have health zones
-- Front of vehicle when damaged goes from 100-50 and stops at 50.
-- Rear can be damaged from 100-0
-- Only tested with two cars.
-- any idea how this differs from the first one?
-- --
-- May return the vehicle health on a scale of 0.0 - 100.0 (needs to be confirmed)
-- example:
-- v_F = ENTITY::GET_ENTITY_MODEL(v_3);
-- if (((v_F == ${tanker}) || (v_F == ${armytanker})) || (v_F == ${tanker2})) {
-- if (VEHICLE::_GET_VEHICLE_BODY_HEALTH_2(v_3) <= 1.0) {
-- NETWORK::NETWORK_EXPLODE_VEHICLE(v_3, 1, 1, -1);
-- }
-- }
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
-- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
-- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
-- NativeDB Added Parameter 7: Any p6
function Global.GetVehicleBodyHealth_2(vehicle)
	return _in(0xB8EF61207C2393A9, vehicle, _r, _rf)
end

--- Gets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
-- In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#_0xBFE5756E7407064A)).
-- Use [`_SET_AIRCRAFT_BOMB_COUNT`](#_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
-- @param aircraft The vehicle to get the amount of bombs from.
-- @return An int indicating the amount of bombs remaining on that plane.
function Global.GetVehicleBombCount(aircraft)
	return _in(0xEA12BD130D7569A1, aircraft, _r, _ri)
end
Global.N_0xea12bd130d7569a1 = Global.GetVehicleBombCount
Global.GetAircraftBombCount = Global.GetVehicleBombCount

--- iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);
-- if (iVar3 == joaat("weapon_stickybomb"))
-- {
-- func_171(726);
-- iLocal_260 = 1;
-- }
function Global.GetVehicleCauseOfDestruction(vehicle)
	return _in(0xE495D1EF4C91FD20, vehicle, _r, _ri)
end

--- Returns an int
-- Vehicle Classes:
-- 0: Compacts
-- 1: Sedans
-- 2: SUVs
-- 3: Coupes
-- 4: Muscle
-- 5: Sports Classics
-- 6: Sports
-- 7: Super
-- 8: Motorcycles
-- 9: Off-road
-- 10: Industrial
-- 11: Utility
-- 12: Vans
-- 13: Cycles
-- 14: Boats
-- 15: Helicopters
-- 16: Planes
-- 17: Service
-- 18: Emergency
-- 19: Military
-- 20: Commercial
-- 21: Trains
-- char buffer[128];
-- std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));
-- char* className = UI::_GET_LABEL_TEXT(buffer);
function Global.GetVehicleClass(vehicle)
	return _in(0x29439776AAA00A62, vehicle, _r, _ri)
end

function Global.GetVehicleClassEstimatedMaxSpeed(vehicleClass)
	return _in(0x00C09F246ABEDD82, vehicleClass, _r, _rf)
end
Global.N_0x00c09f246abedd82 = Global.GetVehicleClassEstimatedMaxSpeed
Global.GetVehicleClassMaxSpeed = Global.GetVehicleClassEstimatedMaxSpeed

--- For a full enum, see here : pastebin.com/i2GGAjY0
-- char buffer[128];
-- std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
-- char* className = UI::_GET_LABEL_TEXT(buffer);
function Global.GetVehicleClassFromName(modelHash)
	return _in(0xDEDF1C8BD47C2200, _ch(modelHash), _r, _ri)
end

function Global.GetVehicleClassMaxAcceleration(vehicleClass)
	return _in(0x2F83E7E45D9EA7AE, vehicleClass, _r, _rf)
end

function Global.GetVehicleClassMaxAgility(vehicleClass)
	return _in(0x4F930AD022D6DE3B, vehicleClass, _r, _rf)
end

function Global.GetVehicleClassMaxBraking(vehicleClass)
	return _in(0x4BF54C16EC8FEC03, vehicleClass, _r, _rf)
end

function Global.GetVehicleClassMaxTraction(vehicleClass)
	return _in(0xDBC86D85C5059461, vehicleClass, _r, _rf)
end

function Global.GetVehicleClutch(vehicle)
	return _in(0x1dad4583, vehicle, _r, _rf)
end

--- What's this for? Primary and Secondary RGB have their own natives and this one doesn't seem specific.
function Global.GetVehicleColor(vehicle)
	return _in(0xF3CC740D36221548, vehicle, _i, _i, _i)
end

function Global.GetVehicleColourCombination(vehicle)
	return _in(0x6A842D197F845D56, vehicle, _r, _ri)
end

function Global.GetVehicleColours(vehicle)
	return _in(0xA19435F193E081AC, vehicle, _i, _i)
end

--- Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
-- Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#_0x9BDA23BF666F0855) to set the current amount.
-- @param aircraft The vehicle to get the amount of countermeasures from.
-- @return An int indicating the amount of countermeasures remaining on that plane.
function Global.GetVehicleCountermeasureCount(aircraft)
	return _in(0xF846AA63DF56B804, aircraft, _r, _ri)
end
Global.N_0xf846aa63df56b804 = Global.GetVehicleCountermeasureCount
Global.GetAircraftCountermeasureCount = Global.GetVehicleCountermeasureCount

function Global.GetVehicleCrewEmblemRequestState(vehicle, p1)
	return _in(0xFE26117A5841B2FF, vehicle, p1, _r, _ri)
end
Global.N_0xfe26117a5841b2ff = Global.GetVehicleCrewEmblemRequestState

function Global.GetVehicleCurrentAcceleration(vehicle)
	return _in(0x7f72adf3, vehicle, _r, _rf)
end

function Global.GetVehicleCurrentGear(vehicle)
	return _in(0xb4f4e566, vehicle, _r, _ri)
end

function Global.GetVehicleCurrentRpm(vehicle)
	return _in(0xe7b12b54, vehicle, _r, _rf)
end

function Global.GetVehicleCustomPrimaryColour(vehicle)
	return _in(0xB64CF2CCA9D95F52, vehicle, _i, _i, _i)
end

function Global.GetVehicleCustomSecondaryColour(vehicle)
	return _in(0x8389CD56CA8072DC, vehicle, _i, _i, _i)
end

function Global.GetVehicleDashboardColour(vehicle, color)
	return _in(0xB7635E80A5C31BFF, vehicle, _ii(color) --[[ may be optional ]])
end

function Global.GetVehicleDashboardSpeed(vehicle)
	return _in(0x9aad420e, vehicle, _r, _rf)
end

--- Returns hash of default vehicle horn
-- Hash is stored in audVehicleAudioEntity
function Global.GetVehicleDefaultHorn(vehicle)
	return _in(0x02165D55000219AC, vehicle, _r, _ri)
end

function Global.GetVehicleDefaultHornIgnoreMods(vehicle)
	return _in(0xACB5DCCA1EC76840, vehicle, _r, _ri)
end
Global.N_0xacb5dcca1ec76840 = Global.GetVehicleDefaultHornIgnoreMods
Global.GetVehicleHornHash = Global.GetVehicleDefaultHornIgnoreMods

--- NativeDB Introduced: v1365
-- @param vehicle :
function Global.GetVehicleDefaultHornVariation(vehicle)
	return _in(0xD53F3A29BCE2580E, vehicle, _r, _ri)
end
Global.N_0xd53f3a29bce2580e = Global.GetVehicleDefaultHornVariation

--- The only example I can find of this function in the scripts, is this:
-- struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- PC scripts:
-- v_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);
function Global.GetVehicleDeformationAtPos(vehicle, offsetX, offsetY, offsetZ)
	return _in(0x4EC6CFBC7B2E9536, vehicle, offsetX, offsetY, offsetZ, _r, _rv)
end

--- A getter for [SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#_0x245A6883D966D537).
-- @return Returns vehicle density multiplier value.
function Global.GetVehicleDensityMultiplier()
	return _in(0xef7c6538, _r, _rf)
end

--- Dirt level 0..15
function Global.GetVehicleDirtLevel(vehicle)
	return _in(0x8F17BC8BA08DA62B, vehicle, _r, _rf)
end

--- example in vb:
-- Public Shared Function Get_Vehicle_Door_Angle(Vehicle As Vehicle, Door As VehicleDoor) As Single
-- Return Native.Function.Call(Of Single)(Hash.GET_VEHICLE_DOOR_ANGLE_RATIO, Vehicle.Handle, Door)
-- End Function
-- I'm Not MentaL
function Global.GetVehicleDoorAngleRatio(vehicle, door)
	return _in(0xFE3F9C29F7B32BD5, vehicle, door, _r, _rf)
end

--- enum VehicleLockStatus = {
-- None = 0,
-- Unlocked = 1,
-- Locked = 2,
-- LockedForPlayer = 3,
-- StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
-- CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
-- CanBeBrokenIntoPersist = 8, -- Can be broken into persist
-- CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
-- }
function Global.GetVehicleDoorLockStatus(vehicle)
	return _in(0x25BC98A59C2EA962, vehicle, _r, _ri)
end

function Global.GetVehicleDoorsLockedForPlayer(vehicle, player)
	return _in(0xF6AF6CB341349015, vehicle, player, _r)
end

--- Gets a vehicle's multiplier used with a wheel's GET_VEHICLE_WHEEL_STEERING_ANGLE to determine the angle the wheel is rendered.
-- @param vehicle :
function Global.GetVehicleDrawnWheelAngleMult(vehicle)
	return _in(0x21c1da8e, vehicle, _r, _rf)
end

--- Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
-- Minimum: -4000
-- Maximum: 1000
-- -4000: Engine is destroyed
-- 0 and below: Engine catches fire and health rapidly declines
-- 300: Engine is smoking and losing functionality
-- 1000: Engine is perfect
function Global.GetVehicleEngineHealth(vehicle)
	return _in(0xC45D23BAF168AAB8, vehicle, _r, _rf)
end

function Global.GetVehicleEngineTemperature(vehicle)
	return _in(0xf4f495cb, vehicle, _r, _rf)
end

--- formerly known as _GET_VEHICLE_PAINT_FADE
-- The result is a value from 0-1, where 0 is fresh paint.
-- -----------------------------------------------------------------------
-- The actual value isn't stored as a float but as an unsigned char (BYTE).
function Global.GetVehicleEnveffScale(vehicle)
	return _in(0xA82819CAC9C4C403, vehicle, _r, _rf)
end
Global.GetVehiclePaintFade = Global.GetVehicleEnveffScale

function Global.GetVehicleEstimatedMaxSpeed(vehicle)
	return _in(0x53AF99BAA671CA47, vehicle, _r, _rf)
end
Global.N_0x53af99baa671ca47 = Global.GetVehicleEstimatedMaxSpeed
Global.GetVehicleMaxSpeed = Global.GetVehicleEstimatedMaxSpeed

function Global.GetVehicleExtraColours(vehicle)
	return _in(0x3BC4245933A166F7, vehicle, _i, _i)
end

function Global.GetVehicleFuelLevel(vehicle)
	return _in(0x5f739bb8, vehicle, _r, _rf)
end

function Global.GetVehicleGravityAmount(vehicle)
	return _in(0xb48a1292, vehicle, _r, _rf)
end

function Global.GetVehicleHandbrake(vehicle)
	return _in(0x483b013c, vehicle, _r)
end

--- Returns the effective handling data of a vehicle as a floating-point value.
-- Example: `local fSteeringLock = GetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return A floating-point value.
function Global.GetVehicleHandlingFloat(vehicle, class_, fieldName)
	return _in(0x642fc12f, vehicle, _ts(class_), _ts(fieldName), _r, _rf)
end

--- Returns the effective handling data of a vehicle as an integer value.
-- Example: `local modelFlags = GetVehicleHandlingInt(vehicle, 'CHandlingData', 'strModelFlags')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return An integer.
function Global.GetVehicleHandlingInt(vehicle, class_, fieldName)
	return _in(0x27396c75, vehicle, _ts(class_), _ts(fieldName), _r, _ri)
end

--- Returns the effective handling data of a vehicle as a vector value.
-- Example: `local inertiaMultiplier = GetVehicleHandlingVector(vehicle, 'CHandlingData', 'vecInertiaMultiplier')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return An integer.
function Global.GetVehicleHandlingVector(vehicle, class_, fieldName)
	return _in(0xfb341304, vehicle, _ts(class_), _ts(fieldName), _r, _rv)
end

function Global.GetVehicleHasKers(vehicle)
	return _in(0x50634E348C8D44EF, vehicle, _r)
end
Global.N_0x50634e348c8d44ef = Global.GetVehicleHasKers
Global.HasVehicleKersBoost = Global.GetVehicleHasKers

--- NativeDB Introduced: v1180
-- @param vehicle :
function Global.GetVehicleHasLandingGear(vehicle)
	return _in(0xE43701C36CAFF1A4, vehicle, _r, _ri)
end
Global.N_0xe43701c36caff1a4 = Global.GetVehicleHasLandingGear

function Global.GetVehicleHighGear(vehicle)
	return _in(0xf1d1d689, vehicle, _r, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.GetVehicleIndexFromEntityIndex(entity)
	return _in(0x4B53F92932ADFAC0, entity, _r, _ri)
end

--- Gets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both
-- @return An integer.
function Global.GetVehicleIndicatorLights(vehicle)
	return _in(0x83070354, vehicle, _r, _ri)
end

function Global.GetVehicleInteriorColour(vehicle, color)
	return _in(0x7D1464D472D32136, vehicle, _ii(color) --[[ may be optional ]])
end

function Global.GetVehicleLayoutHash(vehicle)
	return _in(0x28D37D4F71AC5C58, vehicle, _r, _ri)
end

function Global.GetVehicleLightsState(vehicle)
	return _in(0xB91B4C20085BD12F, vehicle, _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- -1 = no livery
function Global.GetVehicleLivery(trailers2)
	return _in(0x2BB9230590DA5E8A, trailers2, _r, _ri)
end

--- Returns -1 if the vehicle has no livery
function Global.GetVehicleLiveryCount(vehicle)
	return _in(0x87B63E25A529D526, vehicle, _r, _ri)
end

--- The resulting entity can be a Vehicle or Ped.
-- =========================
-- on a side note watching changes in memory this will only store your ped's entityPoolAddress if it's your personal vehicle. So seems to be related to personal vehicles or atleast a specific decor of it maybe.
function Global.GetVehicleLockOnTarget(vehicle, entity)
	return _in(0x8F5EBAB1F260CFCE, vehicle, _ii(entity) --[[ may be optional ]], _r)
end
Global.GetVehicleOwner = Global.GetVehicleLockOnTarget

function Global.GetVehicleMaxBraking(vehicle)
	return _in(0xAD7E85FC227197C4, vehicle, _r, _rf)
end

function Global.GetVehicleMaxNumberOfPassengers(vehicle)
	return _in(0xA7C4F2C6E744A550, vehicle, _r, _ri)
end

function Global.GetVehicleMaxTraction(vehicle)
	return _in(0xA132FB5370554DB0, vehicle, _r, _rf)
end

--- In b944, there are 50 (0 - 49) mod types.
-- Returns -1 if the vehicle mod is stock
function Global.GetVehicleMod(vehicle, modType)
	return _in(0x772960298DA26FDB, vehicle, modType, _r, _ri)
end

--- p3 seems to be the pearlescent highlight color.
-- Seems redondant with void GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int *pearlescentColor, int *wheelColor)
function Global.GetVehicleModColor_1(vehicle)
	return _in(0xE8D65CA700C9A693, vehicle, _i, _i, _i)
end

--- returns a string which is the codename of the vehicle's currently selected primary color
-- p1 is always 0
function Global.GetVehicleModColor_1Name(vehicle, p1)
	return _in(0xB45085B721EFD38C, vehicle, p1, _r, _s)
end
Global.N_0xb45085b721efd38c = Global.GetVehicleModColor_1Name

function Global.GetVehicleModColor_2(vehicle)
	return _in(0x81592BE4E3878728, vehicle, _i, _i)
end

--- returns a string which is the codename of the vehicle's currently selected secondary color
function Global.GetVehicleModColor_2Name(vehicle)
	return _in(0x4967A516ED23A5A1, vehicle, _r, _s)
end
Global.N_0x4967a516ed23a5a1 = Global.GetVehicleModColor_2Name

--- Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
-- ```
-- ```
-- NativeDB Return Type: Hash
function Global.GetVehicleModIdentifierHash(vehicle, modType, modIndex)
	return _in(0x4593CF82AA179706, vehicle, modType, modIndex, _r, _ri)
end
Global.N_0x4593cf82aa179706 = Global.GetVehicleModIdentifierHash
Global.GetVehicleModData = Global.GetVehicleModIdentifierHash

function Global.GetVehicleModKit(vehicle)
	return _in(0x6325D1A044AE510D, vehicle, _r, _ri)
end

function Global.GetVehicleModKitType(vehicle)
	return _in(0xFC058F5121E54C32, vehicle, _r, _ri)
end

function Global.GetVehicleModModifierValue(vehicle, modType, modIndex)
	return _in(0x90A38E9838E0A8C1, vehicle, modType, modIndex, _r, _rf)
end

--- Returns true if the wheels are custom wheels
function Global.GetVehicleModVariation(vehicle, modType)
	return _in(0xB3924ECD70E095DC, vehicle, modType, _r)
end

--- Returns the acceleration of the specified model.
-- For a full list, see here: pastebin.com/GaN6vT4R
function Global.GetVehicleModelAcceleration(modelHash)
	return _in(0x8C044C5C84505B6A, _ch(modelHash), _r, _rf)
end

--- GET_VEHICLE_MODEL_*
-- 9.8 * thrust if air vehicle, else 0.38 + drive force?
-- For a full list, see here: pastebin.com/bJQeDqNd
function Global.GetVehicleModelDownForce(modelHash)
	return _in(0x53409B5163D5B846, _ch(modelHash), _r, _rf)
end
Global.N_0x53409b5163d5b846 = Global.GetVehicleModelDownForce

--- Returns max speed (without mods) of the specified vehicle model in m/s.
function Global.GetVehicleModelEstimatedMaxSpeed(modelHash)
	return _in(0xF417C2502FFFED43, _ch(modelHash), _r, _rf)
end
Global.GetVehicleModelMaxSpeed = Global.GetVehicleModelEstimatedMaxSpeed

--- Returns max braking of the specified vehicle model.
-- For a full list, see here: pastebin.com/3N8DVbpG
function Global.GetVehicleModelMaxBraking(modelHash)
	return _in(0xDC53FD41B4ED944C, _ch(modelHash), _r, _rf)
end

--- max braking if air vehicle, else max braking + 0.1
-- -------------------
-- For a full list, see here: pastebin.com/Cb9L1Cn0
function Global.GetVehicleModelMaxBrakingMaxMods(modelHash)
	return _in(0xBFBA3BA79CFF7EBF, _ch(modelHash), _r, _rf)
end
Global.N_0xbfba3ba79cff7ebf = Global.GetVehicleModelMaxBrakingMaxMods
Global.GetVehicleModelHandBrake = Global.GetVehicleModelMaxBrakingMaxMods

--- GET_VEHICLE_MODEL_*
-- Function pertains only to aviation vehicles.
-- For a full list, see here: pastebin.com/JwuGNp2K
function Global.GetVehicleModelMaxKnots(modelHash)
	return _in(0xC6AD107DDC9054CC, _ch(modelHash), _r, _rf)
end
Global.N_0xc6ad107ddc9054cc = Global.GetVehicleModelMaxKnots

--- Returns max traction of the specified vehicle model.
-- For a full list, see here: pastebin.com/ERnntVjK
function Global.GetVehicleModelMaxTraction(modelHash)
	return _in(0x539DE94D44FDFD0D, _ch(modelHash), _r, _rf)
end

--- GET_VEHICLE_MODEL_*
-- called if the vehicle is a boat -- returns vecMoveResistanceX?
-- For a full list, see here: pastebin.com/Pyb2RhZ9
function Global.GetVehicleModelMoveResistance(modelHash)
	return _in(0x5AA3F878A178C4FC, _ch(modelHash), _r, _rf)
end
Global.N_0x5aa3f878a178c4fc = Global.GetVehicleModelMoveResistance

--- Returns max number of passengers (including the driver) for the specified vehicle model.
-- For a full list, see here: pastebin.com/MdETCS1j
function Global.GetVehicleModelNumberOfSeats(modelHash)
	return _in(0x2AD93716F184EDA4, _ch(modelHash), _r, _ri)
end
Global.GetVehicleModelMaxNumberOfPassengers = Global.GetVehicleModelNumberOfSeats

--- Gets the color of the neon lights of the specified vehicle.
-- See _SET_VEHICLE_NEON_LIGHTS_COLOUR (0x8E0A582209A62695) for more information
function Global.GetVehicleNeonLightsColour(vehicle)
	return _in(0x7619EEE8C886757F, vehicle, _i, _i, _i)
end

function Global.GetVehicleNextGear(vehicle)
	return _in(0xddb298ae, vehicle, _r, _ri)
end

--- p0 = VEHICLE_NODE_ID
-- Returns false for nodes that aren't used for GPS routes.
-- Example:
-- Nodes in Fort Zancudo and LSIA are false
function Global.GetVehicleNodeIsGpsAllowed(nodeID)
	return _in(0xA2AE5C478B96E3B6, nodeID, _r)
end
Global.N_0xa2ae5c478b96e3b6 = Global.GetVehicleNodeIsGpsAllowed
Global.GetSupportsGpsRouteFlag = Global.GetVehicleNodeIsGpsAllowed

--- p0 = VEHICLE_NODE_ID
-- Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
-- Normal roads where plenty of Peds spawn will return false
function Global.GetVehicleNodeIsSwitchedOff(nodeID)
	return _in(0x4F5070AA58F69279, nodeID, _r)
end
Global.N_0x4f5070aa58f69279 = Global.GetVehicleNodeIsSwitchedOff
Global.GetIsSlowRoadFlag = Global.GetVehicleNodeIsSwitchedOff

--- Calling this with an invalid node id, will crash the game.
-- Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
-- Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
-- sfink: This native returns a pointer to a packed Vector3 struct in the RAX register, as do the following natives:
-- AI::WAYPOINT_RECORDING_GET_COORD
-- ENTITY::GET_ENTITY_MATRIX
-- FIRE::GET_CLOSEST_FIRE_POS
-- GAMEPLAY::FIND_SPAWN_POINT_IN_DIRECTION
-- GAMEPLAY::GET_MODEL_DIMENSIONS
-- GAMEPLAY::OVERRIDE_SAVE_HOUSE
-- GAMEPLAY::_0x82FDE6A57EE4EE44
-- GAMEPLAY::_0x8BDC7BFC57A81E76
-- GAMEPLAY::_0x8D7A43EC6A5FEA45
-- GAMEPLAY::_0xA4A0065E39C9F25C
-- GAMEPLAY::_0xDFB4138EEFED7B81
-- MOBILE::GET_MOBILE_PHONE_POSITION
-- MOBILE::GET_MOBILE_PHONE_ROTATION
-- NETWORK::NETWORK_GET_RESPAWN_RESULT
-- OBJECT::_0x163F8B586BC95F2A
-- PATHFIND::GET_CLOSEST_MAJOR_VEHICLE_NODE
-- PATHFIND::GET_CLOSEST_ROAD
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING
-- PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE
-- PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION
-- PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING
-- PATHFIND::GET_RANDOM_VEHICLE_NODE
-- PATHFIND::GET_SAFE_COORD_FOR_PED
-- PATHFIND::GET_VEHICLE_NODE_POSITION
-- PATHFIND::_0x16F46FB18C8009E4
-- VEHICLE::_0xA4822F1CF23F4810
-- VEHICLE::_0xDF7E3EEB29642C38
-- WATER::TEST_PROBE_AGAINST_ALL_WATER
-- WATER::TEST_PROBE_AGAINST_WATER
-- WEAPON::GET_PED_LAST_WEAPON_IMPACT_COORD
-- WORLDPROBE::_0xFF6BE494C7987F34
-- WORLDPROBE::_GET_RAYCAST_RESULT
function Global.GetVehicleNodePosition(nodeId, outPosition)
	return _in(0x703123E5E7D429C2, nodeId, _v)
end

--- MulleDK19: Gets the density and flags of the closest node to the specified position.
-- Density is a value between 0 and 15, indicating how busy the road is.
-- Flags is a bit field.
function Global.GetVehicleNodeProperties(x, y, z)
	return _in(0x0568566ACBB5DEDC, x, y, z, _i, _i, _r)
end

--- GET_VEHICLE_NUMBER_*
function Global.GetVehicleNumberOfBrokenBones(vehicle)
	return _in(0x2C8CBFE1EA5FC631, vehicle, _r, _ri)
end
Global.N_0x2c8cbfe1ea5fc631 = Global.GetVehicleNumberOfBrokenBones

--- GET_VEHICLE_NUMBER_*
-- Also includes 'turnOffBones' when vehicle mods are installed.
function Global.GetVehicleNumberOfBrokenOffBones(vehicle)
	return _in(0x42A4BEB35D372407, vehicle, _r, _ri)
end
Global.N_0x42a4beb35d372407 = Global.GetVehicleNumberOfBrokenOffBones

--- Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
function Global.GetVehicleNumberOfPassengers(vehicle)
	return _in(0x24CB2137731FFE89, vehicle, _r, _ri)
end

function Global.GetVehicleNumberOfWheels(vehicle)
	return _in(0xedf4b0fc, vehicle, _r, _ri)
end

--- Returns the license plate text from a vehicle.  8 chars maximum.
function Global.GetVehicleNumberPlateText(vehicle)
	return _in(0x7CE1CCB9B293020E, vehicle, _r, _s)
end

--- Returns the PlateType of a vehicle
-- Blue_on_White_1 = 3,
-- Blue_on_White_2 = 0,
-- Blue_on_White_3 = 4,
-- Yellow_on_Blue = 2,
-- Yellow_on_Black = 1,
-- North_Yankton = 5,
function Global.GetVehicleNumberPlateTextIndex(vehicle)
	return _in(0xF11BC2DD9A3E7195, vehicle, _r, _ri)
end

function Global.GetVehicleOilLevel(vehicle)
	return _in(0xfc7f8ef4, vehicle, _r, _rf)
end

--- In appcamera.c4, Line 106:
-- if (VEHICLE::IS_VEHICLE_DRIVEABLE(PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID()), 0))
-- So return type could be a vehicle?
-- sfink: agreed, 100%
-- Proper name is GET_VEHICLE_PED_IS_ENTERING
function Global.GetVehiclePedIsEntering(ped)
	return _in(0xF92691AED837A5FC, ped, _r, _ri)
end
Global.SetExclusivePhoneRelationships = Global.GetVehiclePedIsEntering

--- Gets the vehicle the specified Ped is/was in depending on bool value.
-- @param ped The target ped
-- @param lastVehicle False = CurrentVehicle, True = LastVehicle
-- @return The vehicle id. Returns 0 if the ped is/was not in a vehicle.
function Global.GetVehiclePedIsIn(ped, lastVehicle)
	return _in(0x9A9112A0FE9A4713, ped, lastVehicle, _r, _ri)
end

--- Should be renamed GET_CAR_PED_IS_TRYING_TO_ENTER...
-- Because this works only for cars, not for helis, planes,motorcycles or bicycles...
-- From Calderon
-- This is what R* named it, deal with it.
function Global.GetVehiclePedIsTryingToEnter(ped)
	return _in(0x814FA8BE5449445D, ped, _r, _ri)
end

--- Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
function Global.GetVehiclePedIsUsing(ped)
	return _in(0x6094AD011A2EA87D, ped, _r, _ri)
end

--- 1000 is max health
-- Begins leaking gas at around 650 health
function Global.GetVehiclePetrolTankHealth(vehicle)
	return _in(0x7D5DABE888D2D074, vehicle, _r, _rf)
end

function Global.GetVehiclePlateType(vehicle)
	return _in(0x9CCC9525BF2408E0, vehicle, _r, _ri)
end

function Global.GetVehicleRecordingId(p0, p1)
	return _in(0x21543C612379DB3C, p0, _ts(p1), _r, _ri)
end

--- Returns index of the current vehicle's rooftop livery.
-- A getter for [\_SET_VEHICLE_ROOF_LIVERY](#_0xA6D3A8750DC73270).
-- @param vehicle The vehicle handle.
-- @return An index of the current vehicle's rooftop livery.
function Global.GetVehicleRoofLivery(vehicle)
	return _in(0x60190048C0764A26, vehicle, _r, _ri)
end
Global.N_0x60190048c0764a26 = Global.GetVehicleRoofLivery

--- Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
-- @param vehicle The vehicle handle.
-- @return A number of available rooftop liveries for vehicle.
function Global.GetVehicleRoofLiveryCount(vehicle)
	return _in(0x5ECB40269053C0D4, vehicle, _r, _ri)
end
Global.N_0x5ecb40269053c0d4 = Global.GetVehicleRoofLiveryCount

function Global.GetVehicleSteeringAngle(vehicle)
	return _in(0x1382fcea, vehicle, _r, _rf)
end

function Global.GetVehicleSteeringScale(vehicle)
	return _in(0x954465de, vehicle, _r, _rf)
end

--- Outputs 2 Vector3's.
-- Scripts check if out2.x - out1.x > someshit.x
-- Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
function Global.GetVehicleSuspensionBounds(vehicle)
	return _in(0xDF7E3EEB29642C38, vehicle, _v, _v)
end
Global.N_0xdf7e3eeb29642c38 = Global.GetVehicleSuspensionBounds

--- Gets the height of the vehicle's suspension.
-- The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
-- 0.000 is the stock suspension.
-- 0.008 is Ultra Suspension.
function Global.GetVehicleSuspensionHeight(vehicle)
	return _in(0x53952FD2BAA19F17, vehicle, _r, _rf)
end

--- Gets the trailer of a vehicle and puts it into the trailer parameter.
function Global.GetVehicleTrailerVehicle(vehicle, trailer)
	return _in(0x1CDD6BADC297830D, vehicle, _ii(trailer) --[[ may be optional ]], _r)
end

function Global.GetVehicleTurboPressure(vehicle)
	return _in(0xe02b51d7, vehicle, _r, _rf)
end

function Global.GetVehicleTyreSmokeColor(vehicle)
	return _in(0xB635392A4938B3C3, vehicle, _i, _i, _i)
end

function Global.GetVehicleTyresCanBurst(vehicle)
	return _in(0x678B9BB8C3F58FEB, vehicle, _r)
end

function Global.GetVehicleWaypointProgress(vehicle)
	return _in(0x9824CFF8FC66E159, vehicle, _r, _ri)
end

function Global.GetVehicleWaypointTargetPoint(vehicle)
	return _in(0x416B62AC8B9E5BBD, vehicle, _r, _ri)
end

function Global.GetVehicleWeaponCapacity(vehicle, weaponIndex)
	return _in(0x8181CE2F25CB9BB7, vehicle, weaponIndex, _r, _ri)
end
Global.N_0x8181ce2f25cb9bb7 = Global.GetVehicleWeaponCapacity

--- Gets brake pressure of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @param vehicle :
-- @param wheelIndex :
function Global.GetVehicleWheelBrakePressure(vehicle, wheelIndex)
	return _in(0x70fe2eff, vehicle, wheelIndex, _r, _rf)
end

function Global.GetVehicleWheelHealth(vehicle, wheelIndex)
	return _in(0x54a677f5, vehicle, wheelIndex, _r, _rf)
end

function Global.GetVehicleWheelRimColliderSize(vehicle, wheelIndex)
	return _in(0xcee21ab2, vehicle, wheelIndex, _r, _rf)
end
Global.GetVehicleWheelRimColliderSize = Global.GetVehicleWheelRimColliderSize

--- Returns vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels (returns 0 in case of default wheels).
-- @param vehicle The vehicle to obtain data for.
-- @return Float representing size of the wheel (usually between 0.5 and 1.5)
function Global.GetVehicleWheelSize(vehicle)
	return _in(0x4046b66, vehicle, _r, _rf)
end
Global.GetVehicleWheelSize = Global.GetVehicleWheelSize

--- Gets speed of a wheel at the tyre.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return An integer.
function Global.GetVehicleWheelSpeed(vehicle, wheelIndex)
	return _in(0x149c9da0, vehicle, wheelIndex, _r, _rf)
end

--- Gets steering angle of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @param vehicle :
-- @param wheelIndex :
-- @return The steering angle of the wheel, with 0 being straight.
function Global.GetVehicleWheelSteeringAngle(vehicle, wheelIndex)
	return _in(0xa0867448, vehicle, wheelIndex, _r, _rf)
end

function Global.GetVehicleWheelTireColliderSize(vehicle, wheelIndex)
	return _in(0xe0ba9fe6, vehicle, wheelIndex, _r, _rf)
end
Global.GetVehicleWheelTireColliderSize = Global.GetVehicleWheelTireColliderSize

function Global.GetVehicleWheelTireColliderWidth(vehicle, wheelIndex)
	return _in(0xef65929c, vehicle, wheelIndex, _r, _rf)
end
Global.GetVehicleWheelTireColliderWidth = Global.GetVehicleWheelTireColliderWidth

--- Returns an int
-- Wheel Types:
-- 0: Sport
-- 1: Muscle
-- 2: Lowrider
-- 3: SUV
-- 4: Offroad
-- 5: Tuner
-- 6: Bike Wheels
-- 7: High End
-- Tested in Los Santos Customs
function Global.GetVehicleWheelType(vehicle)
	return _in(0xB3ED1BFB4BE636DC, vehicle, _r, _ri)
end

--- Returns vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels (returns 0 in case of default wheels).
-- @param vehicle The vehicle to obtain data for.
-- @return Float representing width of the wheel (usually between 0.1 and 1.5)
function Global.GetVehicleWheelWidth(vehicle)
	return _in(0x9c7b59f9, vehicle, _r, _rf)
end
Global.GetVehicleWheelWidth = Global.GetVehicleWheelWidth

--- Returns the offset of the specified wheel relative to the wheel's axle center.
function Global.GetVehicleWheelXOffset(vehicle, wheelIndex)
	return _in(0xcc90cbca, vehicle, wheelIndex, _r, _rf)
end

function Global.GetVehicleWheelYRotation(vehicle, wheelIndex)
	return _in(0x2ea4affe, vehicle, wheelIndex, _r, _rf)
end
Global.GetVehicleWheelXrot = Global.GetVehicleWheelYRotation

--- List of known states:
-- ```
-- 1: Not wheeling.
-- 65: Vehicle is ready to do wheelie (burnouting).
-- 129: Vehicle is doing wheelie.
-- ```
-- @param vehicle Vehicle
-- @return Vehicle's current wheelie state.
function Global.GetVehicleWheelieState(vehicle)
	return _in(0x137260d1, vehicle, _r, _ri)
end

function Global.GetVehicleWindowTint(vehicle)
	return _in(0x0EE21293DAD47C95, vehicle, _r, _ri)
end

--- Returns the headlight color index from the vehicle. Value between 0, 12.
-- Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#_0xE41033B25D003A07) to set the headlights color for the vehicle.
-- Must enable xenon headlights before it'll take affect.
-- List of colors and ids:
-- ```
-- enum headlightColors {
-- Default = -1,
-- White = 0,
-- Blue = 1,
-- Electric_Blue = 2,
-- Mint_Green = 3,
-- Lime_Green = 4,
-- Yellow = 5,
-- Golden_Shower = 6,
-- Orange = 7,
-- Red = 8,
-- Pony_Pink = 9,
-- Hot_Pink = 10,
-- Purple = 11,
-- Blacklight = 12
-- }
-- ```
-- @param vehicle The vehicle to get the headlight color from.
-- @return Returns an int, value between 0-12 or 255 if no color is set.
function Global.GetVehicleXenonLightsColour(vehicle)
	return _in(0x3DFF319A831E0CDB, vehicle, _r, _ri)
end
Global.N_0x3dff319a831e0cdb = Global.GetVehicleXenonLightsColour
Global.GetVehicleHeadlightsColour = Global.GetVehicleXenonLightsColour

--- Remnant from GTA IV. Does nothing in GTA V.
-- ```
-- ```
-- NativeDB Return Type: float
function Global.GetWantedLevelRadius(player)
	return _in(0x085DEB493BE80812, player, _r, _ri)
end

--- Drft
function Global.GetWantedLevelThreshold(wantedLevel)
	return _in(0xFDD179EAF45B556C, wantedLevel, _r, _ri)
end

--- NativeDB Introduced: v1290
function Global.GetWarningMessageTitleHash()
	return _in(0x81DF9ABA6C83DFF9, _r, _ri)
end

--- This function set height to the value of z-axis of the water surface.
-- This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)
-- note: seems to return true when you are in water
function Global.GetWaterHeight(x, y, z, height)
	return _in(0xF6829842C06AE524, x, y, z, _fi(height) --[[ may be optional ]], _r)
end

function Global.GetWaterHeightNoWaves(x, y, z, height)
	return _in(0x8EE6B53CE13A9794, x, y, z, _fi(height) --[[ may be optional ]], _r)
end

function Global.GetWaypointDistanceAlongRoute(p0, p1)
	return _in(0xA5B769058763E497, _ts(p0), p1, _r, _rf)
end

--- // Returns the size of the default weapon component clip.
-- Use it like this:
-- char cClipSize[32];
-- Hash cur;
-- if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))
-- {
-- if (WEAPON::IS_WEAPON_VALID(cur))
-- {
-- int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);
-- sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
-- vDrawString(cClipSize, 0.5f, 0.5f);
-- }
-- }
function Global.GetWeaponClipSize(weaponHash)
	return _in(0x583BE370B1EC6EB4, _ch(weaponHash), _r, _ri)
end

function Global.GetWeaponComponentHudStats(componentHash, outData)
	return _in(0xB3CAF387AE12E9F8, _ch(componentHash), _ii(outData) --[[ may be optional ]], _r)
end

function Global.GetWeaponComponentTypeModel(componentHash)
	return _in(0x0DB57B41EC1DB083, _ch(componentHash), _r, _ri)
end

--- NativeDB Parameter 0: Hash componentHash
function Global.GetWeaponComponentVariantExtraComponentCount(componentHash)
	return _in(0x6558AC7C17BFEF58, componentHash, _r, _ri)
end
Global.N_0x6558ac7c17bfef58 = Global.GetWeaponComponentVariantExtraComponentCount

--- NativeDB Parameter 0: Hash componentHash
-- NativeDB Return Type: Hash
function Global.GetWeaponComponentVariantExtraComponentModel(componentHash, extraComponentIndex)
	return _in(0x4D1CB8DC40208A17, componentHash, extraComponentIndex, _r, _ri)
end
Global.N_0x4d1cb8dc40208a17 = Global.GetWeaponComponentVariantExtraComponentModel

--- This native does not return damages of weapons from the melee and explosive group.
-- ```
-- NativeDB Parameter 1: Hash componentHash
-- ```
-- @param componentHash 0 in the decompiled scripts.
-- @return Damages of the weapon.
function Global.GetWeaponDamage(weaponHash, componentHash)
	return _in(0x3133B907D8B32053, _ch(weaponHash), componentHash, _r, _rf)
end
Global.N_0x3133b907d8b32053 = Global.GetWeaponDamage
Global.GetWeaponDamage = Global.GetWeaponDamage

--- 0=unknown (or incorrect weaponHash)
-- 1= no damage (flare,snowball, petrolcan)
-- 2=melee
-- 3=bullet
-- 4=force ragdoll fall
-- 5=explosive (RPG, Railgun, grenade)
-- 6=fire(molotov)
-- 8=fall(WEAPON_HELI_CRASH)
-- 10=electric
-- 11=barbed wire
-- 12=extinguisher
-- 13=gas
-- 14=water cannon(WEAPON_HIT_BY_WATER_CANNON)
function Global.GetWeaponDamageType(weaponHash)
	return _in(0x3BE0BB12D25FB305, _ch(weaponHash), _r, _ri)
end

--- // members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure
-- struct WeaponHudStatsData
-- {
-- alignas(8) uint8_t hudDamage; // 0x0000
-- alignas(8) uint8_t hudSpeed; // 0x0008
-- alignas(8) uint8_t hudCapacity; // 0x0010
-- alignas(8) uint8_t hudAccuracy; // 0x0018
-- alignas(8) uint8_t hudRange; // 0x0020
-- };
-- Usage:
-- WeaponHudStatsData data;
-- if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))
-- {
-- // uint8_t damagePercentage = data.hudDamage etc...
-- }
function Global.GetWeaponHudStats(weaponHash, outData)
	return _in(0xD92C739EE34C9EBA, _ch(weaponHash), _ii(outData) --[[ may be optional ]], _r)
end

--- Drops the current weapon and returns the object
-- Unknown behavior when unarmed.
function Global.GetWeaponObjectFromPed(ped, p1)
	return _in(0xCAE1DC9A0E22A16D, ped, p1, _r, _ri)
end

--- NativeDB Parameter 1: Hash camoComponentHash
function Global.GetWeaponObjectLiveryColor(weaponObject, camoComponentHash)
	return _in(0xB3EA4FEABF41464B, weaponObject, camoComponentHash, _r, _ri)
end
Global.N_0xb3ea4feabf41464b = Global.GetWeaponObjectLiveryColor

function Global.GetWeaponObjectTintIndex(weapon)
	return _in(0xCD183314F7CD2E57, weapon, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param weaponHash :
function Global.GetWeaponTimeBetweenShots(weaponHash)
	return _in(0x065D2AACAD8CF7A4, _ch(weaponHash), _r, _ri)
end
Global.N_0x065d2aacad8cf7a4 = Global.GetWeaponTimeBetweenShots

function Global.GetWeaponTintCount(weaponHash)
	return _in(0x5DCF6C5CAB2E9BF7, _ch(weaponHash), _r, _ri)
end

--- returns the weapon hash of pickup
-- ```
-- ```
-- NativeDB Parameter 0: Hash pickupHash
function Global.GetWeaponTypeFromPickupType(pickupHash)
	return _in(0x08F96CA6C551AD51, pickupHash, _r, _ri)
end
Global.N_0x08f96ca6c551ad51 = Global.GetWeaponTypeFromPickupType
Global.GetWeaponHashFromPickup = Global.GetWeaponTypeFromPickupType

function Global.GetWeapontypeGroup(weaponHash)
	return _in(0xC3287EE3050FB74C, _ch(weaponHash), _r, _ri)
end

--- Returns the model of any weapon.
-- Can also take an ammo hash?
-- sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));
function Global.GetWeapontypeModel(weaponHash)
	return _in(0xF46CDC33180FDA94, _ch(weaponHash), _r, _ri)
end

function Global.GetWeapontypeSlot(weaponHash)
	return _in(0x4215460B9B8B7FA0, _ch(weaponHash), _r, _ri)
end

--- changed any --> hash
-- progress_or_time --> percentWeather2, is not time but percent of the 2nd weather (0-1).
-- weatherType1 is same as GAMEPLAY::GET_PREV_WEATHER_TYPE_HASH_NAME()
-- and weatherType 2 GAMEPLAY::GET_NEXT_WEATHER_TYPE_HASH_NAME()
-- -QuantFC
function Global.GetWeatherTypeTransition()
	return _in(0xF3BBE884A14BB413, _i, _i, _f)
end

function Global.GetWindDirection()
	return _in(0x1F400FEF721170DA, _r, _rv)
end

function Global.GetWindSpeed()
	return _in(0xA8CF1CC0AFCD3F12, _r, _rf)
end

--- Returns the coordinates of an entity-bone.
function Global.GetWorldPositionOfEntityBone(entity, boneIndex)
	return _in(0x44A8FCB8ED227738, entity, boneIndex, _r, _rv)
end

function Global.GetWorldPositionOfEntityBone_2(entity, boneIndex)
	return _in(0x46F8696933A63C9B, entity, boneIndex, _r, _rv)
end
Global.N_0x46f8696933a63c9b = Global.GetWorldPositionOfEntityBone_2

function Global.GetWorldRotationOfEntityBone(entity, boneIndex)
	return _in(0xCE6294A232D03786, entity, boneIndex, _r, _rv)
end
Global.N_0xce6294a232d03786 = Global.GetWorldRotationOfEntityBone

function Global.GetZoneAtCoords(x, y, z)
	return _in(0x27040C25DE6CB2F4, x, y, z, _r, _ri)
end

--- 'zoneName' corresponds to an entry in 'popzone.ipl'.
-- AIRP = Los Santos International Airport
-- ALAMO = Alamo Sea
-- ALTA = Alta
-- ARMYB = Fort Zancudo
-- BANHAMC = Banham Canyon Dr
-- BANNING = Banning
-- BEACH = Vespucci Beach
-- BHAMCA = Banham Canyon
-- BRADP = Braddock Pass
-- BRADT = Braddock Tunnel
-- BURTON = Burton
-- CALAFB = Calafia Bridge
-- CANNY = Raton Canyon
-- CCREAK = Cassidy Creek
-- CHAMH = Chamberlain Hills
-- CHIL = Vinewood Hills
-- CHU = Chumash
-- CMSW = Chiliad Mountain State Wilderness
-- CYPRE = Cypress Flats
-- DAVIS = Davis
-- DELBE = Del Perro Beach
-- DELPE = Del Perro
-- DELSOL = La Puerta
-- DESRT = Grand Senora Desert
-- DOWNT = Downtown
-- DTVINE = Downtown Vinewood
-- EAST_V = East Vinewood
-- EBURO = El Burro Heights
-- ELGORL = El Gordo Lighthouse
-- ELYSIAN = Elysian Island
-- GALFISH = Galilee
-- GOLF = GWC and Golfing Society
-- GRAPES = Grapeseed
-- GREATC = Great Chaparral
-- HARMO = Harmony
-- HAWICK = Hawick
-- HORS = Vinewood Racetrack
-- HUMLAB = Humane Labs and Research
-- JAIL = Bolingbroke Penitentiary
-- KOREAT = Little Seoul
-- LACT = Land Act Reservoir
-- LAGO = Lago Zancudo
-- LDAM = Land Act Dam
-- LEGSQU = Legion Square
-- LMESA = La Mesa
-- LOSPUER = La Puerta
-- MIRR = Mirror Park
-- MORN = Morningwood
-- MOVIE = Richards Majestic
-- MTCHIL = Mount Chiliad
-- MTGORDO = Mount Gordo
-- MTJOSE = Mount Josiah
-- MURRI = Murrieta Heights
-- NCHU = North Chumash
-- NOOSE = N.O.O.S.E
-- OCEANA = Pacific Ocean
-- PALCOV = Paleto Cove
-- PALETO = Paleto Bay
-- PALFOR = Paleto Forest
-- PALHIGH = Palomino Highlands
-- PALMPOW = Palmer-Taylor Power Station
-- PBLUFF = Pacific Bluffs
-- PBOX = Pillbox Hill
-- PROCOB = Procopio Beach
-- RANCHO = Rancho
-- RGLEN = Richman Glen
-- RICHM = Richman
-- ROCKF = Rockford Hills
-- RTRAK = Redwood Lights Track
-- SANAND = San Andreas
-- SANCHIA = San Chianski Mountain Range
-- SANDY = Sandy Shores
-- SKID = Mission Row
-- SLAB = Stab City
-- STAD = Maze Bank Arena
-- STRAW = Strawberry
-- TATAMO = Tataviam Mountains
-- TERMINA = Terminal
-- TEXTI = Textile City
-- TONGVAH = Tongva Hills
-- TONGVAV = Tongva Valley
-- VCANA = Vespucci Canals
-- VESP = Vespucci
-- VINE = Vinewood
-- WINDF = Ron Alternates Wind Farm
-- WVINE = West Vinewood
-- ZANCUDO = Zancudo River
-- ZP_ORT = Port of South Los Santos
-- ZQ_UAR = Davis Quartz
function Global.GetZoneFromNameId(zoneName)
	return _in(0x98CD1D2934B76CC1, _ts(zoneName), _r, _ri)
end

function Global.GetZonePopschedule(zoneId)
	return _in(0x4334BC40AA0CB4BB, zoneId, _r, _ri)
end

--- cellphone range 1- 5 used for signal bar in iFruit phone
function Global.GetZoneScumminess(zoneId)
	return _in(0x5F7B268D15BA0739, zoneId, _r, _ri)
end

--- Achievements from 0-57
-- more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
-- ```
-- ```
-- NativeDB Return Type: BOOL
function Global.GiveAchievementToPlayer(achievement)
	return _in(0xBEC7076D64130195, achievement, _r, _ri)
end

--- Gives a weapon to PED with a delay, example:
-- WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
-- ----------------------------------------------------------------------------------------------------------------------------------------
-- Translation table:
-- pastebin.com/a39K8Nz8
function Global.GiveDelayedWeaponToPed(ped, weaponHash, ammoCount, equipNow)
	return _in(0xB282DC6EBD803C75, ped, _ch(weaponHash), ammoCount, equipNow)
end

--- NativeDB Parameter 1: Hash loadoutHash
function Global.GiveLoadoutToPed(ped, loadoutHash)
	return _in(0x68F8BE6AF5CDF8A6, ped, loadoutHash)
end
Global.N_0x68f8be6af5cdf8a6 = Global.GiveLoadoutToPed

--- PoliceMotorcycleHelmet	1024
-- RegularMotorcycleHelmet	4096
-- FiremanHelmet	16384
-- PilotHeadset	32768
-- PilotHelmet	65536
-- --
-- p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
function Global.GivePedHelmet(ped, cannotRemove, helmetFlag, textureIndex)
	return _in(0x54C7C4A94367717E, ped, cannotRemove, helmetFlag, textureIndex)
end

--- Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
-- If a message hasn't been created already, this function does nothing.
-- If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
-- The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
-- Call order:
-- SET_PED_TO_RAGDOLL
-- CREATE_NM_MESSAGE
-- GIVE_PED_NM_MESSAGE
-- Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
-- SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
-- CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
-- CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
-- CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
function Global.GivePedNmMessage(ped)
	return _in(0xB158DFCCC56E5C5B, ped)
end

--- p1 is either 1 or 2 in the PC scripts.
function Global.GivePedToPauseMenu(ped, p1)
	return _in(0xAC0BFBDC3BE00E14, ped, p1)
end

function Global.GivePlayerRagdollControl(player, toggle)
	return _in(0x3C49C870E66F0A28, player, toggle)
end

function Global.GiveWeaponComponentToPed(ped, weaponHash, componentHash)
	return _in(0xD966D51AA5B28BB9, ped, _ch(weaponHash), _ch(componentHash))
end

--- addonHash:
-- (use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
-- ^ Wrong.
-- AddonHash is NOT a model hash, it's the weapon component hash.
-- ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
function Global.GiveWeaponComponentToWeaponObject(weaponObject, addonHash)
	return _in(0x33E179436C0B31DB, weaponObject, _ch(addonHash))
end

function Global.GiveWeaponObjectToPed(weaponObject, ped)
	return _in(0xB1FA61371AF7C4B7, weaponObject, ped)
end

--- isHidden - ????
-- All weapon names (add to the list if something is missing), use GAMEPLAY::GET_HASH_KEY((char *)weaponNames[i]) to get get the hash:
-- static LPCSTR weaponNames[] = {
-- "WEAPON_KNIFE", "WEAPON_NIGHTSTICK", "WEAPON_HAMMER", "WEAPON_BAT", "WEAPON_GOLFCLUB",
-- "WEAPON_CROWBAR", "WEAPON_PISTOL", "WEAPON_COMBATPISTOL", "WEAPON_APPISTOL", "WEAPON_PISTOL50",
-- "WEAPON_MICROSMG", "WEAPON_SMG", "WEAPON_ASSAULTSMG", "WEAPON_ASSAULTRIFLE",
-- "WEAPON_CARBINERIFLE", "WEAPON_ADVANCEDRIFLE", "WEAPON_MG", "WEAPON_COMBATMG", "WEAPON_PUMPSHOTGUN",
-- "WEAPON_SAWNOFFSHOTGUN", "WEAPON_ASSAULTSHOTGUN", "WEAPON_BULLPUPSHOTGUN", "WEAPON_STUNGUN", "WEAPON_SNIPERRIFLE",
-- "WEAPON_HEAVYSNIPER", "WEAPON_GRENADELAUNCHER", "WEAPON_GRENADELAUNCHER_SMOKE", "WEAPON_RPG", "WEAPON_MINIGUN",
-- "WEAPON_GRENADE", "WEAPON_STICKYBOMB", "WEAPON_SMOKEGRENADE", "WEAPON_BZGAS", "WEAPON_MOLOTOV",
-- "WEAPON_FIREEXTINGUISHER", "WEAPON_PETROLCAN", "WEAPON_FLARE", "WEAPON_SNSPISTOL", "WEAPON_SPECIALCARBINE",
-- "WEAPON_HEAVYPISTOL", "WEAPON_BULLPUPRIFLE", "WEAPON_HOMINGLAUNCHER", "WEAPON_PROXMINE", "WEAPON_SNOWBALL",
-- "WEAPON_VINTAGEPISTOL", "WEAPON_DAGGER", "WEAPON_FIREWORK", "WEAPON_MUSKET", "WEAPON_MARKSMANRIFLE",
-- "WEAPON_HEAVYSHOTGUN", "WEAPON_GUSENBERG", "WEAPON_HATCHET", "WEAPON_RAILGUN", "WEAPON_COMBATPDW",
-- "WEAPON_KNUCKLE", "WEAPON_MARKSMANPISTOL", "WEAPON_FLASHLIGHT", "WEAPON_MACHETE", "WEAPON_MACHINEPISTOL",
-- "WEAPON_SWITCHBLADE", "WEAPON_REVOLVER", "WEAPON_COMPACTRIFLE", "WEAPON_DBSHOTGUN", "WEAPON_FLAREGUN",
-- "WEAPON_AUTOSHOTGUN", "WEAPON_BATTLEAXE", "WEAPON_COMPACTLAUNCHER", "WEAPON_MINISMG", "WEAPON_PIPEBOMB",
-- "WEAPON_POOLCUE", "WEAPON_SWEEPER", "WEAPON_WRENCH"
-- };
-- ----------------------------------------------------------------------------------------------------------------------------------------
-- Translation table:
-- pastebin.com/a39K8Nz8
function Global.GiveWeaponToPed(ped, weaponHash, ammoCount, isHidden, equipNow)
	return _in(0xBF0FD6E56C964FCB, ped, _ch(weaponHash), ammoCount, isHidden, equipNow)
end

--- Only used in the golf and golf_mp script
function Global.GolfTrailSetColour(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x12995F2E53FFA601, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end
Global.N_0x12995f2e53ffa601 = Global.GolfTrailSetColour

function Global.GolfTrailSetEnabled(toggle)
	return _in(0xA51C4B86B71652AE, toggle)
end
Global.N_0xa51c4b86b71652ae = Global.GolfTrailSetEnabled

function Global.GolfTrailSetFacing(p0)
	return _in(0x06F761EA47C1D3ED, p0)
end
Global.N_0x06f761ea47c1d3ed = Global.GolfTrailSetFacing

--- 12 matches across 4 scripts. All 4 scripts were job creators.
-- type ranged from 0 - 2.
-- p4 was always 0.2f. Likely scale.
-- assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
-- Tested but noticed nothing.
function Global.GolfTrailSetFixedControlPoint(type, xPos, yPos, zPos, p4, red, green, blue, alpha)
	return _in(0xB1BB03742917A5D6, type, xPos, yPos, zPos, p4, red, green, blue, alpha)
end
Global.N_0xb1bb03742917a5d6 = Global.GolfTrailSetFixedControlPoint

--- p8 seems to always be false.
function Global.GolfTrailSetPath(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x312342E1A4874F3F, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
Global.N_0x312342e1a4874f3f = Global.GolfTrailSetPath

function Global.GolfTrailSetRadius(p0, p1, p2)
	return _in(0x2485D34E50A22E84, p0, p1, p2)
end
Global.N_0x2485d34e50a22e84 = Global.GolfTrailSetRadius

--- Only appeared in Golf & Golf_mp. Parameters were all ptrs
function Global.GolfTrailSetShaderParams(p0, p1, p2, p3, p4)
	return _in(0x9CFDD90B2B844BF7, p0, p1, p2, p3, p4)
end
Global.N_0x9cfdd90b2b844bf7 = Global.GolfTrailSetShaderParams

function Global.GolfTrailSetTessellation(p0, p1)
	return _in(0xDBAA5EC848BA2D46, p0, p1)
end
Global.N_0xdbaa5ec848ba2d46 = Global.GolfTrailSetTessellation

function Global.GrassLodResetScriptAreas()
	return _in(0x302C91AB2D477F7E)
end
Global.N_0x302c91ab2d477f7e = Global.GrassLodResetScriptAreas

--- Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7
-- Jenkins: 0x73E96210?
function Global.GrassLodShrinkScriptAreas(x, y, z, radius, p4, p5, p6)
	return _in(0x6D955F6A9E0295B1, x, y, z, radius, p4, p5, p6)
end
Global.N_0x6d955f6a9e0295b1 = Global.GrassLodShrinkScriptAreas

function Global.HasAchievementBeenPassed(achievement)
	return _in(0x867365E111A3B6EB, achievement, _r)
end

function Global.HasActionModeAssetLoaded(asset)
	return _in(0xE4B5F4BF2CB24E65, _ts(asset), _r)
end

function Global.HasAdditionalTextLoaded(slot)
	return _in(0x02245FE4BED318B8, slot, _r)
end

function Global.HasAnimDictLoaded(animDict)
	return _in(0xD031A9162D01088C, _ts(animDict), _r)
end

--- if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("CreateObject")))
function Global.HasAnimEventFired(entity, actionHash)
	return _in(0xEAF4CD9EA3E7E922, entity, _ch(actionHash), _r)
end

--- Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
-- Animation set and clip set are synonymous.
function Global.HasAnimSetLoaded(animSet)
	return _in(0xC4EA073D86FB29B0, _ts(animSet), _r)
end

--- Hardcoded to always return true.
function Global.HasAsyncInstallFinished()
	return _in(0x14832BF2ABA53FC5, _r)
end
Global.N_0x14832bf2aba53fc5 = Global.HasAsyncInstallFinished

--- p3 - possibly radius?
function Global.HasBulletImpactedInArea(x, y, z, p3, p4, p5)
	return _in(0x9870ACFB89A90995, x, y, z, p3, p4, p5, _r)
end

function Global.HasBulletImpactedInBox(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xDC8C5D7CFEAB8394, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

--- This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
function Global.HasButtonCombinationJustBeenEntered(hash, amount)
	return _in(0x071E2A839DE82D90, _ch(hash), amount, _r)
end
Global.N_0x071e2a839de82d90 = Global.HasButtonCombinationJustBeenEntered

--- Get inputted "Cheat code", for example:
-- while (TRUE)
-- {
-- if (GAMEPLAY::_557E43C447E700A8(${fugitive}))
-- {
-- // Do something.
-- }
-- SYSTEM::WAIT(0);
-- }
-- Calling this will also set the last saved string hash to zero.
function Global.HasCheatStringJustBeenEntered(hash)
	return _in(0x557E43C447E700A8, _ch(hash), _r)
end
Global.N_0x557e43c447e700a8 = Global.HasCheatStringJustBeenEntered

--- Alias for HAS_ANIM_SET_LOADED.
function Global.HasClipSetLoaded(clipSet)
	return _in(0x318234F4F3738AF3, _ts(clipSet), _r)
end

function Global.HasClosestObjectOfTypeBeenBroken(p0, p1, p2, p3, modelHash, p5)
	return _in(0x761B0E69AC4D007E, p0, p1, p2, p3, _ch(modelHash), p5, _r)
end

function Global.HasClosestObjectOfTypeBeenCompletelyDestroyed(x, y, z, radius, modelHash, p5)
	return _in(0x46494A2475701343, x, y, z, radius, _ch(modelHash), p5, _r)
end
Global.N_0x46494a2475701343 = Global.HasClosestObjectOfTypeBeenCompletelyDestroyed

--- Sets the value of the specified variable to 0.
-- Always returns true.
-- bool _NULLIFY(void* variable, int unused)
-- {
-- *variable = NULL;
-- return true;
-- }
-- ```
-- ```
-- NativeDB Parameter 0: BOOL* variable
function Global.HasCloudRequestsFinished(unused)
	return _in(0x46E2B844905BC5F0, _i, unused, _r)
end
Global.Nullify = Global.HasCloudRequestsFinished

function Global.HasCollisionForModelLoaded(model)
	return _in(0x22CCA434E368F03A, _ch(model), _r)
end

function Global.HasCollisionLoadedAroundEntity(entity)
	return _in(0xE9676F61BC0B3321, entity, _r)
end

--- Checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
function Global.HasCutFileLoaded(cutsceneName)
	return _in(0xA1C996C2A744262E, _ts(cutsceneName), _r)
end
Global.N_0xa1c996c2a744262e = Global.HasCutFileLoaded

function Global.HasCutsceneCutThisFrame()
	return _in(0x708BDD8CD795B043, _r)
end
Global.N_0x708bdd8cd795b043 = Global.HasCutsceneCutThisFrame

function Global.HasCutsceneFinished()
	return _in(0x7C0A893088881D57, _r)
end

function Global.HasCutsceneLoaded()
	return _in(0xC59F528E9AB9F339, _r)
end

--- HAS_*
function Global.HasDirectorModeBeenTriggered()
	return _in(0xA277800A9EAE340E, _r)
end
Global.N_0xa277800a9eae340e = Global.HasDirectorModeBeenTriggered

--- ```
-- P3 is always 3 as far as i cant tell
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.HasEntityAnimFinished(entity, animDict, animName, p3)
	return _in(0x20B711662962B472, entity, _ts(animDict), _ts(animName), p3, _r)
end

function Global.HasEntityBeenDamagedByAnyObject(entity)
	return _in(0x95EB9964FF5C5C65, entity, _r)
end

function Global.HasEntityBeenDamagedByAnyPed(entity)
	return _in(0x605F5A140F202491, entity, _r)
end

function Global.HasEntityBeenDamagedByAnyVehicle(entity)
	return _in(0xDFD5033FDBA0A9C8, entity, _r)
end

--- Entity 1 = Victim
-- Entity 2 = Attacker
-- p2 seems to always be 1
function Global.HasEntityBeenDamagedByEntity(entity1, entity2, p2)
	return _in(0xC86D67D52A707CF8, entity1, entity2, p2, _r)
end

--- It determines what weapons caused damage:
-- If youu want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
-- If you want to define any melee weapon, second parameter=0, third parameter=1.
-- If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
function Global.HasEntityBeenDamagedByWeapon(entity, weaponHash, weaponType)
	return _in(0x131D401334815E94, entity, _ch(weaponHash), weaponType, _r)
end

--- traceType is always 17 in the scripts.
-- There is other codes used for traceType:
-- 19 - in jewelry_prep1a
-- 126 - in am_hunt_the_beast
-- 256 & 287 - in fm_mission_controller
function Global.HasEntityClearLosToEntity(entity1, entity2, traceType)
	return _in(0xFCDFF7B72D23A1AC, entity1, entity2, traceType, _r)
end

--- Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
-- This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
function Global.HasEntityClearLosToEntityInFront(entity1, entity2)
	return _in(0x0267D00AF114F17A, entity1, entity2, _r)
end

--- Called on tick.
-- Tested with vehicles, returns true whenever the vehicle is touching any entity.
-- Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
function Global.HasEntityCollidedWithAnything(entity)
	return _in(0x8BAD02F0368D9E14, entity, _r)
end

function Global.HasForceCleanupOccurred(cleanupFlags)
	return _in(0xC968670BFACE42D9, cleanupFlags, _r)
end

--- Returns whether or not the specific minimap overlay has loaded.
-- @param id A minimap overlay ID.
-- @return A boolean indicating load status.
function Global.HasMinimapOverlayLoaded(id)
	return _in(0xf7535f32, id, _r)
end

--- Checks if the specified model has loaded into memory.
function Global.HasModelLoaded(model)
	return _in(0x98A4EB5D89A0C952, _ch(model), _r)
end

--- HAS_*
function Global.HasMultiplayerAudioDataLoaded()
	return _in(0x544810ED9DB6BBE6, _r)
end
Global.N_0x544810ed9db6bbe6 = Global.HasMultiplayerAudioDataLoaded

--- HAS_*
function Global.HasMultiplayerAudioDataUnloaded()
	return _in(0x5B50ABB1FE3746F4, _r)
end
Global.N_0x5b50abb1fe3746f4 = Global.HasMultiplayerAudioDataUnloaded

--- assetName = For example "core"
function Global.HasNamedPtfxAssetLoaded(assetName)
	return _in(0x8702416E512EC454, _ts(assetName), _r)
end

function Global.HasNetworkTimeStarted()
	return _in(0x46718ACEEDEAFC84, _r)
end
Global.N_0x46718aceedeafc84 = Global.HasNetworkTimeStarted

--- NativeDB Added Parameter 2: Any p1
function Global.HasObjectBeenBroken(object)
	return _in(0x8ABFB70C49CC43E2, object, _r)
end

--- It determines what weapons caused damage:
-- If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
-- If you want to define any melee weapon, second parameter=0, third parameter=1.
-- If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
function Global.HasPedBeenDamagedByWeapon(ped, weaponHash, weaponType)
	return _in(0x2D343D2219CD027A, ped, _ch(weaponHash), weaponType, _r)
end

--- p2 should be FALSE, otherwise it seems to always return FALSE
-- Bool does not check if the weapon is current equipped, unfortunately.
function Global.HasPedGotWeapon(ped, weaponHash, p2)
	return _in(0x8DECB02F88F428BC, ped, _ch(weaponHash), p2, _r)
end

function Global.HasPedGotWeaponComponent(ped, weaponHash, componentHash)
	return _in(0xC593212475FAE340, ped, _ch(weaponHash), _ch(componentHash), _r)
end

function Global.HasPedHeadBlendFinished(ped)
	return _in(0x654CD0A825161131, ped, _r)
end

--- Normally returns true. Returns false briefly whilst putting on a helmet after getting onto a motorbike. Not sure what that's about.
function Global.HasPedPreloadPropDataFinished(ped)
	return _in(0x784002A632822099, ped, _r)
end
Global.N_0x784002a632822099 = Global.HasPedPreloadPropDataFinished

--- Normally returns true. Returns false briefly whilst getting into a plane. This is probably a check to see if the ped model and all its components/drawables are properly loaded yet.
function Global.HasPedPreloadVariationDataFinished(ped)
	return _in(0x66680A92700F43DF, ped, _r)
end
Global.N_0x66680a92700f43df = Global.HasPedPreloadVariationDataFinished

function Global.HasPedReceivedEvent(ped, eventId)
	return _in(0x8507BCB710FA6DC0, ped, eventId, _r)
end

function Global.HasPedheadshotImgUploadFailed()
	return _in(0x876928DDDFCCC9CD, _r, _ri)
end
Global.N_0x876928dddfccc9cd = Global.HasPedheadshotImgUploadFailed

function Global.HasPedheadshotImgUploadSucceeded()
	return _in(0xE8A169E666CBC541, _r, _ri)
end
Global.N_0xe8a169e666cbc541 = Global.HasPedheadshotImgUploadSucceeded

function Global.HasPickupBeenCollected(pickup)
	return _in(0x80EC48E6679313F9, pickup, _r)
end

function Global.HasPlayerBeenSpottedInStolenVehicle(player)
	return _in(0xD705740BB0A1CF4C, player, _r)
end

function Global.HasPlayerDamagedAtLeastOneNonAnimalPed(player)
	return _in(0xE4B90F367BD81752, player, _r)
end

function Global.HasPlayerDamagedAtLeastOnePed(player)
	return _in(0x20CE80B0C2BF4ACC, player, _r)
end

--- Gets the player's info and calls a function that checks the player's ped position.
-- Here's the decompiled function that checks the position: pastebin.com/ZdHG2E7n
function Global.HasPlayerLeftTheWorld(player)
	return _in(0xD55DDFB47991A294, player, _r)
end

function Global.HasPlayerTeleportFinished(player)
	return _in(0xE23D5873C2394C61, player, _r)
end
Global.N_0xe23d5873c2394c61 = Global.HasPlayerTeleportFinished

function Global.HasPreloadModsFinished(p0)
	return _in(0x06F43E5175EB6D96, p0, _r)
end

function Global.HasPtfxAssetLoaded()
	return _in(0xCA7D9B86ECA7481B, _r)
end

--- Hardcoded to return false.
function Global.HasResumedFromSuspend()
	return _in(0xE8B9C0EC9E183F35, _r)
end
Global.N_0xe8b9c0ec9e183f35 = Global.HasResumedFromSuspend

function Global.HasScaleformContainerMovieLoadedIntoParent(scaleformHandle)
	return _in(0x8217150E1217EBFD, scaleformHandle, _r)
end

--- Pretty sure it's the real name (not 100% sure so I added the _ prefix); can someone else confirm it?
-- Only values used in the scripts are:
-- "heist_mp"
-- "heistmap_mp"
-- "instructional_buttons"
-- "heist_pre"
function Global.HasScaleformMovieFilenameLoaded(scaleformName)
	return _in(0x0C1C5D756FB5F337, _ts(scaleformName), _r)
end
Global.N_0x0c1c5d756fb5f337 = Global.HasScaleformMovieFilenameLoaded
Global.HasNamedScaleformMovieLoaded = Global.HasScaleformMovieFilenameLoaded

function Global.HasScaleformMovieLoaded(scaleformHandle)
	return _in(0x85F01B8D5B90570E, scaleformHandle, _r)
end

--- Check to see if hud component Scaleform has loaded?
function Global.HasScaleformScriptHudMovieLoaded(hudComponent)
	return _in(0xDF6E5987D2B4D140, hudComponent, _r)
end
Global.HasHudScaleformLoaded = Global.HasScaleformScriptHudMovieLoaded

--- Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
-- For a full list, see here: pastebin.com/yLNWicUi
function Global.HasScriptLoaded(scriptName)
	return _in(0xE6CC9F3BA0FB9EF1, _ts(scriptName), _r)
end

function Global.HasScriptWithNameHashLoaded(scriptHash)
	return _in(0x5F0F0C783EB16C04, _ch(scriptHash), _r)
end
Global.HasStreamedScriptLoaded = Global.HasScriptWithNameHashLoaded

function Global.HasSoundFinished(soundId)
	return _in(0xFCBDCE714A7C88E5, soundId, _r)
end

function Global.HasStealthModeAssetLoaded(asset)
	return _in(0xE977FC5B08AF3441, _ts(asset), _r)
end

--- HAS_*
-- Functionality also closely related to blending
function Global.HasStreamedPedAssetsLoaded(ped)
	return _in(0x7350823473013C02, ped, _r)
end
Global.N_0x7350823473013c02 = Global.HasStreamedPedAssetsLoaded

function Global.HasStreamedTextureDictLoaded(textureDict)
	return _in(0x0145F696AAAAD2E4, _ts(textureDict), _r)
end

--- Checks if the specified gxt has loaded into the passed slot.
function Global.HasThisAdditionalTextLoaded(gxt, slot)
	return _in(0xADBF060E2B30C5BC, _ts(gxt), slot, _r)
end

function Global.HasThisCutsceneLoaded(cutsceneName)
	return _in(0x228D3D94F8A11C3C, _ts(cutsceneName), _r)
end

function Global.HasVehicleAssetLoaded(vehicleAsset)
	return _in(0x1BBE0523B8DB9A21, vehicleAsset, _r)
end

--- Third Parameter = unsure, but pretty sure it is weapon hash
-- --> get_hash_key("weapon_stickybomb")
-- Fourth Parameter = unsure, almost always -1
function Global.HasVehicleGotProjectileAttached(driver, vehicle, weaponHash, p3)
	return _in(0x717C8481234E3B88, driver, vehicle, _ch(weaponHash), p3, _r)
end

function Global.HasVehiclePhoneExplosiveDevice()
	return _in(0x6ADAABD3068C5235, _r)
end
Global.N_0x6adaabd3068c5235 = Global.HasVehiclePhoneExplosiveDevice

function Global.HasVehicleRecordingBeenLoaded(p0, p1)
	return _in(0x300D614A4C785FC4, p0, _ii(p1) --[[ may be optional ]], _r)
end

function Global.HasWeaponAssetLoaded(weaponHash)
	return _in(0x36E353271F0E90EE, _ch(weaponHash), _r)
end

function Global.HasWeaponGotWeaponComponent(weapon, addonHash)
	return _in(0x76A18844E743BF91, weapon, _ch(addonHash), _r)
end

function Global.HaveCreditsReachedEnd()
	return _in(0x075F1D57402C93BA, _r)
end
Global.N_0x075f1d57402c93ba = Global.HaveCreditsReachedEnd

--- HIDE_*_THIS_FRAME
-- Hides area and vehicle name HUD components for one frame.
function Global.HideAreaAndVehicleNameThisFrame()
	return _in(0xA4DEDE28B1814289)
end
Global.N_0xa4dede28b1814289 = Global.HideAreaAndVehicleNameThisFrame

function Global.HideHelpTextThisFrame()
	return _in(0xD46923FC481CA285)
end

--- I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
function Global.HideHudAndRadarThisFrame()
	return _in(0x719FF505F097FD20)
end

--- This function hides various HUD (Heads-up Display) components.
-- Listed below are the integers and the corresponding HUD component.
-- -   1 : WANTED_STARS
-- -   2 : WEAPON_ICON
-- -   3 : CASH
-- -   4 : MP_CASH
-- -   5 : MP_MESSAGE
-- -   6 : VEHICLE_NAME
-- -   7 : AREA_NAME
-- -   8 : VEHICLE_CLASS
-- -   9 : STREET_NAME
-- -   10 : HELP_TEXT
-- -   11 : FLOATING_HELP_TEXT_1
-- -   12 : FLOATING_HELP_TEXT_2
-- -   13 : CASH_CHANGE
-- -   14 : RETICLE
-- -   15 : SUBTITLE_TEXT
-- -   16 : RADIO_STATIONS
-- -   17 : SAVING_GAME
-- -   18 : GAME_STREAM
-- -   19 : WEAPON_WHEEL
-- -   20 : WEAPON_WHEEL_STATS
-- -   21 : HUD_COMPONENTS
-- -   22 : HUD_WEAPONS
-- These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
function Global.HideHudComponentThisFrame(id)
	return _in(0x6806C51AD12B83B8, id)
end

function Global.HideLoadingOnFadeThisFrame()
	return _in(0x4B0311D3CDC4648F)
end

function Global.HideMinimapExteriorMapThisFrame()
	return _in(0x5FBAE526203990C9)
end
Global.DisableRadarThisFrame = Global.HideMinimapExteriorMapThisFrame

function Global.HideMinimapInteriorMapThisFrame()
	return _in(0x20FE7FDFEEAD38C0)
end
Global.N_0x20fe7fdfeead38c0 = Global.HideMinimapInteriorMapThisFrame

function Global.HideNumberOnBlip(blip)
	return _in(0x532CFF637EF80148, blip)
end

function Global.HidePedBloodDamageByZone(ped, p1, p2)
	return _in(0x62AB793144DE75DC, ped, p1, p2)
end
Global.N_0x62ab793144de75dc = Global.HidePedBloodDamageByZone

--- Hides the players weapon during a cutscene.
function Global.HidePedWeaponForScriptedCutscene(ped, toggle)
	return _in(0x6F6981D2253C208F, ped, toggle)
end

function Global.HidePickup(pickup, toggle)
	return _in(0x867458251D47CCB2, pickup, toggle)
end
Global.N_0x867458251d47ccb2 = Global.HidePickup

function Global.HideScriptedHudComponentThisFrame(id)
	return _in(0xE374C498D8BADC14, id)
end

--- NativeDB Introduced: v1604
-- @param vehicle :
-- @param toggle :
function Global.HideVehicleTombstone(vehicle, toggle)
	return _in(0xAE71FB656C600587, vehicle, toggle)
end

--- draws circular marker at pos
-- -1 = none
-- 0 = red
-- 1 = green
-- 2 = blue
-- 3 = green larger
-- 4 = nothing
-- 5 = green small
function Global.HighlightPlacementCoords(x, y, z, colorIndex)
	return _in(0x3430676B11CDF21D, x, y, z, colorIndex)
end
Global.N_0x3430676b11cdf21d = Global.HighlightPlacementCoords

--- NativeDB Parameter 0: char* p0
-- NativeDB Added Parameter 3: int p2
function Global.HintAmbientAudioBank(p0, p1)
	return _in(0x8F8C0E370AE62F5C, p0, p1, _r, _ri)
end

--- NativeDB Added Parameter 3: Any p2
function Global.HintScriptAudioBank(p0, p1)
	return _in(0xFB380A29641EC31A, p0, p1, _r, _ri)
end

function Global.HiredLimo(p0, p1)
	return _in(0x792271AB35C356A4, p0, p1)
end
Global.N_0x792271ab35c356a4 = Global.HiredLimo

--- Forces the weapon wheel to appear on screen.
function Global.HudForceWeaponWheel(show)
	return _in(0xEB354E5376BC81A7, show)
end
Global.N_0xeb354e5376bc81a7 = Global.HudForceWeaponWheel
Global.ShowWeaponWheel = Global.HudForceWeaponWheel

--- Returns the weapon hash to the selected/highlighted weapon in the wheel
function Global.HudWeaponWheelGetSelectedHash()
	return _in(0xA48931185F0536FE, _r, _ri)
end
Global.N_0xa48931185f0536fe = Global.HudWeaponWheelGetSelectedHash

--- Return the weapon hash active in a specific weapon wheel slotList
function Global.HudWeaponWheelGetSlotHash(weaponTypeIndex)
	return _in(0xA13E93403F26C812, weaponTypeIndex, _r, _ri)
end
Global.N_0xa13e93403f26c812 = Global.HudWeaponWheelGetSlotHash

--- Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
function Global.HudWeaponWheelIgnoreControlInput(toggle)
	return _in(0x14C9FDCC41F81F63, toggle)
end
Global.N_0x14c9fdcc41f81f63 = Global.HudWeaponWheelIgnoreControlInput

--- calling this each frame, it stops the player from receiving a weapon via the weapon wheel.
function Global.HudWeaponWheelIgnoreSelection()
	return _in(0x0AFC4AF510774B47)
end
Global.BlockWeaponWheelThisFrame = Global.HudWeaponWheelIgnoreSelection
Global.N_0x0afc4af510774b47 = Global.HudWeaponWheelIgnoreSelection

--- Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
function Global.HudWeaponWheelSetSlotHash(weaponHash)
	return _in(0x72C1056D678BB7D8, _ch(weaponHash))
end
Global.N_0x72c1056d678bb7d8 = Global.HudWeaponWheelSetSlotHash

function Global.IgnoreNextRestart(toggle)
	return _in(0x21FFB63D8C615361, toggle)
end

--- Loads "common:/data/missioncreatordata" data and sets some values.
function Global.InitCreatorBudget()
	return _in(0xB5A4DB34FE89B88A)
end
Global.N_0xb5a4db34fe89b88a = Global.InitCreatorBudget
Global.LoadMissionCreatorData = Global.InitCreatorBudget

function Global.InitShopPedComponent(outComponent)
	return _in(0x1E8C308FD312C036, _ii(outComponent) --[[ may be optional ]])
end

function Global.InitShopPedProp(outProp)
	return _in(0xEB0A2B758F7B850F, _ii(outProp) --[[ may be optional ]])
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
-- --------------------------------------------------------
-- if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))
function Global.IntToParticipantindex(value)
	return _in(0x9EC6603812C24710, value, _r, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function Global.IntToPlayerindex(value)
	return _in(0x41BD2A6B006AF756, value, _r, _ri)
end

function Global.InterruptConversation(p0)
	return _in(0xA018A12E5C5C2FA6, p0, _i, _i)
end

--- One call found in the b617d scripts:
-- AUDIO::_8A694D7A68F8DC38(NETWORK::NET_TO_PED(l_3989._f26F[0/*1*/]), "CONV_INTERRUPT_QUIT_IT", "LESTER");
function Global.InterruptConversationAndPause(p0, p1, p2)
	return _in(0x8A694D7A68F8DC38, p0, _ts(p1), _ts(p2))
end
Global.N_0x8a694d7a68f8dc38 = Global.InterruptConversationAndPause

--- Resets the idle camera timer. Calling this in a loop will disable the idle camera.
function Global.InvalidateIdleCam()
	return _in(0xF4F2C0D4EE209E20)
end
Global.N_0xf4f2c0d4ee209e20 = Global.InvalidateIdleCam

function Global.InvokeFunctionReference(referenceIdentity, argsSerialized, argsLength, retvalLength)
	return _in(0xe3551879, _ts(referenceIdentity), _ts(argsSerialized), argsLength, _ii(retvalLength) --[[ may be optional ]], _r, _s)
end

function Global.IsAceAllowed(object)
	return _in(0x7ebb9929, _ts(object), _r)
end

function Global.IsAimCamActive()
	return _in(0x68EDDA28A5976D07, _r)
end

--- IS_A*
function Global.IsAimCamThirdPersonActive()
	return _in(0x74BD83EA840F6BC9, _r)
end
Global.N_0x74bd83ea840f6bc9 = Global.IsAimCamThirdPersonActive

function Global.IsAirDefenseZoneInsideSphere(x, y, z, radius, zoneId)
	return _in(0xDAB963831DBFD3F4, x, y, z, radius, zoneId, _r)
end
Global.N_0xdab963831dbfd3f4 = Global.IsAirDefenseZoneInsideSphere

--- Example:
-- bool playing = AUDIO::IS_ALARM_PLAYING("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
function Global.IsAlarmPlaying(alarmName)
	return _in(0x226435CB96CCFC8C, _ts(alarmName), _r)
end

--- Common in the scripts:
-- AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());
function Global.IsAmbientSpeechDisabled(ped)
	return _in(0x932C2D096A2C3FFF, ped, _r)
end

function Global.IsAmbientSpeechPlaying(ped)
	return _in(0x9072C8B49907BFAD, ped, _r)
end

function Global.IsAmbientZoneEnabled(ambientZone)
	return _in(0x01E2817A479A7F9B, _ts(ambientZone), _r)
end

function Global.IsAnEntity(handle)
	return _in(0x731EC8A916BD11A1, handle, _r)
end

function Global.IsAnimalVocalizationPlaying(pedHandle)
	return _in(0xC265DF9FB44A9FBD, pedHandle, _r)
end
Global.N_0xc265df9fb44a9fbd = Global.IsAnimalVocalizationPlaying

--- NativeDB Parameter 0: Hash garageHash
function Global.IsAnyEntityEntirelyInsideGarage(garageHash, p1, p2, p3, p4)
	return _in(0x673ED815D6E323B7, garageHash, p1, p2, p3, p4, _r)
end
Global.N_0x673ed815d6e323b7 = Global.IsAnyEntityEntirelyInsideGarage

function Global.IsAnyHostilePedNearPoint(ped, x, y, z, radius)
	return _in(0x68772DB2B2526F9F, ped, x, y, z, radius, _r)
end
Global.N_0x68772db2b2526f9f = Global.IsAnyHostilePedNearPoint

function Global.IsAnyObjectNearPoint(x, y, z, range, p4)
	return _in(0x397DC58FF00298D1, x, y, z, range, p4, _r)
end

function Global.IsAnyPassengerRappelingFromVehicle(vehicle)
	return _in(0x291E373D483E7EE7, vehicle, _r)
end
Global.N_0x291e373d483e7ee7 = Global.IsAnyPassengerRappelingFromVehicle
Global.AnyPassengersRappeling = Global.IsAnyPassengerRappelingFromVehicle

function Global.IsAnyPedNearPoint(x, y, z, radius)
	return _in(0x083961498679DC9F, x, y, z, radius, _r)
end

function Global.IsAnyPedShootingInArea(x1, y1, z1, x2, y2, z2, p6, p7)
	return _in(0xA0D3D71EA1086C55, x1, y1, z1, x2, y2, z2, p6, p7, _r)
end

function Global.IsAnySpeechPlaying(ped)
	return _in(0x729072355FA39EC9, ped, _r)
end

function Global.IsAnyVehicleNearPoint(x, y, z, radius)
	return _in(0x61E1DD6125A3EEE6, x, y, z, radius, _r)
end

function Global.IsAreaOccupied(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xA61B4DF533DCB56E, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, _r)
end

function Global.IsAudioSceneActive(scene)
	return _in(0xB65B60556E2A9225, _ts(scene), _r)
end

--- if (GAMEPLAY::IS_AUSSIE_VERSION()) {
-- sub_127a9(&l_31, 1024); // l_31 |= 1024
-- l_129 = 3;
-- sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
-- }
-- Used to block some of the prostitute stuff due to laws in Australia.
function Global.IsAussieVersion()
	return _in(0x9F1935CA1F724008, _r)
end

function Global.IsAutoSaveInProgress()
	return _in(0x69240733738C19A0, _r)
end

function Global.IsBigVehicle(vehicle)
	return _in(0x9F243D3919F442FE, vehicle, _r)
end

--- <!-- Native implemented by Disquse. 0xFFF65C63 -->
-- Returns true if the minimap is currently expanded. False if it's the normal minimap state.
-- Use [`IsBigmapFull`](#_0x66EE14B2) to check if the full map is currently revealed on the minimap.
-- @return A bool indicating if the minimap is currently expanded or normal state.
function Global.IsBigmapActive()
	return _in(0xfff65c63, _r)
end

--- <!-- Native implemented by Disquse. 0x66EE14B2 -->
-- Returns true if the full map is currently revealed on the minimap.
-- Use [`IsBigmapActive`](#_0xFFF65C63) to check if the minimap is currently expanded or in it's normal state.
-- @return Returns true if the full map is currently revealed on the minimap.
function Global.IsBigmapFull()
	return _in(0x66ee14b2, _r)
end

--- Returns bit's boolean state from [offset] of [address].
-- Example:
-- GAMEPLAY::IS_BIT_SET(bitAddress, 1);
-- To enable and disable bits, see:
-- GAMEPLAY::SET_BIT(&bitAddress, 1);   // enable
-- GAMEPLAY::CLEAR_BIT(&bitAddress, 1); // disable
function Global.IsBitSet(address, offset)
	return _in(0xA921AA820C25702F, address, offset, _r)
end

function Global.IsBlipFlashing(blip)
	return _in(0xA5E41FD83AD6CEF0, blip, _r)
end

function Global.IsBlipOnMinimap(blip)
	return _in(0xE41CA53051197A27, blip, _r)
end

function Global.IsBlipShortRange(blip)
	return _in(0xDA5F8727EB75B926, blip, _r)
end

--- IS_*
function Global.IsBoatAnchoredAndFrozen(vehicle)
	return _in(0xB0AD1238A709B1A2, vehicle, _r)
end
Global.N_0xb0ad1238a709b1a2 = Global.IsBoatAnchoredAndFrozen

function Global.IsBulletInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x1A8B5F3C01E2B477, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

function Global.IsBulletInArea(p0, p1, p2, p3, p4)
	return _in(0x3F2023999AD51C1F, p0, p1, p2, p3, p4, _r)
end

function Global.IsBulletInBox(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xDE0F6D7450D37351, p0, p1, p2, p3, p4, p5, p6, _r)
end

--- Returns whether or not the passed camera handle is active.
function Global.IsCamActive(cam)
	return _in(0xDFB2B516207D3534, cam, _r)
end

function Global.IsCamInterpolating(cam)
	return _in(0x036F97C908C2B52C, cam, _r)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.IsCamPlayingAnim(cam, animName, animDictionary)
	return _in(0xC90621D8A0CEECF2, cam, _ts(animName), _ts(animDictionary), _r)
end

function Global.IsCamRendering(cam)
	return _in(0x02EC0AF5C5A49B7A, cam, _r)
end

function Global.IsCamShaking(cam)
	return _in(0x6B24BFE83A2BE47B, cam, _r)
end

function Global.IsCamSplinePaused(p0)
	return _in(0x0290F35C0AD97864, p0, _r)
end

function Global.IsCinematicCamRendering()
	return _in(0xB15162CB5826E9E8, _r)
end

function Global.IsCinematicCamShaking()
	return _in(0xBBC08F6B4CB8FF0A, _r)
end

function Global.IsCinematicShotActive(p0)
	return _in(0xCC9F3371A7C28BC9, p0, _r)
end

--- Returns true if command line option '-benchmark' is set.
function Global.IsCommandLineBenchmarkValueSet()
	return _in(0xA049A5BE0F04F2F8, _r)
end
Global.N_0xa049a5be0f04f2f8 = Global.IsCommandLineBenchmarkValueSet

function Global.IsCommerceDataValid()
	return _in(0xEA14EEF5B7CD2C30, _r)
end
Global.N_0xea14eef5b7cd2c30 = Global.IsCommerceDataValid

function Global.IsCommerceStoreOpen()
	return _in(0x2EAC52B4019E2782, _r)
end
Global.N_0x2eac52b4019e2782 = Global.IsCommerceStoreOpen

--- NativeDB Parameter 0: Hash itemHash
function Global.IsContentItemLocked(itemHash)
	return _in(0xD4D7B033C3AA243C, _ii(itemHash) --[[ may be optional ]], _r)
end
Global.IsOutfitEmpty = Global.IsContentItemLocked
Global.IsDlcDataEmpty = Global.IsContentItemLocked

--- Control Groups:
-- enum InputGroups
-- {
-- INPUTGROUP_MOVE = 0,
-- INPUTGROUP_LOOK = 1,
-- INPUTGROUP_WHEEL = 2,
-- INPUTGROUP_CELLPHONE_NAVIGATE = 3,
-- INPUTGROUP_CELLPHONE_NAVIGATE_UD = 4,
-- INPUTGROUP_CELLPHONE_NAVIGATE_LR = 5,
-- INPUTGROUP_FRONTEND_DPAD_ALL = 6,
-- INPUTGROUP_FRONTEND_DPAD_UD = 7,
-- INPUTGROUP_FRONTEND_DPAD_LR = 8,
-- INPUTGROUP_FRONTEND_LSTICK_ALL = 9,
-- INPUTGROUP_FRONTEND_RSTICK_ALL = 10,
-- INPUTGROUP_FRONTEND_GENERIC_UD = 11,
-- INPUTGROUP_FRONTEND_GENERIC_LR = 12,
-- INPUTGROUP_FRONTEND_GENERIC_ALL = 13,
-- INPUTGROUP_FRONTEND_BUMPERS = 14,
-- INPUTGROUP_FRONTEND_TRIGGERS = 15,
-- INPUTGROUP_FRONTEND_STICKS = 16,
-- INPUTGROUP_SCRIPT_DPAD_ALL = 17,
-- INPUTGROUP_SCRIPT_DPAD_UD = 18,
-- INPUTGROUP_SCRIPT_DPAD_LR = 19,
-- INPUTGROUP_SCRIPT_LSTICK_ALL = 20,
-- INPUTGROUP_SCRIPT_RSTICK_ALL = 21,
-- INPUTGROUP_SCRIPT_BUMPERS = 22,
-- INPUTGROUP_SCRIPT_TRIGGERS = 23,
-- INPUTGROUP_WEAPON_WHEEL_CYCLE = 24,
-- INPUTGROUP_FLY = 25,
-- INPUTGROUP_SUB = 26,
-- INPUTGROUP_VEH_MOVE_ALL = 27,
-- INPUTGROUP_CURSOR = 28,
-- INPUTGROUP_CURSOR_SCROLL = 29,
-- INPUTGROUP_SNIPER_ZOOM_SECONDARY = 30,
-- INPUTGROUP_VEH_HYDRAULICS_CONTROL = 31,
-- MAX_INPUTGROUPS = 32,
-- INPUTGROUP_INVALID = 33
-- };
-- 0, 1 and 2 used in the scripts.
function Global.IsControlEnabled(inputGroup, control)
	return _in(0x1CEA6BFDF248E5D9, inputGroup, control, _r)
end

--- Returns whether a [control](https://docs.fivem.net/game-references/controls/) was newly pressed since the last check.
-- @param inputGroup The control system instance to use. Usually set to 0.
-- @param control The control ID to check.
-- @return True if the control was pressed.
function Global.IsControlJustPressed(inputGroup, control)
	return _in(0x580417101DDB492F, inputGroup, control, _r)
end

--- Returns whether a [control](https://docs.fivem.net/game-references/controls/) was newly released since the last check.
-- @param inputGroup The control system instance to use. Usually set to 0.
-- @param control The control ID to check.
-- @return True if the control was recently released.
function Global.IsControlJustReleased(inputGroup, control)
	return _in(0x50F940259D3841E6, inputGroup, control, _r)
end

--- Returns whether a [control](https://docs.fivem.net/game-references/controls/) is currently pressed.
-- @param inputGroup The control system instance to use. Usually set to 0.
-- @param control The control ID to check.
-- @return True if the control was pressed.
function Global.IsControlPressed(inputGroup, control)
	return _in(0xF3A21BCD95725A4A, inputGroup, control, _r)
end

--- Returns whether a [control](https://docs.fivem.net/game-references/controls/) is currently _not_ pressed.
-- @param inputGroup The control system instance to use. Usually set to 0.
-- @param control The control ID to check.
-- @return True if the control is not pressed.
function Global.IsControlReleased(inputGroup, control)
	return _in(0x648EE3E7F38877DD, inputGroup, control, _r)
end

function Global.IsConversationPedDead(ped)
	return _in(0xE0A0AEC214B1FABA, ped, _r)
end

--- xyz - relative to the world origin.
function Global.IsCopPedInArea_3d(x1, y1, z1, x2, y2, z2)
	return _in(0x16EC4839969F9F5E, x1, y1, z1, x2, y2, z2, _r)
end

--- Usage:
-- public bool isCopInRange(Vector3 Location, float Range)
-- {
-- return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
-- }
function Global.IsCopVehicleInArea_3d(x1, x2, y1, y2, z1, z2)
	return _in(0x7EEF65D5F153E26A, x1, x2, y1, y2, z1, z2, _r)
end

function Global.IsCutsceneActive()
	return _in(0x991251AFC3981F84, _r)
end

--- It's 100% an IS_CUTSCENE_* native.
function Global.IsCutscenePlaybackFlagSet(flag)
	return _in(0x71B74D2AE19338D0, flag, _r)
end
Global.N_0x71b74d2ae19338d0 = Global.IsCutscenePlaybackFlagSet

function Global.IsCutscenePlaying()
	return _in(0xD3C2E180A40F031E, _r)
end

function Global.IsDamageTrackerActiveOnNetworkId(netID)
	return _in(0x6E192E33AD436366, netID, _r)
end

function Global.IsDamageTrackerActiveOnPlayer(player)
	return _in(0xB2092A1EAA7FD45F, player, _r)
end
Global.N_0xb2092a1eaa7fd45f = Global.IsDamageTrackerActiveOnPlayer

function Global.IsDecalAlive(decal)
	return _in(0xC694D74949CAFD0C, decal, _r)
end

--- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.IsDisabledControlJustPressed(inputGroup, control)
	return _in(0x91AEF906BCA88877, inputGroup, control, _r)
end

--- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.IsDisabledControlJustReleased(inputGroup, control)
	return _in(0x305C8DCD79DA8B0F, inputGroup, control, _r)
end

--- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.IsDisabledControlPressed(inputGroup, control)
	return _in(0xE2587F8CBBD87B1D, inputGroup, control, _r)
end

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
function Global.IsDisabledControlReleased(inputGroup, control)
	return _in(0xFB6C4072E9A32E92, inputGroup, control, _r)
end
Global.N_0xfb6c4072e9a32e92 = Global.IsDisabledControlReleased

--- Example:
-- DLC2::IS_DLC_PRESENT($\mpbusiness2\);
-- ($ = gethashkey)
-- bruteforce these:
-- 0xB119F6D
-- 0x96F02EE6
function Global.IsDlcPresent(dlcHash)
	return _in(0x812595A0644CE1DE, _ch(dlcHash), _r)
end

--- Use _GET_VEHICLE_MOD_DATA for modData
-- ```
-- ```
-- NativeDB Parameter 0: Hash hash
function Global.IsDlcVehicleMod(hash)
	return _in(0x0564B9FF9631B82C, hash, _r)
end
Global.N_0x0564b9ff9631b82c = Global.IsDlcVehicleMod

function Global.IsDoorClosed(doorHash)
	return _in(0xC531EE8A1145A149, _ch(doorHash), _r)
end

--- Example:
-- if (OBJECT::_DOES_DOOR_EXIST(doorHash))
-- {
-- OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
-- }
function Global.IsDoorRegisteredWithSystem(doorHash)
	return _in(0xC153C43EA202C8C1, _ch(doorHash), _r)
end
Global.N_0xc153c43ea202c8c1 = Global.IsDoorRegisteredWithSystem
Global.DoesDoorExist = Global.IsDoorRegisteredWithSystem

function Global.IsDrivebyTaskUnderneathDrivingTask(ped)
	return _in(0x8785E6E40C7A8818, ped, _r)
end

--- Returns whether or not a browser is created for a specified DUI browser object.
-- @param duiObject The DUI browser handle.
-- @return A boolean indicating TRUE if the browser is created.
function Global.IsDuiAvailable(duiObject)
	return _in(0x7aac3b4c, duiObject, _r)
end

--- Gets whether or not this is the CitizenFX server.
-- @return A boolean value.
function Global.IsDuplicityVersion()
	return _in(0xcf24c52e, _r)
end

--- XBOX ONE
-- MulleDK19: This function is hard-coded to always return 0.
function Global.IsDurangoVersion()
	return _in(0x4D982ADB1978442D, _r)
end

function Global.IsEntityAMissionEntity(entity)
	return _in(0x0A7B270912999B3C, entity, _r)
end

function Global.IsEntityAPed(entity)
	return _in(0x524AC5ECEA15343E, entity, _r)
end

function Global.IsEntityAVehicle(entity)
	return _in(0x6AC7003FA6E5575E, entity, _r)
end

function Global.IsEntityAnObject(entity)
	return _in(0x8D68C8FD0FACA94E, entity, _r)
end

--- Checks if entity is within x/y/zSize distance of x/y/z.
-- Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
function Global.IsEntityAtCoord(entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9)
	return _in(0x20B60995556D004F, entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9, _r)
end

--- Checks if entity1 is within the box defined by x/y/zSize of entity2.
-- Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
function Global.IsEntityAtEntity(entity1, entity2, xSize, ySize, zSize, p5, p6, p7)
	return _in(0x751B70C3D034E187, entity1, entity2, xSize, ySize, zSize, p5, p6, p7, _r)
end

function Global.IsEntityAttached(entity)
	return _in(0xB346476EF1A64897, entity, _r)
end

function Global.IsEntityAttachedToAnyObject(entity)
	return _in(0xCF511840CEEDE0CC, entity, _r)
end

function Global.IsEntityAttachedToAnyPed(entity)
	return _in(0xB1632E9A5F988D11, entity, _r)
end

function Global.IsEntityAttachedToAnyVehicle(entity)
	return _in(0x26AA915AD89BFB4B, entity, _r)
end

function Global.IsEntityAttachedToEntity(from, to)
	return _in(0xEFBE71898A993728, from, to, _r)
end

function Global.IsEntityAttachedToHandlerFrame(vehicle, entity)
	return _in(0x57715966069157AD, vehicle, entity, _r)
end
Global.SetPedEnabledBikeRingtone = Global.IsEntityAttachedToHandlerFrame
Global.IsVehicleNearEntity = Global.IsEntityAttachedToHandlerFrame

--- NativeDB Added Parameter 2: BOOL p1
function Global.IsEntityDead(entity)
	return _in(0x5F9532F3B5CC2551, entity, _r)
end

function Global.IsEntityFocus(entity)
	return _in(0x2DDFF3FB9075D747, entity, _r)
end

function Global.IsEntityInAir(entity)
	return _in(0x886E37EC497200B6, entity, _r)
end

--- Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
-- Angle is measured in degrees.
-- These values are constant, most likely bogus:
-- p8 = 0, p9 = 1, p10 = 0
-- This method can also take two float<3> instead of 6 floats.
function Global.IsEntityInAngledArea(entity, originX, originY, originZ, edgeX, edgeY, edgeZ, angle, p8, p9, p10)
	return _in(0x51210CED3DA1C78A, entity, originX, originY, originZ, edgeX, edgeY, edgeZ, angle, p8, p9, p10, _r)
end

function Global.IsEntityInArea(entity, x1, y1, z1, x2, y2, z2, p7, p8, p9)
	return _in(0x54736AA40E271165, entity, x1, y1, z1, x2, y2, z2, p7, p8, p9, _r)
end

function Global.IsEntityInWater(entity)
	return _in(0xCFB0A0D8EDD145A3, entity, _r)
end

function Global.IsEntityInZone(entity, zone)
	return _in(0xB6463CF6AF527071, entity, _ts(zone), _r)
end

function Global.IsEntityOccluded(entity)
	return _in(0xE31C2C72B8692B64, entity, _r)
end

function Global.IsEntityOnFire(entity)
	return _in(0x28D3FED7190D3A0B, entity, _r)
end

--- Returns true if the entity is in between the minimum and maximum values for the 2d screen coords.
-- This means that it will return true even if the entity is behind a wall for example, as long as you're looking at their location.
-- Chipping
function Global.IsEntityOnScreen(entity)
	return _in(0xE659E47AF827484B, entity, _r)
end

--- ```
-- See also PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM 0x6EC47A344923E1ED 0x3C30B447
-- Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)
-- p4 is always 3 in the scripts.
-- taskFlag:
-- 2 - Check synchronized scene
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.IsEntityPlayingAnim(entity, animDict, animName, taskFlag)
	return _in(0x1F0B79228E461EC9, entity, _ts(animDict), _ts(animName), taskFlag, _r)
end

--- A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.
-- ^ Attach a phCollider to the ped.
function Global.IsEntityStatic(entity)
	return _in(0x1218E6886D3D8327, entity, _r)
end

function Global.IsEntityTouchingEntity(entity, targetEntity)
	return _in(0x17FFC1B2BA35A494, entity, targetEntity, _r)
end

function Global.IsEntityTouchingModel(entity, modelHash)
	return _in(0x0F42323798A58C8C, entity, _ch(modelHash), _r)
end

--- // add this to your CSS to view code with formatting intact.
-- // pre + hr + p { white-space: pre; } // -
-- bool isEntityUpright(Entity e, float angle) {
-- bool bIsUpright; // bl@1
-- CDynamicEntity* pEntity; // rdi@1
-- bIsUpright = 0;
-- pEntity = getEntityAddressIfPhysical(e);
-- if (pEntity) {
-- bIsUpright = 0;
-- if (pEntity->Matrix.up.z >= cosf(angle * 0.017453292)) // radians(angle)
-- bIsUpright = 1;
-- }
-- return bIsUpright;
-- }
function Global.IsEntityUpright(entity, angle)
	return _in(0x5333F526F6AB19AA, entity, angle, _r)
end

function Global.IsEntityUpsidedown(entity)
	return _in(0x1DBD58820FA61D71, entity, _r)
end

function Global.IsEntityVisible(entity)
	return _in(0x47D6F43D77935C75, entity, _r)
end

function Global.IsEntityVisibleToScript(entity)
	return _in(0xD796CB5BA8F20E32, entity, _r)
end

function Global.IsEntityWaitingForWorldCollision(entity)
	return _in(0xD05BFF0C0A12C68F, entity, _r)
end

function Global.IsExplosionActiveInArea(explosionType, x1, y1, z1, x2, y2, z2)
	return _in(0x6070104B699B2EF4, explosionType, x1, y1, z1, x2, y2, z2, _r)
end
Global.N_0x6070104b699b2ef4 = Global.IsExplosionActiveInArea

function Global.IsExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, angle)
	return _in(0xA079A6C51525DC4B, explosionType, x1, y1, z1, x2, y2, z2, angle, _r)
end

function Global.IsExplosionInArea(explosionType, x1, y1, z1, x2, y2, z2)
	return _in(0x2E2EBA0EE7CED0E0, explosionType, x1, y1, z1, x2, y2, z2, _r)
end

function Global.IsExplosionInSphere(explosionType, x, y, z, radius)
	return _in(0xAB0F816885B0E483, explosionType, x, y, z, radius, _r)
end

function Global.IsFirstPersonAimCamActive()
	return _in(0x5E346D934122613F, _r)
end

function Global.IsFlashLightOn(ped)
	return _in(0x4B7620C47217126C, ped, _r)
end
Global.SetWeaponSmokegrenadeAssigned = Global.IsFlashLightOn

function Global.IsFloatingHelpTextOnScreen(hudIndex)
	return _in(0x2432784ACA090DA4, hudIndex, _r)
end
Global.N_0x2432784aca090da4 = Global.IsFloatingHelpTextOnScreen

function Global.IsFollowPedCamActive()
	return _in(0xC6D3D26810C8E0F9, _r)
end

function Global.IsFollowVehicleCamActive()
	return _in(0xCBBDE6D335D6D496, _r)
end

--- This function is hard-coded to always return 0.
function Global.IsFrontendFading()
	return _in(0x7EA2B6AF97ECA6ED, _r)
end

function Global.IsFrontendReadyForControl()
	return _in(0x3BAB9A4E4F2FF5C7, _r)
end
Global.N_0x3bab9a4e4f2ff5c7 = Global.IsFrontendReadyForControl

--- Hardcoded to return 1
function Global.IsGameInControlOfMusic()
	return _in(0x6D28DC1671E334FD, _r)
end

function Global.IsGameplayCamLookingBehind()
	return _in(0x70FDA869F3317EA9, _r)
end

--- Examples when this function will return 0 are:
-- - During busted screen.
-- - When player is coming out from a hospital.
-- - When player is coming out from a police station.
function Global.IsGameplayCamRendering()
	return _in(0x39B5D1B10383F0C8, _r)
end

function Global.IsGameplayCamShaking()
	return _in(0x016C090630DF1F89, _r)
end

function Global.IsGameplayHintActive()
	return _in(0xE520FF1AD2785B40, _r)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.IsGarageEmpty(garageHash, p1, p2)
	return _in(0x90E47239EA1980B8, garageHash, p1, p2, _r)
end

function Global.IsHandlerFrameAboveContainer(handler, container)
	return _in(0x89D630CF5EA96D23, handler, container, _r)
end
Global.N_0x89d630cf5ea96d23 = Global.IsHandlerFrameAboveContainer

function Global.IsHeliLandingAreaBlocked(vehicle)
	return _in(0x634148744F385576, vehicle, _r)
end
Global.N_0x634148744f385576 = Global.IsHeliLandingAreaBlocked

function Global.IsHeliPartBroken(vehicle, p1, p2, p3)
	return _in(0xBC74B4BE25EB6C8A, vehicle, p1, p2, p3, _r)
end

function Global.IsHelpMessageBeingDisplayed()
	return _in(0x4D79439A6B55AC67, _r)
end

function Global.IsHelpMessageFadingOut()
	return _in(0x327EDEEEAC55C369, _r)
end

--- Doesn't appear to work, use IS_HELP_MESSAGE_BEING_DISPLAYED instead
function Global.IsHelpMessageOnScreen()
	return _in(0xDAD37F45428801AE, _r)
end

--- Checks whether the horn of a vehicle is currently played.
function Global.IsHornActive(vehicle)
	return _in(0x9D6BFC12B05C6121, vehicle, _r)
end

function Global.IsHoveringOverMissionCreatorBlip()
	return _in(0x4167EFE0527D706E, _r)
end
Global.N_0x4167efe0527d706e = Global.IsHoveringOverMissionCreatorBlip

--- Full list of components below
-- HUD = 0;
-- HUD_WANTED_STARS = 1;
-- HUD_WEAPON_ICON = 2;
-- HUD_CASH = 3;
-- HUD_MP_CASH = 4;
-- HUD_MP_MESSAGE = 5;
-- HUD_VEHICLE_NAME = 6;
-- HUD_AREA_NAME = 7;
-- HUD_VEHICLE_CLASS = 8;
-- HUD_STREET_NAME = 9;
-- HUD_HELP_TEXT = 10;
-- HUD_FLOATING_HELP_TEXT_1 = 11;
-- HUD_FLOATING_HELP_TEXT_2 = 12;
-- HUD_CASH_CHANGE = 13;
-- HUD_RETICLE = 14;
-- HUD_SUBTITLE_TEXT = 15;
-- HUD_RADIO_STATIONS = 16;
-- HUD_SAVING_GAME = 17;
-- HUD_GAME_STREAM = 18;
-- HUD_WEAPON_WHEEL = 19;
-- HUD_WEAPON_WHEEL_STATS = 20;
-- MAX_HUD_COMPONENTS = 21;
-- MAX_HUD_WEAPONS = 22;
-- MAX_SCRIPTED_HUD_COMPONENTS = 141;
function Global.IsHudComponentActive(id)
	return _in(0xBC4C9EA5391ECC0D, id, _r)
end

function Global.IsHudHidden()
	return _in(0xA86478C6958735C5, _r)
end

function Global.IsHudPreferenceSwitchedOn()
	return _in(0x1930DFA731813EC4, _r)
end

function Global.IsInItemset(p0, p1)
	return _in(0x2D0FC594D1E9C107, p0, p1, _r)
end

--- example:
-- if (GAMEPLAY::_684A41975F077262()) {
-- (a_0) = GAMEPLAY::_ABB2FA71C83A1B72();
-- } else {
-- (a_0) = -1;
-- }
function Global.IsInPowerSavingMode()
	return _in(0x684A41975F077262, _r)
end
Global.N_0x684a41975f077262 = Global.IsInPowerSavingMode

function Global.IsInVehicleCamDisabled()
	return _in(0x4F32C0D5A90A9B40, _r)
end
Global.N_0x4f32c0d5a90a9b40 = Global.IsInVehicleCamDisabled

--- =======================================================
-- Correction, I have change this to int, instead of int*
-- as it doesn't use a pointer to the createdIncident.
-- If you try it you will crash (or) freeze.
-- =======================================================
function Global.IsIncidentValid(incidentId)
	return _in(0xC8BC6461E629BEAA, incidentId, _r)
end

--- Seems to return true if the input is currently disabled. "_GET_LAST_INPUT_METHOD" didn't seem very accurate, but I've left the original description below.
-- --
-- index usually 2
-- returns true if the last input method was made with mouse + keyboard, false if it was made with a gamepad
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.IsInputDisabled(inputGroup)
	return _in(0xA571D46727E2B718, inputGroup, _r)
end
Global.GetLastInputMethod = Global.IsInputDisabled

--- I may be wrong with this one, but from the looks of the scripts, it sets keyboard related stuff as soon as this returns true.
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.IsInputJustDisabled(inputGroup)
	return _in(0x13337B38DB572509, inputGroup, _r)
end
Global.N_0x13337b38db572509 = Global.IsInputJustDisabled

function Global.IsInteriorCapped(interiorID)
	return _in(0x92BAC8ACF88CEC26, interiorID, _r)
end

function Global.IsInteriorDisabled(interior)
	return _in(0xBC5115A5A939DD15, interior, _r)
end

function Global.IsInteriorEntitySetActive(interior, entitySetName)
	return _in(0x35F7DD45E8C0A16D, interior, _ts(entitySetName), _r)
end
Global.N_0x35f7dd45e8c0a16d = Global.IsInteriorEntitySetActive
Global.IsInteriorPropEnabled = Global.IsInteriorEntitySetActive

function Global.IsInteriorReady(interiorID)
	return _in(0x6726BDCCC1932F0E, interiorID, _r)
end

--- Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
function Global.IsInteriorRenderingDisabled()
	return _in(0x95AB8B5C992C7B58, _r)
end

function Global.IsInteriorScene()
	return _in(0xBC72B5D7A1CBD54D, _r)
end

--- List of all IPLs: pastebin.com/iNGLY32D
function Global.IsIplActive(iplName)
	return _in(0x88A741E44A2B3495, _ts(iplName), _r)
end

function Global.IsItemsetValid(p0)
	return _in(0xB1B1EA596344DFAB, p0, _r)
end

function Global.IsLookInverted()
	return _in(0x77B612531280010D, _r)
end

function Global.IsMemoryCardInUse()
	return _in(0x8A75CE2956274ADD, _r)
end

function Global.IsMessageBeingDisplayed()
	return _in(0x7984C03AA5CC2F41, _r)
end

function Global.IsMinigameInProgress()
	return _in(0x2B4A15E44DE0F478, _r)
end

--- GET_MI*
function Global.IsMinimapAreaRevealed(x, y, radius)
	return _in(0x6E31B91145873922, x, y, radius, _r)
end
Global.N_0x6e31b91145873922 = Global.IsMinimapAreaRevealed

function Global.IsMinimapInInterior()
	return _in(0x9049FE339D5F6F6F, _r)
end
Global.N_0x9049fe339d5f6f6f = Global.IsMinimapInInterior

function Global.IsMinimapRendering()
	return _in(0xAF754F20EB5CD51A, _r)
end
Global.N_0xaf754f20eb5cd51a = Global.IsMinimapRendering
Global.IsRadarEnabled = Global.IsMinimapRendering

function Global.IsMissionCompletePlaying()
	return _in(0x19A30C23F5827F8A, _r)
end

function Global.IsMissionCompleteReadyForUi()
	return _in(0x6F259F82D873B8B8, _r)
end
Global.N_0x6f259f82d873b8b8 = Global.IsMissionCompleteReadyForUi

function Global.IsMissionCreatorBlip(blip)
	return _in(0x26F49BF3381D933D, blip, _r)
end

--- NativeDB Return Type: BOOL
function Global.IsMissionNewsStoryUnlocked(newsStory)
	return _in(0x66E49BF55B4B1874, newsStory, _r, _ri)
end
Global.GetNumberOfPassengerVoiceVariations = Global.IsMissionNewsStoryUnlocked

function Global.IsMobilePhoneCallOngoing()
	return _in(0x7497D2CE2C30D24C, _r)
end

function Global.IsMobilePhoneRadioActive()
	return _in(0xB35CE999E8EF317E, _r)
end

function Global.IsModelAPed(model)
	return _in(0x75816577FEA6DAD5, _ch(model), _r)
end

--- Returns whether the specified model represents a vehicle.
function Global.IsModelAVehicle(model)
	return _in(0x19AAC8F07BFEC53E, _ch(model), _r)
end

--- Check if model is in cdimage(rpf)
function Global.IsModelInCdimage(model)
	return _in(0x35B9E0803292B641, _ch(model), _r)
end

--- Returns whether the specified model exists in the game.
function Global.IsModelValid(model)
	return _in(0xC0296A2EDF545E92, _ch(model), _r)
end

function Global.IsMountedWeaponTaskUnderneathDrivingTask(ped)
	return _in(0xA320EF046186FA3B, ped, _r)
end

function Global.IsMoveBlendRatioRunning(ped)
	return _in(0xD4D8636C0199A939, ped, _r)
end

function Global.IsMoveBlendRatioSprinting(ped)
	return _in(0x24A2AD74FA9814E2, ped, _r)
end

function Global.IsMoveBlendRatioStill(ped)
	return _in(0x349CE7B56DAFD95C, ped, _r)
end

function Global.IsMoveBlendRatioWalking(ped)
	return _in(0xF133BBBE91E1691F, ped, _r)
end

function Global.IsMpGamerTagActive(gamerTagId)
	return _in(0x4E929E7A5796FD26, gamerTagId, _r)
end
Global.N_0x4e929e7a5796fd26 = Global.IsMpGamerTagActive

--- _IS_MP_GAMER_TAG_ACTIVE_2
function Global.IsMpGamerTagFree(gamerTagId)
	return _in(0x595B5178E412E199, gamerTagId, _r)
end
Global.AddTrevorRandomModifier = Global.IsMpGamerTagFree

function Global.IsMpGamerTagMovieActive()
	return _in(0x6E0EB3EB47C8D7AA, _r)
end
Global.N_0x6e0eb3eb47c8d7aa = Global.IsMpGamerTagMovieActive
Global.HasMpGamerTag = Global.IsMpGamerTagMovieActive

--- Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
function Global.IsMultiplayerChatActive()
	return _in(0xB118AF58B5F332A1, _r)
end
Global.IsTextChatActive = Global.IsMultiplayerChatActive

function Global.IsMusicOneshotPlaying()
	return _in(0xA097AB275061FB21, _r)
end
Global.N_0xa097ab275061fb21 = Global.IsMusicOneshotPlaying

function Global.IsNamedRendertargetLinked(modelHash)
	return _in(0x113750538FA31298, _ch(modelHash), _r)
end

function Global.IsNamedRendertargetRegistered(name)
	return _in(0x78DCDC15C9F116B4, _ts(name), _r)
end

--- Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
-- If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
function Global.IsNavmeshLoadedInArea(x1, y1, z1, x2, y2, z2)
	return _in(0xF813C7E63F9062A5, x1, y1, z1, x2, y2, z2, _r)
end

--- IS_*
function Global.IsNavmeshRequiredRegionOwnedByAnyThread()
	return _in(0x705A844002B39DC0, _r)
end
Global.N_0x705a844002b39dc0 = Global.IsNavmeshRequiredRegionOwnedByAnyThread

function Global.IsNetworkIdOwnedByParticipant(netId)
	return _in(0xA1607996431332DF, netId, _r)
end
Global.N_0xa1607996431332df = Global.IsNetworkIdOwnedByParticipant
Global.NetworkCanNetworkIdBeSeen = Global.IsNetworkIdOwnedByParticipant

function Global.IsNetworkLoadingScene()
	return _in(0x41CA5A33160EA4AB, _r)
end

function Global.IsNewLoadSceneActive()
	return _in(0xA41A05B6CB741B85, _r)
end

function Global.IsNewLoadSceneLoaded()
	return _in(0x01B8247A7A8B9AD1, _r)
end

function Global.IsNextWeatherType(weatherType)
	return _in(0x2FAA3A30BEC0F25D, _ts(weatherType), _r)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.IsObjectEntirelyInsideGarage(garageHash, entity, p2, p3)
	return _in(0x372EF6699146A1E4, garageHash, entity, p2, p3, _r)
end
Global.N_0x372ef6699146a1e4 = Global.IsObjectEntirelyInsideGarage

function Global.IsObjectNearPoint(objectHash, x, y, z, range)
	return _in(0x8C90FE4B381BA60A, _ch(objectHash), x, y, z, range, _r)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.IsObjectPartiallyInsideGarage(garageHash, entity, p2)
	return _in(0xF0EED5A6BC7B237A, garageHash, entity, p2, _r)
end
Global.N_0xf0eed5a6bc7b237a = Global.IsObjectPartiallyInsideGarage

function Global.IsObjectVisible(object)
	return _in(0x8B32ACE6326A7546, object, _r)
end

function Global.IsObjectWithinBrainActivationRange(object)
	return _in(0xCCBA154209823057, object, _r)
end

--- Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
function Global.IsOnlinePoliciesMenuActive()
	return _in(0x6F72CD94F7B5B68C, _r)
end
Global.N_0x6f72cd94f7b5b68c = Global.IsOnlinePoliciesMenuActive

--- PS4
-- MulleDK19: This function is hard-coded to always return 0.
-- Force67: I patched return result and got this : i.imgur.com/hUn7zSj.jpg
-- translate please?
function Global.IsOrbisVersion()
	return _in(0xA72BC0B675B1519E, _r)
end

function Global.IsParticleFxDelayedBlink()
	return _in(0x5CCABFFCA31DDE33, _r, _rf)
end

function Global.IsPauseMenuActive()
	return _in(0xB0034A223497FFCB, _r)
end

function Global.IsPauseMenuRestarting()
	return _in(0x1C491717107431C7, _r)
end

--- MulleDK19: This function is hard-coded to always return 1.
function Global.IsPcVersion()
	return _in(0x48AF36444B965238, _r)
end

--- Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's it.
function Global.IsPedAPlayer(ped)
	return _in(0x12534C348C6CB68B, ped, _r)
end

function Global.IsPedActiveInScenario(ped)
	return _in(0xAA135F9482C82CC3, ped, _r)
end

function Global.IsPedAimingFromCover(ped)
	return _in(0x3998B1276A3300E5, ped, _r)
end

--- p1 is anywhere from 4 to 7 in the scripts. Might be a weapon wheel group?
-- ^It's kinda like that.
-- 7 returns true if you are equipped with any weapon except your fists.
-- 6 returns true if you are equipped with any weapon except melee weapons.
-- 5 returns true if you are equipped with any weapon except the Explosives weapon group.
-- 4 returns true if you are equipped with any weapon except Explosives weapon group AND melee weapons.
-- 3 returns true if you are equipped with either Explosives or Melee weapons (the exact opposite of 4).
-- 2 returns true only if you are equipped with any weapon from the Explosives weapon group.
-- 1 returns true only if you are equipped with any Melee weapon.
-- 0 never returns true.
-- Note: When I say "Explosives weapon group", it does not include the Jerry can and Fire Extinguisher.
function Global.IsPedArmed(ped, p1)
	return _in(0x475768A975D5AD17, ped, p1, _r)
end

--- This function is hard-coded to always return 0.
function Global.IsPedBeingArrested(ped)
	return _in(0x90A09F3A45FED688, ped, _r)
end

function Global.IsPedBeingJacked(ped)
	return _in(0x9A497FE2DF198913, ped, _r)
end

function Global.IsPedBeingStealthKilled(ped)
	return _in(0x863B23EFDE9C5DF2, ped, _r)
end

--- p1 is always 0
function Global.IsPedBeingStunned(ped, p1)
	return _in(0x4FBACCE3B4138EE8, ped, p1, _r)
end

function Global.IsPedBlushColorValid(colorID)
	return _in(0x604E810189EE3A59, colorID, _r)
end
Global.N_0x604e810189ee3a59 = Global.IsPedBlushColorValid

--- Used in hairdo_shop*.ysc and maintransition.ysc
function Global.IsPedBlushColorValid_2(colorID)
	return _in(0xF41B5D290C99A3D6, colorID, _r)
end
Global.N_0xf41b5d290c99a3d6 = Global.IsPedBlushColorValid_2

function Global.IsPedClimbing(ped)
	return _in(0x53E8CB4F48BFE623, ped, _r)
end

--- Checks if the component variation is valid, this works great for randomizing components using loops.
-- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.IsPedComponentVariationValid(ped, componentId, drawableId, textureId)
	return _in(0xE825F6B6CEA7671D, ped, componentId, drawableId, textureId, _r)
end

--- l
function Global.IsPedCuffed(ped)
	return _in(0x74E559B3BC910685, ped, _r)
end

--- This native returns a true or false value.
-- Ped ped = The ped whose weapon you want to check.
function Global.IsPedCurrentWeaponSilenced(ped)
	return _in(0x65F0C5AE05943EC7, ped, _r)
end

--- Seems to consistently return true if the ped is dead.
-- p1 is always passed 1 in the scripts.
-- I suggest to remove "OR_DYING" part, because it does not detect dying phase.
-- That's what the devs call it, cry about it.
-- lol
-- that's a good meme right there.
function Global.IsPedDeadOrDying(ped, p1)
	return _in(0x3317DEDB88C95038, ped, p1, _r)
end

function Global.IsPedDefensiveAreaActive(ped, p1)
	return _in(0xBA63D9FE45412247, ped, p1, _r)
end
Global.N_0xba63d9fe45412247 = Global.IsPedDefensiveAreaActive

function Global.IsPedDiving(ped)
	return _in(0x5527B8246FEF9B11, ped, _r)
end

function Global.IsPedDoingDriveby(ped)
	return _in(0xB2C086CC1BF8F2BF, ped, _r)
end

function Global.IsPedDucking(ped)
	return _in(0xD125AE748725C6BC, ped, _r)
end

--- Presumably returns the Entity that the Ped is currently diving out of the way of.
-- var num3;
-- if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
-- if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
function Global.IsPedEvasiveDiving(ped, evadingEntity)
	return _in(0x414641C26E105898, ped, _ii(evadingEntity) --[[ may be optional ]], _r)
end

--- angle is ped's view cone
function Global.IsPedFacingPed(ped, otherPed, angle)
	return _in(0xD71649DB0A545AA3, ped, otherPed, angle, _r)
end

function Global.IsPedFalling(ped)
	return _in(0xFB92A102F1C4DFA3, ped, _r)
end

--- Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
-- If the handle is invalid, the function returns true.
function Global.IsPedFatallyInjured(ped)
	return _in(0xD839450756ED5A80, ped, _r)
end

function Global.IsPedFleeing(ped)
	return _in(0xBBCCE00B381F8482, ped, _r)
end

function Global.IsPedGettingIntoAVehicle(ped)
	return _in(0xBB062B2B5722478E, ped, _r)
end

function Global.IsPedGettingUp(ped)
	return _in(0x2A74E1D5F2F00EEC, ped, _r)
end

function Global.IsPedGoingIntoCover(ped)
	return _in(0x9F65DBC537E59AD5, ped, _r)
end

function Global.IsPedGroupMember(ped, groupId)
	return _in(0x9BB01E3834671191, ped, groupId, _r)
end

function Global.IsPedHairColorValid(colorID)
	return _in(0xE0D36E5D9E99CC21, colorID, _r)
end
Global.N_0xe0d36e5d9e99cc21 = Global.IsPedHairColorValid

--- Used in hairdo_shop*.ysc and maintransition.ysc
function Global.IsPedHairColorValid_2(colorID)
	return _in(0xED6D8E27A43B8CDE, colorID, _r)
end
Global.N_0xed6d8e27a43b8cde = Global.IsPedHairColorValid_2

function Global.IsPedHangingOnToVehicle(ped)
	return _in(0x1C86D8AEF8254B78, ped, _r)
end

function Global.IsPedHeadingTowardsPosition(ped, x, y, z, p4)
	return _in(0xFCF37A457CB96DC0, ped, x, y, z, p4, _r)
end
Global.N_0xfcf37a457cb96dc0 = Global.IsPedHeadingTowardsPosition

function Global.IsPedHeadtrackingEntity(ped, entity)
	return _in(0x813A0A7C9D2E831F, ped, entity, _r)
end

function Global.IsPedHeadtrackingPed(ped1, ped2)
	return _in(0x5CD3CB88A7F8850D, ped1, ped2, _r)
end

function Global.IsPedHelmetUnk(ped)
	return _in(0xB9496CE47546DB2C, ped, _r)
end
Global.N_0xb9496ce47546db2c = Global.IsPedHelmetUnk

--- Returns true/false if the ped is/isn't humanoid.
function Global.IsPedHuman(ped)
	return _in(0xB980061DA992779D, ped, _r)
end

--- Returns whether the specified ped is hurt.
function Global.IsPedHurt(ped)
	return _in(0x5983BB449D7FDB12, ped, _r)
end

function Global.IsPedInAnyBoat(ped)
	return _in(0x2E0E1C2B4F6CB339, ped, _r)
end

function Global.IsPedInAnyHeli(ped)
	return _in(0x298B91AE825E5705, ped, _r)
end

function Global.IsPedInAnyPlane(ped)
	return _in(0x5FFF4CFC74D8FB80, ped, _r)
end

function Global.IsPedInAnyPoliceVehicle(ped)
	return _in(0x0BD04E29640C9C12, ped, _r)
end

function Global.IsPedInAnySub(ped)
	return _in(0xFBFC01CCFB35D99E, ped, _r)
end

function Global.IsPedInAnyTaxi(ped)
	return _in(0x6E575D6A898AB852, ped, _r)
end

function Global.IsPedInAnyTrain(ped)
	return _in(0x6F972C1AB75A1ED0, ped, _r)
end

--- Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
-- currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
-- @param ped The ped to check.
-- @param atGetIn `true` to also consider attempting to enter a vehicle.
-- @return Whether or not the ped is currently involved in any vehicle.
function Global.IsPedInAnyVehicle(ped, atGetIn)
	return _in(0x997ABD671D25CA0B, ped, atGetIn, _r)
end

--- Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.
-- p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E[4/*14*/], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794
function Global.IsPedInCombat(ped, target)
	return _in(0x4859F1FC66A6278E, ped, target, _r)
end

--- p1 is nearly always 0 in the scripts.
function Global.IsPedInCover(ped, exceptUseWeapon)
	return _in(0x60DFD0691A170B88, ped, exceptUseWeapon, _r)
end

function Global.IsPedInCoverFacingLeft(ped)
	return _in(0x845333B3150583AB, ped, _r)
end

function Global.IsPedInCurrentConversation(ped)
	return _in(0x049E937F18F4020C, ped, _r)
end

function Global.IsPedInFlyingVehicle(ped)
	return _in(0x9134873537FA419C, ped, _r)
end

function Global.IsPedInGroup(ped)
	return _in(0x5891CAC5D4ACFF74, ped, _r)
end

function Global.IsPedInHighCover(ped)
	return _in(0x6A03BF943D767C93, ped, _r)
end
Global.N_0x6a03bf943d767c93 = Global.IsPedInHighCover
Global.IsPedStandingInCover = Global.IsPedInHighCover

--- Notes: The function only returns true while the ped is:
-- A.) Swinging a random melee attack (including pistol-whipping)
-- B.) Reacting to being hit by a melee attack (including pistol-whipping)
-- C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
-- You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
function Global.IsPedInMeleeCombat(ped)
	return _in(0x4E209B2C1EAD5159, ped, _r)
end

function Global.IsPedInModel(ped, modelHash)
	return _in(0x796D90EFB19AA332, ped, _ch(modelHash), _r)
end

function Global.IsPedInParachuteFreeFall(ped)
	return _in(0x7DCE8BDA0F1C1200, ped, _r)
end

--- Gets a value indicating whether the specified ped is in the specified vehicle.
-- If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
function Global.IsPedInVehicle(ped, vehicle, atGetIn)
	return _in(0xA3EE4A07279BB9DB, ped, vehicle, atGetIn, _r)
end

--- returns true is the ped is on the ground whining like a little female dog from a gunshot wound
function Global.IsPedInWrithe(ped)
	return _in(0xDEB6D52126E7D640, ped, _r)
end

--- Gets a value indicating whether this ped's health is below its injured threshold.
-- The default threshold is 100.
function Global.IsPedInjured(ped)
	return _in(0x84A2DD9AC37C35C1, ped, _r)
end

function Global.IsPedJacking(ped)
	return _in(0x4AE4FF911DFB61DA, ped, _r)
end

function Global.IsPedJumping(ped)
	return _in(0xCEDABC5900A0BF97, ped, _r)
end

function Global.IsPedJumpingOutOfVehicle(ped)
	return _in(0x433DDFFE2044B636, ped, _r)
end

function Global.IsPedLipstickColorValid(colorID)
	return _in(0x0525A2C2562F3CD4, colorID, _r)
end
Global.N_0x0525a2c2562f3cd4 = Global.IsPedLipstickColorValid

--- Used in hairdo_shop*.ysc and maintransition.ysc
function Global.IsPedLipstickColorValid_2(colorID)
	return _in(0x3E802F11FBE27674, colorID, _r)
end
Global.N_0x3e802f11fbe27674 = Global.IsPedLipstickColorValid_2

--- Returns true/false if the ped is/isn't male.
function Global.IsPedMale(ped)
	return _in(0x6D9F5FAA7488BA46, ped, _r)
end

function Global.IsPedModel(ped, modelHash)
	return _in(0xC9D55B1A358A5BF7, ped, _ch(modelHash), _r)
end

function Global.IsPedOnAnyBike(ped)
	return _in(0x94495889E22C6479, ped, _r)
end

function Global.IsPedOnFoot(ped)
	return _in(0x01FEE67DB37F59B2, ped, _r)
end

--- Same function call as PED::GET_MOUNT, aka just returns 0
function Global.IsPedOnMount(ped)
	return _in(0x460BC76A0E10655E, ped, _r)
end

function Global.IsPedOnSpecificVehicle(ped, vehicle)
	return _in(0xEC5F66E459AF3BB2, ped, vehicle, _r)
end

--- Gets a value indicating whether the specified ped is on top of any vehicle.
-- Return 1 when ped is on vehicle.
-- Return 0 when ped is not on a vehicle.
function Global.IsPedOnVehicle(ped)
	return _in(0x67722AEB798E5FAB, ped, _r)
end

--- IS_PED_*
-- Returns true if the ped is currently opening a door (CTaskOpenDoor).
function Global.IsPedOpeningADoor(ped)
	return _in(0x26AF0E8E30BD2A2C, ped, _r)
end
Global.N_0x26af0e8e30bd2a2c = Global.IsPedOpeningADoor

function Global.IsPedPerformingDependentComboLimit(ped)
	return _in(0xEBD0EDBA5BE957CF, ped, _r)
end
Global.N_0xebd0edba5be957cf = Global.IsPedPerformingDependentComboLimit

function Global.IsPedPerformingMeleeAction(ped)
	return _in(0xDCCA191DF9980FD7, ped, _r)
end
Global.N_0xdcca191df9980fd7 = Global.IsPedPerformingMeleeAction

function Global.IsPedPerformingStealthKill(ped)
	return _in(0xFD4CCDBCC59941B7, ped, _r)
end

function Global.IsPedPlantingBomb(ped)
	return _in(0xC70B5FAE151982D8, ped, _r)
end

function Global.IsPedProne(ped)
	return _in(0xD6A86331A537A7B9, ped, _r)
end

--- If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
function Global.IsPedRagdoll(ped)
	return _in(0x47E4E977581C5B55, ped, _r)
end

--- Returns whether the specified ped is reloading.
function Global.IsPedReloading(ped)
	return _in(0x24B100C68C645951, ped, _r)
end

function Global.IsPedRespondingToEvent(ped, event)
	return _in(0x625B774D75C87068, ped, event, _r)
end

function Global.IsPedRingtonePlaying(ped)
	return _in(0x1E8E5E20937E3137, ped, _r)
end

function Global.IsPedRunning(ped)
	return _in(0xC5286FFC176F28A2, ped, _r)
end

function Global.IsPedRunningArrestTask(ped)
	return _in(0x3DC52677769B4AE0, ped, _r)
end

function Global.IsPedRunningMeleeTask(ped)
	return _in(0xD1871251F3B5ACD7, ped, _r)
end
Global.N_0xd1871251f3b5acd7 = Global.IsPedRunningMeleeTask

function Global.IsPedRunningMobilePhoneTask(ped)
	return _in(0x2AFE52F782F25775, ped, _r)
end

function Global.IsPedRunningRagdollTask(ped)
	return _in(0xE3B6097CC25AA69E, ped, _r)
end

function Global.IsPedShaderEffectValid(ped)
	return _in(0x81AA517FBBA05D39, ped, _r)
end
Global.N_0x81aa517fbba05d39 = Global.IsPedShaderEffectValid

--- Returns whether the specified ped is shooting.
function Global.IsPedShooting(ped)
	return _in(0x34616828CD07F1A1, ped, _r)
end

function Global.IsPedShootingInArea(ped, x1, y1, z1, x2, y2, z2, p7, p8)
	return _in(0x7E9DFE24AC1E58EF, ped, x1, y1, z1, x2, y2, z2, p7, p8, _r)
end

--- Detect if ped is in any vehicle
-- [True/False]
function Global.IsPedSittingInAnyVehicle(ped)
	return _in(0x826AA586EDB9FEF8, ped, _r)
end

--- Detect if ped is sitting in the specified vehicle
-- [True/False]
function Global.IsPedSittingInVehicle(ped, vehicle)
	return _in(0xA808AA1D79230FC2, ped, vehicle, _r)
end

function Global.IsPedSprinting(ped)
	return _in(0x57E457CD2C0FC168, ped, _r)
end

function Global.IsPedStill(ped)
	return _in(0xAC29253EEF8F0180, ped, _r)
end

--- Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
function Global.IsPedStopped(ped)
	return _in(0x530944F6F4B8A214, ped, _r)
end

--- What's strafing?
function Global.IsPedStrafing(ped)
	return _in(0xE45B7F222DE47E09, ped, _r)
end

function Global.IsPedSwimming(ped)
	return _in(0x9DE327631295B4C2, ped, _r)
end

function Global.IsPedSwimmingUnderWater(ped)
	return _in(0xC024869A53992F34, ped, _r)
end

function Global.IsPedTracked(ped)
	return _in(0x4C5E1F087CD10BB7, ped, _r)
end

function Global.IsPedTryingToEnterALockedVehicle(ped)
	return _in(0x44D28D5DDFE5F68C, ped, _r)
end

function Global.IsPedUsingActionMode(ped)
	return _in(0x00E73468D085F745, ped, _r)
end

function Global.IsPedUsingAnyScenario(ped)
	return _in(0x57AB4A3080F85143, ped, _r)
end

function Global.IsPedUsingScenario(ped, scenario)
	return _in(0x1BF094736DD62C2E, ped, _ts(scenario), _r)
end

--- Definition of vaulting?
function Global.IsPedVaulting(ped)
	return _in(0x117C70D1F5730B5E, ped, _r)
end

function Global.IsPedWalking(ped)
	return _in(0xDE4C184B2B9B071A, ped, _r)
end

function Global.IsPedWeaponComponentActive(ped, weaponHash, componentHash)
	return _in(0x0D78DE0572D3969E, ped, _ch(weaponHash), _ch(componentHash), _r)
end

--- Probably checks whether the ped has finished reloading or not and if the current weapon is not being switched to another.
function Global.IsPedWeaponReadyToShoot(ped)
	return _in(0xB80CA294F2F26749, ped, _r)
end

--- Returns true if the ped passed through the parenthesis is wearing a helmet.
function Global.IsPedWearingHelmet(ped)
	return _in(0xF33BDFE19B309B19, ped, _r)
end

function Global.IsPedheadshotImgUploadAvailable()
	return _in(0xEBB376779A760AA8, _r, _ri)
end
Global.N_0xebb376779a760aa8 = Global.IsPedheadshotImgUploadAvailable

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.IsPedheadshotReady(id)
	return _in(0x7085228842B13A67, id, _r)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.IsPedheadshotValid(handle)
	return _in(0xA0A9668F158129A2, handle, _r)
end

function Global.IsPickupWeaponObjectValid(object)
	return _in(0x11D1E53A726891FE, object, _r)
end
Global.N_0x11d1e53a726891fe = Global.IsPickupWeaponObjectValid

--- Vehicle has landing gear?
function Global.IsPlaneLandingGearIntact(plane)
	return _in(0x4198AB0022B15F87, plane, _r)
end
Global.N_0x4198ab0022b15f87 = Global.IsPlaneLandingGearIntact
Global.VehicleHasLandingGear = Global.IsPlaneLandingGearIntact

function Global.IsPlaybackGoingOnForVehicle(vehicle)
	return _in(0x1C8A4C2C19E68EEC, vehicle, _r)
end

function Global.IsPlaybackUsingAiGoingOnForVehicle(vehicle)
	return _in(0xAEA8FD591FAD4106, vehicle, _r)
end

--- Returns true if an unk value is greater than 0.0f
function Global.IsPlayerBattleAware(player)
	return _in(0x38D28DA81E4E9BF9, player, _r)
end
Global.N_0x38d28da81e4e9bf9 = Global.IsPlayerBattleAware

--- Return true while player is being arrested / busted.
-- If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
-- If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
function Global.IsPlayerBeingArrested(player, atArresting)
	return _in(0x388A47C51ABDAC8E, player, atArresting, _r)
end

function Global.IsPlayerBluetoothEnable(player)
	return _in(0x65FAEE425DE637B0, player, _r)
end
Global.N_0x65faee425de637b0 = Global.IsPlayerBluetoothEnable

--- Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
-- Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
function Global.IsPlayerCamControlDisabled()
	return _in(0x7C814D2FB49F40C0, _r)
end
Global.N_0x7c814d2fb49f40c0 = Global.IsPlayerCamControlDisabled

--- Returns TRUE if the player ('s ped) is climbing at the moment.
function Global.IsPlayerClimbing(player)
	return _in(0x95E8F73DC65EFB9C, player, _r)
end

--- Can the player control himself, used to disable controls for player for things like a cutscene.
-- ---
-- You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
function Global.IsPlayerControlOn(player)
	return _in(0x49C32D60007AFA47, player, _r)
end

function Global.IsPlayerDead(player)
	return _in(0x424D4687FA1E5652, player, _r)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.IsPlayerEntirelyInsideGarage(garageHash, player, p2, p3)
	return _in(0x024A60DEB0EA69F0, garageHash, player, p2, p3, _r)
end
Global.N_0x024a60deb0ea69f0 = Global.IsPlayerEntirelyInsideGarage

--- Gets a value indicating whether the specified player is currently aiming freely.
function Global.IsPlayerFreeAiming(player)
	return _in(0x2E397FD2ECD37C87, player, _r)
end

--- Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
function Global.IsPlayerFreeAimingAtEntity(player, entity)
	return _in(0x3C06B5C839B38F7B, player, entity, _r)
end

function Global.IsPlayerFreeForAmbientTask(player)
	return _in(0xDCCFD3F106C36AB4, player, _r)
end

function Global.IsPlayerInCutscene(player)
	return _in(0xE73092F4157CD126, player, _r)
end

--- this function is hard-coded to always return 0.
function Global.IsPlayerLoggingInNp()
	return _in(0x74556E1420867ECA, _r)
end

--- Returns TRUE if the game is in online mode and FALSE if in offline mode.
-- This is an alias for NETWORK_IS_SIGNED_ONLINE.
function Global.IsPlayerOnline()
	return _in(0xF25D331DC2627BBC, _r)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.IsPlayerPartiallyInsideGarage(garageHash, player, p2)
	return _in(0x1761DC5D8471CBAA, garageHash, player, p2, _r)
end
Global.N_0x1761dc5d8471cbaa = Global.IsPlayerPartiallyInsideGarage

--- Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
function Global.IsPlayerPlaying(player)
	return _in(0x5E9564D8246B909A, player, _r)
end

function Global.IsPlayerPressingHorn(player)
	return _in(0xFA1E2BF8B10598F9, player, _r)
end

function Global.IsPlayerReadyForCutscene(player)
	return _in(0x908CBECC2CAA3690, player, _r)
end

--- Returns true if the player is riding a train.
function Global.IsPlayerRidingTrain(player)
	return _in(0x4EC12697209F2196, player, _r)
end

function Global.IsPlayerScriptControlOn(player)
	return _in(0x8A876A65283DD7D7, player, _r)
end

--- Returns true if the player is currently switching, false otherwise.
-- (When the camera is in the sky moving from Trevor to Franklin for example)
function Global.IsPlayerSwitchInProgress()
	return _in(0xD9D2CFFF49FAB35F, _r)
end
Global.N_0xd9d2cfff49fab35f = Global.IsPlayerSwitchInProgress

function Global.IsPlayerTargettingAnything(player)
	return _in(0x78CFE51896B6B8A4, player, _r)
end

function Global.IsPlayerTargettingEntity(player, entity)
	return _in(0x7912F7FC4F6264B6, player, entity, _r)
end

function Global.IsPlayerTeleportActive()
	return _in(0x02B15662D7F8886F, _r)
end

function Global.IsPlayerVehRadioEnable()
	return _in(0x5F43D83FD6738741, _r)
end
Global.N_0x5f43d83fd6738741 = Global.IsPlayerVehRadioEnable
Global.IsPlayerVehicleRadioEnabled = Global.IsPlayerVehRadioEnable

function Global.IsPlayerWantedLevelGreater(player, wantedLevel)
	return _in(0x238DB2A2C23EE9EF, player, wantedLevel, _r)
end

function Global.IsPlayingPhoneGestureAnim(ped)
	return _in(0xB8EBB1E9D3588C10, ped, _r)
end

--- NativeDB Introduced: v1604
-- @param tvChannel :
-- @param p1 :
function Global.IsPlaylistUnk(tvChannel, p1)
	return _in(0x1F710BFF7DAE6261, tvChannel, p1, _r)
end

function Global.IsPointInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x2A70BAE8883E4C81, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, _r)
end

function Global.IsPointObscuredByAMissionEntity(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xE54E209C35FFA18D, p0, p1, p2, p3, p4, p5, p6, _r)
end

--- Gets a value indicating whether the specified position is on a road.
-- The vehicle parameter is not implemented (ignored).
function Global.IsPointOnRoad(x, y, z, vehicle)
	return _in(0x125BF4ABFC536B09, x, y, z, vehicle, _r)
end

--- NativeDB Introduced: v1290
-- @param id :
function Global.IsPopMultiplierAreaUnk(id)
	return _in(0x1312F4B242609CE3, id, _r)
end

--- The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
-- @param x X coordinate of the position to check.
-- @param y Y coordinate of the position to check.
-- @param z Z coordinate of the position to check.
-- @param range The range, seems to not be very accurate during testing.
-- @param p4 Unknown, when set to true it seems to always return true no matter what I try.
-- @param checkVehicles Check for any vehicles in that area.
-- @param checkPeds Check for any peds in that area.
-- @param p7 Unknown.
-- @param p8 Unknown.
-- @param ignoreEntity This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
-- @param p10 Unknown.
-- @return Returns true if there is anything in that location matching the provided parameters.
function Global.IsPositionOccupied(x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10)
	return _in(0xADCDE75E1C60F32D, x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10, _r)
end

function Global.IsPrevWeatherType(weatherType)
	return _in(0x44F28F86433B10A9, _ts(weatherType), _r)
end

function Global.IsPrincipalAceAllowed(principal, object)
	return _in(0x37cf52ce, _ts(principal), _ts(object), _r)
end

--- Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
-- ownedByPlayer = only projectiles fired by the player will be detected.
function Global.IsProjectileInArea(x1, y1, z1, x2, y2, z2, ownedByPlayer)
	return _in(0x5270A8FBC098C3F8, x1, y1, z1, x2, y2, z2, ownedByPlayer, _r)
end

function Global.IsProjectileTypeInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xF0BC12401061DEA0, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r)
end

--- Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
-- Note: This native hasn't been tested yet.
function Global.IsProjectileTypeInArea(x1, y1, z1, x2, y2, z2, type, p7)
	return _in(0x2E0DC353342C4A6D, x1, y1, z1, x2, y2, z2, type, p7, _r)
end

--- Dr. Underscore (1/6/18):
-- Checks if the projectile is in the radius around that point.
-- p6 is (most likely) ownedByPlayer. (see IS_PROJECTILE_IN_AREA for info)
function Global.IsProjectileTypeInRadius(x, y, z, projHash, radius, ownedByPlayer)
	return _in(0x34318593248C8FB2, x, y, z, _ch(projHash), radius, ownedByPlayer, _r)
end
Global.N_0x34318593248c8fb2 = Global.IsProjectileTypeInRadius

--- MulleDK19: This function is hard-coded to always return 0.
function Global.IsPs3Version()
	return _in(0xCCA1072C29D096C2, _r)
end

function Global.IsRadarHidden()
	return _in(0x157F93B036700462, _r)
end

function Global.IsRadarPreferenceSwitchedOn()
	return _in(0x9EB6522EA68F22FE, _r)
end

function Global.IsRadioFadedOut()
	return _in(0x0626A247D2405330, _r)
end
Global.N_0x0626a247d2405330 = Global.IsRadioFadedOut

function Global.IsRadioRetuning()
	return _in(0xA151A7394A214E65, _r)
end

--- Checks if you're recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
-- mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944
-- retn
function Global.IsRecording()
	return _in(0x1897CA71995A90B4, _r)
end

--- return bool according to scripts
function Global.IsReportugcMenuOpen()
	return _in(0x9135584D09A3437E, _r)
end
Global.N_0x9135584d09a3437e = Global.IsReportugcMenuOpen

function Global.IsRockstarMessageReadyForScript()
	return _in(0xBC1CC91205EC8D6E, _r)
end
Global.N_0xbc1cc91205ec8d6e = Global.IsRockstarMessageReadyForScript

function Global.IsScInboxValid(p0)
	return _in(0x93028F1DB42BFD08, p0, _r)
end
Global.N_0x93028f1db42bfd08 = Global.IsScInboxValid

--- Returns true if the return value of a scaleform function is ready to be collected (using `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` or `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT`).
-- Old description/example:
-- ```
-- Seems to take data that is returned from "_POP_SCALEFORM_MOVIE_FUNCTION" and checks to see if it's not null/empty.
-- "agency_heist3b.ysc", line 71836:
-- if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
-- GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(l_46, "SET_INPUT_EVENT_SELECT");
-- l_45 = GRAPHICS::_END_SCALEFORM_MOVIE_METHOD_RETURN();
-- }
-- if (GRAPHICS::IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(l_45)) {
-- v_13 = GRAPHICS::GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(l_45);
-- if (v_13 == 6) {
-- sub_73269(a_0);
-- }
-- }
-- ```
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns true if the return value of a scaleform function is ready to be collected
function Global.IsScaleformMovieMethodReturnValueReady(method_return)
	return _in(0x768FF8961BA904D6, method_return, _r)
end
Global.N_0x768ff8961ba904d6 = Global.IsScaleformMovieMethodReturnValueReady
Global.GetScaleformMovieFunctionReturnBool = Global.IsScaleformMovieMethodReturnValueReady

--- Occurrences in the b617d scripts:
-- "ARMY_GUARD",
-- "ARMY_HELI",
-- "BLIMP",
-- "Cinema_Downtown",
-- "Cinema_Morningwood",
-- "Cinema_Textile",
-- "City_Banks",
-- "Countryside_Banks",
-- "DEALERSHIP",
-- "KORTZ_SECURITY",
-- "LSA_Planes",
-- "MP_POLICE",
-- "Observatory_Bikers",
-- "POLICE_POUND1",
-- "POLICE_POUND2",
-- "POLICE_POUND3",
-- "POLICE_POUND4",
-- "POLICE_POUND5",
-- "Rampage1",
-- "SANDY_PLANES",
-- "SCRAP_SECURITY",
-- "SEW_MACHINE",
-- "SOLOMON_GATE"
-- Sometimes used with DOES_SCENARIO_GROUP_EXIST:
-- if (AI::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!AI::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
-- else if (AI::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
function Global.IsScenarioGroupEnabled(scenarioGroup)
	return _in(0x367A09DED4E05B99, _ts(scenarioGroup), _r)
end

function Global.IsScenarioOccupied(p0, p1, p2, p3, p4)
	return _in(0x788756D73AC2E07C, p0, p1, p2, p3, p4, _r)
end

--- Occurrences in the b617d scripts:
-- "PROP_HUMAN_SEAT_CHAIR",
-- "WORLD_HUMAN_DRINKING",
-- "WORLD_HUMAN_HANG_OUT_STREET",
-- "WORLD_HUMAN_SMOKING",
-- "WORLD_MOUNTAIN_LION_WANDER",
-- "WORLD_HUMAN_DRINKING"
-- Sometimes used together with GAMEPLAY::IS_STRING_NULL_OR_EMPTY in the scripts.
-- scenarioType could be the same as scenarioName, used in for example AI::TASK_START_SCENARIO_AT_POSITION.
function Global.IsScenarioTypeEnabled(scenarioType)
	return _in(0x3A815DB3EA088722, _ts(scenarioType), _r)
end

function Global.IsScreenFadedIn()
	return _in(0x5A859503B0C08678, _r)
end

function Global.IsScreenFadedOut()
	return _in(0xB16FCE9DDC7BA182, _r)
end

function Global.IsScreenFadingIn()
	return _in(0x5C544BC6C57AC575, _r)
end

function Global.IsScreenFadingOut()
	return _in(0x797AC7CB535BA28F, _r)
end

function Global.IsScreenblurFadeRunning()
	return _in(0x7B226C785A52A0A9, _r)
end
Global.N_0x7b226c785a52a0a9 = Global.IsScreenblurFadeRunning

--- In drunk_controller.c4, sub_309
-- if (CAM::_C912AF078AF19212()) {
-- CAM::_1C9D7949FA533490(0);
-- }
function Global.IsScriptGlobalShaking()
	return _in(0xC912AF078AF19212, _r)
end
Global.N_0xc912af078af19212 = Global.IsScriptGlobalShaking

function Global.IsScriptedConversationLoaded()
	return _in(0xDF0D54BE7A776737, _r)
end

function Global.IsScriptedConversationOngoing()
	return _in(0x16754C556D2EDE3D, _r)
end

function Global.IsScriptedHudComponentActive(id)
	return _in(0xDD100EB17A94FF65, id, _r)
end

function Global.IsScriptedHudComponentHiddenThisFrame(id)
	return _in(0x09C0403ED9A751C2, id, _r)
end
Global.N_0x09c0403ed9a751c2 = Global.IsScriptedHudComponentHiddenThisFrame

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.IsScriptedScenarioPedUsingConditionalAnim(ped, animDict, anim)
	return _in(0x6EC47A344923E1ED, ped, _ts(animDict), _ts(anim), _r)
end

function Global.IsScriptedSpeechPlaying(p0)
	return _in(0xCC9AA18DCC7084F4, p0, _r)
end

--- NativeDB Introduced: v1493
-- @param ped :
function Global.IsScubaGearLightEnabled(ped)
	return _in(0x88274C11CF0D866D, ped, _r)
end

--- NativeDB Parameter 1: int seatIndex
function Global.IsSeatWarpOnly(vehicle, seatIndex)
	return _in(0xF7F203E31F96F6A1, vehicle, seatIndex, _r)
end
Global.N_0xf7f203e31f96f6a1 = Global.IsSeatWarpOnly

--- Some events that i found, not sure about them, but seems to have logic based on my tests:
-- '82 - dead body
-- '86
-- '87
-- '88 - shooting, fire extinguisher in use
-- '89
-- '93 - ped using horn
-- '95 - ped receiving melee attack
-- '102 - living ped receiving shot
-- '104 - player thrown grenade, tear gas, smoke grenade, jerry can dropping gasoline
-- '105 - melee attack against veh
-- '106 - player running
-- '108 - vehicle theft
-- '112 - melee attack
-- '113 - veh rollover ped
-- '114 - dead ped receiving shot
-- '116 - aiming at ped
-- '121
-- Here is full dump of shocking event types from the exe camx.me/gtav/tasks/shockingevents.txt
function Global.IsShockingEventInSphere(type, x, y, z, radius)
	return _in(0x1374ABB7C15BAB92, type, x, y, z, radius, _r)
end

--- Determines whether there is a sniper bullet within the specified coordinates. The coordinates form a rectangle.
function Global.IsSniperBulletInArea(x1, y1, z1, x2, y2, z2)
	return _in(0xFEFCF11B01287125, x1, y1, z1, x2, y2, z2, _r)
end

--- This function is hard-coded to always return 0.
function Global.IsSniperInverted()
	return _in(0x61A23B7EDA9BDA24, _r)
end

function Global.IsSocialClubActive()
	return _in(0xC406BE343FC4B9AF, _r)
end
Global.N_0xc406be343fc4b9af = Global.IsSocialClubActive

function Global.IsSpecialAbilityActive(player)
	return _in(0x3E5F7FC85D854E15, player, _r)
end

function Global.IsSpecialAbilityEnabled(player)
	return _in(0xB1D200FE26AEF3CB, player, _r)
end

function Global.IsSpecialAbilityMeterFull(player)
	return _in(0x05A1FE504B7F2587, player, _r)
end

function Global.IsSpecialAbilityUnlocked(playerModel)
	return _in(0xC6017F6A6CDFA694, _ch(playerModel), _r)
end

function Global.IsSphereVisible(x, y, z, radius)
	return _in(0xE33D59DA70B58FDF, x, y, z, radius, _r)
end

function Global.IsSphereVisibleToAnotherMachine(p0, p1, p2, p3)
	return _in(0xD82CF8E64C8729D8, p0, p1, p2, p3, _r)
end

function Global.IsSphereVisibleToPlayer(p0, p1, p2, p3, p4)
	return _in(0xDC3A310219E5DA62, p0, p1, p2, p3, p4, _r)
end

--- Returns true when the srl from BeginSrl is loaded.
-- @return -   A boolean once BeginSrl srl is loaded.
function Global.IsSrlLoaded()
	return _in(0xD0263801A4C5B0BB, _r)
end

function Global.IsStoreAvailableToUser()
	return _in(0x883D79C4071E18B3, _r)
end
Global.N_0x883d79c4071e18b3 = Global.IsStoreAvailableToUser

function Global.IsStreamPlaying()
	return _in(0xD11FA52EB849D978, _r)
end

function Global.IsStreamingAdditionalText(p0)
	return _in(0x8B6817B71B85EBF0, p0, _r)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Returns whether an asynchronous streaming file registration completed.
-- @param registerAs The file name to check, for example `asset.ydr`.
-- @return Whether or not the streaming file has been registered.
function Global.IsStreamingFileReady(registerAs)
	return _in(0xa194934d, _ts(registerAs), _r)
end

function Global.IsStringNull(string)
	return _in(0xF22B6C47C6EAB066, _ts(string), _r)
end

function Global.IsStringNullOrEmpty(string)
	return _in(0xCA042B6957743895, _ts(string), _r)
end

function Global.IsStuntJumpInProgress()
	return _in(0x7A3F19700A4D0525, _r)
end

function Global.IsStuntJumpMessageShowing()
	return _in(0x2272B0A1343129F4, _r)
end
Global.N_0x2272b0a1343129f4 = Global.IsStuntJumpMessageShowing

function Global.IsSubtitlePreferenceSwitchedOn()
	return _in(0xAD6DACA4BA53E0A4, _r)
end

function Global.IsSwitchReadyForDescent()
	return _in(0xDFA80CB25D0A19B3, _r)
end
Global.N_0xdfa80cb25d0a19b3 = Global.IsSwitchReadyForDescent

--- NativeDB Return Type: BOOL
function Global.IsSwitchSkippingDescent()
	return _in(0x5B74EA8CFD5E3E7E, _r, _ri)
end
Global.DestroyPlayerInPauseMenu = Global.IsSwitchSkippingDescent

function Global.IsSynchronizedSceneLooped(sceneID)
	return _in(0x62522002E0C391BA, sceneID, _r)
end

--- Returns true if a synchronized scene is running
function Global.IsSynchronizedSceneRunning(sceneId)
	return _in(0x25D39B935A038A26, sceneId, _r)
end

function Global.IsSystemUiBeingDisplayed()
	return _in(0x5D511E3867C87139, _r)
end

function Global.IsTaskMoveNetworkActive(ped)
	return _in(0x921CE12C489C4C41, ped, _r)
end
Global.N_0x921ce12c489c4c41 = Global.IsTaskMoveNetworkActive

function Global.IsTaskMoveNetworkReadyForTransition(ped)
	return _in(0x30ED88D5E0C56A37, ped, _r)
end
Global.N_0x30ed88d5e0c56a37 = Global.IsTaskMoveNetworkReadyForTransition

function Global.IsTaxiLightOn(vehicle)
	return _in(0x7504C0F113AB50FC, vehicle, _r)
end

--- Return whether tennis mode is active or not.
function Global.IsTennisMode(ped)
	return _in(0x5D5479D115290C3F, ped, _r)
end

function Global.IsThisAMinigameScript()
	return _in(0x7B30F65D7B710098, _r)
end

function Global.IsThisModelABicycle(model)
	return _in(0xBF94DD42F63BDED2, _ch(model), _r)
end

--- Returns true if the model is motorcycle or bycicle.
function Global.IsThisModelABike(model)
	return _in(0xB50C0B0CEDC6CE84, _ch(model), _r)
end

function Global.IsThisModelABoat(model)
	return _in(0x45A9187928F4B9E3, _ch(model), _r)
end

--- To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)
function Global.IsThisModelACar(model)
	return _in(0x7F6DB52EEFC96DF8, _ch(model), _r)
end

function Global.IsThisModelAHeli(model)
	return _in(0xDCE4334788AF94EA, _ch(model), _r)
end

--- Checks if model is a boat, then checks for FLAG_IS_JETSKI.
-- @whoever named this _IS_THIS_MODEL_AN_EMERGENCY_BOAT: please do some tests before naming natives, thanks.
function Global.IsThisModelAJetski(model)
	return _in(0x9537097412CF75FE, _ch(model), _r)
end
Global.IsThisModelASubmersible = Global.IsThisModelAJetski
Global.IsThisModelAnEmergencyBoat = Global.IsThisModelAJetski

function Global.IsThisModelAPlane(model)
	return _in(0xA0948AB42D7BA0DE, _ch(model), _r)
end

function Global.IsThisModelAQuadbike(model)
	return _in(0x39DAC362EE65FA28, _ch(model), _r)
end

function Global.IsThisModelATrain(model)
	return _in(0xAB935175B22E822B, _ch(model), _r)
end

function Global.IsThisModelAnAmphibiousCar(model)
	return _in(0x633F6F44A537EBB6, _ch(model), _r)
end

--- NativeDB Parameter 0: Hash model
function Global.IsThisModelAnAmphibiousQuadbike(model)
	return _in(0xA1A9FC1C76A6730D, model, _r)
end
Global.N_0xa1a9fc1c76a6730d = Global.IsThisModelAnAmphibiousQuadbike

function Global.IsThreadActive(threadId)
	return _in(0x46E9AE36D8FA6417, threadId, _r)
end

--- Returns true if the two times are equal; otherwise returns false.
function Global.IsTimeEqualTo(timeA, timeB)
	return _in(0xF5BC95857BD6D512, timeA, timeB, _r)
end
Global.AreIntegersEqual = Global.IsTimeEqualTo

--- Subtracts the second argument from the first, then returns whether the result is negative.
function Global.IsTimeLessThan(timeA, timeB)
	return _in(0xCB2CF5148012C8D0, timeA, timeB, _r)
end
Global.SubtractBFromAAndCheckIfNegative = Global.IsTimeLessThan

--- Subtracts the first argument from the second, then returns whether the result is negative.
function Global.IsTimeMoreThan(timeA, timeB)
	return _in(0xDE350F8651E4346C, timeA, timeB, _r)
end
Global.SubtractAFromBAndCheckIfNegative = Global.IsTimeMoreThan

function Global.IsToggleModOn(vehicle, modType)
	return _in(0x84B233A8C8FC8AE7, vehicle, modType, _r)
end

--- returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
-- Target needs to be tracked.. won't work otherwise.
function Global.IsTrackedPedVisible(ped)
	return _in(0x91C8E617F64188AC, ped, _r)
end

function Global.IsTrackedPointVisible(point)
	return _in(0xC45CCDAAC9221CA8, point, _r)
end

function Global.IsTurretSeat(vehicle, seatIndex)
	return _in(0xE33FFA906CE74880, vehicle, seatIndex, _r)
end
Global.N_0xe33ffa906ce74880 = Global.IsTurretSeat

--- IS_*
function Global.IsTvPlaylistItemPlaying(videoCliphash)
	return _in(0x0AD973CA1E077B60, _ch(videoCliphash), _r)
end
Global.N_0x0ad973ca1e077b60 = Global.IsTvPlaylistItemPlaying
Global.LoadTvChannel = Global.IsTvPlaylistItemPlaying

--- Return if interior is valid.
function Global.IsValidInterior(interiorID)
	return _in(0x26B0E73D7EAAF4D3, interiorID, _r)
end

--- IS_*
function Global.IsValidMpGamerTagMovie(gamerTagId)
	return _in(0xEB709A36958ABE0D, gamerTagId, _r)
end
Global.N_0xeb709a36958abe0d = Global.IsValidMpGamerTagMovie
Global.HasMpGamerTag_2 = Global.IsValidMpGamerTagMovie
Global.HasMpGamerTagCrewFlagsSet = Global.IsValidMpGamerTagMovie

--- p1 is false almost always.
-- However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF
function Global.IsVehicleAConvertible(vehicle, p1)
	return _in(0x52F357A30698BCCE, vehicle, p1, _r)
end

function Global.IsVehicleAlarmActivated(vehicle)
	return _in(0x4319E335B71FFF34, vehicle, _r)
end

function Global.IsVehicleAlarmSet(vehicle)
	return _in(0xdc921211, vehicle, _r)
end

function Global.IsVehicleAttachedToCargobob(cargobob, vehicleAttached)
	return _in(0xD40148F22E81A1D9, cargobob, vehicleAttached, _r)
end

--- Scripts verify that towTruck is the first parameter, not the second.
function Global.IsVehicleAttachedToTowTruck(towTruck, vehicle)
	return _in(0x146DF9EC4C4B9FD4, towTruck, vehicle, _r)
end

--- Public Function isVehicleAttachedToTrailer(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ATTACHED_TO_TRAILER, vh)
-- End Function
function Global.IsVehicleAttachedToTrailer(vehicle)
	return _in(0xE7CF3C4F9F489F0C, vehicle, _r)
end

--- IS_VEHICLE_BUMPER_HANGING_OFF
-- Not sure what the actual name is but this checks if the bumper of a vehicle is hanging off. It will return true if it is hanging, false if it falls off and false if it is not hanging off.
function Global.IsVehicleBumperBouncing(vehicle, frontBumper)
	return _in(0x27B926779DEB502D, vehicle, frontBumper, _r)
end
Global.N_0x27b926779deb502d = Global.IsVehicleBumperBouncing

function Global.IsVehicleBumperBrokenOff(vehicle, front)
	return _in(0x468056A6BB6F3846, vehicle, front, _r)
end

--- Appears to return true if the vehicle has any damage, including cosmetically.
function Global.IsVehicleDamaged(vehicle)
	return _in(0xBCDC5017D3CE1E9E, vehicle, _r)
end

--- doorID starts at 0, not seeming to skip any numbers. Four door vehicles intuitively range from 0 to 3.
function Global.IsVehicleDoorDamaged(veh, doorID)
	return _in(0xB8E181E559464527, veh, doorID, _r)
end

--- doorIndex:
-- 0 = Front Left Door
-- 1 = Front Right Door
-- 2 = Back Left Door
-- 3 = Back Right Door
-- 4 = Hood
-- 5 = Trunk
-- 6 = Trunk2
-- @param vehicle The vehicle to check.
-- @param doorIndex The index of the door to check.
-- @return A bool indiciating if the specified door is fully open on the specified vehicle.
function Global.IsVehicleDoorFullyOpen(vehicle, doorIndex)
	return _in(0x3E933CFF7B111C22, vehicle, doorIndex, _r)
end

--- p1 is always 0 in the scripts.
-- p1 = check if vehicle is on fire
function Global.IsVehicleDriveable(vehicle, isOnFireCheck)
	return _in(0x4C241E39B23DF959, vehicle, isOnFireCheck, _r)
end

--- Only ever used once in decompiled scripts: **am_pi_menu**:
-- Returns true if the engine is on fire, or if the vehicle engine health is &lt; 0 and it **has been** on fire.
-- It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.
-- This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
-- ```
-- if (((ENTITY::DOES_ENTITY_EXIST(Global_1281959) && !ENTITY::IS_ENTITY_DEAD(Global_1281959, 0)) && func_1545(Global_1281959)) && !func_205(PLAYER::PLAYER_ID()))
-- {
-- if (VEHICLE::GET_VEHICLE_ENGINE_HEALTH(Global_1281959) > 0f && VEHICLE::GET_IS_VEHICLE_ENGINE_RUNNING(Global_1281959))
-- {
-- bVar0 = true;
-- }
-- else
-- {
-- bVar0 = false;
-- }
-- if (VEHICLE::_0xEC69ADF931AAE0C3(Global_1281959)) // _IS_VEHICLE_ENGINE_ON_FIRE
-- {
-- bVar0 = false;
-- }
-- }
-- ```
-- @param vehicle The vehicle to check.
-- @return Returns true when the engine of your vehicle is on fire. Returns false if it's not on fire.
function Global.IsVehicleEngineOnFire(vehicle)
	return _in(0xEC69ADF931AAE0C3, vehicle, _r)
end
Global.N_0xec69adf931aae0c3 = Global.IsVehicleEngineOnFire

function Global.IsVehicleEngineStarting(vehicle)
	return _in(0xbb340d04, vehicle, _r)
end

function Global.IsVehicleExtraTurnedOn(vehicle, extraId)
	return _in(0xD2E6822DBFD6C8BD, vehicle, extraId, _r)
end

function Global.IsVehicleHighDetail(vehicle)
	return _in(0x1F25887F3C104278, vehicle, _r)
end

--- Returns whether the specified vehicle is currently in a burnout.
-- vb.net
-- Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
-- End Function
function Global.IsVehicleInBurnout(vehicle)
	return _in(0x1297A88E081430EB, vehicle, _r)
end

--- garageName example "Michael - Beverly Hills"
-- For a full list, see here: pastebin.com/73VfwsmS
function Global.IsVehicleInGarageArea(garageName, vehicle)
	return _in(0xCEE4490CD57BB3C2, _ts(garageName), vehicle, _r)
end

function Global.IsVehicleInteriorLightOn(vehicle)
	return _in(0xa411f72c, vehicle, _r)
end

--- Returns whether or not the vehicle has a CVehicleStreamRequestGfx that's trying to load mods.
-- True if it isn't loading mods, false if it is.
function Global.IsVehicleModLoadDone(vehicle)
	return _in(0x9A83F5F9963775EF, vehicle, _r)
end
Global.N_0x9a83f5f9963775ef = Global.IsVehicleModLoadDone

function Global.IsVehicleModel(vehicle, model)
	return _in(0x423E8DE37D934D89, vehicle, _ch(model), _r)
end

function Global.IsVehicleNeedsToBeHotwired(vehicle)
	return _in(0xf9933bf4, vehicle, _r)
end

--- indices:
-- 0 = Left
-- 1 = Right
-- 2 = Front
-- 3 = Back
function Global.IsVehicleNeonLightEnabled(vehicle, index)
	return _in(0x8C4B92553E4766A5, vehicle, index, _r)
end

--- Returns true if the id is non zero.
function Global.IsVehicleNodeIdValid(vehicleNodeId)
	return _in(0x1EAF30FCFBF5AF74, vehicleNodeId, _r)
end

--- Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
-- End Function
function Global.IsVehicleOnAllWheels(vehicle)
	return _in(0xB104CD1BABF302E2, vehicle, _r)
end

function Global.IsVehiclePreviouslyOwnedByPlayer(vehicle)
	return _in(0xf849ed67, vehicle, _r)
end

function Global.IsVehicleRadioLoud(vehicle)
	return _in(0x032A116663A4D5AC, vehicle, _r)
end

function Global.IsVehicleRocketBoostActive(vehicle)
	return _in(0x3D34E80EED4AE3BE, vehicle, _r)
end

--- Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
function Global.IsVehicleSearchlightOn(vehicle)
	return _in(0xC0F97FCE55094987, vehicle, _r)
end

--- Has an additional BOOL parameter since version [???].
-- Check if a vehicle seat is free.
-- -1 being the driver seat.
-- Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL p2
function Global.IsVehicleSeatFree(vehicle, seatIndex)
	return _in(0x22AC59A870E6A669, vehicle, seatIndex, _r)
end

function Global.IsVehicleSirenAudioOn(vehicle)
	return _in(0xB5CC40FBCB586380, vehicle, _r)
end
Global.N_0xb5cc40fbcb586380 = Global.IsVehicleSirenAudioOn
Global.IsVehicleSirenSoundOn = Global.IsVehicleSirenAudioOn

function Global.IsVehicleSirenOn(vehicle)
	return _in(0x4C9BF537BE2634B2, vehicle, _r)
end

--- Checks for FLAG_NO_RESPRAY
function Global.IsVehicleSprayable(vehicle)
	return _in(0x8D474C8FAEFF6CDE, vehicle, _r)
end
Global.N_0x8d474c8faeff6cde = Global.IsVehicleSprayable
Global.IsVehicleShopResprayAllowed = Global.IsVehicleSprayable

function Global.IsVehicleStolen(vehicle)
	return _in(0x4AF9BD80EEBEB453, vehicle, _r)
end

--- MulleDK19: Returns true if the vehicle's speed is equal to, or less than 0.02 meters per second, or 0.05 meters per second, if the vehicle's handbrake is engaged.
function Global.IsVehicleStopped(vehicle)
	return _in(0x5721B434AD84D57A, vehicle, _r)
end

--- is this for red lights only?  more testing required.
function Global.IsVehicleStoppedAtTrafficLights(vehicle)
	return _in(0x2959F696AE390A99, vehicle, _r)
end

function Global.IsVehicleStuckOnRoof(vehicle)
	return _in(0xB497F06B288DCFDF, vehicle, _r)
end

--- p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
function Global.IsVehicleStuckTimerUp(vehicle, p1, p2)
	return _in(0x679BE1DAF71DA874, vehicle, p1, p2, _r)
end

--- wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
-- completely - is to check if tire completely gone from rim.
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function Global.IsVehicleTyreBurst(vehicle, wheelID, completely)
	return _in(0xBA291848A0815CA9, vehicle, wheelID, completely, _r)
end

--- must be called after TRACK_VEHICLE_VISIBILITY
-- it's not instant so probabilly must pass an 'update' to see correct result.
function Global.IsVehicleVisible(vehicle)
	return _in(0xAA0A52D24FB98293, vehicle, _r)
end

function Global.IsVehicleWanted(vehicle)
	return _in(0xa7daf7c, vehicle, _r)
end

--- NativeDB Parameter 0: Hash weaponHash
function Global.IsVehicleWeaponDisabled(weaponHash, vehicle, owner)
	return _in(0x563B65A643ED072E, weaponHash, vehicle, owner, _r, _ri)
end
Global.N_0x563b65a643ed072e = Global.IsVehicleWeaponDisabled

function Global.IsVehicleWindowIntact(vehicle, windowIndex)
	return _in(0x46E571A0E20D01F1, vehicle, windowIndex, _r)
end

function Global.IsWarningMessageActive()
	return _in(0xE18B138FABC53103, _r)
end
Global.IsMedicalDisabled = Global.IsWarningMessageActive

--- IS_WARNING_MESSAGE_*
function Global.IsWarningMessageActive_2()
	return _in(0xAF42195A42C63BBA, _r)
end
Global.N_0xaf42195a42c63bba = Global.IsWarningMessageActive_2

function Global.IsWaypointActive()
	return _in(0x1DD1F58F493F1DA5, _r)
end

function Global.IsWaypointPlaybackGoingOnForPed(p0)
	return _in(0xE03B3F2D3DC59B64, p0, _r)
end

function Global.IsWaypointPlaybackGoingOnForVehicle(vehicle)
	return _in(0xF5134943EA29868C, vehicle, _r)
end

function Global.IsWeaponValid(weaponHash)
	return _in(0x937C71165CF334B3, _ch(weaponHash), _r)
end

--- Gets whether the world point the calling script is registered to is within desired range of the player.
function Global.IsWorldPointWithinBrainActivationRange()
	return _in(0xC5042CC6F5E3D450, _r)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.IsXbox360Version()
	return _in(0xF6201B4DAF662A9D, _r)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.KnockOffPedProp(ped, p1, p2, p3, p4)
	return _in(0x6FD7816A36615F48, ped, p1, p2, p3, p4)
end

function Global.KnockPedOffVehicle(ped)
	return _in(0x45BBCBA77C29A841, ped)
end

--- Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
function Global.LandingMenuIsActive()
	return _in(0x3BBBD13E5041A79E, _r)
end
Global.N_0x3bbbd13e5041a79e = Global.LandingMenuIsActive

function Global.Leaderboards2ReadByHandle()
	return _in(0xC30713A383BFBF0E, _i, _i, _r)
end

--- LEADERBOARDS2_READ_BY_???
function Global.Leaderboards2ReadByPlatform(gamerHandleCsv, platformName)
	return _in(0xF1AE5DCDBFCA2721, _i, _ts(gamerHandleCsv), _ts(platformName), _r)
end
Global.N_0xf1ae5dcdbfca2721 = Global.Leaderboards2ReadByPlatform

function Global.Leaderboards2ReadByRadius(p1)
	return _in(0x5CE587FB5A42C8C4, _i, p1, _i, _r)
end

function Global.Leaderboards2ReadByRank(p1, p2)
	return _in(0xBA2C7DB0C129449A, _i, p1, p2, _r)
end

function Global.Leaderboards2ReadByRow(p2, p4, p6)
	return _in(0xA9CDB1E3F0A49883, _i, _i, p2, _i, p4, _i, p6, _r)
end

function Global.Leaderboards2ReadByScoreFloat(p1, p2)
	return _in(0xE662C8B759D08F3C, _i, p1, p2, _r)
end

function Global.Leaderboards2ReadByScoreInt(p1, p2)
	return _in(0x7EEC7E4F6984A16A, _i, p1, p2, _r)
end

function Global.Leaderboards2ReadFriendsByRow(p2, p3, p4, p5)
	return _in(0x918B101666F9CB83, _i, _i, p2, p3, p4, p5, _r)
end

function Global.Leaderboards2ReadRankPrediction()
	return _in(0xC38DC1E90D22547C, _i, _i, _i, _r)
end
Global.N_0xc38dc1e90d22547c = Global.Leaderboards2ReadRankPrediction

function Global.Leaderboards2WriteData(p0)
	return _in(0xAE2206545888AE49, _ii(p0) --[[ may be optional ]], _r)
end

function Global.Leaderboards2WriteDataForEventType()
	return _in(0xC980E62E33DF1D5C, _i, _i, _r)
end
Global.N_0xc980e62e33df1d5c = Global.Leaderboards2WriteDataForEventType

function Global.LeaderboardsCacheDataRow(p0)
	return _in(0xB9BB18E2C40142ED, _ii(p0) --[[ may be optional ]], _r)
end

function Global.LeaderboardsClearCacheData()
	return _in(0xD4B02A6B476E1FDC)
end

function Global.LeaderboardsDeaths(statName, value)
	return _in(0x428EAF89E24F6C36, _ch(statName), value)
end
Global.N_0x428eaf89e24f6c36 = Global.LeaderboardsDeaths

function Global.LeaderboardsGetCacheDataRow(p0, p1, p2)
	return _in(0x9120E8DBA3D69273, p0, p1, _ii(p2) --[[ may be optional ]], _r)
end

function Global.LeaderboardsGetCacheExists(p0)
	return _in(0x9C51349BE6CDFE2C, p0, _r)
end

function Global.LeaderboardsGetCacheNumberOfRows(p0)
	return _in(0x58A651CD201D89AD, p0, _r, _ri)
end
Global.N_0x58a651cd201d89ad = Global.LeaderboardsGetCacheNumberOfRows

function Global.LeaderboardsGetCacheTime(p0)
	return _in(0xF04C1C27DA35F6C8, p0, _r, _ri)
end

function Global.LeaderboardsGetColumnId(p0, p1, p2)
	return _in(0xC4B5467A1886EA7E, p0, p1, p2, _r, _ri)
end

function Global.LeaderboardsGetColumnType(p0, p1, p2)
	return _in(0xBF4FEF46DB7894D3, p0, p1, p2, _r, _ri)
end

function Global.LeaderboardsGetNumberOfColumns(p0, p1)
	return _in(0x117B45156D7EFF2E, p0, p1, _r, _ri)
end

function Global.LeaderboardsReadAnyPending()
	return _in(0xA31FD15197B192BD, _r)
end
Global.N_0xa31fd15197b192bd = Global.LeaderboardsReadAnyPending

function Global.LeaderboardsReadClear(p0, p1, p2)
	return _in(0x7CCE5C737A665701, p0, p1, p2, _r, _ri)
end

function Global.LeaderboardsReadClearAll()
	return _in(0xA34CB6E6F0DF4A0B, _r, _ri)
end

function Global.LeaderboardsReadPending(p0, p1, p2)
	return _in(0xAC392C8483342AC2, p0, p1, p2, _r)
end

function Global.LeaderboardsReadSuccessful(p0, p1, p2)
	return _in(0x2FB19228983E832C, p0, p1, p2, _r)
end

function Global.LeaderboardsWriteAddColumn(p0, p1, p2)
	return _in(0x0BCA1D2C47B0D269, p0, p1, p2)
end
Global.N_0x0bca1d2c47b0d269 = Global.LeaderboardsWriteAddColumn

function Global.LeaderboardsWriteAddColumnLong(p0, p1, p2)
	return _in(0x2E65248609523599, p0, p1, p2)
end
Global.N_0x2e65248609523599 = Global.LeaderboardsWriteAddColumnLong

function Global.LinkNamedRendertarget(modelHash)
	return _in(0xF6C09E276AEB3F2D, _ch(modelHash))
end

--- L* (LINK_*?)
function Global.LinkStaticEmitterToEntity(emitterName, entity)
	return _in(0x651D3228960D08AF, _ts(emitterName), entity)
end
Global.N_0x651d3228960d08af = Global.LinkStaticEmitterToEntity

--- 1
function Global.LoadAllObjectsNow()
	return _in(0xBD6E84632DD4CB3F)
end

--- Loads all path nodes.
-- If keepInMemory is true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit.
-- - MulleDK19.
-- August 29, 2017: This native has been removed in v1180.
function Global.LoadAllPathNodes(keepInMemory)
	return _in(0x80E4A6EDDB0BE8D9, keepInMemory, _r)
end

--- The following cloudhats are useable:
-- "altostratus"
-- "Cirrus"
-- "cirrocumulus"
-- "Clear 01"
-- "Cloudy 01"
-- "Contrails"
-- "Horizon"
-- "horizonband1"
-- "horizonband2"
-- "horizonband3"
-- "horsey"
-- "Nimbus"
-- "Puffs"
-- "RAIN"
-- "Snowy 01"
-- "Stormy 01"
-- "stratoscumulus"
-- "Stripey"
-- "shower"
-- "Wispy"
function Global.LoadCloudHat(name, transitionTime)
	return _in(0xFC4842A34657BFCB, _ts(name), transitionTime)
end
Global.SetCloudHatTransition = Global.LoadCloudHat

--- From fm_deathmatch_creator and fm_race_creator:
-- FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
-- FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
-- NativeDB Introduced: v1604
-- @param hash :
function Global.LoadContentChangeSetGroup(hash)
	return _in(0x6BEDF5769AC2DC07, _ch(hash))
end

function Global.LoadMovieMeshSet(movieMeshSetName)
	return _in(0xB66064452270E8F1, _ts(movieMeshSetName), _r, _ri)
end

--- Reads the contents of a text file in a specified resource.
-- If executed on the client, this file has to be included in `files` in the resource manifest.
-- Example: `local data = LoadResourceFile("devtools", "data.json")`
-- @param resourceName The resource name.
-- @param fileName The file in the resource.
-- @return The file contents
function Global.LoadResourceFile(resourceName, fileName)
	return _in(0x76a9ee1f, _ts(resourceName), _ts(fileName), _r, _s)
end

--- Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.LoadRopeData(ropeId, rope_preset)
	return _in(0xCBB203C04D1ABD27, ropeId, _ts(rope_preset), _r, _ri)
end

function Global.LoadScene(x, y, z)
	return _in(0x4448EB75B4904BDB, x, y, z)
end

--- Example:
-- AUDIO::LOAD_STREAM("CAR_STEAL_1_PASSBY", "CAR_STEAL_1_SOUNDSET");
-- All found occurrences in the b678d decompiled scripts: pastebin.com/3rma6w5w
-- Stream names often ends with "_MASTER", "_SMALL" or "_STREAM". Also "_IN", "_OUT" and numbers.
-- soundSet is often set to 0 in the scripts. These are common to end the soundSets: "_SOUNDS", "_SOUNDSET" and numbers.
function Global.LoadStream(streamName, soundSet)
	return _in(0x1F1F957154EC51DF, _ts(streamName), _ts(soundSet), _r)
end

--- Example:
-- AUDIO::LOAD_STREAM_WITH_START_OFFSET("STASH_TOXIN_STREAM", 2400, "FBI_05_SOUNDS");
-- Only called a few times in the scripts.
function Global.LoadStreamWithStartOffset(streamName, startOffset, soundSet)
	return _in(0x59C16B79F53B3712, _ts(streamName), startOffset, _ts(soundSet), _r)
end

function Global.LoadingscreenGetLoadFreemode()
	return _in(0xEF7D17BC6C85264C, _r)
end
Global.N_0xef7d17bc6c85264c = Global.LoadingscreenGetLoadFreemode

function Global.LoadingscreenGetLoadFreemodeWithEventName()
	return _in(0x8AA464D4E0F6ACCD, _r)
end
Global.N_0x8aa464d4e0f6accd = Global.LoadingscreenGetLoadFreemodeWithEventName

function Global.LoadingscreenIsLoadingFreemode()
	return _in(0xC6DC823253FBB366, _r)
end
Global.N_0xc6dc823253fbb366 = Global.LoadingscreenIsLoadingFreemode
Global.IsUiLoadingMultiplayer = Global.LoadingscreenIsLoadingFreemode

function Global.LoadingscreenSetIsLoadingFreemode(toggle)
	return _in(0xC7E7181C09F33B69, toggle)
end
Global.N_0xc7e7181c09f33b69 = Global.LoadingscreenSetIsLoadingFreemode

function Global.LoadingscreenSetLoadFreemode(toggle)
	return _in(0xB0C56BD3D808D863, toggle)
end
Global.GetBroadcastFinshedLosSound = Global.LoadingscreenSetLoadFreemode
Global.N_0xb0c56bd3d808d863 = Global.LoadingscreenSetLoadFreemode

--- Only occurrence was false, in maintransition.
function Global.LoadingscreenSetLoadFreemodeWithEventName(toggle)
	return _in(0xFC309E94546FCDB5, toggle)
end
Global.N_0xfc309e94546fcdb5 = Global.LoadingscreenSetLoadFreemodeWithEventName
Global.IsInLoadingScreen = Global.LoadingscreenSetLoadFreemodeWithEventName

function Global.LocalizationGetSystemLanguage()
	return _in(0x497420E022796B3F, _r, _ri)
end
Global.N_0x497420e022796b3f = Global.LocalizationGetSystemLanguage

--- Locks the minimap to the specified angle in integer degrees.
-- angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
function Global.LockMinimapAngle(angle)
	return _in(0x299FAEBB108AE05B, angle)
end

--- Locks the minimap to the specified world position.
function Global.LockMinimapPosition(x, y)
	return _in(0x1279E861A329E73F, x, y)
end

--- Disables the radio station (hides it from the radio wheel).
-- NativeDB Introduced: v1493
-- @param radioStationName :
-- @param toggle :
function Global.LockRadioStation(radioStationName, toggle)
	return _in(0x477D9DB48F889591, _ts(radioStationName), toggle)
end

--- NativeDB Introduced: v1604
-- @param value :
function Global.Log10(value)
	return _in(0xE816E655DE37FE20, value, _r, _rf)
end

--- Not present in retail version of the game, actual definiton seems to be
-- _LOG_DEBUG_INFO(char* category, char* debugText);
function Global.LogDebugInfo(p0)
	return _in(0x2162C446DFDF38FD, _ts(p0))
end
Global.N_0x2162c446dfdf38fd = Global.LogDebugInfo

function Global.LowerConvertibleRoof(vehicle, instantlyLower)
	return _in(0xDED51F703D0FA83D, vehicle, instantlyLower)
end

function Global.LowerRetractableWheels(vehicle)
	return _in(0x5335BE58C083E74E, vehicle)
end
Global.N_0x5335be58c083e74e = Global.LowerRetractableWheels

--- Forces a ped to reload **only** if they are able to; if they have a full magazine, they will not reload.
function Global.MakePedReload(ped)
	return _in(0x20AE33F3AC9C0033, ped, _r)
end

--- is this like setting is as no longer needed?
function Global.MarkObjectForDeletion(object)
	return _in(0xADBE4809F19F927A, object)
end

--- Vehicle power multiplier.
-- Does not have to be looped each frame. Can be set once.
-- Values lower than 1f don't work.
-- Note: If the value is set with GET_RANDOM_FLOAT_IN_RANGE, the vehicle will have an absurdly high ammount of power, and will become almost undrivable for the player or NPCs. The range doesn't seem to matter.
-- An high value like 10000000000f will visually remove the wheels that apply the power (front wheels for FWD, rear wheels for RWD), but the power multiplier will still apply, and the wheels still work.
-- ------
-- value is a percentage bump which affects directly the parameter known as fInitialDriveForce in handling.meta. For example:
-- VEHICLE::_SET_VEHICLE_ENGINE_POWER_MULTIPLIER(myVehicle, 30.0)
-- will have this effect: DriveForce *= 1.3
function Global.ModifyVehicleTopSpeed(vehicle, value)
	return _in(0x93A3996368C94158, vehicle, value)
end
Global.SetVehicleEnginePowerMultiplier = Global.ModifyVehicleTopSpeed

--- Sets the water height for a given position and radius.
function Global.ModifyWater(x, y, radius, height)
	return _in(0xC443FD757C3BA637, x, y, radius, height)
end

function Global.MoveVehicleDecals(p0, p1)
	return _in(0x84C8D7C2D30D3280, p0, p1)
end

--- Adds the specified channel to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param channel A game voice channel ID.
function Global.MumbleAddVoiceTargetChannel(targetId, channel)
	return _in(0x4d386c9e, targetId, channel)
end

--- Adds the specified player to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param player A game player index.
function Global.MumbleAddVoiceTargetPlayer(targetId, player)
	return _in(0x32c5355a, targetId, player)
end

--- Adds the specified player to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param serverId The player's server id.
function Global.MumbleAddVoiceTargetPlayerByServerId(targetId, serverId)
	return _in(0x25f2b65f, targetId, serverId)
end

--- Clears the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function Global.MumbleClearVoiceTarget(targetId)
	return _in(0x8555dcba, targetId)
end

--- Clears channels from the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function Global.MumbleClearVoiceTargetChannels(targetId)
	return _in(0x5ea72e76, targetId)
end

--- Clears players from the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function Global.MumbleClearVoiceTargetPlayers(targetId)
	return _in(0x912e21da, targetId)
end

--- Sets the current Mumble voice target ID to broadcast voice to.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive). 0 disables voice targets, and 31 is server loopback.
function Global.MumbleSetVoiceTarget(targetId)
	return _in(0x960a4a95, targetId)
end

--- Overrides the output volume for a particular player on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
-- @param player A game player index.
-- @param volume The volume, ranging from 0.0 to 1.0 (or above).
function Global.MumbleSetVolumeOverride(player, volume)
	return _in(0x61c309e3, player, volume)
end

--- Overrides the output volume for a particular player with the specified server id and player name on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
-- @param serverId The player's server id.
-- @param volume The volume, ranging from 0.0 to 1.0 (or above).
function Global.MumbleSetVolumeOverrideByServerId(serverId, volume)
	return _in(0xce8e25b4, serverId, volume)
end

--- 2 matches in 1 script
-- Used in multiplayer scripts?
function Global.N_0x0032a6dba562c518()
	return _in(0x0032A6DBA562C518)
end

function Global.N_0x0035bb914316f1e3(p0, p1, p2, p3)
	return _in(0x0035BB914316F1E3, p0, p1, p2, p3)
end

function Global.N_0x011883f41211432a(x1, y1, z1, x2, y2, z2, p6)
	return _in(0x011883F41211432A, x1, y1, z1, x2, y2, z2, p6)
end

function Global.N_0x0150b6ff25a9e2e5()
	return _in(0x0150B6FF25A9E2E5)
end

function Global.N_0x015b03ee1c43e6ec(p0)
	return _in(0x015B03EE1C43E6EC, p0)
end

function Global.N_0x01708e8dd3ff8c65(p0, p1, p2, p3, p4, p5)
	return _in(0x01708E8DD3FF8C65, p0, p1, p2, p3, p4, p5, _r, _ri)
end

--- SET_VEHICLE_*
function Global.N_0x01bb4d577d38bd9e(vehicle, p1)
	return _in(0x01BB4D577D38BD9E, vehicle, p1)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0x0205f5365292d2eb(p0, p1)
	return _in(0x0205F5365292D2EB, p0, p1)
end

function Global.N_0x0218ba067d249dea()
	return _in(0x0218BA067D249DEA)
end

--- some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799
function Global.N_0x0225778816fdc28c(p0)
	return _in(0x0225778816FDC28C, p0)
end

--- DISABLE_S*
function Global.N_0x02369d5c8a51fdcf(toggle)
	return _in(0x02369D5C8A51FDCF, toggle)
end

--- NativeDB Introduced: v1493
function Global.N_0x023acab2dc9dc4a4()
	return _in(0x023ACAB2DC9DC4A4, _r, _ri)
end

function Global.N_0x02ac28f3a01fa04a(p0)
	return _in(0x02AC28F3A01FA04A, p0)
end

--- Found in the scripts:
-- GAMEPLAY::_02DEAAC8F8EA7FE7("");
function Global.N_0x02deaac8f8ea7fe7(p0)
	return _in(0x02DEAAC8F8EA7FE7, _ts(p0))
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x02e93c796abd3a97(p0)
	return _in(0x02E93C796ABD3A97, p0)
end

function Global.N_0x03300b57fcac6ddb(p0)
	return _in(0x03300B57FCAC6DDB, p0)
end

--- NativeDB Introduced: v1365
-- @param vehicle :
-- @param value :
function Global.N_0x0350e7e17ba767d0(vehicle, value)
	return _in(0x0350E7E17BA767D0, vehicle, value)
end

function Global.N_0x0378c08504160d0d(p0)
	return _in(0x0378C08504160D0D, p0, _r)
end

function Global.N_0x0379daf89ba09aa5(p0, p1)
	return _in(0x0379DAF89BA09AA5, p0, p1)
end

--- NativeDB Parameter 0: int* p0
function Global.N_0x0395cb47b022e62c(p0)
	return _in(0x0395CB47B022E62C, _ii(p0) --[[ may be optional ]], _r)
end

function Global.N_0x03c2eebb04b3fb72(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x03C2EEBB04B3FB72, p0, p1, p2, p3, p4, p5, p6)
end

function Global.N_0x03ea03af85a85cb7(ped, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x03EA03AF85A85CB7, ped, p1, p2, p3, p4, p5, p6, p7, p8, _r)
end

function Global.N_0x03f1a106bda7dd3e()
	return _in(0x03F1A106BDA7DD3E)
end

function Global.N_0x03fc694ae06c5a20()
	return _in(0x03FC694AE06C5A20)
end

function Global.N_0x0419b167ee128f33(p0, p1)
	return _in(0x0419B167EE128F33, p0, p1, _r, _ri)
end

function Global.N_0x041c7f2a6c9894e6(p0, p1, p2)
	return _in(0x041C7F2A6C9894E6, p0, p1, p2, _r, _ri)
end

--- SET_*
function Global.N_0x04655f9d075d0ae5(toggle)
	return _in(0x04655F9D075D0AE5, toggle)
end

function Global.N_0x047cbed6f6f8b63c()
	return _in(0x047CBED6F6F8B63C)
end

function Global.N_0x04918a41bc9b8157(p0, p1, p2)
	return _in(0x04918A41BC9B8157, p0, p1, p2, _r, _ri)
end

function Global.N_0x04d90ba8207ada2d(p0)
	return _in(0x04D90BA8207ADA2D, p0)
end

--- p0 was always 0xAE2602A3.
function Global.N_0x052991e59076e4e4(p0, p1)
	return _in(0x052991E59076E4E4, _ch(p0), _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x0581730ab9380412(p0, p1, p2, p3, p4, p5)
	return _in(0x0581730AB9380412, p0, p1, p2, p3, p4, p5)
end

function Global.N_0x0596843b34b95ce5(p0, p1)
	return _in(0x0596843B34B95CE5, p0, p1)
end

function Global.N_0x05f04155a226fbbf(p0, p1, p2, p3)
	return _in(0x05F04155A226FBBF, p0, p1, p2, p3)
end

function Global.N_0x06087579e7aa85a9(p0, p1, p2, p3, p4, p5)
	return _in(0x06087579E7AA85A9, p0, p1, p2, p3, p4, p5, _r)
end

function Global.N_0x061cb768363d6424(ped, toggle)
	return _in(0x061CB768363D6424, ped, toggle)
end

--- FORCE_*
function Global.N_0x062d5ead4da2fa6a()
	return _in(0x062D5EAD4DA2FA6A)
end

function Global.N_0x063ae2b2cc273588(p0, p1)
	return _in(0x063AE2B2CC273588, p0, p1)
end

--- CLEAR_*
function Global.N_0x06462a961e94b67c()
	return _in(0x06462A961E94B67C)
end

--- NativeDB Introduced: v1493
-- @param ped :
-- @param toggle :
function Global.N_0x0653b735bfbdfe87(ped, toggle)
	return _in(0x0653B735BFBDFE87, ped, toggle)
end

function Global.N_0x065d03a9d6b2c6b5(p0, p1)
	return _in(0x065D03A9D6B2C6B5, p0, p1)
end

function Global.N_0x06eaf70ae066441e(p0)
	return _in(0x06EAF70AE066441E, p0)
end

function Global.N_0x06ee9048fd080382(p0)
	return _in(0x06EE9048FD080382, p0)
end

function Global.N_0x07c313f94746702c(p0)
	return _in(0x07C313F94746702C, p0, _r, _ri)
end

function Global.N_0x07c61676e5bb52cd(p0)
	return _in(0x07C61676E5BB52CD, p0, _r, _ri)
end

function Global.N_0x07dbd622d9533857(p0)
	return _in(0x07DBD622D9533857, p0, _r, _ri)
end

function Global.N_0x07eab372c8841d99(p0, p1, p2)
	return _in(0x07EAB372C8841D99, p0, p1, p2, _r, _ri)
end

function Global.N_0x0811381ef5062fec(p0)
	return _in(0x0811381EF5062FEC, p0)
end

function Global.N_0x08b0ca7a6ab3ac32(p0, p1, p2)
	return _in(0x08B0CA7A6AB3AC32, p0, p1, p2)
end

--- Returns false if amount > wallet balance or daily transfer limit has been hit.
-- NativeDB Introduced: v323
-- @param amount :
function Global.N_0x08e8eeadfd0dc4a0(amount)
	return _in(0x08E8EEADFD0DC4A0, amount, _r)
end

function Global.N_0x0923dbf87dff735e(x, y, z)
	return _in(0x0923DBF87DFF735E, x, y, z)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x09e7eca981d9b210(p0)
	return _in(0x09E7ECA981D9B210, p0, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.N_0x0a3f820a9a9a9ac5(p0, p1, p2, p3)
	return _in(0x0A3F820A9A9A9AC5, p0, p1, p2, p3)
end

--- CLEAR_VEHICLE_*
function Global.N_0x0a436b8643716d14()
	return _in(0x0A436B8643716D14)
end

function Global.N_0x0a46af8a78dc5e0a()
	return _in(0x0A46AF8A78DC5E0A)
end

function Global.N_0x0a60017f841a54f2(p0, p1, p2, p3)
	return _in(0x0A60017F841A54F2, p0, p1, p2, p3)
end

function Global.N_0x0a9c7f36e5d7b683(p0)
	return _in(0x0A9C7F36E5D7B683, p0)
end

function Global.N_0x0aa27680a0bd43fa()
	return _in(0x0AA27680A0BD43FA)
end

function Global.N_0x0ad9710cee2f590f(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x0AD9710CEE2F590F, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end

function Global.N_0x0ad9e8f87ff7c16f(p0, p1)
	return _in(0x0AD9E8F87FF7C16F, p0, p1)
end

function Global.N_0x0ae73d8df3a762b2(p0)
	return _in(0x0AE73D8DF3A762B2, p0)
end

function Global.N_0x0b203b4afde53a4f(p2)
	return _in(0x0B203B4AFDE53A4F, _i, _i, p2, _r, _ri)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x0b39cf0d53f1c883(p0, p1, p2)
	return _in(0x0B39CF0D53F1C883, p0, p1, p2)
end

function Global.N_0x0b3e35ac043707d9(p0, p1)
	return _in(0x0B3E35AC043707D9, p0, p1)
end

function Global.N_0x0b40ed49d7d6ff84()
	return _in(0x0B40ED49D7D6FF84)
end

function Global.N_0x0b565b0aae56a0e8(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x0B565B0AAE56A0E8, p0, p1, p2, p3, p4, p5, p6)
end

function Global.N_0x0b568201dd99f0eb(p0)
	return _in(0x0B568201DD99F0EB, p0)
end

function Global.N_0x0b8b7f74bf061c6d()
	return _in(0x0B8B7F74BF061C6D, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x0bbb9a7a8ffe931b(p0, p1, p2)
	return _in(0x0BBB9A7A8FFE931B, p0, p1, p2)
end

--- IS_VEHICLE_*
function Global.N_0x0be4be946463f917(vehicle)
	return _in(0x0BE4BE946463F917, vehicle, _r)
end

function Global.N_0x0bf3b3bd47d79c08(modelHash, p1)
	return _in(0x0BF3B3BD47D79C08, _ch(modelHash), p1)
end

--- Dr. Underscore (1/6/18):
-- Seems to return a value 0-2.
function Global.N_0x0c0c4e81e1ac60a0()
	return _in(0x0C0C4E81E1AC60A0, _r, _ri)
end

function Global.N_0x0c15b0e443b2349d()
	return _in(0x0C15B0E443B2349D, _r, _rf)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0x0c698d8f099174c7(p0)
	return _in(0x0C698D8F099174C7, p0)
end

function Global.N_0x0cb1be0633c024a8(p0, p1, p2, p3)
	return _in(0x0CB1BE0633C024A8, p0, p1, p2, p3)
end

function Global.N_0x0cf54f20de43879c(p0)
	return _in(0x0CF54F20DE43879C, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x0cf6cc51aa18f0f8(p0, p1, p2)
	return _in(0x0CF6CC51AA18F0F8, p0, p1, p2, _r, _ri)
end

function Global.N_0x0cf97f497fe7d048(p0)
	return _in(0x0CF97F497FE7D048, p0)
end

function Global.N_0x0d01d20616fc73fb(p0, p1)
	return _in(0x0D01D20616FC73FB, p0, p1)
end

function Global.N_0x0d30eb83668e63c5(p0, p1, p2, p3)
	return _in(0x0D30EB83668E63C5, p0, p1, p2, p3)
end

--- Dr. Underscore (1/6/18):
-- Seems to return a value 0-2.
function Global.N_0x0d6ca79eeebd8ca3()
	return _in(0x0D6CA79EEEBD8CA3, _r, _ri)
end

--- NETWORK_SET_*
function Global.N_0x0d77a82dc2d0da59()
	return _in(0x0D77A82DC2D0DA59, _i, _i)
end

--- NativeDB Introduced: v323
-- @param player :
function Global.N_0x0e3a041ed6ac2b45(player)
	return _in(0x0E3A041ED6AC2B45, player, _r, _rf)
end

function Global.N_0x0e4299c549f0d1f1(toggle)
	return _in(0x0E4299C549F0D1F1, toggle)
end

function Global.N_0x0e4f77f7b9d74d84(p0)
	return _in(0x0E4F77F7B9D74D84, p0)
end

function Global.N_0x0ede326d47cd0f3e(ped, player)
	return _in(0x0EDE326D47CD0F3E, ped, player, _r)
end

function Global.N_0x0f3b4d4e43177236(p0, p1)
	return _in(0x0F3B4D4E43177236, p0, p1)
end

function Global.N_0x0f62619393661d6e(p0, p1, p2)
	return _in(0x0F62619393661D6E, p0, p1, p2)
end

--- BG_*
-- NativeDB Introduced: v323
-- @param scriptIndex :
-- @param p1 :
function Global.N_0x0f6f1ebbc4e1d5e6(scriptIndex, p1)
	return _in(0x0F6F1EBBC4E1D5E6, scriptIndex, _ts(p1), _r)
end

function Global.N_0x0f73393bac7e6730()
	return _in(0x0F73393BAC7E6730, _i, _i, _r)
end

function Global.N_0x0fe8e1fcd2b86b33(p0, p1, p2, p3)
	return _in(0x0FE8E1FCD2B86B33, p0, p1, p2, p3)
end

function Global.N_0x1072f115dab0717e(p0, p1)
	return _in(0x1072F115DAB0717E, p0, p1)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x107a473d7a6647a9(p0)
	return _in(0x107A473D7A6647A9, p0)
end

--- UI3DSCENE_*
function Global.N_0x108be26959a9d9bb(toggle)
	return _in(0x108BE26959A9D9BB, toggle)
end

function Global.N_0x1093408b4b9d1146(vehicle, p1)
	return _in(0x1093408B4B9D1146, vehicle, p1)
end

--- In agency_heist3b.c4, its like this 90% of the time:
-- PED::_110F526AB784111F(ped, 0.099);
-- PED::SET_PED_ENVEFF_SCALE(ped, 1.0);
-- PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);
-- PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
-- and its like this 10% of the time:
-- PED::_110F526AB784111F(ped, 0.2);
-- PED::SET_PED_ENVEFF_SCALE(ped, 0.65);
-- PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);
-- PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
function Global.N_0x110f526ab784111f(ped, p1)
	return _in(0x110F526AB784111F, ped, p1)
end

function Global.N_0x112209ce0290c03a(p0, p1, p2, p3)
	return _in(0x112209CE0290C03A, p0, p1, p2, p3)
end

function Global.N_0x1153fa02a659051c()
	return _in(0x1153FA02A659051C)
end

function Global.N_0x11579d940949c49e(p0)
	return _in(0x11579D940949C49E, p0)
end

function Global.N_0x116fb94dc4b79f17(p0)
	return _in(0x116FB94DC4B79F17, _ts(p0))
end

function Global.N_0x1171a97a3d3981b6(p2, p3)
	return _in(0x1171A97A3D3981B6, _i, _i, p2, p3, _r)
end

--- SET_TEXT_??? - Used in golf and golf_mp
function Global.N_0x1185a8087587322c(p0)
	return _in(0x1185A8087587322C, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x11b0a20c493f7e36(p0, p1, p2)
	return _in(0x11B0A20C493F7E36, p0, p1, p2)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x1216e0bfa72cc703(p0, p1)
	return _in(0x1216E0BFA72CC703, p0, p1)
end

--- Hardcoded to only work in multiplayer.
function Global.N_0x12ded8ca53d47ea5(p0)
	return _in(0x12DED8CA53D47EA5, p0)
end

function Global.N_0x1312ddd8385aee4e(p0, p1)
	return _in(0x1312DDD8385AEE4E, p0, p1)
end

function Global.N_0x1398582b7f72b3ed(p0)
	return _in(0x1398582B7F72B3ED, p0)
end

function Global.N_0x13b350b8ad0eee10()
	return _in(0x13B350B8AD0EEE10)
end

function Global.N_0x13c4b962653a5280()
	return _in(0x13C4B962653A5280, _r, _ri)
end

--- SET_NETWORK_*
function Global.N_0x13f1fcb111b820b0(p0)
	return _in(0x13F1FCB111B820B0, p0)
end

function Global.N_0x140e6a44870a11ce()
	return _in(0x140E6A44870A11CE)
end

function Global.N_0x144da052257ae7d8(p0)
	return _in(0x144DA052257AE7D8, p0)
end

--- IS_PED_*
function Global.N_0x14590ddbedb1ec85(ped)
	return _in(0x14590DDBEDB1EC85, ped, _r)
end

--- Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
-- To disable the keys, use [`0xEC9264727EEC0F28`](#_0xEC9264727EEC0F28).
function Global.N_0x14621bb1df14e2b2()
	return _in(0x14621BB1DF14E2B2)
end

--- NETWORK_IS_*
function Global.N_0x14922ed3e38761f0()
	return _in(0x14922ED3E38761F0, _r)
end

function Global.N_0x149aee66f0cb3a99(p0, p1)
	return _in(0x149AEE66F0CB3A99, p0, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x14d29bb12d47f68c(p0, p1, p2, p3, p4)
	return _in(0x14D29BB12D47F68C, p0, p1, p2, p3, p4)
end

function Global.N_0x14e0b2d1ad1044e0()
	return _in(0x14E0B2D1AD1044E0, _i, _i, _i, _i)
end

function Global.N_0x14eda9ee27bd1626(p0)
	return _in(0x14EDA9EE27BD1626, p0)
end

function Global.N_0x14fc5833464340a8()
	return _in(0x14FC5833464340A8)
end

--- Checks some commerce stuff
-- NativeDB Introduced: v1290
function Global.N_0x155467aca0f55705()
	return _in(0x155467ACA0F55705, _r, _ri)
end

function Global.N_0x159b7318403a1cd8(p0)
	return _in(0x159B7318403A1CD8, p0)
end

--- CLEAR_A*
function Global.N_0x15e33297c3e8dc60(p0)
	return _in(0x15E33297C3E8DC60, _ts(p0))
end

function Global.N_0x15e69e2802c24b8d(p0)
	return _in(0x15E69E2802C24B8D, p0)
end

function Global.N_0x1612c45f9e3e0d44()
	return _in(0x1612C45F9E3E0D44)
end

function Global.N_0x162c23ca83ed0a62(p0)
	return _in(0x162C23CA83ED0A62, p0, _r)
end

function Global.N_0x164c5ff663790845(p0)
	return _in(0x164C5FF663790845, p0)
end

--- Dr. Underscore (1/6/18):
-- Seems to return a value 0-2.
function Global.N_0x1670f8d05056f257(p0)
	return _in(0x1670F8D05056F257, _ts(p0), _r, _ri)
end

--- NETWORK_IS_*
-- NativeDB Introduced: v323
-- @param player :
function Global.N_0x16d3d49902f697bb(player)
	return _in(0x16D3D49902F697BB, player, _r)
end

function Global.N_0x16da8172459434aa()
	return _in(0x16DA8172459434AA, _r, _ri)
end

--- NativeDB Parameter 0: int* p0
function Global.N_0x170910093218c8b9(p0)
	return _in(0x170910093218C8B9, _ii(p0) --[[ may be optional ]], _r)
end

--- Related to displaying cash on the HUD
-- Always called before UI::_SET_SINGLEPLAYER_HUD_CASH in decompiled scripts
function Global.N_0x170f541e1cadd1de(p0)
	return _in(0x170F541E1CADD1DE, p0)
end

function Global.N_0x17330ebf2f2124a8()
	return _in(0x17330EBF2F2124A8)
end

function Global.N_0x17fca7199a530203()
	return _in(0x17FCA7199A530203, _r, _ri)
end

function Global.N_0x182f266c2d9e2beb(vehicle, p1)
	return _in(0x182F266C2D9E2BEB, vehicle, p1)
end

function Global.N_0x1888694923ef4591()
	return _in(0x1888694923EF4591)
end

--- NativeDB Parameter 0: Hash garageHash
function Global.N_0x190428512b240692(garageHash, vehicles, peds, objects, isNetwork)
	return _in(0x190428512B240692, garageHash, vehicles, peds, objects, isNetwork)
end

function Global.N_0x19853b5b17d77bca(p0, p1)
	return _in(0x19853B5B17D77BCA, p0, _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x1989c6e6f67e76a8()
	return _in(0x1989C6E6F67E76A8, _i, _i, _i, _r)
end

--- RELEASE_???
-- I say RELEASE_???, as in IDA this native calls the same function as
-- -'RELEASE_MISSION_AUDIO_BANK()'.
-- -'RELEASE_AMBIENT_AUDIO_BANK()'.
-- -'RELEASE_SCRIPT_AUDIO_BANK()'.
-- However 'RELEASE_NAMED_SCRIPT_AUDIO_BANK' does not use the same function. So may be, 'RELEASE_???_AUDIO_BANK()'? Doubt it.
function Global.N_0x19af7ed9b9d23058()
	return _in(0x19AF7ED9B9D23058)
end

--- Related to tennis mode.
-- GET_TENNIS_*
function Global.N_0x19bfed045c647c49(ped)
	return _in(0x19BFED045C647C49, ped, _r)
end

--- Seems to return the current type of view
-- example: // checks if you're currently in first person
-- if ((CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) && (!__463_$28ED382849B17AFC())) {
-- UI::_FDEC055AB549E328();
-- UI::_SET_NOTIFICATION_TEXT_ENTRY("REC_FEED_WAR");
-- l_CE[0/*1*/] = UI::_DRAW_NOTIFICATION(0, 1);
-- }
function Global.N_0x19cafa3c87f7c2ff()
	return _in(0x19CAFA3C87F7C2FF, _r, _ri)
end

--- SET_ENTITY_*
function Global.N_0x1a092bb0c3808b96(entity, p1)
	return _in(0x1A092BB0C3808B96, entity, p1)
end

--- Only appears in lamar1 script.
function Global.N_0x1a330d297aac6bc1(ped, p1)
	return _in(0x1A330D297AAC6BC1, ped, p1)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x1a6cbb06e2d0d79d(p0, p1)
	return _in(0x1A6CBB06E2D0D79D, p0, p1)
end

function Global.N_0x1a7ce7cd3e653485(p0)
	return _in(0x1A7CE7CD3E653485, p0)
end

function Global.N_0x1a8ea222f9c67dbb(p0)
	return _in(0x1A8EA222F9C67DBB, p0, _r, _ri)
end

function Global.N_0x1b0b4aeed5b9b41c(p0)
	return _in(0x1B0B4AEED5B9B41C, p0)
end

--- Sets a value that appears to affect door opening behavior when damaged.
-- SET_*
function Global.N_0x1b212b26dd3c04df(vehicle, toggle)
	return _in(0x1B212B26DD3C04DF, vehicle, toggle)
end

function Global.N_0x1b7abe26cbcbf8c7(ped, p1, p2)
	return _in(0x1B7ABE26CBCBF8C7, ped, p1, p2)
end

function Global.N_0x1bb299305c3e8c13(p0, p1, p2, p3)
	return _in(0x1BB299305C3E8C13, p0, p1, p2, p3)
end

--- Dr. Underscore (1/6/18):
-- Only one instance across all scripts. (maintransition)
-- May not be a bool, it could be one of these 0-2 values that are returned just about 500 god damn times.
function Global.N_0x1bbc135a4d25edde(p0)
	return _in(0x1BBC135A4D25EDDE, p0)
end

--- ENABLE_VEHICLE_*
function Global.N_0x1c073274e065c6d2(vehicle, toggle)
	return _in(0x1C073274E065C6D2, vehicle, toggle)
end

function Global.N_0x1c1b69fae509ba97(p0, p1)
	return _in(0x1C1B69FAE509BA97, p0, p1)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x1c57c94a6446492a(p0, p1)
	return _in(0x1C57C94A6446492A, p0, p1)
end

--- SET_TRA*
function Global.N_0x1cba05ae7bd7ee05(p0)
	return _in(0x1CBA05AE7BD7EE05, p0)
end

--- NativeDB Introduced: v323
function Global.N_0x1d12a56fc95be92e()
	return _in(0x1D12A56FC95BE92E, _r, _ri)
end

function Global.N_0x1d4446a62d35b0d0(p0, p1)
	return _in(0x1D4446A62D35B0D0, p0, p1, _r, _ri)
end

--- IS_COMMERCE_*
function Global.N_0x1d4dc17c38feaff0()
	return _in(0x1D4DC17C38FEAFF0, _r)
end

function Global.N_0x1d610eb0fea716d9(p0)
	return _in(0x1D610EB0FEA716D9, p0, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.N_0x1dc9b749e7ae282b(p0, p1, p2, p3)
	return _in(0x1DC9B749E7AE282B, p0, p1, p2, p3)
end

function Global.N_0x1dd2139a9a20dce8()
	return _in(0x1DD2139A9A20DCE8, _r)
end

function Global.N_0x1e3f1b1b891a2aaa(p0, p1)
	return _in(0x1E3F1B1B891A2AAA, p0, p1)
end

--- GET_*
function Global.N_0x1e77fa7a62ee6c4c(p0)
	return _in(0x1E77FA7A62EE6C4C, p0, _r, _ri)
end

function Global.N_0x1e9057a74fd73e23()
	return _in(0x1E9057A74FD73E23)
end

--- Unsure about the use of this native but here's an example:
-- void sub_8709() {
-- GAMEPLAY::_1EAE0A6E978894A2(0, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(1, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(2, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(3, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(4, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(5, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(6, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(7, 1);
-- GAMEPLAY::_1EAE0A6E978894A2(8, 1);
-- }
-- So it appears that p0 ranges from 0 to 8.
-- ENABLE_DISPATCH_SERVICE, seems to have a similar layout.
function Global.N_0x1eae0a6e978894a2(p0, p1)
	return _in(0x1EAE0A6E978894A2, p0, p1)
end

function Global.N_0x1ee7d8df4425f053(p0)
	return _in(0x1EE7D8DF4425F053, p0)
end

function Global.N_0x1f1e9682483697c7(p0, p1)
	return _in(0x1F1E9682483697C7, p0, p1, _r)
end

function Global.N_0x1f2300cb7fa7b7f6()
	return _in(0x1F2300CB7FA7B7F6, _r, _ri)
end

function Global.N_0x1f2e4e06dea8992b(vehicle, p1)
	return _in(0x1F2E4E06DEA8992B, vehicle, p1)
end

function Global.N_0x1f34b0626c594380(p0, p1)
	return _in(0x1F34B0626C594380, p0, p1)
end

function Global.N_0x1f351cf1c6475734(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x1F351CF1C6475734, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

function Global.N_0x1f3f018bc3afa77c(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x1F3F018BC3AFA77C, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r, _ri)
end

--- NativeDB Introduced: v1180
function Global.N_0x1f7bc3539f9e0224()
	return _in(0x1F7BC3539F9E0224)
end

function Global.N_0x1f8e00fb18239600(p0)
	return _in(0x1F8E00FB18239600, p0)
end

function Global.N_0x1f9fb66f3a3842d2(vehicle, p1)
	return _in(0x1F9FB66F3A3842D2, vehicle, p1)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x1fda0aa679c9919b(p0)
	return _in(0x1FDA0AA679C9919B, p0)
end

function Global.N_0x1ff6bf9a63e5757f()
	return _in(0x1FF6BF9A63E5757F)
end

--- SET_PED_STE*
function Global.N_0x2016c603d6b8987c(ped, toggle)
	return _in(0x2016C603D6B8987C, ped, toggle)
end

function Global.N_0x20746f7b1032a3c7(p0, p1, p2, p3)
	return _in(0x20746F7B1032A3C7, p0, p1, p2, p3)
end

--- -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
-- first one seems to be a string of a mission name, second one seems to be a bool/toggle
-- p1 was always 0.
function Global.N_0x208784099002bc30(missionNameLabel, p1)
	return _in(0x208784099002BC30, _ts(missionNameLabel), p1)
end

function Global.N_0x20c6c7e4eb082a7f(p0)
	return _in(0x20C6C7E4EB082A7F, p0)
end

--- HAS_*
function Global.N_0x2107a3773771186d()
	return _in(0x2107A3773771186D, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x211c4ef450086857()
	return _in(0x211C4EF450086857)
end

--- example
-- if (UI::IS_HELP_MESSAGE_BEING_DISPLAYED()&&(!UI::_214CD562A939246A())) {
-- return 0;
-- }
function Global.N_0x214cd562a939246a()
	return _in(0x214CD562A939246A, _r)
end

--- GET_C*
function Global.N_0x21c235bc64831e5a(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x21C235BC64831E5A, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r, _rv)
end

--- IS_*
function Global.N_0x21d04d7bc538c146(entity)
	return _in(0x21D04D7BC538C146, entity, _r)
end

--- Function.Call(Hash._0x2208438012482A1A, ped, 0, 0);
-- This makes the ped have faster animations
function Global.N_0x2208438012482a1a(ped, p1, p2)
	return _in(0x2208438012482A1A, ped, p1, p2)
end

function Global.N_0x225798743970412b(p0)
	return _in(0x225798743970412B, _ii(p0) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.N_0x226c284c830d0ca8(p0, p1, p2, p3)
	return _in(0x226C284C830D0CA8, p0, p1, p2, p3)
end

function Global.N_0x22a249a53034450a(p0)
	return _in(0x22A249A53034450A, p0)
end

--- BG_*
-- NativeDB Introduced: v323
-- @param scriptIndex :
-- @param p1 :
function Global.N_0x22e21fbcfc88c149(scriptIndex, p1)
	return _in(0x22E21FBCFC88C149, scriptIndex, _ts(p1), _r, _ri)
end

--- Probably GET_VEHICLE_SOMETHING
-- @return Returns a BOOL
function Global.N_0x22fecb546c276a30(vehicle)
	return _in(0x22FECB546C276A30, vehicle, _r)
end

function Global.N_0x2302c0264ea58d31()
	return _in(0x2302C0264EA58D31)
end

function Global.N_0x2311dd7159f00582(vehicle, p1)
	return _in(0x2311DD7159F00582, vehicle, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x23227df0b2115469()
	return _in(0x23227DF0B2115469)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x237440e46d918649(p0)
	return _in(0x237440E46D918649, p0)
end

function Global.N_0x2382ab11450ae7ba(p0, p1)
	return _in(0x2382AB11450AE7BA, p0, p1)
end

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
-- Hardcoded to return false.
function Global.N_0x23f09eadc01449d6(inputGroup)
	return _in(0x23F09EADC01449D6, inputGroup, _r)
end

--- ------------------------
-- | Belongs in DLC2 |
-- ------------------------
-- Only used once in scripts, in maintransition.
-- maintransition.c4, line ~82432:
-- if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {
-- g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
-- return 1;
-- }
-- Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
function Global.N_0x241fca5b1aa14f75()
	return _in(0x241FCA5B1AA14F75, _r)
end

function Global.N_0x2467a2d807d37ca3(p0)
	return _in(0x2467A2D807D37CA3, p0, _r, _ri)
end

function Global.N_0x247acbc4abbc9d1c(p0)
	return _in(0x247ACBC4ABBC9D1C, p0)
end

function Global.N_0x24a49beaf468dc90(p0, p2, p3, p4)
	return _in(0x24A49BEAF468DC90, p0, _i, p2, p3, p4, _r)
end

function Global.N_0x24e4e51fc16305f9()
	return _in(0x24E4E51FC16305F9, _r, _ri)
end

function Global.N_0x25361a96e0f7e419(p0, p1, p2, p3)
	return _in(0x25361A96E0F7E419, p0, p1, p2, p3, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0x2542269291c6ac84(p0)
	return _in(0x2542269291C6AC84, p0, _r, _ri)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0x2555cf7da5473794()
	return _in(0x2555CF7DA5473794, _r, _ri)
end

--- NativeDB Introduced: v323
function Global.N_0x2570e26be63964e3()
	return _in(0x2570E26BE63964E3, _r, _ri)
end

function Global.N_0x2587a48bc88dfadf(p0)
	return _in(0x2587A48BC88DFADF, p0)
end

function Global.N_0x259ba6d4e6f808f1(p0)
	return _in(0x259BA6D4E6F808F1, p0)
end

--- NativeDB Introduced: v1365
function Global.N_0x25aaa32bdc98f2a3()
	return _in(0x25AAA32BDC98F2A3, _r, _ri)
end

function Global.N_0x25d990f8e0e3f13c()
	return _in(0x25D990F8E0E3F13C)
end

function Global.N_0x25fc3e33a31ad0c9(p0)
	return _in(0x25FC3E33A31AD0C9, p0)
end

function Global.N_0x2605663bd4f23b5d(p0)
	return _in(0x2605663BD4F23B5D, p0)
end

function Global.N_0x261e97ad7bcf3d40(p0)
	return _in(0x261E97AD7BCF3D40, p0)
end

function Global.N_0x265559da40b3f327(p0)
	return _in(0x265559DA40B3F327, p0)
end

function Global.N_0x265635150fb0d82e()
	return _in(0x265635150FB0D82E)
end

function Global.N_0x267c78c60e806b9a(p0, p1)
	return _in(0x267C78C60E806B9A, p0, p1)
end

--- STATS::0x343B27E2(0);
-- STATS::0x343B27E2(1);
-- STATS::0x343B27E2(2);
-- STATS::0x343B27E2(3);
-- STATS::0x343B27E2(4);
-- STATS::0x343B27E2(5);
-- STATS::0x343B27E2(6);
-- STATS::0x343B27E2(7);
-- Identical in ingamehud & maintransition.
function Global.N_0x26d7399b9587fe89(p0)
	return _in(0x26D7399B9587FE89, p0)
end

function Global.N_0x26d99d5a82fd18e8(p0)
	return _in(0x26D99D5A82FD18E8, p0)
end

--- NativeDB Introduced: v1290
-- @param vehicle :
-- @param value :
function Global.N_0x26e13d440e7f6064(vehicle, value)
	return _in(0x26E13D440E7F6064, vehicle, value)
end

--- spook.
-- This function calls a function that gets another player stat, although implementation wasn't finished so it can only get your own stat.
-- Stat value it calls: 0xFC58E972
function Global.N_0x26f07dd83a5f7f98()
	return _in(0x26F07DD83A5F7F98, _r, _ri)
end

function Global.N_0x271017b9ba825366(p0, p1)
	return _in(0x271017B9BA825366, p0, p1)
end

function Global.N_0x271401846bd26e92(p0, p1)
	return _in(0x271401846BD26E92, p0, p1)
end

function Global.N_0x2735233a786b1bef(ped, p1)
	return _in(0x2735233A786B1BEF, ped, p1)
end

--- SET_F*
function Global.N_0x2790f4b17d098e26(toggle)
	return _in(0x2790F4B17D098E26, toggle)
end

function Global.N_0x27aa1c973cacfe63(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x27AA1C973CACFE63, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

function Global.N_0x27cfb1b1e078cb2d()
	return _in(0x27CFB1B1E078CB2D)
end

function Global.N_0x27e32866e9a5c416(p0)
	return _in(0x27E32866E9A5C416, p0)
end

function Global.N_0x27feb5254759cde3(textureDict, p1)
	return _in(0x27FEB5254759CDE3, _ts(textureDict), p1, _r)
end

function Global.N_0x280c7e3ac7f56e90(p0)
	return _in(0x280C7E3AC7F56E90, p0, _i, _i, _i)
end

function Global.N_0x282b6739644f4347(p0)
	return _in(0x282B6739644F4347, p0)
end

function Global.N_0x283b6062a2c01e9b()
	return _in(0x283B6062A2C01E9B)
end

function Global.N_0x287f1f75d2803595(p0, p1)
	return _in(0x287F1F75D2803595, p0, _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x288df530c92dad6f(p0, p1)
	return _in(0x288DF530C92DAD6F, p0, p1)
end

function Global.N_0x28ecb8ac2f607db2(p0, p1, p2, p3, p4)
	return _in(0x28ECB8AC2F607DB2, p0, p1, p2, p3, p4)
end

function Global.N_0x2916a928514c9827()
	return _in(0x2916A928514C9827)
end

--- DRAW_*
function Global.N_0x29280002282f1928(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23)
	return _in(0x29280002282F1928, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23)
end

function Global.N_0x293220da1b46cebc(p0, p1, p2)
	return _in(0x293220DA1B46CEBC, p0, p1, p2)
end

--- NativeDB Introduced: v1493
-- @param ped :
-- @param toggle :
function Global.N_0x29da3ca8d8b2692d(ped, toggle)
	return _in(0x29DA3CA8D8B2692D, ped, toggle)
end

function Global.N_0x2a2173e46daecd12(p0, p1)
	return _in(0x2A2173E46DAECD12, p0, p1)
end

--- NativeDB Introduced: v323
function Global.N_0x2a251aa48b2b46db()
	return _in(0x2A251AA48B2B46DB)
end

function Global.N_0x2a25adc48f87841f()
	return _in(0x2A25ADC48F87841F, _r, _ri)
end

function Global.N_0x2a5e0621dd815a9a(p0, p1, p2, p3)
	return _in(0x2A5E0621DD815A9A, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x2a7cec72c3443bcc(p0, p1, p2)
	return _in(0x2A7CEC72C3443BCC, p0, p1, p2)
end

function Global.N_0x2a86a0475b6a1434(p0, p1)
	return _in(0x2A86A0475B6A1434, p0, p1)
end

--- 2 matches across 2 scripts. Only showed in appcamera & appmedia. Both were 0.
-- Dr. Underscore (1/6/18):
-- I've found a reference in maintransition with 1, plus in appcamera and appmedia.
-- Takes and returns a bool.
function Global.N_0x2a893980e96b659a(p0)
	return _in(0x2A893980E96B659A, p0, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.N_0x2a93c46aab1eacc9(p0, p1, p2, p3)
	return _in(0x2A93C46AAB1EACC9, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x2acabed337622df2(p0)
	return _in(0x2ACABED337622DF2, _ts(p0))
end

--- if (ENTITY::DOES_ENTITY_EXIST(l_228)) {
-- CAM::_2AED6301F67007D5(l_228);
function Global.N_0x2aed6301f67007d5(entity)
	return _in(0x2AED6301F67007D5, entity)
end

function Global.N_0x2afc2d19b50797f2(p0, p1, p2, p3)
	return _in(0x2AFC2D19B50797F2, p0, p1, p2, p3)
end

function Global.N_0x2b1c623823db0d9d(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2B1C623823DB0D9D, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end

function Global.N_0x2b40a97646381508(p0)
	return _in(0x2B40A97646381508, p0)
end

function Global.N_0x2b51edbefc301339(p0, p1)
	return _in(0x2B51EDBEFC301339, p0, _ts(p1), _r)
end

function Global.N_0x2b5aa717a181fb4c(p0, p1)
	return _in(0x2B5AA717A181FB4C, p0, p1)
end

function Global.N_0x2b5e102e4a42f2bf()
	return _in(0x2B5E102E4A42F2BF, _r, _ri)
end

function Global.N_0x2b694afcf64e6994(ped, p1)
	return _in(0x2B694AFCF64E6994, ped, p1)
end

function Global.N_0x2bf66d2e7414f686()
	return _in(0x2BF66D2E7414F686, _r, _ri)
end

--- Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0.
-- Decompiled scripts always pass a blip handle as p0.
-- ```
-- // freemode.c
-- if (HUD::DOES_BLIP_EXIST(Global_2415594[iParam0]))
-- {
-- if (HUD::_0x2C173AE2BDB9385E(Global_2415594[iParam0]) != 0)
-- {
-- return 1;
-- }
-- }
-- ```
-- @param blip The blip to check.
-- @return Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0.
function Global.N_0x2c173ae2bdb9385e(blip)
	return _in(0x2C173AE2BDB9385E, blip, _r, _ri)
end

function Global.N_0x2c1d8b3b19e517cc(p0, p1)
	return _in(0x2C1D8B3B19E517CC, p0, p1, _r, _ri)
end

--- SET_ENTITY_*
function Global.N_0x2c2e3dc128f44309(entity, p1)
	return _in(0x2C2E3DC128F44309, entity, p1)
end

function Global.N_0x2c42340f916c5930(p0)
	return _in(0x2C42340F916C5930, p0, _r, _ri)
end

--- SET_VEHICLE_W* (next character is either H or I)
function Global.N_0x2c4a1590abf43e8b(vehicle, p1)
	return _in(0x2C4A1590ABF43E8B, vehicle, p1)
end

function Global.N_0x2c9f302398e13141(p0, p1)
	return _in(0x2C9F302398E13141, p0, p1)
end

function Global.N_0x2cc848a861d01493()
	return _in(0x2CC848A861D01493, _r, _ri)
end

function Global.N_0x2cd90358f67d0aa8(p0)
	return _in(0x2CD90358F67D0AA8, p0)
end

function Global.N_0x2ce9d95e4051aecd(p0)
	return _in(0x2CE9D95E4051AECD, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
-- @param p8 :
-- @param p9 :
-- @param p10 :
-- @param p11 :
function Global.N_0x2d3b147afad49de0(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x2D3B147AFAD49DE0, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end

function Global.N_0x2d5dc831176d0114(p0)
	return _in(0x2D5DC831176D0114, p0, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x2d7a9b577e72385e(p0)
	return _in(0x2D7A9B577E72385E, p0)
end

--- NativeDB Introduced: v323
function Global.N_0x2d874d4ae612a65f()
	return _in(0x2D874D4AE612A65F, _r, _ri)
end

function Global.N_0x2da41ed6e1fcd7a5(p0, p1)
	return _in(0x2DA41ED6E1FCD7A5, p0, p1, _r, _ri)
end

--- NativeDB Introduced: v463
function Global.N_0x2dd39bf3e2f9c47f()
	return _in(0x2DD39BF3E2F9C47F, _r, _ri)
end

function Global.N_0x2de6c5e2e996f178(p0)
	return _in(0x2DE6C5E2E996F178, p0)
end

function Global.N_0x2df9038c90ad5264(p0, p1, p2, p3, p4, interiorFlags, scale, duration)
	return _in(0x2DF9038C90AD5264, p0, p1, p2, p3, p4, interiorFlags, scale, duration)
end

function Global.N_0x2dfc81c9b9608549(ped, p1)
	return _in(0x2DFC81C9B9608549, ped, _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x2e0bf682cc778d49(p0)
	return _in(0x2E0BF682CC778D49, p0, _r)
end

function Global.N_0x2e22fefa0100275e()
	return _in(0x2E22FEFA0100275E, _r, _ri)
end

function Global.N_0x2e4c123d1c8a710e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2E4C123D1C8A710E, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end

function Global.N_0x2e89990ddff670c3(p0, p1)
	return _in(0x2E89990DDFF670C3, p0, p1, _r, _ri)
end

--- Appears to return whether the player is using the pause menu store. Can't be sure though.
function Global.N_0x2f057596f2bd0061()
	return _in(0x2F057596F2BD0061, _r)
end

function Global.N_0x2f074c904d85129e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2F074C904D85129E, p0, p1, p2, p3, p4, p5, p6)
end

function Global.N_0x2f137b508de238f2(p0)
	return _in(0x2F137B508DE238F2, p0)
end

function Global.N_0x2f3c3d9f50681de4(p0, p1)
	return _in(0x2F3C3D9F50681DE4, p0, p1)
end

function Global.N_0x2f41a3bae005e5fa(p0, p1)
	return _in(0x2F41A3BAE005E5FA, p0, p1)
end

--- Used with radios:
-- void sub_cf383(auto _a0) {
-- if ((a_0)==1) {
-- if (GAMEPLAY::IS_BIT_SET((g_240005._f1), 3)) {
-- PLAYER::_2F7CEB6520288061(0);
-- AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);
-- AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
-- AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);
-- }
-- sub_cf3f6(1);
-- } else {
-- if (GAMEPLAY::IS_BIT_SET((g_240005._f1), 3)) {
-- PLAYER::_2F7CEB6520288061(1);
-- AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);
-- AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
-- AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);
-- }
-- sub_cf3f6(0);
-- }
-- }
-- SET_PLAYER_S*
function Global.N_0x2f7ceb6520288061(p0)
	return _in(0x2F7CEB6520288061, p0)
end

function Global.N_0x2f7f2b26dd3f18ee(p0, p1)
	return _in(0x2F7F2B26DD3F18EE, p0, p1)
end

function Global.N_0x2fa2494b47fdd009(p0, p1)
	return _in(0x2FA2494B47FDD009, p0, p1)
end

function Global.N_0x2fab6614ce22e196(p0, p1, p2, p3)
	return _in(0x2FAB6614CE22E196, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x2fcb133ca50a49eb(p0)
	return _in(0x2FCB133CA50A49EB, p0, _r, _ri)
end

function Global.N_0x3001bef2feca3680()
	return _in(0x3001BEF2FECA3680, _r)
end

--- GET_CURRENT_*
-- NativeDB Introduced: v1493
function Global.N_0x30432a0118736e00()
	return _in(0x30432A0118736E00, _r, _ri)
end

function Global.N_0x3044240d2e0fa842()
	return _in(0x3044240D2E0FA842, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x31125fd509d9043f(p0)
	return _in(0x31125FD509D9043F, _ii(p0) --[[ may be optional ]])
end

function Global.N_0x3117d84efa60f77b(p0)
	return _in(0x3117D84EFA60F77B, p0)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x316db59cd14c1774(p0)
	return _in(0x316DB59CD14C1774, p0)
end

function Global.N_0x31727907b2c43c55(p0)
	return _in(0x31727907B2C43C55, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x31ba138f6304fb9f(p0, p1)
	return _in(0x31BA138F6304FB9F, p0, p1)
end

function Global.N_0x31e90b8873a4cd3b(p0, p1)
	return _in(0x31E90B8873A4CD3B, p0, p1)
end

function Global.N_0x31f924b53eaddf65(p0)
	return _in(0x31F924B53EADDF65, p0)
end

--- NativeDB Introduced: v323
-- @param p0 :
function Global.N_0x324c5aa411da7737(p0)
	return _in(0x324C5AA411DA7737, p0)
end

function Global.N_0x32cac93c9de73d32()
	return _in(0x32CAC93C9DE73D32, _r, _ri)
end

function Global.N_0x32ebd154cb6b8b99(p0, p1, p2)
	return _in(0x32EBD154CB6B8B99, p0, p1, p2)
end

function Global.N_0x32f34ff7f617643b(p0, p1)
	return _in(0x32F34FF7F617643B, p0, p1)
end

function Global.N_0x336b3d200ab007cb(p0, p1, p2, p3, p4)
	return _in(0x336B3D200AB007CB, p0, p1, p2, p3, p4, _r, _ri)
end

function Global.N_0x33d47e85b476abcd(p0)
	return _in(0x33D47E85B476ABCD, p0, _r)
end

function Global.N_0x33d72899e24c3365(p0, p1)
	return _in(0x33D72899E24C3365, p0, p1, _r, _ri)
end

--- NETWORK_GET_*
function Global.N_0x33de49edf4dde77a(entity)
	return _in(0x33DE49EDF4DDE77A, entity, _r, _rv)
end

--- NativeDB Introduced: v323
function Global.N_0x33df47cc0642061b()
	return _in(0x33DF47CC0642061B, _r, _ri)
end

function Global.N_0x33e3c6c6f2f0b506(p0, p1, p2, p3)
	return _in(0x33E3C6C6F2F0B506, p0, p1, p2, p3)
end

function Global.N_0x3441cad2f2231923(vehicle, p1)
	return _in(0x3441CAD2F2231923, vehicle, p1)
end

function Global.N_0x346ef3ecaaab149e()
	return _in(0x346EF3ECAAAB149E)
end

function Global.N_0x34770b9ce0e03b91(p0, p1)
	return _in(0x34770B9CE0E03B91, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- GET_CURRENT_*
-- NativeDB Introduced: v1493
-- @param radioStationName :
function Global.N_0x34d66bc058019ce0(radioStationName)
	return _in(0x34D66BC058019CE0, _ts(radioStationName), _r, _ri)
end

--- NETWORK_GET_*
-- NativeDB Introduced: v323
-- @param player :
function Global.N_0x350c23949e43686c(player)
	return _in(0x350C23949E43686C, player, _r, _rf)
end

function Global.N_0x352e2b5cf420bf3b(p0, p1)
	return _in(0x352E2B5CF420BF3B, p0, p1)
end

function Global.N_0x357b152ef96c30b6()
	return _in(0x357B152EF96C30B6, _r, _ri)
end

function Global.N_0x359af31a4b52f5ed()
	return _in(0x359AF31A4B52F5ED, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x35a3cd97b2c0a6d2(p0)
	return _in(0x35A3CD97B2C0A6D2, p0)
end

function Global.N_0x35bb21de06784373(p0, p1)
	return _in(0x35BB21DE06784373, p0, p1)
end

function Global.N_0x35e0654f4bad7971(p0)
	return _in(0x35E0654F4BAD7971, p0)
end

function Global.N_0x36391f397731595d(p0)
	return _in(0x36391F397731595D, p0, _r, _ri)
end

--- Returns a float value related to slipstream.
function Global.N_0x36492c2f0d134c56(vehicle)
	return _in(0x36492C2F0D134C56, vehicle, _r, _rf)
end

function Global.N_0x367ef5e2f439b4c6(p0)
	return _in(0x367EF5E2F439B4C6, p0)
end

function Global.N_0x36c1451a88a09630()
	return _in(0x36C1451A88A09630, _i, _i)
end

--- ROPE_*
function Global.N_0x36ccb9be67b970fd(ropeId, p1)
	return _in(0x36CCB9BE67B970FD, ropeId, p1)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
-- @param toggle :
function Global.N_0x36de109527a2c0c4(toggle)
	return _in(0x36DE109527A2C0C4, toggle)
end

function Global.N_0x36f1b38855f2a8df(player)
	return _in(0x36F1B38855F2A8DF, player)
end

function Global.N_0x36f32de87082343e(p0, p1)
	return _in(0x36F32DE87082343E, p0, p1)
end

function Global.N_0x36f6626459d91457(p0)
	return _in(0x36F6626459D91457, p0)
end

--- NETWORK_*
-- NativeDB Introduced: v323
-- @param player :
function Global.N_0x3765c3a3e8192e10(player)
	return _in(0x3765C3A3E8192E10, player, _r, _ri)
end

--- IS_PED_*
function Global.N_0x3795688a307e1eb6(Ped)
	return _in(0x3795688A307E1EB6, Ped, _r)
end

--- I've had this return the player's ped handle sometimes, but also other random entities.
-- Whatever p0 is, it's at least not synced to other players.
-- At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
-- But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
-- @param p0 unknown.
-- @return Returns an entity handle or -1, value changes based on p0's value.
function Global.N_0x37d5f739fd494675(p0)
	return _in(0x37D5F739FD494675, p0, _r, _ri)
end

--- NativeDB Introduced: v1290
function Global.N_0x380b4968d1e09e55()
	return _in(0x380B4968D1E09E55)
end

function Global.N_0x38491439b6ba7f7d(p0, p1)
	return _in(0x38491439B6BA7F7D, p0, p1, _r, _rf)
end

function Global.N_0x3855fb5eb2c5e8b2(p0)
	return _in(0x3855FB5EB2C5E8B2, p0, _r, _ri)
end

--- Sets profile setting 934
function Global.N_0x38baaa5dd4c9d19f(value)
	return _in(0x38BAAA5DD4C9D19F, value)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
function Global.N_0x38c1cb1cb119a016(p0, p1)
	return _in(0x38C1CB1CB119A016, p0, p1)
end

function Global.N_0x393bd2275ceb7793()
	return _in(0x393BD2275CEB7793, _r, _ri)
end

function Global.N_0x394cd08e31313c28()
	return _in(0x394CD08E31313C28)
end

function Global.N_0x397baa01068baa96()
	return _in(0x397BAA01068BAA96, _r, _ri)
end

function Global.N_0x39917e1b4cb0f911(p0)
	return _in(0x39917E1B4CB0F911, p0)
end

function Global.N_0x39a5fb7eaf150840(p0, p1)
	return _in(0x39A5FB7EAF150840, p0, p1)
end

function Global.N_0x3a3d5568af297cd5(p0)
	return _in(0x3A3D5568AF297CD5, p0, _r)
end

function Global.N_0x3a48ab4445d499be()
	return _in(0x3A48AB4445D499BE, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x3a9128352eac9e85(p0)
	return _in(0x3A9128352EAC9E85, p0, _r, _ri)
end

function Global.N_0x3b458ddb57038f08(p0, p1, p2)
	return _in(0x3B458DDB57038F08, p0, p1, p2)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x3bd770d281982db5(p0, p1)
	return _in(0x3BD770D281982DB5, p0, p1, _r, _ri)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function Global.N_0x3c5c1e2c2ff814b1(toggle)
	return _in(0x3C5C1E2C2FF814B1, toggle)
end

function Global.N_0x3c67506996001f5e()
	return _in(0x3C67506996001F5E, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.N_0x3c788e7f6438754d(p0, p1, p2, p3)
	return _in(0x3C788E7F6438754D, p0, p1, p2, p3)
end

function Global.N_0x3d120012440e6683()
	return _in(0x3D120012440E6683, _r, _ri)
end

function Global.N_0x3d9acb1eb139e702()
	return _in(0x3D9ACB1EB139E702, _r, _ri)
end

function Global.N_0x3dbf2df0aeb7d289(p0)
	return _in(0x3DBF2DF0AEB7D289, p0, _r)
end

function Global.N_0x3de3aa516fb126a4(p0)
	return _in(0x3DE3AA516FB126A4, p0)
end

function Global.N_0x3de51e9c80b116cf(p0)
	return _in(0x3DE51E9C80B116CF, p0, _r, _ri)
end

--- 1 match in 1 script. cellphone_controller.
-- p0 is -1 in scripts.
-- Dr. Underscore (1/6/18):
-- I have two uses in two scripts; and it's called with -1 in maintransition, not cellphone_controller. Are you using x360 scripts, or an older version of PC scripts?
-- Also returns bool.
function Global.N_0x3dec726c25a11bac(p0)
	return _in(0x3DEC726C25A11BAC, p0, _r)
end

--- IS_*
function Global.N_0x3e38e28a1d80ddf6(ped)
	return _in(0x3E38E28A1D80DDF6, ped, _r)
end

--- GET_CURRENT_*
-- NativeDB Introduced: v1493
-- @param radioStationName :
function Global.N_0x3e65cde5215832c1(radioStationName)
	return _in(0x3E65CDE5215832C1, _ts(radioStationName), _r, _ri)
end

function Global.N_0x3e9679c1dfcf422c(p0, p1)
	return _in(0x3E9679C1DFCF422C, p0, p1)
end

function Global.N_0x3ebeac6c3f81f6bd(p0)
	return _in(0x3EBEAC6C3F81F6BD, p0)
end

--- p0 was always 2 in R* scripts.
-- Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
function Global.N_0x3ed1438c1f5c6612(p0)
	return _in(0x3ED1438C1F5C6612, p0)
end

function Global.N_0x3ed2b83ab2e82799(p0, p1)
	return _in(0x3ED2B83AB2E82799, p0, p1)
end

function Global.N_0x3f0cf9cb7e589b88()
	return _in(0x3F0CF9CB7E589B88, _r, _ri)
end

function Global.N_0x3f9990bf5f22759c(p0)
	return _in(0x3F9990BF5F22759C, _ii(p0) --[[ may be optional ]], _r)
end

function Global.N_0x3fa36981311fa4ff(netId, state)
	return _in(0x3FA36981311FA4FF, netId, state)
end

function Global.N_0x4008edf7d6e48175(p0)
	return _in(0x4008EDF7D6E48175, p0)
end

function Global.N_0x405591ec8fd9096d(p0)
	return _in(0x405591EC8FD9096D, p0)
end

function Global.N_0x4056ea1105f5abd7(p0, p1)
	return _in(0x4056EA1105F5ABD7, p0, p1)
end

--- Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
function Global.N_0x405dc2aef6af95b9(roomHashKey)
	return _in(0x405DC2AEF6AF95B9, _ch(roomHashKey))
end

function Global.N_0x40763ea7b9b783e7(p0, p1, p2)
	return _in(0x40763EA7B9B783E7, _ts(p0), p1, p2, _r, _ri)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
function Global.N_0x407dc5e97db1a4d3(p0, p1)
	return _in(0x407DC5E97DB1A4D3, p0, p1)
end

function Global.N_0x40aefd1a244741f2(p0)
	return _in(0x40AEFD1A244741F2, p0)
end

function Global.N_0x4128464231e3ca0b(p0, p1, p2, p3)
	return _in(0x4128464231E3CA0B, p0, p1, p2, p3)
end

function Global.N_0x41290b40fa63e6da(p0)
	return _in(0x41290B40FA63E6DA, p0)
end

function Global.N_0x412f1364fa066cfb(p0)
	return _in(0x412F1364FA066CFB, p0, _r, _ri)
end

function Global.N_0x41350b4fc28e3941(p0)
	return _in(0x41350B4FC28E3941, p0)
end

function Global.N_0x419615486bbf1956(p0)
	return _in(0x419615486BBF1956, p0)
end

function Global.N_0x41faa8fb2ece8720(p0)
	return _in(0x41FAA8FB2ECE8720, p0)
end

function Global.N_0x4237e822315d8ba9()
	return _in(0x4237E822315D8BA9, _r)
end

--- NativeDB Introduced: v1180
-- @param camName :
function Global.N_0x425a920fdb9a0dda(camName)
	return _in(0x425A920FDB9A0DDA, _ts(camName))
end

function Global.N_0x425aecf167663f48(ped, p1)
	return _in(0x425AECF167663F48, ped, p1)
end

function Global.N_0x4282e08174868be3()
	return _in(0x4282E08174868BE3, _r, _ri)
end

--- SET_*
function Global.N_0x428ad3e26c8d9eb0(vehicle, x, y, z, p4)
	return _in(0x428AD3E26C8D9EB0, vehicle, x, y, z, p4)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x42fce14f50f27291(p0)
	return _in(0x42FCE14F50F27291, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0x430a7631a84c9be7(p0)
	return _in(0x430A7631A84C9BE7, p0)
end

function Global.N_0x4348bfda56023a2f(p0, p1)
	return _in(0x4348BFDA56023A2F, p0, p1, _r, _ri)
end

function Global.N_0x438822c279b73b93(p0)
	return _in(0x438822C279B73B93, p0)
end

function Global.N_0x43d1680c6d19a8e9()
	return _in(0x43D1680C6D19A8E9)
end

function Global.N_0x43fa0dfc5df87815(vehicle, p1)
	return _in(0x43FA0DFC5DF87815, vehicle, p1)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x43fa7cbe20dab219(p0)
	return _in(0x43FA7CBE20DAB219, p0)
end

--- CLEAR_VEHICLE_*
function Global.N_0x4419966c9936071a(vehicle)
	return _in(0x4419966C9936071A, vehicle)
end

--- sfink: related to: NETWORK_BAIL
-- NETWORK_BAIL_TRANSITION
-- NETWORK_JOIN_GROUP_ACTIVITY
-- NETWORK_JOIN_TRANSITION
-- NETWORK_LAUNCH_TRANSITION
-- NETWORK_SESSION_HOST
-- NETWORK_SESSION_HOST_CLOSED
-- NETWORK_SESSION_HOST_FRIENDS_ONLY
-- NETWORK_SESSION_HOST_SINGLE_PLAYER
-- NETWORK_SESSION_VOICE_LEAVE
function Global.N_0x444c4525ece0a4b9()
	return _in(0x444C4525ECE0A4B9)
end

function Global.N_0x44621483ff966526(p0, p1)
	return _in(0x44621483FF966526, p0, p1)
end

function Global.N_0x44919cc079bb60bf(p0)
	return _in(0x44919CC079BB60BF, p0)
end

function Global.N_0x44a0bdc559b35f6e()
	return _in(0x44A0BDC559B35F6E, _r, _ri)
end

function Global.N_0x44aca259d67651db(p1)
	return _in(0x44ACA259D67651DB, _i, p1)
end

--- NativeDB Introduced: v323
function Global.N_0x450819d8cf90c416()
	return _in(0x450819D8CF90C416, _r, _ri)
end

--- yoga.ysc
-- if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::_0x451294E859ECC018(iParam0) != -1)
-- {
-- *uParam2 = PED::_0x451294E859ECC018(iParam0);
-- *uParam3 = PED::_0x9D728C1E12BF5518(iParam0);
-- }
function Global.N_0x451294e859ecc018(ped)
	return _in(0x451294E859ECC018, ped, _r, _ri)
end

function Global.N_0x451d05012ccec234(p0)
	return _in(0x451D05012CCEC234, p0, _r, _ri)
end

function Global.N_0x45a83257ed02d9bc()
	return _in(0x45A83257ED02D9BC)
end

function Global.N_0x45e816772e93a9db()
	return _in(0x45E816772E93A9DB, _r, _ri)
end

function Global.N_0x4668d80430d6c299(ped)
	return _in(0x4668D80430D6C299, ped)
end

--- This has been found in use in the decompiled files.
function Global.N_0x4669b3ed80f24b4e(player)
	return _in(0x4669B3ED80F24B4E, player)
end

function Global.N_0x466da42c89865553(p0)
	return _in(0x466DA42C89865553, p0)
end

function Global.N_0x469f2ecdec046337(p0)
	return _in(0x469F2ECDEC046337, p0)
end

--- Checks if the specified unknown flag is set in the ped's model.
-- The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).
-- Game scripts exclusively check for flags 1 and 4.
function Global.N_0x46b05bcae43856b0(ped, flag)
	return _in(0x46B05BCAE43856B0, ped, flag, _r)
end

function Global.N_0x46d1a61a21f566fc(p0)
	return _in(0x46D1A61A21F566FC, p0)
end

function Global.N_0x46f3add1e2d5baf2(p0, p1)
	return _in(0x46F3ADD1E2D5BAF2, p0, p1)
end

function Global.N_0x472397322e92a856()
	return _in(0x472397322E92A856)
end

function Global.N_0x4737980e8a283806(p0, p1)
	return _in(0x4737980E8A283806, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- Something regarding ped population.
function Global.N_0x4759cc730f947c81()
	return _in(0x4759CC730F947C81)
end

function Global.N_0x4811bbac21c5fcd5(p0)
	return _in(0x4811BBAC21C5FCD5, p0)
end

function Global.N_0x483aca1176ca93f1()
	return _in(0x483ACA1176CA93F1)
end

function Global.N_0x48621c9fca3ebd28(p0)
	return _in(0x48621C9FCA3EBD28, p0)
end

--- Dr. Underscore (1/6/18):
-- Possibly some unknown structures.
function Global.N_0x4862437a486f91b0(p0, p3)
	return _in(0x4862437A486F91B0, _ts(p0), _i, _i, p3, _r)
end

function Global.N_0x487912fd248efddf(p0, p1)
	return _in(0x487912FD248EFDDF, p0, p1, _r)
end

--- A*
function Global.N_0x4879e4fe39074cdf()
	return _in(0x4879E4FE39074CDF, _r)
end

--- Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
function Global.N_0x488043841bbe156f()
	return _in(0x488043841BBE156F)
end

--- NativeDB Parameter 0: int p0
function Global.N_0x4895bdea16e7c080(p0)
	return _in(0x4895BDEA16E7C080, p0)
end
Global.EnableDeathbloodSeethrough = Global.N_0x4895bdea16e7c080

--- INIT_VISIBLE_LATCH_POPULATION?
function Global.N_0x48adc8a773564670()
	return _in(0x48ADC8A773564670)
end

--- IS_VEHICLE_*
function Global.N_0x48c633e94a8142a7(vehicle)
	return _in(0x48C633E94A8142A7, vehicle, _r)
end

--- Only found 3 times in decompiled scripts. Not a whole lot to go off of.
-- GAMEPLAY::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");
-- GAMEPLAY::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");
-- GAMEPLAY::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
function Global.N_0x48f069265a0e4bec(name)
	return _in(0x48F069265A0E4BEC, _i, _ts(name))
end

--- Does nothing (essentially a nullsub).
function Global.N_0x490861b88f4fd846(p0)
	return _in(0x490861B88F4FD846, p0)
end

function Global.N_0x49482f9fcd825aaa(entity)
	return _in(0x49482F9FCD825AAA, entity)
end

--- SET_PED_ALLOW*
function Global.N_0x49e50bdb8ba4dab2(ped, toggle)
	return _in(0x49E50BDB8BA4DAB2, ped, toggle)
end

function Global.N_0x4a7d6e727f941747(p0)
	return _in(0x4A7D6E727F941747, _ii(p0) --[[ may be optional ]], _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x4a9fde3a5a6d0437(p0)
	return _in(0x4A9FDE3A5A6D0437, p0)
end

function Global.N_0x4ad490ae1536933b(p0, p1)
	return _in(0x4AD490AE1536933B, p0, p1, _r, _ri)
end

function Global.N_0x4af92acd3141d96c()
	return _in(0x4AF92ACD3141D96C)
end

function Global.N_0x4b5b620c9b59ed34(p0, p1)
	return _in(0x4B5B620C9B59ED34, p0, p1)
end

function Global.N_0x4b5cfc83122df602()
	return _in(0x4B5CFC83122DF602)
end

function Global.N_0x4ba166079d658ed4(p0, p1)
	return _in(0x4BA166079D658ED4, p0, p1)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x4c134b4df76025d0(p0, p1)
	return _in(0x4C134B4DF76025D0, p0, p1)
end

--- Only used once in the entire game scripts, probably useless. Always returns 0.
function Global.N_0x4c2330e61d3deb56(interiorID)
	return _in(0x4C2330E61D3DEB56, interiorID, _r, _ri)
end

function Global.N_0x4c2a9fdc22377075()
	return _in(0x4C2A9FDC22377075)
end

function Global.N_0x4c815eb175086f84(p0, p1)
	return _in(0x4C815EB175086F84, p0, p1, _r, _ri)
end

function Global.N_0x4c89fe2bdeb3f169()
	return _in(0x4C89FE2BDEB3F169, _r, _ri)
end

--- This function is hard-coded to always return 1.
function Global.N_0x4cebc1ed31e8925e(cutsceneName)
	return _in(0x4CEBC1ED31E8925E, _ts(cutsceneName), _r)
end

function Global.N_0x4d02279c83be69fe()
	return _in(0x4D02279C83BE69FE, _r, _ri)
end

--- Something like flush_all_scripts
-- Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()
function Global.N_0x4d953df78ebf8158()
	return _in(0x4D953DF78EBF8158)
end

function Global.N_0x4d9d109f63fee1d4(p0, p1)
	return _in(0x4D9D109F63FEE1D4, p0, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x4dcdf92bf64236cd(p0, p1)
	return _in(0x4DCDF92BF64236CD, _ts(p0), _ts(p1))
end

function Global.N_0x4df7cfff471a7fb1(p0)
	return _in(0x4DF7CFFF471A7FB1, p0, _r)
end

function Global.N_0x4e3cd0ef8a489541()
	return _in(0x4E3CD0EF8A489541, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x4e52e752c76e7e7a(p0)
	return _in(0x4E52E752C76E7E7A, p0)
end

function Global.N_0x4e74e62e0a97e901(vehicle, p1)
	return _in(0x4E74E62E0A97E901, vehicle, p1)
end

--- NativeDB Introduced: v323
function Global.N_0x4ed9c8d6da297639()
	return _in(0x4ED9C8D6DA297639, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x4fcd976da686580c(p0)
	return _in(0x4FCD976DA686580C, p0, _r, _ri)
end

--- NativeDB Introduced: v1493
-- @param toggle :
function Global.N_0x504dfe62a1692296(toggle)
	return _in(0x504DFE62A1692296, toggle)
end

function Global.N_0x5068f488ddb54dd8()
	return _in(0x5068F488DDB54DD8, _r, _ri)
end

--- NativeDB Introduced: v323
function Global.N_0x50a8a36201dbf83e()
	return _in(0x50A8A36201DBF83E, _r, _ri)
end

function Global.N_0x50f457823ce6eb5f(p0, p1, p2, p3)
	return _in(0x50F457823CE6EB5F, p0, p1, p2, p3, _r, _ri)
end

--- GET_*
function Global.N_0x511f1a683387c7e2(ped)
	return _in(0x511F1A683387C7E2, ped, _r, _ri)
end

function Global.N_0x51db102f4a3ba5e0(toggle)
	return _in(0x51DB102F4A3BA5E0, toggle)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
-- @param p8 :
function Global.N_0x51f30db60626a20e(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x51F30DB60626A20E, p0, p1, p2, p3, p4, p5, p6, p7, p8, _r, _ri)
end

function Global.N_0x5324a0e3e4ce3570(p0, p1)
	return _in(0x5324A0E3E4CE3570, p0, p1, _i, _i, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
function Global.N_0x534e36d4db9ecc5d(p0, p1)
	return _in(0x534E36D4DB9ECC5D, p0, p1, _r, _ri)
end

function Global.N_0x53c10c8bd774f2c9()
	return _in(0x53C10C8BD774F2C9, _r, _ri)
end

function Global.N_0x53cae13e9b426993(p0)
	return _in(0x53CAE13E9B426993, p0)
end

--- CLEAR_*
-- NativeDB Introduced: v1290
-- @param vehicle :
function Global.N_0x53ddc75bc3ac0a90(vehicle)
	return _in(0x53DDC75BC3AC0A90, vehicle)
end

function Global.N_0x53f4892d18ec90a4(p0)
	return _in(0x53F4892D18EC90A4, p0)
end

function Global.N_0x5407b7288d0478b7(p0)
	return _in(0x5407B7288D0478B7, p0, _r, _ri)
end

function Global.N_0x544996c0081abdeb(p0, p1)
	return _in(0x544996C0081ABDEB, p0, p1)
end

function Global.N_0x547237aa71ab44de(p0)
	return _in(0x547237AA71AB44DE, p0)
end

function Global.N_0x54e22ea2c1956a8d(p0)
	return _in(0x54E22EA2C1956A8D, p0)
end

--- From the scripts:
-- GAMEPLAY::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);
function Global.N_0x54f157e0336a3822(ped, p1, p2)
	return _in(0x54F157E0336A3822, ped, _ts(p1), p2)
end

--- DISABLE_*
-- p0 seems to be Player or int
-- Dr. Underscore (1/6/18):
-- p0 is Player.
-- Called after/near _DISABLE_FIRST_PERSON_CAMERA_THIS_FRAME quite often, but not always.
-- Also called near DISABLE_CONTROL_ACTION.
function Global.N_0x5501b7a5cdb79d37(player)
	return _in(0x5501B7A5CDB79D37, player)
end

--- Sets profile setting 935
function Global.N_0x55384438fc55ad8e(value)
	return _in(0x55384438FC55AD8E, value)
end

function Global.N_0x5539c3ebf104a53a(p0)
	return _in(0x5539C3EBF104A53A, p0)
end

function Global.N_0x55a1e095db052fa5(p0, p1)
	return _in(0x55A1E095DB052FA5, p0, p1)
end

function Global.N_0x55a8becaf28a4eb7()
	return _in(0x55A8BECAF28A4EB7, _r, _ri)
end

--- NativeDB Introduced: v1180
function Global.N_0x55f5a5f07134de60()
	return _in(0x55F5A5F07134DE60)
end

--- Order of player1 and player2 are not interchangable, it was called for both orders.
function Global.N_0x55fcc0c390620314(player1, player2, toggle)
	return _in(0x55FCC0C390620314, player1, player2, toggle)
end

--- NativeDB Introduced: v1604
-- @param p0 :
function Global.N_0x560b423d73015e77(p0)
	return _in(0x560B423D73015E77, p0, _r, _ri)
end

function Global.N_0x5615e0c5eb2bc6e2(p0, p1)
	return _in(0x5615E0C5EB2BC6E2, p0, p1)
end

--- NativeDB Introduced: v1493
-- @param ped :
-- @param animDict :
function Global.N_0x5687c7f05b39e401(ped, animDict)
	return _in(0x5687C7F05B39E401, ped, _ts(animDict))
end

--- STAT_SET_*
function Global.N_0x5688585e6d563cd8(p0)
	return _in(0x5688585E6D563CD8, p0)
end

function Global.N_0x56eb5e94318d3fb6(vehicle, p1)
	return _in(0x56EB5E94318D3FB6, vehicle, p1)
end

--- consoel hash 0xAEB29F98
function Global.N_0x571feb383f629926(cargobob, p1)
	return _in(0x571FEB383F629926, cargobob, p1)
end

function Global.N_0x577599cced639ca2(p0)
	return _in(0x577599CCED639CA2, p0)
end

--- FORCE_*
function Global.N_0x57d760d55f54e071(p0)
	return _in(0x57D760D55F54E071, p0)
end

function Global.N_0x583df8e3d4afbd98()
	return _in(0x583DF8E3D4AFBD98, _r, _ri)
end

function Global.N_0x5845066d8a1ea7f7(vehicle, x, y, z, p4)
	return _in(0x5845066D8A1EA7F7, vehicle, x, y, z, p4)
end

function Global.N_0x584770794d758c18(p0, p1)
	return _in(0x584770794D758C18, p0, _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x5873c14a52d74236(p0)
	return _in(0x5873C14A52D74236, p0, _r, _ri)
end

function Global.N_0x58bb377bec7cd5f4(p0, p1)
	return _in(0x58BB377BEC7CD5F4, p0, p1)
end

--- Has a 3rd param (int) since patch [???].
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.N_0x58c21165f6545892(p0, p1)
	return _in(0x58C21165F6545892, _ts(p0), _ts(p1))
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x58cc181719256197(p0, p1, p2)
	return _in(0x58CC181719256197, p0, p1, p2, _r, _ri)
end

--- IS_*
function Global.N_0x59328eb08c5ceb2b()
	return _in(0x59328EB08C5CEB2B, _r)
end

function Global.N_0x593feae1f73392d4()
	return _in(0x593FEAE1F73392D4, _r, _ri)
end

function Global.N_0x59424bd75174c9b1()
	return _in(0x59424BD75174C9B1)
end

function Global.N_0x595f028698072dd9(p0, p1, p2)
	return _in(0x595F028698072DD9, p0, p1, p2, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x59c3757b3b7408e8(p0, p1, p2)
	return _in(0x59C3757B3B7408E8, p0, p1, p2)
end

function Global.N_0x59d421683d31835a(p0)
	return _in(0x59D421683D31835A, p0)
end

--- may be 0x6CDAA7D2
-- sfink: related to: NETWORK_BAIL
-- NETWORK_BAIL_TRANSITION
-- NETWORK_JOIN_GROUP_ACTIVITY
-- NETWORK_JOIN_TRANSITION
-- NETWORK_LAUNCH_TRANSITION
-- NETWORK_SESSION_HOST
-- NETWORK_SESSION_HOST_CLOSED
-- NETWORK_SESSION_HOST_FRIENDS_ONLY
-- NETWORK_SESSION_HOST_SINGLE_PLAYER
-- NETWORK_SESSION_VOICE_LEAVE
function Global.N_0x59df79317f85a7e0()
	return _in(0x59DF79317F85A7E0, _r, _ri)
end

function Global.N_0x5a34cd9c3c5bec44(p0)
	return _in(0x5A34CD9C3C5BEC44, p0, _r)
end

function Global.N_0x5a43c76f7fc7ba5f()
	return _in(0x5A43C76F7FC7BA5F)
end

function Global.N_0x5a556b229a169402()
	return _in(0x5A556B229A169402, _r)
end

function Global.N_0x5a7f62fda59759bd()
	return _in(0x5A7F62FDA59759BD)
end

--- Disables some other rendering (internal)
function Global.N_0x5ad3932daeb1e5d3()
	return _in(0x5AD3932DAEB1E5D3)
end

function Global.N_0x5ae17c6b0134b7f1()
	return _in(0x5AE17C6B0134B7F1, _r, _ri)
end

--- Dr. Underscore (1/6/18):
-- Seems to return a value 0-2.
function Global.N_0x5b0316762afd4a64()
	return _in(0x5B0316762AFD4A64, _r, _ri)
end

function Global.N_0x5b1f2e327b6b6fe1()
	return _in(0x5B1F2E327B6B6FE1, _r, _ri)
end

function Global.N_0x5b48a06dd0e792a5()
	return _in(0x5B48A06DD0E792A5, _r, _ri)
end

function Global.N_0x5b6010b3cbc29095(p0, p1)
	return _in(0x5B6010B3CBC29095, p0, p1)
end

function Global.N_0x5b73c77d9eb66e24(p0)
	return _in(0x5B73C77D9EB66E24, p0)
end

function Global.N_0x5b8ed3db018927b1(p0)
	return _in(0x5B8ED3DB018927B1, p0)
end

function Global.N_0x5b91b229243351a8(p0, p1)
	return _in(0x5B91B229243351A8, p0, p1)
end

function Global.N_0x5b9853296731e88d(p0, p1, p2, p3, p4, p5)
	return _in(0x5B9853296731E88D, p0, p1, p2, p3, p4, p5)
end

function Global.N_0x5ba68a0840d546ac(p0, p1)
	return _in(0x5BA68A0840D546AC, p0, p1, _r, _ri)
end

--- NativeDB Introduced: v1604
-- @param toggle :
function Global.N_0x5bbcf35bf6e456f7(toggle)
	return _in(0x5BBCF35BF6E456F7, toggle)
end

function Global.N_0x5bcde0f640c773d2(p0, p1, p2, p3)
	return _in(0x5BCDE0F640C773D2, p0, p1, p2, p3)
end

function Global.N_0x5bd5f255321c4aaf(p0)
	return _in(0x5BD5F255321C4AAF, p0, _r, _ri)
end

--- GET_PAUSE_MENU_*
function Global.N_0x5bff36d6ed83e0ae()
	return _in(0x5BFF36D6ED83E0AE, _r, _rv)
end

--- Only called once in the scripts.
-- Related to weapon objects.
function Global.N_0x5c3b791d580e0bc2(entity, p1)
	return _in(0x5C3B791D580E0BC2, entity, p1)
end

function Global.N_0x5c41e6babc9e2112(p0)
	return _in(0x5C41E6BABC9E2112, p0)
end

--- W*
function Global.N_0x5c48a1d6e3b33179(cam)
	return _in(0x5C48A1D6E3B33179, cam, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x5c497525f803486b()
	return _in(0x5C497525F803486B)
end

function Global.N_0x5c4ebffa98bdb41c(p0)
	return _in(0x5C4EBFFA98BDB41C, p0, _r, _ri)
end

--- NativeDB Introduced: v1365
-- @param p0 :
function Global.N_0x5c90cab09951a12f(p0)
	return _in(0x5C90CAB09951A12F, p0)
end

--- NETWORK_HAS_*
function Global.N_0x5d10b3795f3fc886()
	return _in(0x5D10B3795F3FC886, _r)
end

function Global.N_0x5d2bfaab8d956e0e()
	return _in(0x5D2BFAAB8D956E0E)
end

function Global.N_0x5db8010ee71fdef2(vehicle)
	return _in(0x5DB8010EE71FDEF2, vehicle, _r)
end

function Global.N_0x5dbf05db5926d089(p0)
	return _in(0x5DBF05DB5926D089, p0)
end

function Global.N_0x5debd9c4dc995692()
	return _in(0x5DEBD9C4DC995692)
end

function Global.N_0x5e3aa4ca2b6fb0ee(p0)
	return _in(0x5E3AA4CA2B6FB0EE, p0)
end

function Global.N_0x5e569ec46ec21cae(vehicle, toggle)
	return _in(0x5E569EC46EC21CAE, vehicle, toggle)
end

--- DOES_*
function Global.N_0x5e657ef1099edd65(p0)
	return _in(0x5E657EF1099EDD65, p0, _r)
end

function Global.N_0x5e9daf5a20f15908(p0)
	return _in(0x5E9DAF5A20F15908, p0)
end

--- example from completionpercentage_controller.ysc.c4
-- if (STATS::_5EAD2BF6484852E4()) {
-- GAMEPLAY::SET_BIT(g_17b95._f20df._ff10, 15);
-- STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
-- }
function Global.N_0x5ead2bf6484852e4()
	return _in(0x5EAD2BF6484852E4, _r)
end

function Global.N_0x5ecd378ee64450ab(p0)
	return _in(0x5ECD378EE64450AB, p0)
end

function Global.N_0x5edef0cf8c1dab3c()
	return _in(0x5EDEF0CF8C1DAB3C, _r)
end

--- Sets some health value. Looks like it's used for helis.
function Global.N_0x5ee5632f47ae9695(vehicle, health)
	return _in(0x5EE5632F47AE9695, vehicle, health)
end

function Global.N_0x5f0f3f56635809ef(p0)
	return _in(0x5F0F3F56635809EF, p0)
end

--- SET_PLAYERS_*
function Global.N_0x5f2013f8bc24ee69(p0)
	return _in(0x5F2013F8BC24EE69, p0)
end

function Global.N_0x5f456788b05faeac(p0, p1, p2)
	return _in(0x5F456788B05FAEAC, p0, p1, p2)
end

--- DISABLE_*
function Global.N_0x5f6df3d92271e8a1(toggle)
	return _in(0x5F6DF3D92271E8A1, toggle)
end
Global.SetParticleFxBloodScale = Global.N_0x5f6df3d92271e8a1

function Global.N_0x5fbd7095fe7ae57f(p0, p1)
	return _in(0x5FBD7095FE7AE57F, p0, _fi(p1) --[[ may be optional ]], _r)
end

--- Appears once in "re_dealgonewrong"
function Global.N_0x5fc472c501ccadb3(player)
	return _in(0x5FC472C501CCADB3, player, _r)
end

function Global.N_0x5ff2c33b13a02a11(p0)
	return _in(0x5FF2C33B13A02A11, p0)
end

function Global.N_0x600f8cb31c7aab6e(p0)
	return _in(0x600F8CB31C7AAB6E, p0)
end

--- Returns true if profile setting 901 is set to true and sets it to false.
-- NETWORK_C*
function Global.N_0x60edd13eb3ac1ff3()
	return _in(0x60EDD13EB3AC1FF3, _r)
end

function Global.N_0x60eedc12af66e846(p0)
	return _in(0x60EEDC12AF66E846, p0)
end

function Global.N_0x613f125ba3bd2eb9()
	return _in(0x613F125BA3BD2EB9, _r)
end

--- Unknown. Called after creating a checkpoint (type: 51) in the creators.
function Global.N_0x615d3925e87a3b26(checkpoint)
	return _in(0x615D3925E87A3B26, checkpoint)
end

--- From the scripts:
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
-- SET_PLAYER_P*
function Global.N_0x616093ec6b139dd9(player, pickupHash, toggle)
	return _in(0x616093EC6B139DD9, player, _ch(pickupHash), toggle)
end

function Global.N_0x61631f5df50d1c34(p0)
	return _in(0x61631F5DF50D1C34, p0)
end

--- NETWORK_GET_NUM_*
function Global.N_0x617f49c2668e6155()
	return _in(0x617F49C2668E6155, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x61f95e5bb3e0a8c6(p0)
	return _in(0x61F95E5BB3E0A8C6, p0)
end

function Global.N_0x6216b116083a7cb4(p0)
	return _in(0x6216B116083A7CB4, p0)
end

--- Used only once (am_mp_property_int)
-- ped was PLAYER_PED_ID()
function Global.N_0x621c6e4729388e41(ped)
	return _in(0x621C6E4729388E41, ped, _r)
end

function Global.N_0x62374889a4d59f72()
	return _in(0x62374889A4D59F72)
end

function Global.N_0x62454a641b41f3c5(p0)
	return _in(0x62454A641B41F3C5, p0)
end

function Global.N_0x629526aba383bcaa()
	return _in(0x629526ABA383BCAA)
end

function Global.N_0x62ca17b74c435651(vehicle)
	return _in(0x62CA17B74C435651, vehicle, _r)
end

function Global.N_0x62e849b7eb28e770(p0)
	return _in(0x62E849B7EB28E770, p0)
end

function Global.N_0x62ecfcfdee7885d6()
	return _in(0x62ECFCFDEE7885D6)
end

function Global.N_0x632b2940c67f4ea9(scaleformHandle)
	return _in(0x632B2940C67F4EA9, scaleformHandle, _i, _i, _i, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x637822dc2afeebf8(p0)
	return _in(0x637822DC2AFEEBF8, p0)
end

function Global.N_0x638a3a81733086db()
	return _in(0x638A3A81733086DB, _r, _ri)
end

function Global.N_0x639431e895b9aa57(ped, vehicle, p2, p3, p4)
	return _in(0x639431E895B9AA57, ped, vehicle, p2, p3, p4, _r)
end

function Global.N_0x63b406d7884bfa95()
	return _in(0x63B406D7884BFA95, _r, _ri)
end

function Global.N_0x63eb2b972a218cac()
	return _in(0x63EB2B972A218CAC)
end

--- NativeDB Introduced: v1365
-- @param p0 :
-- @param p1 :
function Global.N_0x63ecf581bc70e363(p0, p1)
	return _in(0x63ECF581BC70E363, p0, p1)
end

function Global.N_0x641f272b52e2f0f8(p0, p1)
	return _in(0x641F272B52E2F0F8, p0, p1)
end

function Global.N_0x6483c25849031c4f(p0, p1, p2, p3)
	return _in(0x6483C25849031C4F, p0, p1, p2, _ii(p3) --[[ may be optional ]])
end

function Global.N_0x649c97d52332341a(p0)
	return _in(0x649C97D52332341A, p0)
end

--- NETWORK_GET_*
function Global.N_0x64d779659bc37b19(entity)
	return _in(0x64D779659BC37B19, entity, _r, _rv)
end

function Global.N_0x6501129c9e0ffa05(p0, p1)
	return _in(0x6501129C9E0FFA05, p0, p1)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
function Global.N_0x65482bfd0923c8a1(p0, p1, p2, p3, p4, p5)
	return _in(0x65482BFD0923C8A1, p0, p1, p2, p3, p4, p5)
end

function Global.N_0x6551b1f7f6cd46ea(p0)
	return _in(0x6551B1F7F6CD46EA, p0)
end

function Global.N_0x658500ae6d723a7e(p0)
	return _in(0x658500AE6D723A7E, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0x659f9d71f52843f8(p0, p1)
	return _in(0x659F9D71F52843F8, p0, p1)
end

function Global.N_0x65b080555ea48149(p0)
	return _in(0x65B080555EA48149, p0)
end

--- Sets GtaThread+0x14A
-- SET_S*
function Global.N_0x65d2ebb47e1cec21(toggle)
	return _in(0x65D2EBB47E1CEC21, toggle)
end

--- SET_CAM_*
function Global.N_0x661b5c8654add825(cam, p1)
	return _in(0x661B5C8654ADD825, cam, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x66972397e0757e7a(p0, p1, p2)
	return _in(0x66972397E0757E7A, p0, p1, p2)
end

function Global.N_0x66a49d021870fe88()
	return _in(0x66A49D021870FE88)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x66c3fb05206041ba(p0)
	return _in(0x66C3FB05206041BA, p0)
end

function Global.N_0x66e3aaface2d1eb8(p0, p1, p2)
	return _in(0x66E3AAFACE2D1EB8, p0, p1, p2)
end

function Global.N_0x66e7cb63c97b7d20()
	return _in(0x66E7CB63C97B7D20, _r, _ri)
end

function Global.N_0x675721c9f644d161()
	return _in(0x675721C9F644D161)
end

function Global.N_0x675d19c6067cae08(p0, p1, p2, p3)
	return _in(0x675D19C6067CAE08, p0, p1, p2, p3)
end

function Global.N_0x678f86d8fc040bdb(p0)
	return _in(0x678F86D8FC040BDB, p0)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x67fc09bc554a75e5()
	return _in(0x67FC09BC554A75E5, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0x6805d58caa427b72(p0, p1)
	return _in(0x6805D58CAA427B72, p0, p1)
end

function Global.N_0x68103e2247887242()
	return _in(0x68103E2247887242)
end

--- CLEAR_PED_*
function Global.N_0x687c0b594907d2e8(ped)
	return _in(0x687C0B594907D2E8, ped)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x68b562e124cc0aef(p0, p1)
	return _in(0x68B562E124CC0AEF, p0, p1)
end

--- p0 seems to be Ped
-- Dr. Underscore (1/6/18):
-- Has to do something with vehicles and teams. (same teams don't jack each other out of vehicles?)
function Global.N_0x690a61a6d13583f6(player)
	return _in(0x690A61A6D13583F6, player, _r)
end

function Global.N_0x692d58df40657e8c(p0, p1, p2, p4, p5)
	return _in(0x692D58DF40657E8C, p0, p1, p2, _i, p4, p5, _r)
end

function Global.N_0x693478acbd7f18e7()
	return _in(0x693478ACBD7F18E7)
end

--- what does it do?
function Global.N_0x694e00132f2823ed(entity, toggle)
	return _in(0x694E00132F2823ED, entity, toggle)
end

function Global.N_0x699e4a5c8c893a18(p0, p1, p2)
	return _in(0x699E4A5C8C893A18, p0, _ts(p1), _ii(p2) --[[ may be optional ]], _r)
end

function Global.N_0x69ef772b192614c1(p0, p1, p2, p3)
	return _in(0x69EF772B192614C1, p0, p1, p2, p3)
end

function Global.N_0x6a12d88881435dca()
	return _in(0x6A12D88881435DCA)
end

--- SET_F*
function Global.N_0x6a51f78772175a51(toggle)
	return _in(0x6A51F78772175A51, toggle)
end

--- Called in freemode related scripts but not freemode itself.
function Global.N_0x6a5d89d7769a40d8(toggle)
	return _in(0x6A5D89D7769A40D8, toggle)
end

function Global.N_0x6a60e43998228229(p0)
	return _in(0x6A60E43998228229, p0)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x6a973569ba094650(p0, p1)
	return _in(0x6A973569BA094650, p0, p1)
end

function Global.N_0x6a98c2ecf57fa5d4(vehicle, entity)
	return _in(0x6A98C2ECF57FA5D4, vehicle, entity)
end

function Global.N_0x6b0e6172c9a4d902(p0)
	return _in(0x6B0E6172C9A4D902, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
function Global.N_0x6b7e4fb50d5f3d65(p0, p1, p2, p3, p4)
	return _in(0x6B7E4FB50D5F3D65, p0, p1, p2, p3, p4)
end

function Global.N_0x6bc0acd0673acebe(p0, p1, p2)
	return _in(0x6BC0ACD0673ACEBE, p0, p1, p2)
end

function Global.N_0x6bccf9948492fd85(p0, p1, p2, p3, p4)
	return _in(0x6BCCF9948492FD85, p0, p1, p2, p3, p4)
end

function Global.N_0x6bfb12ce158e3dd4(p0)
	return _in(0x6BFB12CE158E3DD4, p0, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x6bff5f84102df80a(p0)
	return _in(0x6BFF5F84102DF80A, p0)
end

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
function Global.N_0x6cd79468a1e595c6(inputGroup)
	return _in(0x6CD79468A1E595C6, inputGroup, _r)
end

function Global.N_0x6cdd58146a436083(p0)
	return _in(0x6CDD58146A436083, p0)
end

function Global.N_0x6ce50e47f5543d0c()
	return _in(0x6CE50E47F5543D0C)
end

--- Possible values:
-- act_cinema
-- am_mp_carwash_launch
-- am_mp_carwash_control
-- am_mp_property_ext
-- chop
-- fairgroundHub
-- launcher_BasejumpHeli
-- launcher_BasejumpPack
-- launcher_CarWash
-- launcher_golf
-- launcher_Hunting_Ambient
-- launcher_MrsPhilips
-- launcher_OffroadRacing
-- launcher_pilotschool
-- launcher_Racing
-- launcher_rampage
-- launcher_rampage
-- launcher_range
-- launcher_stunts
-- launcher_stunts
-- launcher_tennis
-- launcher_Tonya
-- launcher_Triathlon
-- launcher_Yoga
-- ob_mp_bed_low
-- ob_mp_bed_med
function Global.N_0x6d6840cee8845831(action)
	return _in(0x6D6840CEE8845831, _ts(action))
end

function Global.N_0x6ddbf9dffc4ac080(p0)
	return _in(0x6DDBF9DFFC4AC080, p0)
end

--- NativeDB Parameter 0: int* playerAccountId
-- NativeDB Parameter 1: int* posixTime
function Global.N_0x6dee77aff8c21bd1()
	return _in(0x6DEE77AFF8C21BD1, _i, _i, _r)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x6dee944e1ee90cfb(p0, p1)
	return _in(0x6DEE944E1EE90CFB, p0, p1)
end

function Global.N_0x6e0a5253375c4584()
	return _in(0x6E0A5253375C4584, _r, _ri)
end

function Global.N_0x6e4361ff3e8cd7ca(p0)
	return _in(0x6E4361FF3E8CD7CA, p0, _r, _ri)
end

--- Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
-- Here are possible values of argument -
-- "ob_tv"
-- "launcher_Darts"
function Global.N_0x6e91b04e08773030(action)
	return _in(0x6E91B04E08773030, _ts(action))
end

function Global.N_0x6eaaefc76acc311f(p0)
	return _in(0x6EAAEFC76ACC311F, p0, _r, _ri)
end

--- sfink: sets bit in vehicle's structure, used by maintransition, fm_mission_controller, mission_race and a couple of other scripts. see dissassembly:
-- CVehicle *__fastcall sub_140CDAA10(signed int a1, char a2)
-- {
-- CVehicle *result; // rax@1
-- result = EntityAsCVehicle(a1);
-- if ( result )
-- {
-- result->field_886 &= 0xEFu;
-- result->field_886 |= 16 * (a2 & 1);
-- }
-- return result;
-- }
function Global.N_0x6ebfb22d646ffc18(vehicle, p1)
	return _in(0x6EBFB22D646FFC18, vehicle, p1)
end

--- Sets bit 3 in GtaThread+0x150
-- SET_T*
function Global.N_0x6f2135b6129620c1(toggle)
	return _in(0x6F2135B6129620C1, toggle)
end

function Global.N_0x6f361b8889a792a3()
	return _in(0x6F361B8889A792A3)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x6fb7bb3607d27fa2()
	return _in(0x6FB7BB3607D27FA2, _r, _ri)
end

--- This function is hard-coded to always return 1. Крч какая-то хуйня.
function Global.N_0x6fcf8ddea146c45b(p0)
	return _in(0x6FCF8DDEA146C45B, p0, _r)
end

function Global.N_0x6fd97159fe3c971a(p0, p1, p2, p3)
	return _in(0x6FD97159FE3C971A, p0, p1, p2, p3)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0x6fd992c4a1c1b986()
	return _in(0x6FD992C4A1C1B986, _r, _ri)
end

--- SET_P*
function Global.N_0x6fddad856e36988a(vehicle, toggle)
	return _in(0x6FDDAD856E36988A, vehicle, toggle)
end

--- - if (GAMEPLAY::_6FDDF453C0C756EC() || GAMEPLAY::IS_PC_VERSION()) {
function Global.N_0x6fddf453c0c756ec()
	return _in(0x6FDDF453C0C756EC, _r)
end

function Global.N_0x700569dba175a77c(p0)
	return _in(0x700569DBA175A77C, p0, _r, _ri)
end

function Global.N_0x701fda1e82076ba4()
	return _in(0x701FDA1E82076BA4)
end

function Global.N_0x702bc4d605522539(p0)
	return _in(0x702BC4D605522539, p0)
end

function Global.N_0x7033eefd9b28088e(p0)
	return _in(0x7033EEFD9B28088E, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x703cc7f60cbb2b57(p0)
	return _in(0x703CC7F60CBB2B57, p0)
end

function Global.N_0x705a276ebff3133d()
	return _in(0x705A276EBFF3133D, _r)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x70a382adec069dd3(p0, p1, p2)
	return _in(0x70A382ADEC069DD3, p0, p1, p2)
end

function Global.N_0x70b8ec8fc108a634(p0, p1)
	return _in(0x70B8EC8FC108A634, p0, p1)
end

--- NativeDB Introduced: v323
function Global.N_0x710bcda8071eded1()
	return _in(0x710BCDA8071EDED1, _r, _ri)
end

function Global.N_0x711794453cfd692b(p0, p1)
	return _in(0x711794453CFD692B, p0, p1)
end

--- NativeDB Introduced: v1604
function Global.N_0x7148e0f43d11f0d9()
	return _in(0x7148E0F43D11F0D9)
end

function Global.N_0x71b008056e5692d6()
	return _in(0x71B008056E5692D6)
end

--- NETWORK_HAS_*
function Global.N_0x71dc455f5cd1c2b1(networkHandle)
	return _in(0x71DC455F5CD1C2B1, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.N_0x71e7b2e657449aad()
	return _in(0x71E7B2E657449AAD, _r, _ri)
end

function Global.N_0x722f5d28b61c5ea8(p0)
	return _in(0x722F5D28B61C5EA8, p0, _r, _ri)
end

function Global.N_0x723c1ce13fbfdb67(p0, p1)
	return _in(0x723C1CE13FBFDB67, p0, p1)
end

--- Jenkins hash _might_ be 0xFC227584.
function Global.N_0x7241ccb7d020db69(entity, toggle)
	return _in(0x7241CCB7D020DB69, entity, toggle)
end

--- Probably a bool, returns true if the specified network id is controlled by someone else.
-- If you have control over the entity corresponding to the netId then this will return false (0);
-- @param netId The network id for an object or entity.
-- @return Probably a bool, returns 1 if you don't have control over the netId entity.
function Global.N_0x7242f8b741ce1086(netId)
	return _in(0x7242F8B741CE1086, netId, _r)
end

--- Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`.
-- Unknown what it does, couldn't find good examples in the decompiled scripts.
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x725012a415dba050(p0, p2)
	return _in(0x725012A415DBA050, p0, _i, p2, _r, _ri)
end

function Global.N_0x728c4cc7920cd102(p0)
	return _in(0x728C4CC7920CD102, p0, _r, _ri)
end

function Global.N_0x72beccf4b829522e(p0, p1)
	return _in(0x72BECCF4B829522E, p0, p1)
end

function Global.N_0x72de52178c291cb5()
	return _in(0x72DE52178C291CB5, _r, _ri)
end

function Global.N_0x72eb7ba9b69bf6ab()
	return _in(0x72EB7BA9B69BF6AB, _r)
end

function Global.N_0x73001e34f85137f8(p0)
	return _in(0x73001E34F85137F8, p0)
end

function Global.N_0x733c87d4ce22bea2(ped)
	return _in(0x733C87D4CE22BEA2, ped)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x734e1714d077da9a(p0, p1)
	return _in(0x734E1714D077DA9A, p0, p1)
end

function Global.N_0x73561d4425a021a2(p0, p1)
	return _in(0x73561D4425A021A2, p0, p1)
end

function Global.N_0x736d7aa1b750856b(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31)
	return _in(0x736D7AA1B750856B, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31)
end

function Global.N_0x737e398138550fff(vehicle, toggle)
	return _in(0x737E398138550FFF, vehicle, toggle)
end

--- Has something to do with a host request.
-- NETWORK_RE*
function Global.N_0x741a3d8380319a81()
	return _in(0x741A3D8380319A81)
end

function Global.N_0x742b58f723233ed9(p0)
	return _in(0x742B58F723233ED9, p0, _r, _ri)
end

--- NET_GAMESERVER_*
function Global.N_0x74a0fd0688f1ee45(p0)
	return _in(0x74A0FD0688F1EE45, p0, _r, _ri)
end

function Global.N_0x74de2e8739086740()
	return _in(0x74DE2E8739086740)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x74fb3e29e6d10fa9()
	return _in(0x74FB3E29E6D10FA9, _r, _ri)
end

--- Checks some commerce stuff
-- NativeDB Introduced: v1290
function Global.N_0x754615490a029508()
	return _in(0x754615490A029508, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0x75627043c6aa90ad(p0)
	return _in(0x75627043C6AA90AD, p0)
end

function Global.N_0x758a5c1b3b1e1990(p0)
	return _in(0x758A5C1B3B1E1990, p0)
end

function Global.N_0x759650634f07b6b4(p0)
	return _in(0x759650634F07B6B4, p0, _r)
end

--- REQUEST_*
function Global.N_0x75ba1cb3b7d40caf(ped, p1)
	return _in(0x75BA1CB3B7D40CAF, ped, p1)
end

--- Sets bit 1 in GtaThread+0x154
-- BG_*
-- NativeDB Introduced: v323
function Global.N_0x760910b49d2b98ea()
	return _in(0x760910B49D2B98EA)
end

function Global.N_0x762db2d380b48d04(p0)
	return _in(0x762DB2D380B48D04, p0)
end

--- Enables drawing some hud components, such as help labels, this frame, when the player is dead.
function Global.N_0x7669f9e39dc17063()
	return _in(0x7669F9E39DC17063)
end

function Global.N_0x76bba2cee66d47e9(p0)
	return _in(0x76BBA2CEE66D47E9, p0, _r, _ri)
end

function Global.N_0x76bf03fadbf154f5()
	return _in(0x76BF03FADBF154F5, _r, _ri)
end

--- SET_VEHICLE_*
function Global.N_0x76d26a22750e849e(vehicle)
	return _in(0x76D26A22750E849E, vehicle)
end

function Global.N_0x77758139ec9b66c7(p0)
	return _in(0x77758139EC9B66C7, p0)
end

function Global.N_0x77f16b447824da6c(p0)
	return _in(0x77F16B447824DA6C, p0)
end

function Global.N_0x77faddcbe3499df7(p0)
	return _in(0x77FADDCBE3499DF7, p0)
end

--- MulleDK19: This function is hard-coded to always return 1.
function Global.N_0x7808619f31ff22db()
	return _in(0x7808619F31FF22DB, _r, _ri)
end

function Global.N_0x78321bea235fd8cd(p0, p1)
	return _in(0x78321BEA235FD8CD, p0, p1, _r)
end

function Global.N_0x78857fc65cadb909(p0)
	return _in(0x78857FC65CADB909, p0)
end

function Global.N_0x78ceee41f49f421f(p0, p1)
	return _in(0x78CEEE41F49F421F, p0, p1)
end

--- Related to cutscene entities. Unsure about the use.
function Global.N_0x78e8e3a640178255(entity)
	return _in(0x78E8E3A640178255, entity)
end

function Global.N_0x793ff272d5b365f4()
	return _in(0x793FF272D5B365F4, _r, _ri)
end

function Global.N_0x796a877e459b99ea(p0, p1, p2, p3)
	return _in(0x796A877E459B99EA, p0, p1, p2, p3)
end

--- Draws the sphere typically seen in the GTA:O freemode event, Penned In. Example: [Image](https://images.illusivetea.me/6654p9.png)
-- @param x X co-ordinate of the sphere
-- @param y Y co-ordinate of the sphere
-- @param z Z co-ordinate of the sphere
-- @param radius Size of the sphere
-- @param r Color
-- @param g Color
-- @param b Color
-- @param opacity Opacity from `0.0`-`1.0`
function Global.N_0x799017f9e3b10112(x, y, z, radius, r, g, b, opacity)
	return _in(0x799017F9E3B10112, x, y, z, radius, r, g, b, opacity)
end

--- NET_GAMESERVER_*
-- Checks if the transaction status is equal to 3.
-- NativeDB Introduced: v1365
-- @param transactionId :
function Global.N_0x79edac677ca62f81(transactionId)
	return _in(0x79EDAC677CA62F81, transactionId, _r)
end

--- UI3DSCENE_*
function Global.N_0x7a42b2e236e71415()
	return _in(0x7A42B2E236E71415)
end

function Global.N_0x7ac24eab6d74118d(p0)
	return _in(0x7AC24EAB6D74118D, p0, _r)
end

function Global.N_0x7ac752103856fb20(p0)
	return _in(0x7AC752103856FB20, p0)
end

function Global.N_0x7b18da61f6bae9d5(p0)
	return _in(0x7B18DA61F6BAE9D5, p0)
end

function Global.N_0x7b21e0bb01e8224a(p0)
	return _in(0x7B21E0BB01E8224A, p0)
end

function Global.N_0x7b8a361c1813fbef()
	return _in(0x7B8A361C1813FBEF)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
function Global.N_0x7bae68775557ae0b(p0, p1, p2, p3, p4, p5)
	return _in(0x7BAE68775557AE0B, p0, p1, p2, p3, p4, p5)
end

function Global.N_0x7bbe7ff626a591fe(p0)
	return _in(0x7BBE7FF626A591FE, p0)
end

function Global.N_0x7c06330bfdda182e(p0)
	return _in(0x7C06330BFDDA182E, p0)
end

function Global.N_0x7c226d5346d4d10a(p0)
	return _in(0x7C226D5346D4D10A, p0)
end

--- Used for cash gifts
function Global.N_0x7c4fccd2e4deb394()
	return _in(0x7C4FCCD2E4DEB394, _r)
end

function Global.N_0x7c9c0b1eeb1f9072(p0)
	return _in(0x7C9C0B1EEB1F9072, p0)
end

function Global.N_0x7d36291161859389(p0)
	return _in(0x7D36291161859389, p0)
end

function Global.N_0x7d395ea61622e116(p0)
	return _in(0x7D395EA61622E116, p0)
end

function Global.N_0x7d41e9d2d17c5b2d(p0)
	return _in(0x7D41E9D2D17C5B2D, p0, _r, _ri)
end

--- what does this native do?
-- Here's some pseudocode of the internal setter function:
-- __int64 __fastcall sub_140CD86B4(signed int vehicle, char a2, char a3)
-- {
-- char v3; // di@1
-- char v4; // bl@1
-- __int64 result; // rax@1
-- __int16 v6; // cx@3
-- v3 = a3;
-- v4 = a2;
-- result = GetVehicleAddress(vehicle);
-- if ( result )
-- {
-- if ( v3 || (v6 = *(_WORD *)(result + 0xDA), (v6 & 0xFu) - 6 <= 1) )
-- {
-- *(_BYTE *)(result + 0x89B) &= 0xDFu;
-- *(_BYTE *)(result + 0x89B) |= 32 * (v4 & 1);
-- }
-- }
-- return result;
-- }
-- Now it's time for you to find out :P
function Global.N_0x7d6f9a3ef26136a0(vehicle, toggle, p2)
	return _in(0x7D6F9A3EF26136A0, vehicle, toggle, p2)
end

function Global.N_0x7d8ba05688ad64c7(p0)
	return _in(0x7D8BA05688AD64C7, p0)
end

function Global.N_0x7db18ca8cad5b098()
	return _in(0x7DB18CA8CAD5B098, _r, _ri)
end

function Global.N_0x7db53b37a2f211a0()
	return _in(0x7DB53B37A2F211A0, _r, _ri)
end

function Global.N_0x7e07c78925d5fd96(p0)
	return _in(0x7E07C78925D5FD96, p0, _r, _ri)
end

function Global.N_0x7e17be53e1aaabaf()
	return _in(0x7E17BE53E1AAABAF, _i, _i, _i)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Something to do with phone cameras.
-- startup.c4:
-- void sub_2a3d() {
-- UNK2::_7E2BD3EF6C205F09("No_Filter", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);
-- }
-- ```
function Global.N_0x7e2bd3ef6c205f09(p0, p1)
	return _in(0x7E2BD3EF6C205F09, _ts(p0), p1)
end

function Global.N_0x7e6946f68a38b74f(p0)
	return _in(0x7E6946F68A38B74F, p0, _r)
end

function Global.N_0x7ec3c679d0e7e46b(p0, p1, p2, p3)
	return _in(0x7EC3C679D0E7E46B, p0, p1, p2, p3)
end

--- Possibly used to clear scenario points.
-- CLEAR_*
function Global.N_0x7ec6f9a478a6a512()
	return _in(0x7EC6F9A478A6A512)
end

--- NativeDB Introduced: v1604
-- @param p0 :
function Global.N_0x7ecdf98587e92dec(p0)
	return _in(0x7ECDF98587E92DEC, p0)
end

--- _PLAYSTATS_ROB_ARMOURD_TRUCK
function Global.N_0x7eec2a316c250073(p0, p1, p2)
	return _in(0x7EEC2A316C250073, p0, p1, p2)
end

--- IS_*
function Global.N_0x7ef7649b64d7ff10(entity)
	return _in(0x7EF7649B64D7FF10, entity, _r)
end

function Global.N_0x7f2c4cdf2e82df4c(p0)
	return _in(0x7F2C4CDF2E82DF4C, p0, _r)
end

--- IS_S*
function Global.N_0x7f2f4f13ac5257ef(p0)
	return _in(0x7F2F4F13AC5257EF, p0, _r)
end

function Global.N_0x7f8f6405f4777af6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x7F8F6405F4777AF6, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r, _rf)
end

--- SET_VEHICLE_*
function Global.N_0x7f96f23fa9b73327(modelHash)
	return _in(0x7F96F23FA9B73327, _ch(modelHash))
end

function Global.N_0x7fa5d82b8f58ec06()
	return _in(0x7FA5D82B8F58EC06, _r)
end

function Global.N_0x7fcc39c46c3c03bd(p0)
	return _in(0x7FCC39C46C3C03BD, p0, _r)
end

--- NativeDB Introduced: v323
function Global.N_0x7ffcbfee44ecfabf()
	return _in(0x7FFCBFEE44ECFABF, _r, _ri)
end

--- CLEAR_PED_*
function Global.N_0x80054d7fcc70eec6(ped)
	return _in(0x80054D7FCC70EEC6, ped)
end

--- IS_*
function Global.N_0x801879a9b4f4b2fb()
	return _in(0x801879A9B4F4B2FB, _r)
end

function Global.N_0x80e3357fdef45c21(vehicle, toggle)
	return _in(0x80E3357FDEF45C21, vehicle, toggle)
end

function Global.N_0x8147fff6a718e1ad(p0)
	return _in(0x8147FFF6A718E1AD, p0, _r, _ri)
end

function Global.N_0x814af7dcaacc597b(p0)
	return _in(0x814AF7DCAACC597B, p0)
end

--- UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);
function Global.N_0x817b86108eb94e51(p0)
	return _in(0x817B86108EB94E51, p0, _i, _i, _i, _i, _i, _i, _i, _i)
end

function Global.N_0x81cbae94390f9f89()
	return _in(0x81CBAE94390F9F89)
end

function Global.N_0x820e9892a77e97cd(p0, p1)
	return _in(0x820E9892A77E97CD, p0, p1)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x8235f1bead557629(p0, p1)
	return _in(0x8235F1BEAD557629, p0, p1)
end

--- Only found 2 times in decompiled scripts. Not a whole lot to go off of.
-- GAMEPLAY::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
-- GAMEPLAY::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
function Global.N_0x8269816f6cfd40f8(name)
	return _in(0x8269816F6CFD40F8, _i, _ts(name))
end

function Global.N_0x826d1ee4d1cafc78(p0, p1)
	return _in(0x826D1EE4D1CAFC78, p0, p1)
end

--- BG_*
-- NativeDB Introduced: v323
-- @param p0 :
function Global.N_0x829cd22e043a2577(p0)
	return _in(0x829CD22E043A2577, _ch(p0), _r, _ri)
end

function Global.N_0x82acc484ffa3b05f(p0)
	return _in(0x82ACC484FFA3B05F, p0, _r, _ri)
end

function Global.N_0x82cedc33687e1f50(p0)
	return _in(0x82CEDC33687E1F50, p0)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
-- @param toggle :
function Global.N_0x82e0ac411e41a5b4(toggle)
	return _in(0x82E0AC411E41A5B4, toggle)
end

function Global.N_0x82ebb79e258fa2b7(entity, interiorID)
	return _in(0x82EBB79E258FA2B7, entity, interiorID)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0x830c3a44eb3f2cf9(p0)
	return _in(0x830C3A44EB3F2CF9, p0)
end

function Global.N_0x83660b734994124d(p0, p1, p2)
	return _in(0x83660B734994124D, p0, p1, p2, _r, _ri)
end

--- Returns true if bit 0 in GtaThread+0x154 is set.
-- BG_*
-- NativeDB Introduced: v323
function Global.N_0x836b62713e0534ca()
	return _in(0x836B62713E0534CA, _r)
end

function Global.N_0x838da0936a24ed4d(p0, p1)
	return _in(0x838DA0936A24ED4D, p0, p1)
end

function Global.N_0x83a169eabcdb10a2(p0, p1)
	return _in(0x83A169EABCDB10A2, p0, p1)
end

function Global.N_0x83f28ce49fbbffba(p0, p1, p2)
	return _in(0x83F28CE49FBBFFBA, p0, p1, p2, _r)
end

function Global.N_0x83fe8d7229593017()
	return _in(0x83FE8D7229593017)
end

--- NativeDB Introduced: v1290
function Global.N_0x8410c5e0cd847b9d()
	return _in(0x8410C5E0CD847B9D)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x8423541e8b3a1589(p0, p1, p2)
	return _in(0x8423541E8B3A1589, p0, p1, p2)
end

function Global.N_0x84a810b375e69c0e()
	return _in(0x84A810B375E69C0E, _r, _ri)
end

function Global.N_0x84c0116d012e8fc2(p0)
	return _in(0x84C0116D012E8FC2, p0)
end

--- NativeDB Parameter 0: int* ropeId
function Global.N_0x84de3b5fb3e666f0(ropeId)
	return _in(0x84DE3B5FB3E666F0, _ii(ropeId) --[[ may be optional ]], _r)
end

function Global.N_0x84dfc579c2fc214c(p0)
	return _in(0x84DFC579C2FC214C, p0)
end

function Global.N_0x851cd923176eba7c()
	return _in(0x851CD923176EBA7C)
end

function Global.N_0x8533cafde1f0f336(p0)
	return _in(0x8533CAFDE1F0F336, p0, _r, _ri)
end

function Global.N_0x858ec9fd25de04aa(p0, p1)
	return _in(0x858EC9FD25DE04AA, p0, p1)
end

function Global.N_0x85f6c9aba1de2bcf()
	return _in(0x85F6C9ABA1DE2BCF, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x86255b1fc929e33e(p0)
	return _in(0x86255B1FC929E33E, p0, _r, _ri)
end

--- NativeDB Introduced: v1493
-- @param ped :
-- @param p1 :
-- @param value :
function Global.N_0x8634cef2522d987b(ped, p1, value)
	return _in(0x8634CEF2522D987B, ped, _ts(p1), value)
end

function Global.N_0x870b8b7a766615c8(p0, p1, p2)
	return _in(0x870B8B7A766615C8, p0, p1, p2)
end

--- SET_A*
function Global.N_0x87ddeb611b329a9c(multiplier)
	return _in(0x87DDEB611B329A9C, multiplier)
end

function Global.N_0x8806cebfabd3ce05(p0)
	return _in(0x8806CEBFABD3CE05, p0, _r)
end

function Global.N_0x88087ee1f28024ae(p0)
	return _in(0x88087EE1F28024AE, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0x8821196d91fa2de5(p0, p1)
	return _in(0x8821196D91FA2DE5, p0, p1)
end

function Global.N_0x88578f6ec36b4a3a(p0, p1)
	return _in(0x88578F6EC36B4A3A, p0, p1, _r, _ri)
end

--- NativeDB Introduced: v1365
-- @param p0 :
function Global.N_0x887fa38787de8c72(p0)
	return _in(0x887FA38787DE8C72, p0)
end

--- NativeDB Added Parameter 2: Any p1
function Global.N_0x8881c98a31117998(p0)
	return _in(0x8881C98A31117998, p0)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x88b588b41ff7868e()
	return _in(0x88B588B41FF7868E, _r, _ri)
end

function Global.N_0x88bc673ca9e0ae99(vehicle, p1)
	return _in(0x88BC673CA9E0AE99, vehicle, p1)
end

function Global.N_0x892b6ab8f33606f5(p0, entity)
	return _in(0x892B6AB8F33606F5, p0, entity)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x8951eb9c6906d3c8()
	return _in(0x8951EB9C6906D3C8)
end

function Global.N_0x8989cbd7b4e82534(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x8989CBD7B4E82534, p0, p1, p2, p3, p4, p5, p6)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x8a4416c0db05fa66(p0)
	return _in(0x8A4416C0DB05FA66, p0, _r, _ri)
end

function Global.N_0x8aa9180de2fedd45(vehicle, p1)
	return _in(0x8AA9180DE2FEDD45, vehicle, p1)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x8b0c2964ba471961()
	return _in(0x8B0C2964BA471961, _r, _ri)
end

function Global.N_0x8b4ffc790ca131ef(p0, p1, p2, p3)
	return _in(0x8B4FFC790CA131EF, p0, p1, p2, p3, _r, _ri)
end

function Global.N_0x8b9cdbd6c566c38c()
	return _in(0x8B9CDBD6C566C38C, _r, _ri)
end

function Global.N_0x8bbacbf51da047a8(p0)
	return _in(0x8BBACBF51DA047A8, p0)
end

function Global.N_0x8bf907833be275de(p0, p1)
	return _in(0x8BF907833BE275DE, p0, p1)
end

function Global.N_0x8c8d2739ba44af0f(p0)
	return _in(0x8C8D2739BA44AF0F, p0, _r)
end

function Global.N_0x8c9d11605e59d955(p0)
	return _in(0x8C9D11605E59D955, p0)
end

function Global.N_0x8caab2bd3ea58bd4(p0)
	return _in(0x8CAAB2BD3EA58BD4, p0)
end

function Global.N_0x8cc469ab4d349b7c(p0, p1, p2)
	return _in(0x8CC469AB4D349B7C, p0, _ts(p1), _ii(p2) --[[ may be optional ]], _r)
end

--- Used only once in the scripts (taxi_clowncar)
-- SET_PARTICLE_FX_*
function Global.N_0x8cde909a0370bb3a(toggle)
	return _in(0x8CDE909A0370BB3A, toggle)
end

--- NativeDB Introduced: v757
-- @param p0 :
function Global.N_0x8cff648fbd7330f1(p0)
	return _in(0x8CFF648FBD7330F1, p0)
end

--- GAMEPLAY::_8D74E26F54B4E5C3("");
function Global.N_0x8d74e26f54b4e5c3(p0)
	return _in(0x8D74E26F54B4E5C3, _ts(p0))
end

--- SET_PLAYER_MAX_*
function Global.N_0x8d768602adef2245(player, p1)
	return _in(0x8D768602ADEF2245, player, p1)
end

function Global.N_0x8d8adb562f09a245(p0)
	return _in(0x8D8ADB562F09A245, p0)
end

--- Example of usage:
-- v_2 = SCRIPT::_30B4FA1C82DD4B9F(); // int _GET_ID_OF_NEXT_SCRIPT_IN_ENUMERATION()
-- CUTSCENE::_8D9DF6ECA8768583(v_2);
function Global.N_0x8d9df6eca8768583(threadId)
	return _in(0x8D9DF6ECA8768583, threadId)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0x8dc9675797123522(p0)
	return _in(0x8DC9675797123522, p0, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x8dca505a5c196f05(p0, p1)
	return _in(0x8DCA505A5C196F05, p0, p1)
end

function Global.N_0x8e243837643d9583(p0, p1, p2, p3)
	return _in(0x8E243837643D9583, p0, p1, p2, p3)
end

function Global.N_0x8e2a065abdae6994()
	return _in(0x8E2A065ABDAE6994)
end

function Global.N_0x8ec74ceb042e7cff(p0)
	return _in(0x8EC74CEB042E7CFF, p0)
end

function Global.N_0x8ef5573a1f801a5c(p0)
	return _in(0x8EF5573A1F801A5C, p0, _i, _i, _r)
end

function Global.N_0x8f08017f9d7c47bd(p0, p2)
	return _in(0x8F08017F9D7C47BD, p0, _i, p2, _r)
end

--- NativeDB Introduced: v1604
-- @param toggle :
function Global.N_0x8f0d5ba1c2cc91d7(toggle)
	return _in(0x8F0D5BA1C2CC91D7, toggle)
end

--- NativeDB Introduced: v1493
function Global.N_0x906ca41a4b74eca4()
	return _in(0x906CA41A4B74ECA4, _r, _ri)
end

--- NativeDB Introduced: v323
-- @param p0 :
function Global.N_0x908311265d42a820(p0)
	return _in(0x908311265D42A820, p0)
end

function Global.N_0x90a6526cf0381030(p0, p2, p3)
	return _in(0x90A6526CF0381030, p0, _i, p2, p3, _r)
end

--- Dr. Underscore (1/6/18):
-- Seems to return a value 0-2.
function Global.N_0x90a78ecaa4e78453()
	return _in(0x90A78ECAA4E78453, _r, _ri)
end

--- HAS_*
function Global.N_0x91d6dd290888cbab()
	return _in(0x91D6DD290888CBAB, _r)
end

function Global.N_0x91ef6ee6419e5b97(p0)
	return _in(0x91EF6EE6419E5B97, p0)
end

function Global.N_0x9237e334f6e43156(p0)
	return _in(0x9237E334F6E43156, p0, _r, _ri)
end

--- DISABLE_*
function Global.N_0x9245e81072704b8a(p0)
	return _in(0x9245E81072704B8A, p0)
end

function Global.N_0x92aefb5f6e294023(object, p1, p2)
	return _in(0x92AEFB5F6E294023, object, p1, p2)
end

function Global.N_0x92da6e70ef249bd1(p0, p1)
	return _in(0x92DA6E70EF249BD1, _ts(p0), _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x930f504203f561c9(p0)
	return _in(0x930F504203F561C9, p0)
end

--- Probably IS_SWITCH_*
function Global.N_0x933bbeeb8c61b5f4()
	return _in(0x933BBEEB8C61B5F4, _r)
end

function Global.N_0x941e5306bcd7c2c7()
	return _in(0x941E5306BCD7C2C7, _r, _ri)
end

function Global.N_0x94538037ee44f5cf(p0)
	return _in(0x94538037EE44F5CF, p0)
end

function Global.N_0x9465e683b12d3f6b()
	return _in(0x9465E683B12D3F6B)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0x9489659372a81585()
	return _in(0x9489659372A81585, _r)
end

function Global.N_0x949f397a288b28b3(p0)
	return _in(0x949F397A288B28B3, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x94a68da412c4007d(p0, p1)
	return _in(0x94A68DA412C4007D, p0, p1)
end

--- NETWORK_IS_*
function Global.N_0x94a8394d150b013a()
	return _in(0x94A8394D150B013A, _r, _ri)
end

--- Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
function Global.N_0x94f12abf9c79e339(p0)
	return _in(0x94F12ABF9C79E339, p0, _r, _ri)
end

function Global.N_0x95a7dabddbb78ae7(iplName1, iplName2)
	return _in(0x95A7DABDDBB78AE7, _ts(iplName1), _ts(iplName2))
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x95baf97c82464629(p0, p1)
	return _in(0x95BAF97C82464629, p0, p1)
end

function Global.N_0x95eb5e34f821babe(p0, p1, p2)
	return _in(0x95EB5E34F821BABE, p0, p1, p2, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
function Global.N_0x9640e30a7f395e4b(p0, p1, p2, p3, p4)
	return _in(0x9640E30A7F395E4B, p0, p1, p2, p3, p4)
end

function Global.N_0x9641588dab93b4b5(p0)
	return _in(0x9641588DAB93B4B5, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x966dd84fb6a46017()
	return _in(0x966DD84FB6A46017)
end

function Global.N_0x96e6d5150dbf1c09(p0, p1, p2)
	return _in(0x96E6D5150DBF1C09, p0, p1, p2)
end

function Global.N_0x973d76aa760a6cb6(p0)
	return _in(0x973D76AA760A6CB6, p0)
end

--- SET_WEAPON_OBJECT_*
function Global.N_0x977ca98939e82e4b(weaponObject, p1)
	return _in(0x977CA98939E82E4B, weaponObject, p1)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0x97841634ef7df1d6(p0, p1)
	return _in(0x97841634EF7DF1D6, p0, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0x97e7e2c04245115b(p0)
	return _in(0x97E7E2C04245115B, p0)
end

function Global.N_0x98215325a695e78a(p0)
	return _in(0x98215325A695E78A, p0)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0x9849de24fcf23ccc(p0, p1)
	return _in(0x9849DE24FCF23CCC, p0, p1)
end

--- GET_F*
function Global.N_0x98c3cf913d895111(string, length)
	return _in(0x98C3CF913D895111, _ts(string), length, _r, _s)
end

--- NativeDB Introduced: v1493
function Global.N_0x98d18905bf723b99()
	return _in(0x98D18905BF723B99, _r, _ri)
end

function Global.N_0x98e2bc1ca26287c3()
	return _in(0x98E2BC1CA26287C3)
end

--- REQUEST_*
function Global.N_0x98edf76a7271e4f2()
	return _in(0x98EDF76A7271E4F2)
end

function Global.N_0x9911f4a24485f653(p0)
	return _in(0x9911F4A24485F653, p0)
end

function Global.N_0x998e18ceb44487fc(p0, p1, p2, p3)
	return _in(0x998E18CEB44487FC, p0, p1, p2, p3)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
-- @param toggle :
function Global.N_0x99a05839c46ce316(toggle)
	return _in(0x99A05839C46CE316, toggle)
end

function Global.N_0x99cad8e7afdb60fa(vehicle, p1, p2)
	return _in(0x99CAD8E7AFDB60FA, vehicle, p1, p2)
end

function Global.N_0x9a62ec95ae10e011()
	return _in(0x9A62EC95AE10E011, _r, _ri)
end

--- Example gotten from chinese2.c4
-- VEHICLE::_9A75585FB2E54FAD(2004.4471435546875, 3076.806640625, 46.60689926147461, 10.0);
function Global.N_0x9a75585fb2e54fad(x, y, z, p3)
	return _in(0x9A75585FB2E54FAD, x, y, z, p3)
end

function Global.N_0x9a77dfd295e29b09(p0, p1)
	return _in(0x9A77DFD295E29B09, p0, p1)
end

--- RELEASE_???
-- I say RELEASE_???, as in IDA this native calls the same function as
-- -'RELEASE_MISSION_AUDIO_BANK()'.
-- -'RELEASE_AMBIENT_AUDIO_BANK()'.
-- -'RELEASE_SCRIPT_AUDIO_BANK()'.
-- However 'RELEASE_NAMED_SCRIPT_AUDIO_BANK' does not use the same function. So may be, 'RELEASE_???_AUDIO_BANK()'? Doubt it.
function Global.N_0x9ac92eed5e4793ab()
	return _in(0x9AC92EED5E4793AB)
end

--- FORCE_*
function Global.N_0x9b079e5221d984d3(p0)
	return _in(0x9B079E5221D984D3, p0)
end

function Global.N_0x9b4bd21d69b1e609()
	return _in(0x9B4BD21D69B1E609)
end

--- Hardcoded to return 0.
-- NativeDB Introduced: v323
function Global.N_0x9b5016a6433a68c5()
	return _in(0x9B5016A6433A68C5, _r, _ri)
end

function Global.N_0x9b6e70c5ceef4eeb(p0)
	return _in(0x9B6E70C5CEEF4EEB, p0, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x9bd7bd55e4533183(p0, p1, p2)
	return _in(0x9BD7BD55E4533183, p0, p1, p2)
end

function Global.N_0x9bddc73cc6a115d4(vehicle, p1, p2)
	return _in(0x9BDDC73CC6A115D4, vehicle, p1, p2)
end

function Global.N_0x9becd4b9fef3f8a6(vehicle, p1)
	return _in(0x9BECD4B9FEF3F8A6, vehicle, p1)
end

--- NativeDB Parameter 1: int* p1
function Global.N_0x9c6a6c19b6c0c496(ped, p1)
	return _in(0x9C6A6C19B6C0C496, ped, _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0x9d30687c57baa0bb(p0)
	return _in(0x9D30687C57BAA0BB, p0)
end

--- SET_H*
function Global.N_0x9d3af56e94c9ae98(vehicle, p1)
	return _in(0x9D3AF56E94C9AE98, vehicle, p1)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0x9d4fdbb035229669(p0, p1, p2)
	return _in(0x9D4FDBB035229669, p0, p1, p2)
end

function Global.N_0x9d728c1e12bf5518(ped)
	return _in(0x9D728C1E12BF5518, ped, _r, _ri)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function Global.N_0x9d7afcbf21c51712(toggle)
	return _in(0x9D7AFCBF21C51712, toggle)
end

--- NativeDB Introduced: v323
function Global.N_0x9de5d2f723575ed0()
	return _in(0x9DE5D2F723575ED0, _r, _ri)
end

--- SET_FOLLOW_*
function Global.N_0x9dfe13ecdc1ec196(p0, p1)
	return _in(0x9DFE13ECDC1EC196, p0, p1)
end
Global.SetTimeIdleDrop = Global.N_0x9dfe13ecdc1ec196

function Global.N_0x9e30e91fb03a2caf()
	return _in(0x9E30E91FB03A2CAF, _i, _i, _r)
end

function Global.N_0x9e4cfff989258472()
	return _in(0x9E4CFFF989258472)
end

--- Only found 4 times in Rockstar scripts.
-- Clearly has something to do with Cutscenes.
function Global.N_0x9e6542f0ce8e70a3(toggle)
	return _in(0x9E6542F0CE8E70A3, toggle)
end

--- SET_*
function Global.N_0x9ebd751e5787baf2(p0)
	return _in(0x9EBD751E5787BAF2, p0)
end

function Global.N_0x9ec8858184cd253a()
	return _in(0x9EC8858184CD253A, _r, _ri)
end

function Global.N_0x9edd76e87d5d51ba(player)
	return _in(0x9EDD76E87D5D51BA, player)
end

function Global.N_0x9f3f689b814f2599(vehicle, p1)
	return _in(0x9F3F689B814F2599, vehicle, p1)
end

function Global.N_0x9f5e6bb6b34540da(p0)
	return _in(0x9F5E6BB6B34540DA, p0)
end

function Global.N_0x9fedf86898f100e9()
	return _in(0x9FEDF86898F100E9, _r, _ri)
end

function Global.N_0xa01bc64dd4bfbbac(vehicle, p1)
	return _in(0xA01BC64DD4BFBBAC, vehicle, p1, _r, _ri)
end

function Global.N_0xa071e0ed98f91286(p0, p1)
	return _in(0xA071E0ED98F91286, p0, p1)
end

function Global.N_0xa08fe5e49bdc39dd(p0, p1, p2)
	return _in(0xA08FE5E49BDC39DD, p0, p1, p2)
end

--- GET_S*
function Global.N_0xa09f896ce912481f(p0)
	return _in(0xA09F896CE912481F, p0, _r, _ri)
end

function Global.N_0xa0cefcea390aab9b(p0)
	return _in(0xA0CEFCEA390AAB9B, p0)
end

function Global.N_0xa0d3e4f7aafb7e78(p0, p1)
	return _in(0xA0D3E4F7AAFB7E78, p0, p1, _r, _ri)
end

function Global.N_0xa0f93d5465b3094d(p0)
	return _in(0xA0F93D5465B3094D, _ii(p0) --[[ may be optional ]], _r)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0xa0fa4ec6a05da44e()
	return _in(0xA0FA4EC6A05DA44E, _r, _ri)
end

function Global.N_0xa0fe76168a189ddb()
	return _in(0xA0FE76168A189DDB, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0xa1183bcfee0f93d1(p0)
	return _in(0xA1183BCFEE0F93D1, p0)
end

function Global.N_0xa12d3a5a3753cc23()
	return _in(0xA12D3A5A3753CC23, _r, _ri)
end

function Global.N_0xa17784fca9548d15(p0, p1, p2)
	return _in(0xA17784FCA9548D15, p0, p1, p2)
end

--- MulleDK19: This function is hard-coded to always return 1.
function Global.N_0xa213b11dff526300()
	return _in(0xA213B11DFF526300, _r)
end

function Global.N_0xa238192f33110615()
	return _in(0xA238192F33110615, _i, _i, _i, _r)
end

function Global.N_0xa247f9ef01d8082e(p0)
	return _in(0xA247F9EF01D8082E, p0)
end

function Global.N_0xa2767257a320fc82(p0, p1)
	return _in(0xA2767257A320FC82, p0, p1)
end

function Global.N_0xa2a707979fe754dc(p0, p1)
	return _in(0xA2A707979FE754DC, p0, p1)
end

--- CLEAR_*
function Global.N_0xa2c1f5e92afe49ed()
	return _in(0xA2C1F5E92AFE49ED)
end

--- NativeDB Parameter 1: Hash weaponHash
function Global.N_0xa2c9ac24b4061285(ped, weaponHash)
	return _in(0xA2C9AC24B4061285, ped, weaponHash, _r, _ri)
end

--- Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
-- Example (XBOX 360):
-- // check current filter selection
-- if (GAMEPLAY::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)
-- {
-- MOBILE::_0xC273BB4D(0); // FALSE
-- }
-- else
-- {
-- MOBILE::_0xC273BB4D(1); // TRUE
-- }
function Global.N_0xa2ccbe62cd4c91a4(toggle)
	return _in(0xA2CCBE62CD4C91A4, _ii(toggle) --[[ may be optional ]])
end

--- Appears to set whether a transition should be started when the session is migrating.
-- NETWORK_SET_*
function Global.N_0xa2e9c1ab8a92e8cd(toggle)
	return _in(0xA2E9C1AB8A92E8CD, toggle)
end

function Global.N_0xa306f470d1660581()
	return _in(0xA306F470D1660581, _r, _ri)
end

function Global.N_0xa3a9299c4f2adb98(p0)
	return _in(0xA3A9299C4F2ADB98, p0)
end

function Global.N_0xa3c53804bdb68ed2(p0, p1)
	return _in(0xA3C53804BDB68ED2, p0, p1)
end

--- Only called once in the scripts:
-- if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {
-- if (sub_52e3("RESNA_CELLR", 0)) {
-- PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
-- PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
-- PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
-- l_184 += 1;
-- }
-- }
function Global.N_0xa3f3564a5b3646c0(ped)
	return _in(0xA3F3564A5B3646C0, ped, _r)
end

function Global.N_0xa41bcd7213805aac(p0)
	return _in(0xA41BCD7213805AAC, p0)
end

--- REGISTER_*
function Global.N_0xa44ff770dfbc5dae()
	return _in(0xA44FF770DFBC5DAE)
end

function Global.N_0xa4664972a9b8f8ba(p0)
	return _in(0xA4664972A9B8F8BA, p0, _r, _rv)
end

--- NativeDB Introduced: v323
function Global.N_0xa468e0be12b12c70()
	return _in(0xA468E0BE12B12C70, _r, _ri)
end

function Global.N_0xa46b73faa3460ae1(p0)
	return _in(0xA46B73FAA3460AE1, p0)
end

function Global.N_0xa4819f5e23e2ffad()
	return _in(0xA4819F5E23E2FFAD, _r, _ri)
end

function Global.N_0xa4822f1cf23f4810(p1, p3, p4, p5, p6, p7, p8)
	return _in(0xA4822F1CF23F4810, _v, p1, _v, p3, p4, p5, p6, p7, p8, _r)
end

--- GET_SAVE_*
-- GET_SAVE_UNLESS_CUSTOM_DOT ?
function Global.N_0xa4a0065e39c9f25c()
	return _in(0xA4A0065E39C9F25C, _v, _f, _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- NativeDB Introduced: v1604
-- @param p0 :
function Global.N_0xa4a9a4c40e615885(p0)
	return _in(0xA4A9A4C40E615885, p0)
end

function Global.N_0xa51b086b0b2c0f7a(p0, p1, p2, p3)
	return _in(0xA51B086B0B2C0F7A, p0, p1, p2, p3)
end

function Global.N_0xa52d5247a4227e14(p0)
	return _in(0xA52D5247A4227E14, p0)
end

function Global.N_0xa5342d390cda41d6(ped, p1)
	return _in(0xA5342D390CDA41D6, ped, p1)
end

function Global.N_0xa586fbeb32a53dbb()
	return _in(0xA586FBEB32A53DBB, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
-- @param p8 :
-- @param p9 :
function Global.N_0xa5eafe473e45c442(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA5EAFE473E45C442, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- SET_AUDIO_S*
function Global.N_0xa5f377b175a699c5(p0)
	return _in(0xA5F377B175A699C5, p0)
end

function Global.N_0xa635c11b8c44afc2()
	return _in(0xA635C11B8C44AFC2, _r, _ri)
end

function Global.N_0xa660faf550eb37e5(p0, p1)
	return _in(0xA660FAF550EB37E5, p0, p1)
end

--- Dr. Underscore (1/6/18):
-- Only one instances in two scripts. (cellphone_controller, maintransition)
function Global.N_0xa67c35c56eb1bd9d()
	return _in(0xA67C35C56EB1BD9D, _r)
end

function Global.N_0xa6f54bb2ffca35ea(p0)
	return _in(0xA6F54BB2FFCA35EA, p0)
end

--- NativeDB Introduced: v1604
-- @param p0 :
function Global.N_0xa6fceccf4721d679(p0)
	return _in(0xA6FCECCF4721D679, p0)
end

function Global.N_0xa736cf7fb7c5bff4()
	return _in(0xA736CF7FB7C5BFF4, _i, _i, _i, _i)
end

function Global.N_0xa75ccf58a60a5fd1(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA75CCF58A60A5FD1, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xa75eac69f59e96e7(p0)
	return _in(0xA75EAC69F59E96E7, p0)
end

function Global.N_0xa761d4ac6115623d()
	return _in(0xA761D4AC6115623D, _r, _ri)
end

function Global.N_0xa76359fc80b2438e(p0)
	return _in(0xA76359FC80B2438E, p0)
end

--- NativeDB Introduced: v323
function Global.N_0xa770c8eec6fb2ac5()
	return _in(0xA770C8EEC6FB2AC5, _r, _ri)
end

function Global.N_0xa7862bc5ed1dfd7e(p0, p1)
	return _in(0xA7862BC5ED1DFD7E, p0, p1, _i, _i, _r)
end

--- STATS::0xE3247582(0);
-- STATS::0xE3247582(1);
-- STATS::0xE3247582(2);
-- STATS::0xE3247582(3);
-- STATS::0xE3247582(4);
-- STATS::0xE3247582(5);
-- STATS::0xE3247582(6);
function Global.N_0xa78b8fa58200da56(p0)
	return _in(0xA78B8FA58200DA56, p0)
end

function Global.N_0xa7a1127490312c36(p0)
	return _in(0xA7A1127490312C36, p0)
end

function Global.N_0xa7c511fa1c5bda38(p0, p1)
	return _in(0xA7C511FA1C5BDA38, p0, p1)
end

function Global.N_0xa7dcdf4ded40a8f4(vehicle, p1)
	return _in(0xA7DCDF4DED40A8F4, vehicle, p1)
end

function Global.N_0xa8434f1dff41d6e7(p0)
	return _in(0xA8434F1DFF41D6E7, p0)
end

function Global.N_0xa85a21582451e951(doorHash, p1)
	return _in(0xA85A21582451E951, _ch(doorHash), p1)
end

function Global.N_0xa8733668d1047b51(p0)
	return _in(0xA8733668D1047B51, p0)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
function Global.N_0xa8a7d434afb4b97b(p0, p1)
	return _in(0xA8A7D434AFB4B97B, _ts(p0), p1)
end

function Global.N_0xa8acb6459542a8c8()
	return _in(0xA8ACB6459542A8C8, _r, _ri)
end

function Global.N_0xa90e7227a9303fa9(p0, p1)
	return _in(0xA90E7227A9303FA9, p0, p1)
end

function Global.N_0xa943fd1722e11efd()
	return _in(0xA943FD1722E11EFD, _r, _ri)
end

function Global.N_0xa95f667a755725da(p0, p1, p2, p3)
	return _in(0xA95F667A755725DA, p0, p1, p2, p3)
end

function Global.N_0xa9b61a329bfdcbea(p0, p1)
	return _in(0xA9B61A329BFDCBEA, p0, p1)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0xaa059c615de9dd03(p0, p1)
	return _in(0xAA059C615DE9DD03, p0, p1)
end

function Global.N_0xaa19f5572c38b564(p0)
	return _in(0xAA19F5572C38B564, _ii(p0) --[[ may be optional ]], _r, _ri)
end

function Global.N_0xaa525dff66bb82f5(p0, p1, p2)
	return _in(0xAA525DFF66BB82F5, p0, p1, p2)
end

--- NativeDB Added Parameter 1: Entity entity
function Global.N_0xaa5fafcd2c5f5e47()
	return _in(0xAA5FAFCD2C5F5E47, _r, _rv)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0xaa653ae61924b0a0(p0, p1)
	return _in(0xAA653AE61924B0A0, p0, p1)
end

--- SET_*
-- NativeDB Introduced: v1604
-- @param p0 :
function Global.N_0xaa6a6098851c396f(p0)
	return _in(0xAA6A6098851C396F, p0)
end

function Global.N_0xaa76052dda9bfc3e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xAA76052DDA9BFC3E, p0, p1, p2, p3, p4, p5, p6)
end

function Global.N_0xaaa6a3698a69e048(p0)
	return _in(0xAAA6A3698A69E048, p0, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
function Global.N_0xaae9be70ec7c69ab(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xAAE9BE70EC7C69AB, p0, p1, p2, p3, p4, p5, p6, p7)
end

function Global.N_0xab04325045427aae(vehicle, p1)
	return _in(0xAB04325045427AAE, vehicle, p1)
end

--- Used only once in the scripts (fm_mission_controller) like so:
-- TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");
-- SET_*
function Global.N_0xab13a5565480b6d9(ped, p1)
	return _in(0xAB13A5565480B6D9, ped, _ts(p1), _r, _ri)
end

function Global.N_0xab31ef4de6800ce9(p0, p1)
	return _in(0xAB31EF4DE6800CE9, p0, p1)
end

function Global.N_0xac2890471901861c(p0)
	return _in(0xAC2890471901861C, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
function Global.N_0xad27d957598e49e9(p0, p1, p2, p3, p4, p5)
	return _in(0xAD27D957598E49E9, p0, p1, p2, p3, p4, p5)
end

function Global.N_0xad5fdf34b81bfe79()
	return _in(0xAD5FDF34B81BFE79)
end

--- This has been found in use in the decompiled files.
function Global.N_0xad73ce5a09e42d12(player)
	return _in(0xAD73CE5A09E42D12, player)
end

--- gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.
-- Possibly waypoint?
function Global.N_0xadb57e5b663cca8b(p0)
	return _in(0xADB57E5B663CCA8B, p0, _f, _f)
end

--- NativeDB Introduced: v1604
-- @param p0 :
function Global.N_0xadf084fb8f075d06(p0)
	return _in(0xADF084FB8F075D06, p0, _r, _ri)
end

function Global.N_0xae3fee8709b39dcb(vehicle)
	return _in(0xAE3FEE8709B39DCB, vehicle, _r)
end

function Global.N_0xae51bc858f32ba66(p0, p1, p2, p3, p4)
	return _in(0xAE51BC858F32BA66, p0, p1, p2, p3, p4)
end

function Global.N_0xaeab987727c5a8a4(p0)
	return _in(0xAEAB987727C5A8A4, p0, _r)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0xaedf1bc1c133d6e3()
	return _in(0xAEDF1BC1C133D6E3, _r, _ri)
end

function Global.N_0xaeef48cdf5b6ce7c(p0, p1)
	return _in(0xAEEF48CDF5B6CE7C, p0, p1, _r)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0xaef12960fa943792(p0)
	return _in(0xAEF12960FA943792, p0, _r, _ri)
end

--- Exemple of use(carmod_shop.c4)
-- INTERIOR::_AF348AFCB575A441("V_CarModRoom");
function Global.N_0xaf348afcb575a441(roomName)
	return _in(0xAF348AFCB575A441, _ts(roomName))
end

function Global.N_0xaf60e6a2936f982a(p0, p1)
	return _in(0xAF60E6A2936F982A, p0, p1)
end

--- SET_PED_*
function Global.N_0xafc976fd0580c7b3(ped, toggle)
	return _in(0xAFC976FD0580C7B3, ped, toggle)
end

function Global.N_0xaff47709f1d5dcce()
	return _in(0xAFF47709F1D5DCCE, _r, _ri)
end

--- NETWORK_HAS_*
function Global.N_0xb07d3185e11657a5(entity)
	return _in(0xB07D3185E11657A5, entity, _r)
end

function Global.N_0xb088e9a47ae6edd5(vehicle, p1)
	return _in(0xB088E9A47AE6EDD5, vehicle, p1)
end

function Global.N_0xb09d25e77c33eb3f(p0, p1, p2)
	return _in(0xB09D25E77C33EB3F, p0, p1, p2, _r, _ri)
end

--- NativeDB Introduced: v1180
function Global.N_0xb1381b97f70c7b30()
	return _in(0xB1381B97F70C7B30)
end

function Global.N_0xb13e88e655e5a3bc()
	return _in(0xB13E88E655E5A3BC)
end

function Global.N_0xb1577667c3708f9b()
	return _in(0xB1577667C3708F9B)
end

function Global.N_0xb17bc6453f6cf5ac(p0, p1)
	return _in(0xB17BC6453F6CF5AC, p0, p1)
end

function Global.N_0xb1b6216ca2e7b55e(p0, p1, p2)
	return _in(0xB1B6216CA2E7B55E, p0, p1, p2)
end

function Global.N_0xb1d2bb1e1631f5b1()
	return _in(0xB1D2BB1E1631F5B1, _r)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0xb251e0b33e58b424(p0, p1, p2)
	return _in(0xB251E0B33E58B424, p0, p1, p2)
end

--- This native doesn't seem to do anything, might be a debug-only native.
-- Confirmed, it is a debug native.
function Global.N_0xb264c4d2f2b0a78b(vehicle)
	return _in(0xB264C4D2F2B0A78B, vehicle)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xb26f670685631727(p0)
	return _in(0xB26F670685631727, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xb282749d5e028163(p0, p1)
	return _in(0xB282749D5E028163, p0, p1)
end

function Global.N_0xb2aff10216defa2f(x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)
	return _in(0xB2AFF10216DEFA2F, x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)
end

function Global.N_0xb2d0bde54f0e8e5a(object, toggle)
	return _in(0xB2D0BDE54F0E8E5A, object, toggle)
end

--- SET_C*
function Global.N_0xb2e0c0d6922d31f2(vehicle, toggle)
	return _in(0xB2E0C0D6922D31F2, vehicle, toggle)
end

function Global.N_0xb2ebe8cbc58b90e9()
	return _in(0xB2EBE8CBC58B90E9, _r, _ri)
end

function Global.N_0xb309ebea797e001f(p0)
	return _in(0xB309EBEA797E001F, p0, _r, _ri)
end

function Global.N_0xb328dcc3a3aa401b(p0)
	return _in(0xB328DCC3A3AA401B, p0, _r, _ri)
end

function Global.N_0xb37e4e6a2388ca7b()
	return _in(0xB37E4E6A2388CA7B, _r)
end

--- Setter for 0xE59343E9E96529E7
-- SET_M*
function Global.N_0xb3c641f3630bf6da(p0)
	return _in(0xB3C641F3630BF6DA, p0)
end

--- This function is hard-coded to always return 1.
function Global.N_0xb3da2606774a8e2d()
	return _in(0xB3DA2606774A8E2D, _r)
end

function Global.N_0xb3e6360dde733e82(p0)
	return _in(0xB3E6360DDE733E82, p0)
end

--- PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation
-- ***
-- In "am_hold_up.ysc" used once:
-- l_8d._f47 = GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
-- PLAYER::_B45EFF719D8427A6((l_8d._f47));
function Global.N_0xb45eff719d8427a6(p0)
	return _in(0xB45EFF719D8427A6, p0)
end

function Global.N_0xb475f27c6a994d65()
	return _in(0xB475F27C6A994D65)
end

function Global.N_0xb49eca122467d05f(p0, p1, p2, p3)
	return _in(0xB49ECA122467D05F, p0, p1, p2, p3)
end

function Global.N_0xb4c2ec463672474e(p0, p1, p2, p3)
	return _in(0xB4C2EC463672474E, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xb4deae67f35e2acd(p0)
	return _in(0xB4DEAE67F35E2ACD, p0)
end

function Global.N_0xb51b9ab9ef81868c(toggle)
	return _in(0xB51B9AB9EF81868C, toggle)
end

function Global.N_0xb542de8c3d1cb210(p0)
	return _in(0xB542DE8C3D1CB210, p0)
end

function Global.N_0xb552929b85fc27ec(p0, p1)
	return _in(0xB552929B85FC27EC, p0, p1)
end

function Global.N_0xb569f41f3e7e83a4(p0)
	return _in(0xB569F41F3E7E83A4, p0)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0xb5b7742424bd4445(p0, p1)
	return _in(0xB5B7742424BD4445, p0, p1)
end

function Global.N_0xb5d3453c98456528()
	return _in(0xB5D3453C98456528, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xb606e6cc59664972(p0)
	return _in(0xB606E6CC59664972, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0xb68cfaf83a02768d(p0, p1)
	return _in(0xB68CFAF83A02768D, p0, p1)
end

--- ROPE_*
function Global.N_0xb743f735c03d7810(ropeId, p1)
	return _in(0xB743F735C03D7810, ropeId, p1)
end

function Global.N_0xb746d20b17f2a229()
	return _in(0xB746D20B17F2A229, _i, _i, _r)
end

function Global.N_0xb782f8238512bad5(p0, p1)
	return _in(0xB782F8238512BAD5, p0, _ii(p1) --[[ may be optional ]])
end

--- Clears all areas created by 0xD4A7A435B3710D05
-- CLEAR_*
-- NativeDB Introduced: v1290
function Global.N_0xb7c6d80fb371659a()
	return _in(0xB7C6D80FB371659A)
end

function Global.N_0xb81cf134aeb56ffb()
	return _in(0xB81CF134AEB56FFB)
end

--- Old Gen: 0x47D6004E
-- Disables something. Used only once in R* scripts (freemode.ysc).
function Global.N_0xb885852c39cc265d()
	return _in(0xB885852C39CC265D)
end

--- if (!$B8B52E498014F5B0(PLAYER::PLAYER_PED_ID())) {
function Global.N_0xb8b52e498014f5b0(ped)
	return _in(0xB8B52E498014F5B0, ped, _r)
end

function Global.N_0xb8f87ead7533b176(p0)
	return _in(0xB8F87EAD7533B176, p0)
end

function Global.N_0xb9562064627ff9db(p0, p1)
	return _in(0xB9562064627FF9DB, p0, p1)
end

function Global.N_0xb9854dfde0d833d6(p0)
	return _in(0xB9854DFDE0D833D6, p0)
end

--- RESET_*
function Global.N_0xb99c4e4d9499df29(p0)
	return _in(0xB99C4E4D9499DF29, p0)
end

--- Seem to return bool
-- Dr. Underscore (1/6/18):
-- It does return bool.
function Global.N_0xb9cf1f793a9f1bf1()
	return _in(0xB9CF1F793A9F1BF1, _r)
end

function Global.N_0xba0127da25fd54c9(p0, p1)
	return _in(0xBA0127DA25FD54C9, p0, p1)
end

--- SET_PARTICLE_FX_*
function Global.N_0xba3d194057c79a7b(p0)
	return _in(0xBA3D194057C79A7B, _ts(p0))
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xba4b8d83bdc75551(p0)
	return _in(0xBA4B8D83BDC75551, p0)
end

function Global.N_0xba7f0b77d80a4eb7(p0, p1)
	return _in(0xBA7F0B77D80A4EB7, p0, p1)
end

--- FORCE_*
function Global.N_0xba8d65c1c65702e5(toggle)
	return _in(0xBA8D65C1C65702E5, toggle)
end

function Global.N_0xba91d045575699ad(vehicle)
	return _in(0xBA91D045575699AD, vehicle, _r)
end

function Global.N_0xba9749cc94c1fd85()
	return _in(0xBA9749CC94C1FD85, _r, _ri)
end

function Global.N_0xba9775570db788cf()
	return _in(0xBA9775570DB788CF, _r, _ri)
end

function Global.N_0xbaa2f0490e146be8(p0)
	return _in(0xBAA2F0490E146BE8, p0)
end

function Global.N_0xbb2333bb87ddd87f(p0, p1)
	return _in(0xBB2333BB87DDD87F, p0, p1)
end

function Global.N_0xbb90e12cac1dab25(p0)
	return _in(0xBB90E12CAC1DAB25, p0)
end

--- var num3 = PLAYER::GET_PLAYER_PED(l_2171); // proof l_2171 is a player
-- var num17 = PLAYER::0x9DF75B2A(l_2171, 100, 0); // l_2171
-- .ysc:
-- if (PLAYER::GET_PLAYER_WANTED_LEVEL(l_6EF) < v_4) { // l_6EF is a player
-- PLAYER::SET_PLAYER_WANTED_LEVEL(l_6EF, v_4, 0); // l_6EF
-- PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(l_6EF, 0); // l_6EF
-- } else {
-- PLAYER::_4669B3ED80F24B4E(l_6EF); // l_6EF
-- UI::_BA8D65C1C65702E5(1);
-- a_0 = 1;
-- }
-- if (l_4B24[l_6F2/*156*/]._f8C != PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0)) { // l_6EF
-- l_4B24[l_6F2/*156*/]._f8C = PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0); // l_6EF
-- }
-- Both was taken from fm_mission_controller
-- GET_PLAYER_*
function Global.N_0xbc0753c9ca14b506(player, p1, p2)
	return _in(0xBC0753C9CA14B506, player, p1, p2, _r)
end

--- Most likely ROPE_ATTACH_*
function Global.N_0xbc0ce682d4d05650(ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xBC0CE682D4D05650, ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- Seems to only appear in scripts used in Singleplayer.
-- Always used like this in scripts
-- PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());
function Global.N_0xbc9490ca15aea8fb(player)
	return _in(0xBC9490CA15AEA8FB, player)
end

function Global.N_0xbc9823ab80a3dcac()
	return _in(0xBC9823AB80A3DCAC, _r, _ri)
end

function Global.N_0xbcedb009461da156()
	return _in(0xBCEDB009461DA156, _r, _ri)
end

function Global.N_0xbd0efb25cca8f97a(p0, p1, p2, p3)
	return _in(0xBD0EFB25CCA8F97A, p0, p1, p2, p3)
end

--- MulleDK19: This function is hard-coded to always return 1.
function Global.N_0xbd545d44cce70597()
	return _in(0xBD545D44CCE70597, _r)
end

--- NETWORK_SESSION_IS_*
function Global.N_0xbdb6f89c729cf388()
	return _in(0xBDB6F89C729CF388, _r)
end

--- This function is hard-coded to always return 0.
function Global.N_0xbe197eaa669238f4(p0, p1, p2, p3)
	return _in(0xBE197EAA669238F4, p0, p1, p2, p3, _r, _ri)
end

function Global.N_0xbe3db208333d9844()
	return _in(0xBE3DB208333D9844, _r, _ri)
end

function Global.N_0xbe5c1255a1830ff5(vehicle, toggle)
	return _in(0xBE5C1255A1830FF5, vehicle, toggle)
end

function Global.N_0xbeb2d9a1d9a8f55a(p0, p1, p2, p3)
	return _in(0xBEB2D9A1D9A8F55A, p0, p1, p2, p3)
end

function Global.N_0xbed8ca5ff5e04113(p0, p1, p2, p3)
	return _in(0xBED8CA5FF5E04113, p0, p1, p2, p3)
end

function Global.N_0xbed9f5693f34ed17(statName, p1, outValue)
	return _in(0xBED9F5693F34ED17, _ch(statName), p1, _fi(outValue) --[[ may be optional ]], _r)
end

function Global.N_0xbef34b1d9624d5dd(p0)
	return _in(0xBEF34B1D9624D5DD, p0)
end

--- respawn player
function Global.N_0xbf22e0f32968e967(player, p1)
	return _in(0xBF22E0F32968E967, player, p1)
end

function Global.N_0xbf371cd2b64212fd(p0)
	return _in(0xBF371CD2B64212FD, p0)
end

--- NativeDB Parameter 2: Hash hash
function Global.N_0xbf4dc1784be94dfa(ped, p1, hash)
	return _in(0xBF4DC1784BE94DFA, ped, p1, hash)
end

function Global.N_0xbf4f34a85ca2970c()
	return _in(0xBF4F34A85CA2970C)
end

function Global.N_0xbf72910d0f26f025()
	return _in(0xBF72910D0F26F025, _r, _ri)
end

function Global.N_0xbfafdb5faaa5c5ab(p0)
	return _in(0xBFAFDB5FAAA5C5AB, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
function Global.N_0xbffe53ae7e67fcdc(p0, p1)
	return _in(0xBFFE53AE7E67FCDC, p0, p1)
end

--- GOLF_TRAIL_SET_*
function Global.N_0xc0416b061f2b7e5e(p0)
	return _in(0xC0416B061F2B7E5E, p0)
end

function Global.N_0xc0e0d686ddfc6eae()
	return _in(0xC0E0D686DDFC6EAE, _r, _ri)
end

function Global.N_0xc0ed6438e6d39ba8(p0, p1, p2)
	return _in(0xC0ED6438E6D39BA8, p0, p1, p2)
end

--- NativeDB Parameter 0: int* p0
function Global.N_0xc13c38e47ea5df31(p0)
	return _in(0xC13C38E47EA5DF31, _ii(p0) --[[ may be optional ]], _r)
end

function Global.N_0xc141b8917e0017ec()
	return _in(0xC141B8917E0017EC)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xc14bd9f5337219b2(p0)
	return _in(0xC14BD9F5337219B2, p0)
end

--- SET_VEH*
function Global.N_0xc1805d05e6d4fe10(vehicle)
	return _in(0xC1805D05E6D4FE10, vehicle)
end

--- same call as VEHICLE::_0x0F3B4D4E43177236
function Global.N_0xc1f981a6f74f0c23(p0, p1)
	return _in(0xC1F981A6F74F0C23, p0, p1)
end

--- NativeDB Introduced: v323
function Global.N_0xc2c97ea97711d1ae()
	return _in(0xC2C97EA97711D1AE, _r, _ri)
end

--- Getter for 0xCD74233600C4EA6B
-- GET_*
function Global.N_0xc2d2ad9eaae265b8()
	return _in(0xC2D2AD9EAAE265B8, _r)
end

function Global.N_0xc2ee020f5fb4db53(ped)
	return _in(0xC2EE020F5FB4DB53, ped)
end

function Global.N_0xc32ea7a2f6ca7557()
	return _in(0xC32EA7A2F6CA7557, _r, _ri)
end

--- - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
-- 0xc3376f42b1faccc6, 0xd5d0d2853191399c, // set_areas_generator_orientation
function Global.N_0xc3376f42b1faccc6(player)
	return _in(0xC3376F42B1FACCC6, player)
end
Global.SetAreasGeneratorOrientation = Global.N_0xc3376f42b1faccc6

--- SET_ENTITY_*
function Global.N_0xc34bc448da29f5e9(entity, toggle)
	return _in(0xC34BC448DA29F5E9, entity, toggle)
end

function Global.N_0xc35a6d07c93802b2()
	return _in(0xC35A6D07C93802B2)
end

function Global.N_0xc361aa040d6637a8(vehicle, p1)
	return _in(0xC361AA040D6637A8, vehicle, p1)
end

function Global.N_0xc3c221addde31a11(p0)
	return _in(0xC3C221ADDDE31A11, p0)
end

function Global.N_0xc3ead29ab273ece8(p0)
	return _in(0xC3EAD29AB273ECE8, p0)
end

function Global.N_0xc42dd763159f3461()
	return _in(0xC42DD763159F3461, _r)
end

function Global.N_0xc434133d9ba52777(p0, p1)
	return _in(0xC434133D9BA52777, p0, p1, _r, _ri)
end

function Global.N_0xc4b3347bd68bd609(p0)
	return _in(0xC4B3347BD68BD609, p0)
end

--- NativeDB Introduced: v323
function Global.N_0xc4c4575f62534a24()
	return _in(0xC4C4575F62534A24, _r, _ri)
end

--- NETWORK_D*
-- Probably NETWORK_DISABLE_*
function Global.N_0xc505036a35afd01b(toggle)
	return _in(0xC505036A35AFD01B, toggle)
end

--- SET_VEHICLE_LI*
function Global.N_0xc50ce861b55eab8b(vehicle, p1)
	return _in(0xC50CE861B55EAB8B, vehicle, p1)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xc5156361f26e2212(p0)
	return _in(0xC5156361F26E2212, p0)
end

--- This seems to edit the water wave, intensity around your current location.
-- 0.0f = Normal
-- 1.0f = So Calm and Smooth, a boat will stay still.
-- 3.0f = Really Intense.
function Global.N_0xc54a08c85ae4d410(p0)
	return _in(0xC54A08C85AE4D410, p0)
end

function Global.N_0xc56fbf2f228e1dac(modelHash, p1, p2)
	return _in(0xC56FBF2F228E1DAC, _ch(modelHash), p1, p2, _r, _ri)
end

--- NETWORK_IS_TRANSITION_???
function Global.N_0xc571d0e77d8bbc29()
	return _in(0xC571D0E77D8BBC29, _r)
end

function Global.N_0xc594b315edf2d4af(ped)
	return _in(0xC594B315EDF2D4AF, ped)
end

--- NativeDB Introduced: v323
function Global.N_0xc5a35c73b68f3c49()
	return _in(0xC5A35C73B68F3C49, _r, _ri)
end

function Global.N_0xc5be134ec7ba96a0(p0, p1, p2, p3, p4)
	return _in(0xC5BE134EC7BA96A0, p0, p1, p2, p3, p4)
end

function Global.N_0xc5c8f970d4edff71(p0)
	return _in(0xC5C8F970D4EDFF71, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0xc60060eb0d8ac7b1(p0, p1, p2)
	return _in(0xC60060EB0D8AC7B1, p0, p1, p2)
end

function Global.N_0xc6033d32241f6fb5(object, toggle)
	return _in(0xC6033D32241F6FB5, object, toggle)
end

--- Toggles a value (bool) for cutscenes.
function Global.N_0xc61b86c9f61eb404(toggle)
	return _in(0xC61B86C9F61EB404, toggle)
end

--- GET_NE*
-- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0xc64a06d939f826f5()
	return _in(0xC64A06D939F826F5, _f, _i, _i, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xc69bb1d832a710ef(p0)
	return _in(0xC69BB1D832A710EF, p0, _r, _ri)
end

function Global.N_0xc6e0e2616a7576bb()
	return _in(0xC6E0E2616A7576BB, _r, _ri)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
function Global.N_0xc6e74cf8c884c880(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xC6E74CF8C884C880, p0, p1, p2, p3, p4, p5, p6)
end

function Global.N_0xc729991a9065376e(p0)
	return _in(0xC729991A9065376E, p0)
end

function Global.N_0xc78e239ac5b2ddb9(p0, p1, p2)
	return _in(0xC78E239AC5B2DDB9, p0, p1, p2)
end

function Global.N_0xc7abac5de675ee3b()
	return _in(0xC7ABAC5DE675EE3B, _r, _ri)
end

function Global.N_0xc7f29ca00f46350e(p0)
	return _in(0xC7F29CA00F46350E, p0)
end

--- NET_GAMESERVER_*
-- Checks if the transaction status is equal to 1.
-- NativeDB Introduced: v1365
-- @param transactionId :
function Global.N_0xc830417d630a50f9(transactionId)
	return _in(0xC830417D630A50F9, transactionId, _r)
end

function Global.N_0xc8391c309684595a()
	return _in(0xC8391C309684595A)
end

function Global.N_0xc847b43f369ac0b5()
	return _in(0xC847B43F369AC0B5)
end

--- NativeDB Introduced: v323
function Global.N_0xc85a7127e7ad02aa()
	return _in(0xC85A7127E7AD02AA, _r, _ri)
end

function Global.N_0xc87e740d9f3872cc()
	return _in(0xC87E740D9F3872CC, _r, _ri)
end

--- IS_MOBILE_PHONE_*
function Global.N_0xc8b1b2425604cdd0()
	return _in(0xC8B1B2425604CDD0, _r)
end

function Global.N_0xc8b5c4a79cc18b94(cam)
	return _in(0xC8B5C4A79CC18B94, cam)
end

function Global.N_0xc8e1071177a23be5()
	return _in(0xC8E1071177A23BE5, _i, _i, _i, _r)
end

function Global.N_0xc8ede9bdbccba6d4(p1, p2, p3)
	return _in(0xC8EDE9BDBCCBA6D4, _i, p1, p2, p3)
end

--- Seems to be called before SPECIAL_ABILITY_DEACTIVATE. Needs more research.
-- SPECIAL_ABILITY_*
-- SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED ?
function Global.N_0xc9a763d8fe87436a(player)
	return _in(0xC9A763D8FE87436A, player)
end

function Global.N_0xc9b43a33d09cada7(p0)
	return _in(0xC9B43A33D09CADA7, p0)
end

function Global.N_0xca465d9cc0d231ba(p0)
	return _in(0xCA465D9CC0D231BA, p0)
end

function Global.N_0xca4ac3eaae46ec7b(p0, p1)
	return _in(0xCA4AC3EAAE46EC7B, p0, p1, _r, _ri)
end

function Global.N_0xca4ae345a153d573(p0)
	return _in(0xCA4AE345A153D573, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0xca4cea6ae0000a7e(p0)
	return _in(0xCA4CEA6AE0000A7E, p0)
end

function Global.N_0xca575c391fea25cc(p0)
	return _in(0xCA575C391FEA25CC, p0)
end

function Global.N_0xca6b2f7ce32ab653(p0, p2)
	return _in(0xCA6B2F7CE32AB653, p0, _i, p2, _r)
end

function Global.N_0xca9d2aa3e326d720()
	return _in(0xCA9D2AA3E326D720, _r)
end

--- Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".
function Global.N_0xcac57395b151135f(player, p1)
	return _in(0xCAC57395B151135F, player, p1)
end

--- rerere
function Global.N_0xcac66558b944da67(vehicle, toggle)
	return _in(0xCAC66558B944DA67, vehicle, toggle)
end

--- NETWORK_SESSION_*
-- p0 must be <= 4
function Global.N_0xcae55f48d3d7875c(p0)
	return _in(0xCAE55F48D3D7875C, p0)
end

function Global.N_0xcb0360efefb2580d(inputGroup)
	return _in(0xCB0360EFEFB2580D, inputGroup)
end

--- GET_*
function Global.N_0xcb645e85e97ea48b()
	return _in(0xCB645E85E97EA48B, _r)
end

function Global.N_0xcb82a0bf0e3e3265(p0)
	return _in(0xCB82A0BF0E3E3265, p0, _r, _ri)
end

--- Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
-- NativeDB Introduced: v323
-- @param txdString1 :
-- @param txnString1 :
-- @param txdString2 :
-- @param txnString2 :
function Global.N_0xcb95466f(txdString1, txnString1, txdString2, txnString2)
	return _in(0xcaf64a0c, _ts(txdString1), _ts(txnString1), _ts(txdString2), _ts(txnString2))
end

function Global.N_0xcc25a4553dfbf9ea(p0, p1, p2, p3, p4)
	return _in(0xCC25A4553DFBF9EA, p0, p1, p2, p3, p4)
end

--- RESET_*
function Global.N_0xcc6e963682533882(object)
	return _in(0xCC6E963682533882, object)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xccd078c2665d2973(p0)
	return _in(0xCCD078C2665D2973, p0)
end

--- REQUEST_*
function Global.N_0xcd018c591f94cb43(ped, p1)
	return _in(0xCD018C591F94CB43, ped, p1)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function Global.N_0xcd0f5b5d932ae473()
	return _in(0xCD0F5B5D932AE473)
end

function Global.N_0xcd71a4ecab22709e(entity)
	return _in(0xCD71A4ECAB22709E, entity)
end

--- Setter for 0xC2D2AD9EAAE265B8
-- SET_*
function Global.N_0xcd74233600c4ea6b(toggle)
	return _in(0xCD74233600C4EA6B, toggle)
end

function Global.N_0xcda1c62be2777802(p0, p1, p2)
	return _in(0xCDA1C62BE2777802, p0, p1, p2)
end

--- Probably SET_VEHICLE_SOMETHING
function Global.N_0xcda42c4bb9bde779(vehicle, p1)
	return _in(0xCDA42C4BB9BDE779, vehicle, p1)
end

function Global.N_0xcdca26e80faecb8f()
	return _in(0xCDCA26E80FAECB8F)
end

function Global.N_0xcea7c8e1b48ff68c(p0, p1)
	return _in(0xCEA7C8E1B48FF68C, p0, p1)
end

function Global.N_0xced08cbe8ebb97c7(p0, p1)
	return _in(0xCED08CBE8EBB97C7, p0, p1)
end

function Global.N_0xceda60a74219d064(p0, p1)
	return _in(0xCEDA60A74219D064, p0, p1)
end

function Global.N_0xcf9159024555488c(p0)
	return _in(0xCF9159024555488C, p0)
end

--- what does this do?
function Global.N_0xcfd778e7904c255e(vehicle)
	return _in(0xCFD778E7904C255E, vehicle)
end

function Global.N_0xcfeb46dcd7d8d5eb(p0)
	return _in(0xCFEB46DCD7D8D5EB, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0xd05a3241b9a86f19(p0, p1)
	return _in(0xD05A3241B9A86F19, p0, p1)
end

function Global.N_0xd0ee05fe193646ea()
	return _in(0xD0EE05FE193646EA, _i, _i, _i, _r)
end

function Global.N_0xd10282b6e3751ba0()
	return _in(0xD10282B6E3751BA0, _r, _ri)
end

--- PLAYSTATS_S*
function Global.N_0xd1032e482629049e(p0)
	return _in(0xD1032E482629049E, p0)
end

function Global.N_0xd1942374085c8469(p0)
	return _in(0xD1942374085C8469, p0)
end

function Global.N_0xd1a1ee3b4fa8e760(p0)
	return _in(0xD1A1EE3B4FA8E760, p0)
end

--- SET_TV_???
function Global.N_0xd1c55b110e4df534(p0)
	return _in(0xD1C55B110E4DF534, p0)
end

function Global.N_0xd1c7cb175e012964(scaleformHandle)
	return _in(0xD1C7CB175E012964, scaleformHandle, _r)
end

function Global.N_0xd1c9b92bdd3f151d(p0, p1, p2)
	return _in(0xD1C9B92BDD3F151D, p0, p1, p2)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xd2049635deb9c375()
	return _in(0xD2049635DEB9C375)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0xd20d79671a598594(p0, p1, p2)
	return _in(0xD20D79671A598594, p0, p1, p2)
end

function Global.N_0xd2936cab8b58fcbd(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xD2936CAB8B58FCBD, p0, p1, p2, p3, p4, p5, p6, p7)
end

function Global.N_0xd2dccd8e16e20997(p0)
	return _in(0xD2DCCD8E16E20997, p0)
end

function Global.N_0xd302e99edf0449cf(p0)
	return _in(0xD302E99EDF0449CF, p0, _r, _ri)
end

--- NETWORK_SESSION_IS_*
function Global.N_0xd313de83394af134()
	return _in(0xD313DE83394AF134, _r)
end

function Global.N_0xd3301660a57c9272(p0)
	return _in(0xD3301660A57C9272, p0)
end

function Global.N_0xd33daa36272177c4(ped)
	return _in(0xD33DAA36272177C4, ped)
end

function Global.N_0xd39b3fff8ffdd5bf(p0)
	return _in(0xD39B3FFF8FFDD5BF, p0, _r, _ri)
end

function Global.N_0xd39d13c9febf0511(p0)
	return _in(0xD39D13C9FEBF0511, p0)
end

function Global.N_0xd3e51c0ab8c26eee(p0, p1)
	return _in(0xD3E51C0AB8C26EEE, p0, p1, _r, _ri)
end

--- NativeDB Introduced: v323
-- @param player :
function Global.N_0xd414be129bb81b32(player)
	return _in(0xD414BE129BB81B32, player, _r, _rf)
end

function Global.N_0xd4196117af7bb974(p0, p1)
	return _in(0xD4196117AF7BB974, p0, p1, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0xd484bf71050ca1ee(p0)
	return _in(0xD484BF71050CA1EE, p0, _r, _ri)
end

--- Adds an area that seems to be related to pickup physics behavior.
-- Max amount of areas is 10. Only works in multiplayer.
-- ADD_*
-- NativeDB Introduced: v1290
-- @param x :
-- @param y :
-- @param z :
-- @param radius :
function Global.N_0xd4a7a435b3710d05(x, y, z, radius)
	return _in(0xD4A7A435B3710D05, x, y, z, radius)
end

--- Only used like this:
-- if (VEHICLE::_D4C4642CB7F50B5D(ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_3))) {                                                        sub_157e9c(g_40001._f1868, 0);
-- }
function Global.N_0xd4c4642cb7f50b5d(vehicle)
	return _in(0xD4C4642CB7F50B5D, vehicle, _r)
end

function Global.N_0xd558bec0bba7e8d2(p0, p1, p2, p3, p4)
	return _in(0xD558BEC0BBA7E8D2, p0, p1, p2, p3, p4)
end

function Global.N_0xd565f438137f0e10(p0, p1)
	return _in(0xD565F438137F0E10, p0, p1)
end

function Global.N_0xd642319c54aadeb6()
	return _in(0xD642319C54AADEB6, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0xd6429a016084f1a5(p0)
	return _in(0xD6429A016084F1A5, p0, _r, _ri)
end

function Global.N_0xd66c9e72b3cc4982(p1)
	return _in(0xD66C9E72B3CC4982, _i, p1, _r, _ri)
end

function Global.N_0xd6781e42755531f7(p0)
	return _in(0xD6781E42755531F7, p0)
end

function Global.N_0xd6ade981781fca09(p0)
	return _in(0xD6ADE981781FCA09, p0)
end

function Global.N_0xd7360051c885628b()
	return _in(0xD7360051C885628B, _r, _ri)
end

function Global.N_0xd7b6c73cad419bcf(p0)
	return _in(0xD7B6C73CAD419BCF, p0)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
function Global.N_0xd7b80e7c3befc396(p0, p1)
	return _in(0xD7B80E7C3BEFC396, p0, p1)
end

function Global.N_0xd7cccba28c4ecaf0(p0, p1, p2, p3, p4)
	return _in(0xD7CCCBA28C4ECAF0, p0, p1, p2, p3, p4)
end

--- 4 matches across 2 scripts.
-- appcamera:
-- called after UI::HIDE_HUD_AND_RADAR_THIS_FRAME() and before GRAPHICS::0x108F36CC();
-- cellphone_controller:
-- called after GRAPHICS::0xE9F2B68F(0, 0) and before GRAPHICS::0x108F36CC();
function Global.N_0xd801cc02177fa3f1()
	return _in(0xD801CC02177FA3F1)
end

function Global.N_0xd8122c407663b995()
	return _in(0xD8122C407663B995, _r, _ri)
end

function Global.N_0xd821056b9acf8052(p0, p1)
	return _in(0xD821056B9ACF8052, p0, p1)
end

function Global.N_0xd9454b5752c857dc()
	return _in(0xD9454B5752C857DC)
end

--- RESET_*
function Global.N_0xd9f692d349249528()
	return _in(0xD9F692D349249528)
end

function Global.N_0xda07819e452ffe8f(p0)
	return _in(0xDA07819E452FFE8F, p0)
end

function Global.N_0xdaf80797fc534bec(p0)
	return _in(0xDAF80797FC534BEC, p0)
end

function Global.N_0xdaf87174be7454ff(p0)
	return _in(0xDAF87174BE7454FF, p0, _r)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0xdb1ea9411c8911ec(p0)
	return _in(0xDB1EA9411C8911EC, p0)
end

function Global.N_0xdb41d07a45a6d4b7(p0)
	return _in(0xDB41D07A45A6D4B7, p0, _r, _ri)
end

function Global.N_0xdb90c6cca48940f1(p0)
	return _in(0xDB90C6CCA48940F1, p0)
end

--- CLEAR_*
-- NativeDB Introduced: v1290
-- @param vehicle :
function Global.N_0xdbbc7a2432524127(vehicle)
	return _in(0xDBBC7A2432524127, vehicle)
end

--- Related to locking the vehicle or something similar.
-- In the decompiled scripts, its always called after
-- VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);
function Global.N_0xdbc631f109350b8c(vehicle, p1)
	return _in(0xDBC631F109350B8C, vehicle, p1)
end

function Global.N_0xdbc966a01c02bca7(p0, p1, p2)
	return _in(0xDBC966A01C02BCA7, p0, p1, p2)
end

--- FORCE_*
function Global.N_0xdc459cfa0cce245b(toggle)
	return _in(0xDC459CFA0CCE245B, toggle)
end

--- Has something to do with police.
function Global.N_0xdc64d2c53493ed12(player)
	return _in(0xDC64D2C53493ED12, player)
end

--- SET_ENTITY_*
-- x360 Hash: 0xA0466A69
-- Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
-- Ran after these 2 natives,
-- set_object_targettable(uParam0, 0);
-- set_entity_invincible(uParam0, 1);
function Global.N_0xdc6f8601faf2e893(entity, toggle)
	return _in(0xDC6F8601FAF2E893, entity, toggle)
end

function Global.N_0xdc9da9e8789f5246()
	return _in(0xDC9DA9E8789F5246)
end

--- NativeDB Added Parameter 1: Any p0
-- NativeDB Added Parameter 2: Any p1
function Global.N_0xdce97bdf8a0eabc8()
	return _in(0xDCE97BDF8A0EABC8)
end

--- 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
function Global.N_0xdd2620b7b9d16ff1(player, p1)
	return _in(0xDD2620B7B9D16FF1, player, p1, _r)
end

--- Tune Backwards... ?
function Global.N_0xdd6bcf9e94425df9()
	return _in(0xDD6BCF9E94425DF9)
end

function Global.N_0xdd79df9f4d26e1c9()
	return _in(0xDD79DF9F4D26E1C9)
end

function Global.N_0xde03620f8703a9df()
	return _in(0xDE03620F8703A9DF, _r, _ri)
end

function Global.N_0xde45d1a1ef45ee61(player, toggle)
	return _in(0xDE45D1A1EF45EE61, player, toggle)
end
Global.SetHudAnimStopLevel = Global.N_0xde45d1a1ef45ee61

function Global.N_0xdeaaf77eb3687e97(p0, p1)
	return _in(0xDEAAF77EB3687E97, p0, _ii(p1) --[[ may be optional ]], _r, _ri)
end

function Global.N_0xdeb2b99a1af1a2a6(p0)
	return _in(0xDEB2B99A1AF1A2A6, p0, _r, _ri)
end

function Global.N_0xdf4b952f7d381b95()
	return _in(0xDF4B952F7D381B95, _r, _ri)
end

--- NativeDB Introduced: v1180
-- @param p0 :
function Global.N_0xdfe68c4b787e1bfb(p0)
	return _in(0xDFE68C4B787E1BFB, p0)
end

function Global.N_0xe058175f8eafe79a(p0)
	return _in(0xE058175F8EAFE79A, p0)
end

function Global.N_0xe05dd0e9707003a3(p0, p1)
	return _in(0xE05DD0E9707003A3, p0, p1)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.N_0xe05f6aeefeb0bb02(p0, p1, p2)
	return _in(0xE05F6AEEFEB0BB02, p0, p1, p2)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xe0f82d68c7039158(p0)
	return _in(0xE0F82D68C7039158, p0)
end

function Global.N_0xe111a7c0d200cbc5(p0, p1)
	return _in(0xE111A7C0D200CBC5, p0, p1)
end

--- This function is hard-coded to always return 1.
function Global.N_0xe154b48b68ef72bc(p0)
	return _in(0xE154B48B68EF72BC, p0, _r)
end

function Global.N_0xe16142b94664defd(vehicle, p1)
	return _in(0xE16142B94664DEFD, vehicle, p1)
end

--- Used with IS_LOOK_INVERTED() and negates its affect.
-- --
-- Not sure how the person above got that description, but here's an actual example:
-- if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
-- if (a_5) {
-- if (CONTROLS::IS_LOOK_INVERTED()) {
-- a_3 *= -1;
-- }
-- if (CONTROLS::_E1615EC03B3BB4FD()) {
-- a_3 *= -1;
-- }
-- }
-- }
function Global.N_0xe1615ec03b3bb4fd()
	return _in(0xE1615EC03B3BB4FD, _r)
end

function Global.N_0xe16aa70ce9beedc3(p0)
	return _in(0xE16AA70CE9BEEDC3, p0, _r, _ri)
end

function Global.N_0xe23adc6fcb1f29ae(p0, p1, p2)
	return _in(0xE23ADC6FCB1F29AE, p0, p1, p2)
end

function Global.N_0xe26ccff8094d8c74(p0)
	return _in(0xE26CCFF8094D8C74, p0, _r)
end
Global.UsingNetworkWeapontype = Global.N_0xe26ccff8094d8c74

function Global.N_0xe2892e7e55d7073a(p0)
	return _in(0xE2892E7E55D7073A, p0)
end

--- RESET_*
-- Resets the effect of 0x428AD3E26C8D9EB0
function Global.N_0xe2f53f172b45ede1()
	return _in(0xE2F53F172B45EDE1)
end

function Global.N_0xe3261d791eb44acb(p0)
	return _in(0xE3261D791EB44ACB, p0)
end

function Global.N_0xe36a98d8ab3d3c66(p0)
	return _in(0xE36A98D8AB3D3C66, p0)
end

--- UI::GET_CURRENT_WEBSITE_PAGE_ID(int websiteID)
-- returns the current website page sometimes returns false
function Global.N_0xe3b05614dce1d014(p0)
	return _in(0xE3B05614DCE1D014, p0, _r, _ri)
end

--- sets something to 1
function Global.N_0xe3d969d2785ffb5e()
	return _in(0xE3D969D2785FFB5E)
end

--- Sets an unknown value related to timecycles.
function Global.N_0xe3e2c1b4c59dbc77(unk)
	return _in(0xE3E2C1B4C59DBC77, unk)
end

function Global.N_0xe3e5a7c64ca2c6ed()
	return _in(0xE3E5A7C64CA2C6ED, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
function Global.N_0xe42d626eec94e5d9(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xE42D626EEC94E5D9, p0, p1, p2, p3, p4, p5, p6)
end

function Global.N_0xe496a53ba5f50a56(p0)
	return _in(0xE496A53BA5F50A56, p0, _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0xe4c3b169876d33d7(p0)
	return _in(0xE4C3B169876D33D7, p0)
end

function Global.N_0xe4dcec7fd5b739a5(ped)
	return _in(0xE4DCEC7FD5B739A5, ped)
end

--- STOP_S*
function Global.N_0xe4e6dd5566d28c82()
	return _in(0xE4E6DD5566D28C82)
end

--- NativeDB Introduced: v1290
-- @param p0 :
function Global.N_0xe4f6e8d07a2f0f51(p0)
	return _in(0xE4F6E8D07A2F0F51, p0, _r, _ri)
end

--- SET_*
function Global.N_0xe532ec1a63231b4f(p0, p1)
	return _in(0xE532EC1A63231B4F, p0, p1)
end

function Global.N_0xe547e9114277098f()
	return _in(0xE547E9114277098F, _r, _ri)
end

function Global.N_0xe5810ac70602f2f5(vehicle, p1)
	return _in(0xE5810AC70602F2F5, vehicle, p1)
end

--- Getter for 0xB3C641F3630BF6DA
-- GET_M*
function Global.N_0xe59343e9e96529e7()
	return _in(0xE59343E9E96529E7, _r, _rf)
end

--- NativeDB Introduced: v1365
-- @param p0 :
-- @param p1 :
function Global.N_0xe615bb7a7752c76a(p0, p1)
	return _in(0xE615BB7A7752C76A, p0, p1)
end

function Global.N_0xe620fd3512a04f18(p0)
	return _in(0xE620FD3512A04F18, p0)
end

--- TOGGLE_*
function Global.N_0xe63d7c6eececb66b(toggle)
	return _in(0xE63D7C6EECECB66B, toggle)
end

function Global.N_0xe6717e652b8c8d8a(p0, p1)
	return _in(0xE6717E652B8C8D8A, p0, p1)
end

function Global.N_0xe67c6dfd386ea5e7(p0)
	return _in(0xE67C6DFD386EA5E7, p0)
end

--- This native is used in some casino scripts to fit the scaleform in the rendertarget.
function Global.N_0xe6a9f00d4240b519(scaleform, p1)
	return _in(0xE6A9F00D4240B519, scaleform, p1)
end

--- GET_VEHICLE_*
function Global.N_0xe6b0e8cfc3633bf0(vehicle)
	return _in(0xE6B0E8CFC3633BF0, vehicle, _r, _ri)
end

function Global.N_0xe6c0c80b8c867537(p0)
	return _in(0xE6C0C80B8C867537, p0)
end

--- NativeDB Introduced: v323
function Global.N_0xe75a4a2e5e316d86()
	return _in(0xE75A4A2E5E316D86, _r, _ri)
end

--- This function is hard-coded to always return 0.
function Global.N_0xe791df1f73ed2c8b(p0)
	return _in(0xE791DF1F73ED2C8B, p0, _r, _ri)
end

function Global.N_0xe7e4c198b0185900(p0, p1, p2)
	return _in(0xE7E4C198B0185900, p0, p1, p2)
end

function Global.N_0xe851e480b814d4ba(vehicle, p1)
	return _in(0xE851E480B814D4BA, vehicle, p1)
end

--- SET_PED_CAN_*
function Global.N_0xe861d0b05c7662b8(ped, p1, p2)
	return _in(0xE861D0B05C7662B8, ped, p1, p2)
end

--- GET_H*
-- NativeDB Introduced: v1604
-- @param vehicle :
function Global.N_0xe8718faf591fd224(vehicle)
	return _in(0xE8718FAF591FD224, vehicle, _r)
end

function Global.N_0xe8853fbce7d8d0d6()
	return _in(0xE8853FBCE7D8D0D6, _r, _ri)
end

function Global.N_0xe8b0b270b6e7c76e(p0, p1, p2, p3)
	return _in(0xE8B0B270B6E7C76E, p0, p1, p2, p3)
end

function Global.N_0xe906ec930f5fe7c8(p0, p1)
	return _in(0xE906EC930F5FE7C8, p0, p1)
end

--- Related to tennis mode.
-- GET_TENNIS_*
function Global.N_0xe95b0c7d5ba3b96b(ped)
	return _in(0xE95B0C7D5BA3B96B, ped, _r)
end

function Global.N_0xe9ea16d6e54cdca4(p0, p1)
	return _in(0xE9EA16D6E54CDCA4, p0, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0xea95c0853a27888e()
	return _in(0xEA95C0853A27888E)
end

function Global.N_0xea9960d07dadcf10(p0)
	return _in(0xEA9960D07DADCF10, p0, _r, _ri)
end

function Global.N_0xeaf0fa793d05c592()
	return _in(0xEAF0FA793D05C592, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xeb078ca2b5e82add(p0, p1)
	return _in(0xEB078CA2B5E82ADD, p0, p1)
end

function Global.N_0xeb2104e905c6f2e9()
	return _in(0xEB2104E905C6F2E9, _r, _ri)
end

function Global.N_0xeb6f1a9b5510a5d2(p0, p1)
	return _in(0xEB6F1A9B5510A5D2, p0, p1)
end

--- NativeDB Introduced: v1290
function Global.N_0xeb81a3dadd503187()
	return _in(0xEB81A3DADD503187)
end

--- MulleDK19: This function is hard-coded to always return 1.
function Global.N_0xebcab9e5048434f4()
	return _in(0xEBCAB9E5048434F4, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.N_0xebd3205a207939ed(p0)
	return _in(0xEBD3205A207939ED, _ii(p0) --[[ may be optional ]])
end

function Global.N_0xebf8284d8cadeb53()
	return _in(0xEBF8284D8CADEB53)
end

function Global.N_0xebfa8d50addc54c4(p0)
	return _in(0xEBFA8D50ADDC54C4, p0, _r)
end

--- SET_PED_*
-- Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.
function Global.N_0xec4b4b3b9908052a(ped, unk)
	return _in(0xEC4B4B3B9908052A, ped, unk)
end

function Global.N_0xec6935ebe0847b90(p0, p1, p2, p3)
	return _in(0xEC6935EBE0847B90, p0, p1, p2, p3, _r, _ri)
end

--- This function is hard-coded to always return 0.
function Global.N_0xec72c258667be5ea(p0)
	return _in(0xEC72C258667BE5EA, p0, _r, _ri)
end

--- Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
-- To enable the keys again, use [`0x14621BB1DF14E2B2`](#_0x14621BB1DF14E2B2).
function Global.N_0xec9264727eec0f28()
	return _in(0xEC9264727EEC0F28)
end

--- STAT_LOAD_*
function Global.N_0xecb41ac6ab754401()
	return _in(0xECB41AC6AB754401, _r)
end

--- FORCE_*
function Global.N_0xed3c76adfa6d07c4(ped)
	return _in(0xED3C76ADFA6D07C4, ped)
end

function Global.N_0xed5ede9e676643c9(p0, p1)
	return _in(0xED5EDE9E676643C9, p0, p1)
end

function Global.N_0xed5fd7af10f5e262(p0, p1, p2, p3)
	return _in(0xED5FD7AF10F5E262, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.N_0xed76d195e6e3bf7f(p0, p1, p2, p3)
	return _in(0xED76D195E6E3BF7F, p0, p1, p2, p3)
end

function Global.N_0xedbc8405b3895cc9(p0, p1)
	return _in(0xEDBC8405B3895CC9, p0, p1)
end

function Global.N_0xedbf6c9b0d2c65c8(p0)
	return _in(0xEDBF6C9B0D2C65C8, p0)
end

--- interprets the result of CAM::_0x19CAFA3C87F7C2FF()
-- example: // checks if you're currently in first person
-- if ((CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) && (!__463_$28ED382849B17AFC())) {
-- UI::_FDEC055AB549E328();
-- UI::_SET_NOTIFICATION_TEXT_ENTRY("REC_FEED_WAR");
-- l_CE[0/*1*/] = UI::_DRAW_NOTIFICATION(0, 1);
-- }
function Global.N_0xee778f8c7e1142e2(p0)
	return _in(0xEE778F8C7E1142E2, p0, _r, _ri)
end

--- Some kind of flags.
function Global.N_0xeebfc7a7efdc35b4(vehicle)
	return _in(0xEEBFC7A7EFDC35B4, vehicle, _r, _ri)
end

function Global.N_0xeeed8fafec331a70(p0, p1, p2, p3)
	return _in(0xEEED8FAFEC331A70, p0, p1, p2, p3, _r, _ri)
end

function Global.N_0xef398beee4ef45f9(p0)
	return _in(0xEF398BEEE4EF45F9, p0)
end

function Global.N_0xef39ee20c537e98c(p0, p1, p2, p3, p4, p5)
	return _in(0xEF39EE20C537E98C, p0, p1, p2, p3, p4, p5)
end

function Global.N_0xef4ced81cebedc6d(p0, p1)
	return _in(0xEF4CED81CEBEDC6D, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.SetUseridsUihidden = Global.N_0xef4ced81cebedc6d

--- AD*
function Global.N_0xefabc7722293da7c()
	return _in(0xEFABC7722293DA7C)
end

--- GET_*
function Global.N_0xf033419d1b81fae8(p0)
	return _in(0xF033419D1B81FAE8, p0, _r, _ri)
end

function Global.N_0xf051d9bfb6ba39c0(p0)
	return _in(0xF051D9BFB6BA39C0, p0)
end

function Global.N_0xf06a6f41cb445443(p0)
	return _in(0xF06A6F41CB445443, p0)
end

function Global.N_0xf06ebb91a81e09e3(p0)
	return _in(0xF06EBB91A81E09E3, p0)
end

--- NETWORK_RE*
function Global.N_0xf083835b70ba9bfe()
	return _in(0xF083835B70BA9BFE)
end

--- Adds some kind of shadow to the vehicle.
function Global.N_0xf0e4ba16d1db546c(vehicle, p1, p2)
	return _in(0xF0E4BA16D1DB546C, vehicle, p1, p2)
end

--- Only 1 occurrence. p1 was 2.
function Global.N_0xf10b44fd479d69f3(player, p1)
	return _in(0xF10B44FD479D69F3, player, p1, _r)
end

function Global.N_0xf11f01d98113536a(p0)
	return _in(0xF11F01D98113536A, p0, _r, _ri)
end

function Global.N_0xf12e33034d887f66(p0, p1, p2, p3, p4, p5)
	return _in(0xF12E33034D887F66, p0, p1, p2, p3, p4, p5, _r, _ri)
end

function Global.N_0xf12e6cd06c73d69e()
	return _in(0xF12E6CD06C73D69E, _r, _ri)
end

function Global.N_0xf13fe2a80c05c561()
	return _in(0xF13FE2A80C05C561, _r)
end

--- Sets profile setting 933
function Global.N_0xf1a1803d3476f215(value)
	return _in(0xF1A1803D3476F215, value)
end

function Global.N_0xf1a6c18b35bcade6(p0)
	return _in(0xF1A6C18B35BCADE6, p0)
end

function Global.N_0xf1b84178f8674195(p0)
	return _in(0xF1B84178F8674195, p0)
end

function Global.N_0xf1c03a5352243a30(p0)
	return _in(0xF1C03A5352243A30, p0)
end

function Global.N_0xf1e22dc13f5eebad(p0)
	return _in(0xF1E22DC13F5EEBAD, p0)
end

--- 2 calls found in the b617d scripts:
-- AUDIO::_F1F8157B8C3F171C(l_A42, "Franklin_Bike_Rev", "BIG_SCORE_3A_SOUNDS");
-- AUDIO::_F1F8157B8C3F171C(l_166, "Trevor_Revs_Off", "PALETO_SCORE_SETUP_SOUNDS");
function Global.N_0xf1f8157b8c3f171c(vehicle, p1, p2)
	return _in(0xF1F8157B8C3F171C, vehicle, _ts(p1), _ts(p2))
end

function Global.N_0xf22ca0fd74b80e7a(p0)
	return _in(0xF22CA0FD74B80E7A, p0, _r)
end

function Global.N_0xf2385935bffd4d92(ped)
	return _in(0xF2385935BFFD4D92, ped, _r)
end

--- Disables SET_PAD_SHAKE when set to -1 for a given inputGroup
function Global.N_0xf239400e16c23e08(inputGroup, p1)
	return _in(0xF239400E16C23E08, inputGroup, p1)
end

function Global.N_0xf25e02cb9c5818f8()
	return _in(0xF25E02CB9C5818F8)
end

function Global.N_0xf284ac67940c6812()
	return _in(0xF284AC67940C6812, _r, _ri)
end

function Global.N_0xf287f506767cc8a9()
	return _in(0xF287F506767CC8A9, _r, _ri)
end

--- toggle was always 0 except in one instance (b678).
-- The one time this is set to true seems to do with when you fail the mission.
function Global.N_0xf2bebcdfafdaa19e(toggle)
	return _in(0xF2BEBCDFAFDAA19E, toggle)
end

--- MulleDK19: This function is hard-coded to always return 0.
function Global.N_0xf2ca003f167e21d2()
	return _in(0xF2CA003F167E21D2, _r, _ri)
end
Global.ReturnZero = Global.N_0xf2ca003f167e21d2

--- MulleDK19: This function is hard-coded to always return 1.
function Global.N_0xf2e07819ef1a5289()
	return _in(0xF2E07819EF1A5289, _r)
end

function Global.N_0xf3162836c28f9da5(p0, p1, p2, p3)
	return _in(0xF3162836C28F9DA5, p0, p1, p2, p3, _r, _ri)
end

--- SET_VEHICLE_*
function Global.N_0xf3365489e0dd50f9(vehicle, toggle)
	return _in(0xF3365489E0DD50F9, vehicle, toggle)
end

function Global.N_0xf3b0e0aed097a3f5(p0, p1)
	return _in(0xF3B0E0AED097A3F5, p0, p1, _r, _ri)
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
function Global.N_0xf3f776ada161e47d(p0, p1)
	return _in(0xF3F776ADA161E47D, p0, p1)
end

--- characters
-- 0: Michael
-- 1: Franklin
-- 2: Trevor
-- 3: MPMale
-- 4: MPFemale
function Global.N_0xf3fbe2d50a6a8c28(character, p1)
	return _in(0xF3FBE2D50A6A8C28, character, p1, _r, _ri)
end

--- STAT_S*
function Global.N_0xf434a10ba01c37d0(toggle)
	return _in(0xF434A10BA01C37D0, toggle)
end

function Global.N_0xf445de8da80a1792()
	return _in(0xF445DE8DA80A1792, _r, _ri)
end

function Global.N_0xf488c566413b4232(p0, p1)
	return _in(0xF488C566413B4232, p0, p1)
end

function Global.N_0xf49abc20d8552257(p0)
	return _in(0xF49ABC20D8552257, p0)
end

function Global.N_0xf4a0dadb70f57fa6()
	return _in(0xF4A0DADB70F57FA6)
end

--- Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?
function Global.N_0xf4d8e7ac2a27758c(p0)
	return _in(0xF4D8E7AC2A27758C, p0, _r, _ri)
end

--- This does not move an existing checkpoint... so wtf.
function Global.N_0xf51d36185993515d(checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
	return _in(0xF51D36185993515D, checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
end

function Global.N_0xf534d94dfa2ead26(p0, p1, p2, p3, p4)
	return _in(0xF534D94DFA2EAD26, p0, p1, p2, p3, p4)
end

function Global.N_0xf55e4046f6f831dc(p0, p1)
	return _in(0xF55E4046F6F831DC, p0, p1)
end

function Global.N_0xf56dfb7b61be7276(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xF56DFB7B61BE7276, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, _fi(p12) --[[ may be optional ]], _r)
end

function Global.N_0xf5bb8dac426a52c0()
	return _in(0xF5BB8DAC426A52C0, _i, _i, _i, _i)
end

--- 3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
-- appcamera, appmedia, and cellphone_controller.
function Global.N_0xf5bed327cea362b1(p0)
	return _in(0xF5BED327CEA362B1, p0, _r, _ri)
end

--- NativeDB Introduced: v1493
function Global.N_0xf5f1e89a970b7796()
	return _in(0xF5F1E89A970B7796, _r)
end

function Global.N_0xf60165e1d2c5370b(ped)
	return _in(0xF60165E1D2C5370B, ped, _i, _i, _r)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xf6b170f9a02e9e87(p0)
	return _in(0xF6B170F9A02E9E87, p0)
end

function Global.N_0xf6baaaf762e1bf40(p0, p1)
	return _in(0xF6BAAAF762E1BF40, _ts(p0), _ii(p1) --[[ may be optional ]], _r)
end

function Global.N_0xf6f4383b7c92f11a(p0)
	return _in(0xF6F4383B7C92F11A, p0)
end

function Global.N_0xf751b16fb32abc1d(p0)
	return _in(0xF751B16FB32ABC1D, p0)
end

function Global.N_0xf78b803082d4386f(p0)
	return _in(0xF78B803082D4386F, p0)
end

function Global.N_0xf78f94d60248c737(vehicle, p1)
	return _in(0xF78F94D60248C737, vehicle, p1, _r)
end

function Global.N_0xf814fec6a19fd6e0()
	return _in(0xF814FEC6A19FD6E0)
end

function Global.N_0xf8155a7f03ddfc8e(p0)
	return _in(0xF8155A7F03DDFC8E, p0)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
function Global.N_0xf83d0febe75e62c9(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xF83D0FEBE75E62C9, p0, p1, p2, p3, p4, p5, p6, p7)
end

function Global.N_0xf854439efbb3b583()
	return _in(0xF854439EFBB3B583)
end

--- Remove the weird shadow applied by [0xF0E4BA16D1DB546C](#_0xF0E4BA16D1DB546C).
function Global.N_0xf87d9f2301f7d206(vehicle)
	return _in(0xF87D9F2301F7D206, vehicle)
end

function Global.N_0xf8c54a461c3e11dc()
	return _in(0xF8C54A461C3E11DC, _i, _i, _i, _i)
end

function Global.N_0xf92099527db8e2a7(p0, p1)
	return _in(0xF92099527DB8E2A7, p0, p1)
end

function Global.N_0xf98dde0a8ed09323(p0)
	return _in(0xF98DDE0A8ED09323, p0)
end

--- p1 was always 1 (true).
-- Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
-- Actual name begins with 'S'
function Global.N_0xf9acf4a08098ea25(ped, p1)
	return _in(0xF9ACF4A08098EA25, ped, p1)
end

function Global.N_0xf9b83b77929d8863()
	return _in(0xF9B83B77929D8863, _r, _ri)
end

function Global.N_0xf9c1681347c8bd15(object)
	return _in(0xF9C1681347C8BD15, object)
end

function Global.N_0xf9f2922717b819ec()
	return _in(0xF9F2922717B819EC, _r, _ri)
end

function Global.N_0xfa07759e6fddd7cf(p0, p1, p2, p3)
	return _in(0xFA07759E6FDDD7CF, p0, p1, p2, p3)
end

function Global.N_0xfa1e0e893d915215(toggle)
	return _in(0xFA1E0E893D915215, toggle)
end

function Global.N_0xfa2888e3833c8e96()
	return _in(0xFA2888E3833C8E96)
end

--- REMOVE_*
-- NativeDB Introduced: v1493
-- @param x :
-- @param y :
-- @param z :
function Global.N_0xfa83ca6776038f64(x, y, z)
	return _in(0xFA83CA6776038F64, x, y, z)
end

--- Another unknown label type...
-- GAMEPLAY::_FAA457EF263E8763(a_0, "Thumb_label");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f10, "Photo_label");
-- GAMEPLAY::_FAA457EF263E8763(a_0, "GXTlabel");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f21, "StringComp");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");
-- GAMEPLAY::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");
function Global.N_0xfaa457ef263e8763(name)
	return _in(0xFAA457EF263E8763, _i, _ts(name))
end

--- NativeDB Introduced: v1180
function Global.N_0xfac18e7356bd3210()
	return _in(0xFAC18E7356BD3210)
end

function Global.N_0xfac75988a7d078d3(player)
	return _in(0xFAC75988A7D078D3, player)
end

--- NativeDB Parameter 0: Hash p0
-- NativeDB Parameter 2: Hash p2
function Global.N_0xfae628f1e9adb239(p0, p1, p2)
	return _in(0xFAE628F1E9ADB239, p0, p1, p2)
end

function Global.N_0xfaf2a78061fd9ef4(p0, p1, p2, p3)
	return _in(0xFAF2A78061FD9EF4, p0, p1, p2, p3)
end

function Global.N_0xfb00ca71da386228()
	return _in(0xFB00CA71DA386228)
end

function Global.N_0xfb199266061f820a()
	return _in(0xFB199266061F820A, _r)
end

--- p0 is always 0. p1 is pointing to a global.
function Global.N_0xfb1f9381e80fa13f(p0, p1)
	return _in(0xFB1F9381E80FA13F, p0, _ii(p1) --[[ may be optional ]], _r, _ri)
end

function Global.N_0xfb680d403909dc70(p0, p1)
	return _in(0xFB680D403909DC70, p0, p1)
end

--- Toggles some stunt jump stuff.
function Global.N_0xfb80ab299d2ee1bd(toggle)
	return _in(0xFB80AB299D2EE1BD, toggle)
end

--- NativeDB Introduced: v1365
-- @param p0 :
function Global.N_0xfc481c641ebbd27d(p0)
	return _in(0xFC481C641EBBD27D, p0, _r, _ri)
end

function Global.N_0xfc4ee00a7b3bfb76(p0, p1, p2)
	return _in(0xFC4EE00A7B3BFB76, p0, p1, p2)
end

function Global.N_0xfcc228e07217fcac(p0)
	return _in(0xFCC228E07217FCAC, p0)
end

function Global.N_0xfd3151cd37ea2245(entity)
	return _in(0xFD3151CD37EA2245, entity)
end

function Global.N_0xfd325494792302d7(ped, toggle)
	return _in(0xFD325494792302D7, ped, toggle)
end
Global.SetTimeExclusiveDisplayTexture = Global.N_0xfd325494792302d7

function Global.N_0xfd75dabc0957bf33(p0)
	return _in(0xFD75DABC0957BF33, p0)
end

function Global.N_0xfe4c1d0d3b9cc17e(p0, p1)
	return _in(0xFE4C1D0D3B9CC17E, p0, p1, _r)
end

function Global.N_0xfec9a3b1820f3331(p0)
	return _in(0xFEC9A3B1820F3331, p0, _r)
end

function Global.N_0xfee4a5459472a9f8()
	return _in(0xFEE4A5459472A9F8)
end

--- Tune Forward... ?
function Global.N_0xff266d1d0eb1195d()
	return _in(0xFF266D1D0EB1195D)
end

function Global.N_0xff4803bc019852d9(p0, p1)
	return _in(0xFF4803BC019852D9, p0, p1)
end

function Global.N_0xff8f3a92b75ed67a()
	return _in(0xFF8F3A92B75ED67A, _r, _ri)
end

--- may be 0xBF21818E
-- related to: NETWORK_BAIL
-- NETWORK_BAIL_TRANSITION
-- NETWORK_JOIN_GROUP_ACTIVITY
-- NETWORK_JOIN_TRANSITION
-- NETWORK_LAUNCH_TRANSITION
-- NETWORK_SESSION_HOST
-- NETWORK_SESSION_HOST_CLOSED
-- NETWORK_SESSION_HOST_FRIENDS_ONLY
-- NETWORK_SESSION_HOST_SINGLE_PLAYER
-- NETWORK_SESSION_VOICE_LEAVE
function Global.N_0xffe1e5b792d92b34()
	return _in(0xFFE1E5B792D92B34, _r, _ri)
end

function Global.N_0xffee8fa29ab9a18e(player)
	return _in(0xFFEE8FA29AB9A18E, player)
end

--- NativeDB Introduced: v1493
-- @param p0 :
function Global.N_0xfffba1b1f7c0b6f4(p0)
	return _in(0xFFFBA1B1F7C0B6F4, p0)
end

--- p0 is pointer to a script array
function Global.NetGameserverBasketAddItem(quantity)
	return _in(0xF30980718C8ED876, _i, quantity, _r)
end
Global.N_0xf30980718c8ed876 = Global.NetGameserverBasketAddItem
Global.NetworkShopBasketAddItem = Global.NetGameserverBasketAddItem

--- p0 => unk3::_network_shop_basket_apply_server_data(Global_2590199[iParam0 /*76*/], &uVar6); => script array
function Global.NetGameserverBasketApplyServerData(p0, p1)
	return _in(0xE1A0450ED46A7812, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.N_0xe1a0450ed46a7812 = Global.NetGameserverBasketApplyServerData
Global.NetworkShopBasketApplyServerData = Global.NetGameserverBasketApplyServerData

--- NativeDB Introduced: v372
function Global.NetGameserverBasketDelete()
	return _in(0xFA336E7F40C0A0D0, _r)
end

function Global.NetGameserverBasketEnd()
	return _in(0xA65568121DF2EA26, _r)
end
Global.N_0xa65568121df2ea26 = Global.NetGameserverBasketEnd
Global.NetworkShopBasketEnd = Global.NetGameserverBasketEnd

--- NativeDB Return Type: BOOL
function Global.NetGameserverBasketIsFull()
	return _in(0x27F76CC6C55AD30E, _r, _ri)
end
Global.N_0x27f76cc6c55ad30e = Global.NetGameserverBasketIsFull
Global.NetworkShopBasketIsFull = Global.NetGameserverBasketIsFull

--- NativeDB Parameter 0: int* transactionId
-- NativeDB Parameter 1: Hash categoryHash
-- NativeDB Parameter 2: Hash actionHash
function Global.NetGameserverBasketStart(categoryHash, actionHash, flags)
	return _in(0x279F08B1A4B29B7E, _i, categoryHash, actionHash, flags, _r)
end
Global.NetworkShopBasketStart = Global.NetGameserverBasketStart

--- No longer works if you hook it as a stealth money method
-- Modes------------------
-- 1: Wallet
-- 2: Bank
-- 4: Bank
-- 8: Wallet
-- Only difference I noticed.
-- ```
-- ```
-- NativeDB Parameter 3: Hash actionTypeHash
function Global.NetGameserverBeginService(categoryHash, itemHash, actionTypeHash, value, flags)
	return _in(0x3C5FD37B5499582E, _i, _ch(categoryHash), _ch(itemHash), actionTypeHash, value, flags, _r)
end
Global.N_0x3c5fd37b5499582e = Global.NetGameserverBeginService
Global.NetworkShopBeginService = Global.NetGameserverBeginService

function Global.NetGameserverCatalogIsReady()
	return _in(0x3C4487461E9B0DCB, _r)
end
Global.N_0x3c4487461e9b0dcb = Global.NetGameserverCatalogIsReady

--- Belongs in UNK3, non-hashed version of 0x247F0F73A182EA0B
function Global.NetGameserverCatalogItemExists(name)
	return _in(0xBD4D7EAF8A30F637, _ts(name), _r)
end
Global.N_0xbd4d7eaf8a30f637 = Global.NetGameserverCatalogItemExists
Global.NetworkShopIsItemUnlocked = Global.NetGameserverCatalogItemExists
Global.NetworkShopDoesItemExist = Global.NetGameserverCatalogItemExists

--- ex.:
-- v_15 = sub_10cc8(VEHICLE::GET_VEHICLE_WHEEL_TYPE(a_2));
-- if (!MOBILE::_247F0F73A182EA0B(v_15)) {
-- return 1;
-- }
-- Belongs in UNK3, hashed version of 0xBD4D7EAF8A30F637
function Global.NetGameserverCatalogItemExistsHash(hash)
	return _in(0x247F0F73A182EA0B, _ch(hash), _r)
end
Global.N_0x247f0f73a182ea0b = Global.NetGameserverCatalogItemExistsHash
Global.NetworkShopIsItemUnlockedHash = Global.NetGameserverCatalogItemExistsHash
Global.NetworkShopDoesItemExistHash = Global.NetGameserverCatalogItemExistsHash

function Global.NetGameserverCheckoutStart(transactionId)
	return _in(0x39BE7CEA8D9CC8E6, transactionId, _r)
end
Global.N_0x39be7cea8d9cc8e6 = Global.NetGameserverCheckoutStart
Global.NetworkShopCheckoutStart = Global.NetGameserverCheckoutStart

--- NativeDB Parameter 2: Hash reason
function Global.NetGameserverDeleteCharacterSlot(slot, transfer, reason)
	return _in(0x51F1A8E48C3D2F6D, slot, transfer, reason, _r)
end
Global.N_0x51f1a8e48c3d2f6d = Global.NetGameserverDeleteCharacterSlot

function Global.NetGameserverDeleteCharacterSlotGetStatus()
	return _in(0x0A6D923DFFC9BD89, _r, _ri)
end
Global.N_0x0a6d923dffc9bd89 = Global.NetGameserverDeleteCharacterSlotGetStatus

--- NativeDB Return Type: BOOL
function Global.NetGameserverDeleteSetTelemetryNonceSeed()
	return _in(0x112CEF1615A1139F, _r, _ri)
end
Global.N_0x112cef1615a1139f = Global.NetGameserverDeleteSetTelemetryNonceSeed
Global.NetworkShopDeleteSetTelemetryNonceSeed = Global.NetGameserverDeleteSetTelemetryNonceSeed

--- Will cancel the transaction
function Global.NetGameserverEndService(transactionId)
	return _in(0xE2A99A9B524BEFFF, transactionId, _r)
end
Global.N_0xe2a99a9b524befff = Global.NetGameserverEndService
Global.NetworkShopEndService = Global.NetGameserverEndService
Global.NetworkShopTerminateService = Global.NetGameserverEndService

--- Note: only one of the arguments can be set to true at a time
function Global.NetGameserverGetBalance(inventory, playerbalance)
	return _in(0x35A1B3E1D1315CFA, inventory, playerbalance, _r)
end
Global.N_0x35a1b3e1d1315cfa = Global.NetGameserverGetBalance

--- NativeDB Parameter 0: int* state
function Global.NetGameserverGetCatalogState(state)
	return _in(0xCF38DAFBB49EDE5E, _ii(state) --[[ may be optional ]], _r)
end
Global.N_0xcf38dafbb49ede5e = Global.NetGameserverGetCatalogState

--- bool is always true in game scripts
function Global.NetGameserverGetPrice(itemHash, categoryHash, p2)
	return _in(0xC27009422FCCA88D, _ch(itemHash), _ch(categoryHash), p2, _r, _ri)
end
Global.NetworkShopGetPrice = Global.NetGameserverGetPrice

--- NativeDB Parameter 0: int* p0
function Global.NetGameserverGetTransactionManagerData()
	return _in(0x897433D292B44130, _i, _i --[[ actually bool ]], _r)
end
Global.N_0x897433d292b44130 = Global.NetGameserverGetTransactionManagerData

function Global.NetGameserverIsCatalogValid()
	return _in(0x2B949A1E6AEC8F6A, _r)
end
Global.N_0x2b949a1e6aec8f6a = Global.NetGameserverIsCatalogValid

function Global.NetGameserverIsSessionRefreshPending()
	return _in(0x810E8431C0614BF9, _r)
end
Global.N_0x810e8431c0614bf9 = Global.NetGameserverIsSessionRefreshPending
Global.NetworkShopGetTransactionsDisabled = Global.NetGameserverIsSessionRefreshPending

function Global.NetGameserverIsSessionValid(charSlot)
	return _in(0xB24F0944DA203D9E, charSlot, _r)
end
Global.N_0xb24f0944da203d9e = Global.NetGameserverIsSessionValid
Global.NetworkShopGetTransactionsEnabledForCharacter = Global.NetGameserverIsSessionValid

function Global.NetGameserverSessionApplyReceivedData(charSlot)
	return _in(0x2F41D51BA3BCD1F1, charSlot, _r)
end
Global.N_0x2f41d51ba3bcd1f1 = Global.NetGameserverSessionApplyReceivedData
Global.NetworkShopSessionApplyReceivedData = Global.NetGameserverSessionApplyReceivedData

function Global.NetGameserverSetTelemetryNonceSeed(p0)
	return _in(0x9507D4271988E1AE, p0, _r)
end
Global.N_0x9507d4271988e1ae = Global.NetGameserverSetTelemetryNonceSeed
Global.NetworkShopSetTelemetryNonceSeed = Global.NetGameserverSetTelemetryNonceSeed

function Global.NetGameserverStartSession(charSlot)
	return _in(0xA135AC892A58FC07, charSlot, _r)
end
Global.N_0xa135ac892a58fc07 = Global.NetGameserverStartSession
Global.NetworkShopStartSession = Global.NetGameserverStartSession

--- used in atm_trigger script.
-- usage:
-- int iVar0;STATS::STAT_GET_INT(GAMEPLAY::GET_HASH_KEY("mpply_last_mp_char"), &iVar0, -1);
-- UNK3::_NETWORK_TRANSFER_WALLET_TO_BANK(iVar0, amount);
-- used to deposit money into bank from wallet, shows up in transaction log.
function Global.NetGameserverTransferBankToWallet(charSlot, amount)
	return _in(0xD47A2C1BA117471D, charSlot, amount, _r)
end
Global.N_0xd47a2c1ba117471d = Global.NetGameserverTransferBankToWallet
Global.NetworkTransferBankToWallet = Global.NetGameserverTransferBankToWallet

--- Same as 0x350AA5EBC03D3BD2
function Global.NetGameserverTransferCashGetStatus()
	return _in(0x23789E777D14CE44, _r, _ri)
end
Global.N_0x23789e777d14ce44 = Global.NetGameserverTransferCashGetStatus

--- Same as 0x23789E777D14CE44
function Global.NetGameserverTransferCashGetStatus_2()
	return _in(0x350AA5EBC03D3BD2, _r, _ri)
end
Global.N_0x350aa5ebc03d3bd2 = Global.NetGameserverTransferCashGetStatus_2

--- Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
function Global.NetGameserverTransferCashSetTelemetryNonceSeed()
	return _in(0x498C1E05CE5F7877, _r)
end
Global.N_0x498c1e05ce5f7877 = Global.NetGameserverTransferCashSetTelemetryNonceSeed
Global.NetworkShopCashTransferSetTelemetryNonceSeed = Global.NetGameserverTransferCashSetTelemetryNonceSeed

--- used in atm_trigger script.
-- usage:
-- int iVar0; STATS::STAT_GET_INT(GAMEPLAY::GET_HASH_KEY("mpply_last_mp_char"), &iVar0, -1);
-- UNK3::_NETWORK_TRANSFER_BANK_TO_WALLET(iVar0, amount);
-- used to withdraw money from bank into wallet, shows up in transaction log.
function Global.NetGameserverTransferWalletToBank(charSlot, amount)
	return _in(0xC2F7FE5309181C7D, charSlot, amount, _r)
end
Global.N_0xc2f7fe5309181c7d = Global.NetGameserverTransferWalletToBank
Global.NetworkTransferWalletToBank = Global.NetGameserverTransferWalletToBank

--- NativeDB Introduced: v1290
function Global.NetGameserverUseServerTransactions()
	return _in(0x7D2708796355B20B, _r)
end

--- gets the entity id of a network id
function Global.NetToEnt(netHandle)
	return _in(0xBFFEAB45A9A9094A, netHandle, _r, _ri)
end

--- gets the object id of a network id
function Global.NetToObj(netHandle)
	return _in(0xD8515F5FEA14CB3F, netHandle, _r, _ri)
end

--- gets the ped id of a network id
function Global.NetToPed(netHandle)
	return _in(0xBDCD95FC216A8B3E, netHandle, _r, _ri)
end

function Global.NetToVeh(netHandle)
	return _in(0x367B936610BA360C, netHandle, _r, _ri)
end

--- NETWORK_RE*
-- Triggers a CEventNetworkInviteConfirmed event
function Global.NetworkAcceptInvite()
	return _in(0x62A0296C1BB1CEB3, _r)
end
Global.N_0x62a0296c1bb1ceb3 = Global.NetworkAcceptInvite

function Global.NetworkAcceptPresenceInvite(p0)
	return _in(0xFA91550DF9318B22, p0, _r)
end

--- Some of the tunable contexts used in the PC scripts:
-- - "BASE_GLOBALS"
-- - "MP_GLOBAL"
-- and some of the tunable names used in the PC scripts:
-- - "XP_MULTIPLIER"
-- - "CASH_MULTIPLIER"
-- - "ARMOUR_REWARD_GIFT"
-- - "TOGGLE_CREATORS_OFF"
-- - "MULTIPLAYER_DISABLED"
function Global.NetworkAccessTunableBool(tunableContext, tunableName)
	return _in(0xAA6A47A573ABB75A, _ts(tunableContext), _ts(tunableName), _r)
end
Global.N_0xaa6a47a573abb75a = Global.NetworkAccessTunableBool

function Global.NetworkAccessTunableBoolHash(tunableContext, tunableName)
	return _in(0xEA16B69D93D71A45, _ch(tunableContext), _ch(tunableName), _r)
end
Global.N_0xea16b69d93d71a45 = Global.NetworkAccessTunableBoolHash
Global.NetworkAccessTunableBoolHash = Global.NetworkAccessTunableBoolHash

--- Some of the tunable contexts used in the PC scripts:
-- - "BASE_GLOBALS"
-- - "MP_GLOBAL"
-- - "MP_FM_RACES"
-- - "MP_FM_RACES_CAR"
-- - "MP_FM_RACES_SEA"
-- - "MP_FM_RACES_CAR"
-- - "MP_FM_RACES_AIR"
-- - "MP_FM_BASEJUMP"
-- - "MP_FM_RACES_CYCLE"
-- - "MP_FM_RACES_BIKE"
-- - "MP_FM_MISSIONS"
-- - "MP_FM_CONTACT"
-- - "MP_FM_RANDOM"
-- - "MP_FM_VERSUS"
-- - "MP_FM_LTS"
-- - "MP_FM_CAPTURE"
-- - "MP_FM_DM"
-- - "MP_FM_SURVIVAL"
-- - "MP_FM_GANG_ATTACK"
-- - "MP_FM_BASEJUMP"
-- - "MP_CNC_TEAM_COP"
-- - "MP_CNC_TEAM_VAGOS"
-- - "MP_CNC_TEAM_LOST"
-- and some of the tunable names used in the PC scripts:
-- - "XP_MULTIPLIER"
-- - "CASH_MULTIPLIER"
-- - "ARMOUR_REWARD_GIFT"
-- - "TOGGLE_CREATORS_OFF"
function Global.NetworkAccessTunableFloat(tunableContext, tunableName, value)
	return _in(0xE5608CA7BC163A5F, _ts(tunableContext), _ts(tunableName), _fi(value) --[[ may be optional ]], _r)
end
Global.N_0xe5608ca7bc163a5f = Global.NetworkAccessTunableFloat

function Global.NetworkAccessTunableFloatHash(tunableContext, tunableName, value)
	return _in(0x972BC203BBC4C4D5, _ch(tunableContext), _ch(tunableName), _fi(value) --[[ may be optional ]], _r)
end
Global.N_0x972bc203bbc4c4d5 = Global.NetworkAccessTunableFloatHash
Global.NetworkAccessTunableFloatHash = Global.NetworkAccessTunableFloatHash

--- Some of the tunable contexts used in the PC scripts:
-- - "MP_FM_RACES"
-- - "MP_FM_RACES_CAR"
-- - "MP_FM_RACES_SEA"
-- - "MP_FM_RACES_CAR"
-- - "MP_FM_RACES_AIR"
-- - "MP_FM_BASEJUMP"
-- - "MP_FM_RACES_CYCLE"
-- - "MP_FM_RACES_BIKE"
-- - "MP_FM_MISSIONS"
-- - "MP_FM_CONTACT"
-- - "MP_FM_RANDOM"
-- - "MP_FM_VERSUS"
-- - "MP_FM_LTS"
-- - "MP_FM_CAPTURE"
-- - "MP_FM_DM"
-- - "MP_FM_SURVIVAL"
-- - "MP_FM_GANG_ATTACK"
-- - "MP_FM_BASEJUMP"
-- - "BASE_GLOBALS"
-- - "MP_GLOBAL"
-- and some of the tunable names used in the PC scripts:
-- - "XP_MULTIPLIER"
-- - "CASH_MULTIPLIER"
-- - "ARMOUR_REWARD_GIFT"
-- - "TOGGLE_CREATORS_OFF"
function Global.NetworkAccessTunableInt(tunableContext, tunableName, value)
	return _in(0x8BE1146DFD5D4468, _ts(tunableContext), _ts(tunableName), _ii(value) --[[ may be optional ]], _r)
end
Global.N_0x8be1146dfd5d4468 = Global.NetworkAccessTunableInt

function Global.NetworkAccessTunableIntHash(tunableContext, tunableName, value)
	return _in(0x40FCE03E50E8DBE8, _ch(tunableContext), _ch(tunableName), _ii(value) --[[ may be optional ]], _r)
end
Global.N_0x40fce03e50e8dbe8 = Global.NetworkAccessTunableIntHash
Global.NetworkAccessTunableIntHash = Global.NetworkAccessTunableIntHash

function Global.NetworkActionFollowInvite()
	return _in(0xC88156EBB786F8D5, _r, _ri)
end
Global.N_0xc88156ebb786f8d5 = Global.NetworkActionFollowInvite

function Global.NetworkAddEntityAngledArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x376C6375BA60293A, p0, p1, p2, p3, p4, p5, p6, _r, _ri)
end
Global.N_0x376c6375ba60293a = Global.NetworkAddEntityAngledArea
Global.NetworkAddEntityAngledArea = Global.NetworkAddEntityAngledArea

function Global.NetworkAddEntityArea(p0, p1, p2, p3, p4, p5)
	return _in(0x494C8FB299290269, p0, p1, p2, p3, p4, p5, _r, _ri)
end

function Global.NetworkAddEntityDisplayedBoundaries(p0, p1, p2, p3, p4, p5)
	return _in(0x25B99872D588A101, p0, p1, p2, p3, p4, p5, _r, _ri)
end
Global.N_0x25b99872d588a101 = Global.NetworkAddEntityDisplayedBoundaries

function Global.NetworkAddEntityToSynchronisedScene(entity, netScene, animDict, animName, speed, speedMulitiplier, flag)
	return _in(0xF2404D68CBC855FA, entity, netScene, _ts(animDict), _ts(animName), speed, speedMulitiplier, flag)
end

--- ..
function Global.NetworkAddFollowers(p1)
	return _in(0x236406F60CF216D6, _i, p1)
end
Global.N_0x236406f60cf216d6 = Global.NetworkAddFollowers

function Global.NetworkAddFriend(message)
	return _in(0x8E02D73914064223, _i, _ts(message), _r)
end

function Global.NetworkAddPedToSynchronisedScene(ped, netScene, animDict, animnName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, p9)
	return _in(0x742A637471BCECD9, ped, netScene, _ts(animDict), _ts(animnName), blendInSpeed, blendOutSpeed, duration, flag, playbackRate, p9)
end

function Global.NetworkAllocateTunablesRegistrationDataMap()
	return _in(0xFAFC23AEE23868DB, _r)
end
Global.N_0xfafc23aee23868db = Global.NetworkAllocateTunablesRegistrationDataMap

function Global.NetworkAmIBlockedByGamer(networkHandle)
	return _in(0x15337C7C268A27B2, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkAmIBlockedByPlayer(player)
	return _in(0x87F395D957D4353D, player, _r)
end

function Global.NetworkAmIMutedByGamer(networkHandle)
	return _in(0xDF02A2C93F1F26DA, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkAmIMutedByPlayer(player)
	return _in(0x9D6981DFC91A8604, player, _r)
end

--- Sadly I thought this copied their tattoos, but it just seems to copy their 'blend data'. E.G. skin tone/color, fat/skinny face, etc.
function Global.NetworkApplyCachedPlayerHeadBlendData(ped, player)
	return _in(0x99B72C7ABDE5C910, ped, player, _r)
end
Global.N_0x99b72c7abde5c910 = Global.NetworkApplyCachedPlayerHeadBlendData
Global.NetworkCopyPedBlendData = Global.NetworkApplyCachedPlayerHeadBlendData

function Global.NetworkApplyPedScarData(ped, p1)
	return _in(0xE66C690248F11150, ped, p1)
end
Global.N_0xe66c690248f11150 = Global.NetworkApplyPedScarData

function Global.NetworkApplyTransitionParameter(p0, p1)
	return _in(0x521638ADA1BA0D18, p0, p1)
end
Global.N_0x521638ada1ba0d18 = Global.NetworkApplyTransitionParameter

--- example from scripts:
-- unk_0xE0C28DB5(0,Global_2398291.imm_726,1);
-- that global is for ps3/xbox not pc
-- no idea what this does does
function Global.NetworkApplyTransitionParameterString(p0, string, p2)
	return _in(0xEBEFC2E77084F599, p0, _ts(string), p2)
end
Global.N_0xebefc2e77084f599 = Global.NetworkApplyTransitionParameterString

--- NativeDB Return Type: void
function Global.NetworkApplyVoiceProximityOverride(x, y, z)
	return _in(0xDBD2056652689917, x, y, z, _r)
end
Global.IsNetworkVehicleBeenDamagedByAnyObject = Global.NetworkApplyVoiceProximityOverride

function Global.NetworkAreHandlesTheSame()
	return _in(0x57DBA049E110F217, _i, _i, _r)
end

function Global.NetworkAreTransitionDetailsValid(p0)
	return _in(0x2615AA2A695930C1, p0, _r)
end
Global.N_0x2615aa2a695930c1 = Global.NetworkAreTransitionDetailsValid

function Global.NetworkAttachSynchronisedSceneToEntity(netScene, entity, bone)
	return _in(0x478DCBD2A98B705A, netScene, entity, bone)
end

--- This has arguments.. in PC scripts.
-- ```
-- ```
-- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int p2
function Global.NetworkBail()
	return _in(0x95914459A87EBA28)
end

function Global.NetworkBailTransition()
	return _in(0xEAA572036990CD1B)
end

function Global.NetworkBlockInvites(toggle)
	return _in(0x34F9E9049454A7A0, toggle)
end

function Global.NetworkBlockInvites_2(toggle)
	return _in(0xCFEB8AF24FC1D0BB, toggle)
end
Global.N_0xcfeb8af24fc1d0bb = Global.NetworkBlockInvites_2

function Global.NetworkBlockKickedPlayers(p0)
	return _in(0x6B07B9CE4D390375, p0)
end
Global.N_0x6b07b9ce4d390375 = Global.NetworkBlockKickedPlayers

--- p1 = 0 (always)
-- p2 = 1 (always)
function Global.NetworkBuyAirstrike(cost, p1, p2)
	return _in(0x763B4BD305338F19, cost, p1, p2)
end

--- NativeDB Introduced: v323
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkBuyBackupGang(p0, p1, p2, p3)
	return _in(0xA3EDDAA42411D3B9, p0, p1, p2, p3)
end

--- p1 is just an assumption. p2 was false and p3 was true.
function Global.NetworkBuyBounty(amount, victim, p2, p3)
	return _in(0x7B718E197453F2D9, amount, victim, p2, p3)
end

--- NativeDB Parameter 2: Hash p2
function Global.NetworkBuyContraband(p0, p1, p2, p3, p4)
	return _in(0x30FD873ECE50E9F6, p0, p1, p2, p3, p4)
end
Global.N_0x30fd873ece50e9f6 = Global.NetworkBuyContraband

--- The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
-- The last 3 parameters are,
-- 2,0,1 in the am_ferriswheel.c
-- 1,0,1 in the am_rollercoaster.c
function Global.NetworkBuyFairgroundRide(amountSpent, p1, p2, p3)
	return _in(0x8A7B3952DD64D2B5, amountSpent, p1, p2, p3)
end
Global.N_0x8a7b3952dd64d2b5 = Global.NetworkBuyFairgroundRide

function Global.NetworkBuyHealthcare(cost, p1, p2)
	return _in(0xD9B067E55253E3DD, cost, p1, p2)
end

--- p1 = 0 (always)
-- p2 = 1 (always)
function Global.NetworkBuyHeliStrike(cost, p1, p2)
	return _in(0x81AA4610E3FD3A69, cost, p1, p2)
end

function Global.NetworkBuyItem(amount, item, p2, p3, p4, item_name, p6, p7, p8, p9)
	return _in(0xF0077C797F66A355, amount, _ch(item), p2, p3, p4, _ts(item_name), p6, p7, p8, p9)
end

--- NativeDB Introduced: v323
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkBuyLotteryTicket(p0, p1, p2, p3)
	return _in(0xD987F2489969668C, p0, p1, p2, p3)
end

--- NativeDB Parameter 0: int propertyCost
function Global.NetworkBuyProperty(propertyCost, propertyName, p2, p3)
	return _in(0x650A08A280870AF6, propertyCost, _ch(propertyName), p2, p3)
end

--- NativeDB Introduced: v323
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.NetworkBuySmokes(p0, p1, p2)
	return _in(0x75AF80E61248EEBD, p0, p1, p2)
end

function Global.NetworkCacheLocalPlayerHeadBlendData()
	return _in(0xBD0BE0BFC927EAC1)
end
Global.N_0xbd0be0bfc927eac1 = Global.NetworkCacheLocalPlayerHeadBlendData

--- 11 - Need to download tunables.
-- 12 - Need to download background script.
-- Returns 1 if the multiplayer is loaded, otherwhise 0.
function Global.NetworkCanAccessMultiplayer(loadingState)
	return _in(0xAF50DA1A3F8B1BA4, _ii(loadingState) --[[ may be optional ]], _r)
end
Global.N_0xaf50da1a3f8b1ba4 = Global.NetworkCanAccessMultiplayer

function Global.NetworkCanBail()
	return _in(0x580CE4438479CC61, _r)
end

function Global.NetworkCanBet(amount)
	return _in(0x3A54E33660DED67F, amount, _r)
end
Global.N_0x3a54e33660ded67f = Global.NetworkCanBet

--- NativeDB Introduced: v323
-- @param cost :
function Global.NetworkCanBuyLotteryTicket(cost)
	return _in(0xC62DD18375C99130, cost, _r)
end

function Global.NetworkCanCommunicateWithGamer(networkHandle)
	return _in(0xA150A4F065806B1F, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
-- NETWORK_CAN_*
function Global.NetworkCanCommunicateWithGamer_2(networkHandle)
	return _in(0x8F5D1AD832AEB06C, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x8f5d1ad832aeb06c = Global.NetworkCanCommunicateWithGamer_2

function Global.NetworkCanEnterMultiplayer()
	return _in(0x7E782A910C362C25, _r)
end

function Global.NetworkCanGamerPlayMultiplayerWithMe(networkHandle)
	return _in(0x135F9B7B7ADD2185, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x135f9b7b7add2185 = Global.NetworkCanGamerPlayMultiplayerWithMe

function Global.NetworkCanPlayMultiplayerWithGamer(networkHandle)
	return _in(0x07DD29D5E22763F1, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x07dd29d5e22763f1 = Global.NetworkCanPlayMultiplayerWithGamer

function Global.NetworkCanReceivePlayerCash(p0, p1, p2, p3)
	return _in(0x5D17BE59D2123284, p0, p1, p2, p3, _r)
end

function Global.NetworkCanSessionEnd()
	return _in(0x4EEBC3694E49C572, _r)
end

function Global.NetworkCanSetWaypoint()
	return _in(0xC927EC229934AF60, _r)
end

--- NETWORK_CAN_R??? or NETWORK_CAN_S???
function Global.NetworkCanShareJobCash()
	return _in(0x1C2473301B1C66BA, _r)
end
Global.N_0x1c2473301b1c66ba = Global.NetworkCanShareJobCash

--- NativeDB Added Parameter 6: Any p5
function Global.NetworkCanSpendMoney(p0, p1, p2, p3, p4)
	return _in(0xAB3CAA6B422164DA, p0, p1, p2, p3, p4, _r)
end
Global.N_0xab3caa6b422164da = Global.NetworkCanSpendMoney

--- NETWORK_CAN_R??? or NETWORK_CAN_S???
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
function Global.NetworkCanSpendMoney_2(p0, p1, p2, p3, p5)
	return _in(0x7303E27CC6532080, p0, p1, p2, p3, _i, p5, _r)
end
Global.N_0x7303e27cc6532080 = Global.NetworkCanSpendMoney_2

function Global.NetworkCanViewGamerUserContent(networkHandle)
	return _in(0xB57A49545BA53CE7, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0xb57a49545ba53ce7 = Global.NetworkCanViewGamerUserContent

function Global.NetworkCancelRespawnSearch()
	return _in(0xFB8F2A6F3DF08CBE)
end
Global.N_0xfb8f2a6f3df08cbe = Global.NetworkCancelRespawnSearch

function Global.NetworkChangeTransitionSlots(p0, p1)
	return _in(0xEEEDA5E6D7080987, p0, p1)
end
Global.N_0xeeeda5e6d7080987 = Global.NetworkChangeTransitionSlots

function Global.NetworkCheckDataManagerSucceededForHandle(p0, p1)
	return _in(0x44B37CDCAE765AAE, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.N_0x44b37cdcae765aae = Global.NetworkCheckDataManagerSucceededForHandle

--- Only documented...
function Global.NetworkClanAnimation(animDict, animName)
	return _in(0x729E3401F0430686, _ts(animDict), _ts(animName), _r)
end
Global.N_0x729e3401f0430686 = Global.NetworkClanAnimation

function Global.NetworkClanDownloadMembership(networkHandle)
	return _in(0xA989044E70010ABE, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkClanDownloadMembershipPending(p0)
	return _in(0x5B9E023DC6EBEDC0, _ii(p0) --[[ may be optional ]], _r)
end

--- NativeDB Parameter 1: char* txdName
function Global.NetworkClanGetEmblemTxdName()
	return _in(0x5835D9CD92E83184, _i, _i, _r)
end
Global.N_0x5835d9cd92e83184 = Global.NetworkClanGetEmblemTxdName
Global.NetworkGetPlayerCrewEmblemTxdName = Global.NetworkClanGetEmblemTxdName

--- NETWORK_CLAN_*
function Global.NetworkClanGetLocalMembershipsCount()
	return _in(0x1F471B79ACC90BEF, _r, _ri)
end
Global.N_0x1f471b79acc90bef = Global.NetworkClanGetLocalMembershipsCount
Global.GetNumMembershipDesc = Global.NetworkClanGetLocalMembershipsCount
Global.NetworkClanGetNumMembershipDesc = Global.NetworkClanGetLocalMembershipsCount

--- BOOL DEBUG_MEMBRESHIP(int Param)
-- {
-- int membership;
-- networkHandleMgr handle;
-- NETWORK_HANDLE_FROM_PLAYER(iSelectedPlayer, &handle.netHandle, 13);
-- if (!_NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING())
-- {
-- if (NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(&Param))
-- {
-- if (NETWORK_CLAN_GET_MEMBERSHIP_COUNT(&Param) > 0)
-- {
-- if (NETWORK_CLAN_GET_MEMBERSHIP_VALID(&Param, 0))
-- {
-- if (NETWORK_CLAN_GET_MEMBERSHIP(&Param, &membership, -1))
-- {
-- _0xF633805A(&membership, 35, &handle.netHandle);
-- }
-- }
-- }
-- }
-- }
-- else
-- {
-- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(&handle.netHandle);
-- }
-- }
function Global.NetworkClanGetMembership(p2)
	return _in(0xC8BC2011F67B3411, _i, _i, p2, _r)
end

function Global.NetworkClanGetMembershipCount(p0)
	return _in(0xAAB11F6C4ADBC2C1, _ii(p0) --[[ may be optional ]], _r, _ri)
end

--- networkMembershipMgr memShip;
-- int maxMemship = _GET_NUM_MEMBERSHIP_DESC();
-- for (int i = 0; i < maxMemship; i++)
-- {
-- NETWORK_CLAN_GET_MEMBERSHIP_DESC(&memShip.memHandle, i);
-- }
function Global.NetworkClanGetMembershipDesc(p1)
	return _in(0x48DE78AF2C8885B8, _i, p1, _r)
end

function Global.NetworkClanGetMembershipValid(p1)
	return _in(0x48A59CF88D43DF0E, _i, p1, _r)
end

--- bufferSize is 35 in the scripts.
-- ```
-- ```
-- NativeDB Parameter 2: char* formattedTag
function Global.NetworkClanGetUiFormattedTag(bufferSize)
	return _in(0xF45352426FF3A4F0, _i, bufferSize, _i)
end
Global.N_0xf45352426ff3a4f0 = Global.NetworkClanGetUiFormattedTag

function Global.NetworkClanIsEmblemReady(p0, p1)
	return _in(0xA134777FF7F33331, p0, _ii(p1) --[[ may be optional ]], _r)
end
Global.N_0xa134777ff7f33331 = Global.NetworkClanIsEmblemReady

--- bufferSize is 35 in the scripts.
function Global.NetworkClanIsRockstarClan(bufferSize)
	return _in(0x7543BB439F63792B, _i, bufferSize, _r)
end
Global.N_0x7543bb439f63792b = Global.NetworkClanIsRockstarClan

function Global.NetworkClanJoin(clanDesc)
	return _in(0x9FAAA4F4FC71F87F, clanDesc, _r)
end

--- bufferSize is 35 in the scripts.
-- bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.
-- the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
-- pastebin.com/cSZniHak
function Global.NetworkClanPlayerGetDesc(bufferSize)
	return _in(0xEEE6EACBE8874FBA, _i, bufferSize, _i, _r)
end

function Global.NetworkClanPlayerIsActive(networkHandle)
	return _in(0xB124B57F571D8F18, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkClanReleaseEmblem(p0)
	return _in(0x113E6E3E50E286B0, p0)
end
Global.N_0x113e6e3e50e286b0 = Global.NetworkClanReleaseEmblem

function Global.NetworkClanRemoteMembershipsAreInCache(p0)
	return _in(0xBB6E6FEE99D866B2, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkClanRequestEmblem(p0)
	return _in(0x13518FF1C6B28938, p0, _r)
end
Global.N_0x13518ff1c6b28938 = Global.NetworkClanRequestEmblem

function Global.NetworkClanServiceIsValid()
	return _in(0x579CCED0265D4896, _r)
end
Global.NetworkPlayerIsInClan = Global.NetworkClanServiceIsValid

function Global.NetworkClearCharacterWallet(characterSlot)
	return _in(0xA921DED15FDF28F5, characterSlot)
end
Global.N_0xa921ded15fdf28f5 = Global.NetworkClearCharacterWallet

function Global.NetworkClearClockTimeOverride()
	return _in(0xD972DF67326F966E)
end
Global.N_0xd972df67326f966e = Global.NetworkClearClockTimeOverride

function Global.NetworkClearFollowInvite()
	return _in(0x439BFDE3CD0610F6, _r, _ri)
end
Global.N_0x439bfde3cd0610f6 = Global.NetworkClearFollowInvite

function Global.NetworkClearFollowers()
	return _in(0x058F43EC59A8631A)
end
Global.N_0x058f43ec59a8631a = Global.NetworkClearFollowers

function Global.NetworkClearFoundGamers()
	return _in(0x6D14CCEE1B40381A)
end

function Global.NetworkClearGetGamerStatus()
	return _in(0x86E0660E4F5C956D)
end
Global.N_0x86e0660e4f5c956d = Global.NetworkClearGetGamerStatus

function Global.NetworkClearPropertyId()
	return _in(0xC2B82527CA77053E)
end
Global.N_0xc2b82527ca77053e = Global.NetworkClearPropertyId

function Global.NetworkClearTransitionCreatorHandle()
	return _in(0xFB3272229A82C759)
end

function Global.NetworkClearVoiceChannel()
	return _in(0xE036A705F989E049)
end
Global.N_0xe036a705f989e049 = Global.NetworkClearVoiceChannel

function Global.NetworkClearVoiceProximityOverride()
	return _in(0xF03755696450470C)
end
Global.N_0xf03755696450470c = Global.NetworkClearVoiceProximityOverride

function Global.NetworkCloseTransitionMatchmaking()
	return _in(0x43F4DBA69710E01E)
end
Global.N_0x43f4dba69710e01e = Global.NetworkCloseTransitionMatchmaking

function Global.NetworkConcealEntity(entity, toggle)
	return _in(0x1632BE0AC1E62876, entity, toggle)
end

--- This is what R\* uses to hide players in MP interiors.
function Global.NetworkConcealPlayer(player, toggle, p2)
	return _in(0xBBDF066252829606, player, toggle, p2)
end

--- netScene to scene
function Global.NetworkConvertSynchronisedSceneToSynchronizedScene(netScene)
	return _in(0x02C40BF885C567B6, netScene, _r, _ri)
end
Global.N_0x02c40bf885c567b6 = Global.NetworkConvertSynchronisedSceneToSynchronizedScene
Global.NetworkUnlinkNetworkedSynchronisedScene = Global.NetworkConvertSynchronisedSceneToSynchronizedScene

function Global.NetworkCreateSynchronisedScene(x, y, z, xRot, yRot, zRot, rotationOrder, useOcclusionPortal, looped, p9, animTime, p11)
	return _in(0x7CD6BC4C2BBDD526, x, y, z, xRot, yRot, zRot, rotationOrder, useOcclusionPortal, looped, p9, animTime, p11, _r, _ri)
end

--- NativeDB Introduced: v323
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
function Global.NetworkDeductCash(amount, p1, p2, p3, p4, p5)
	return _in(0x18B7AE224B087E26, amount, _ts(p1), _ts(p2), p3, p4, p5)
end

--- Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
function Global.NetworkDeleteCharacter(characterSlot, p1, p2)
	return _in(0x05A50AF38947EB8D, characterSlot, p1, p2)
end

--- I did this and I didn't see anything happening
-- int pindex;
-- for (int i = 0; i < 32; i++)
-- {
-- if (NETWORK_IS_PARTICIPANT_ACTIVE(INT_TO_PARTICIPANTINDEX(i)))
-- {
-- pindex = NETWORK_GET_PLAYER_INDEX(INT_TO_PARTICIPANTINDEX(i));
-- NETWORK_DISABLE_INVINCIBLE_FLASHING(pindex, 1);
-- }
-- }
function Global.NetworkDisableInvincibleFlashing(player, toggle)
	return _in(0x9DD368BF06983221, player, toggle)
end
Global.N_0x9dd368bf06983221 = Global.NetworkDisableInvincibleFlashing

function Global.NetworkDisableProximityMigration(netID)
	return _in(0x407091CF6037118E, netID)
end
Global.N_0x407091cf6037118e = Global.NetworkDisableProximityMigration

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.NetworkDoTransitionQuickmatch(p0, p1, p2, p3)
	return _in(0x71FB0EBCD4915D56, p0, p1, p2, p3, _r)
end
Global.N_0x71fb0ebcd4915d56 = Global.NetworkDoTransitionQuickmatch

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.NetworkDoTransitionQuickmatchAsync(p0, p1, p2, p3)
	return _in(0xA091A5E44F0072E5, p0, p1, p2, p3, _r)
end
Global.N_0xa091a5e44f0072e5 = Global.NetworkDoTransitionQuickmatchAsync

--- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function Global.NetworkDoTransitionQuickmatchWithGroup(p0, p1, p2, p3, p5)
	return _in(0x9C4AB58491FDC98A, p0, p1, p2, p3, _i, p5, _r)
end

--- p2 is true 3/4 of the occurrences I found.
-- 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
function Global.NetworkDoTransitionToFreemode(p1, p2, players, p4)
	return _in(0x3AAD8B2FCA1E289F, _i, p1, p2, players, p4, _r)
end

function Global.NetworkDoTransitionToGame(p0, maxPlayers)
	return _in(0x3E9BB38102A589B0, p0, maxPlayers, _r)
end

function Global.NetworkDoTransitionToNewFreemode(players, p3, p4, p5)
	return _in(0x9E80A5BA8109F974, _i, _i, players, p3, p4, p5, _r)
end

function Global.NetworkDoTransitionToNewGame(p0, maxPlayers, p2)
	return _in(0x4665F51EFED00034, p0, maxPlayers, p2, _r)
end

function Global.NetworkDoesEntityExistWithNetworkId(entity)
	return _in(0x18A47D074708FD68, entity, _r)
end

function Global.NetworkDoesNetworkIdExist(netID)
	return _in(0x38CE16C96BD11344, netID, _r)
end

--- Some of the tunable contexts used in the PC scripts:
-- - "MP_FM_RACES"
-- - "MP_FM_RACES_CAR"
-- - "MP_FM_RACES_SEA"
-- - "MP_FM_RACES_CAR"
-- - "MP_FM_RACES_AIR"
-- - "MP_FM_BASEJUMP"
-- - "MP_FM_RACES_CYCLE"
-- - "MP_FM_RACES_BIKE"
-- - "MP_FM_MISSIONS"
-- - "MP_FM_CONTACT"
-- - "MP_FM_RANDOM"
-- - "MP_FM_VERSUS"
-- - "MP_FM_LTS"
-- - "MP_FM_CAPTURE"
-- - "MP_FM_DM"
-- - "MP_FM_SURVIVAL"
-- - "MP_FM_GANG_ATTACK"
-- - "MP_FM_BASEJUMP"
-- - "BASE_GLOBALS"
-- - "MP_GLOBAL"
-- and some of the tunable names used in the PC scripts:
-- - "XP_MULTIPLIER"
-- - "CASH_MULTIPLIER"
-- - "ARMOUR_REWARD_GIFT"
-- - "TOGGLE_CREATORS_OFF"
function Global.NetworkDoesTunableExist(tunableContext, tunableName)
	return _in(0x85E5F8B9B898B20A, _ts(tunableContext), _ts(tunableName), _r)
end

function Global.NetworkDoesTunableExistHash(tunableContext, tunableName)
	return _in(0xE4E53E1419D81127, _ch(tunableContext), _ch(tunableName), _r)
end
Global.N_0xe4e53e1419d81127 = Global.NetworkDoesTunableExistHash
Global.NetworkDoesTunableExistHash = Global.NetworkDoesTunableExistHash

--- DSPORT
function Global.NetworkEarnFromAiTargetKill(p0, p1)
	return _in(0x515B4A22E4D3C6D7, p0, p1)
end
Global.N_0x515b4a22e4d3c6d7 = Global.NetworkEarnFromAiTargetKill

--- Example for p1: "AM_DISTRACT_COPS"
function Global.NetworkEarnFromAmbientJob(p0, p1, p2)
	return _in(0xFB6DB092FBAE29E6, p0, _ts(p1), _ii(p2) --[[ may be optional ]])
end
Global.N_0xfb6db092fbae29e6 = Global.NetworkEarnFromAmbientJob
Global.NetworkEarnFromAmbientJob = Global.NetworkEarnFromAmbientJob

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromArenaCareerProgression(amount, p1)
	return _in(0x0F99F70C61F14619, amount, p1)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromArenaSkillLevelProgression(amount, p1)
	return _in(0xE08256F972C7BB2C, amount, p1)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkEarnFromArenaWar(amount, p1, p2, p3)
	return _in(0x631F1CB8FB4130AA, amount, p1, p2, p3)
end

--- For the money bags that drop a max of $40,000. Often called 40k bags.
-- Most likely NETWORK_EARN_FROM_ROB***
-- MONEY_EARN_JOBS
function Global.NetworkEarnFromArmourTruck(amount)
	return _in(0xF514621E8EA463D0, amount)
end
Global.N_0xf514621e8ea463d0 = Global.NetworkEarnFromArmourTruck

--- NativeDB Introduced: v1604
-- @param amount :
function Global.NetworkEarnFromAssassinateTargetKilled(amount)
	return _in(0xFA700D8A9905F78A, amount)
end

--- NativeDB Introduced: v1604
-- @param amount :
function Global.NetworkEarnFromAssassinateTargetKilled_2(amount)
	return _in(0x5E7AE8AABE8B7C0D, amount)
end

--- NativeDB Introduced: v1604
-- @param amount :
function Global.NetworkEarnFromBbEventBonus(amount)
	return _in(0xFDD8D2440DAF1590, amount)
end

--- NativeDB Introduced: v1604
-- @param amount :
function Global.NetworkEarnFromBbEventCargo(amount)
	return _in(0xA82959062361B259, amount)
end

--- =============================================================
-- lackos; 2017.03.12
function Global.NetworkEarnFromBendJob(amount, heistHash)
	return _in(0x61326EE6DF15B0CA, amount, _ts(heistHash))
end
Global.N_0x61326ee6df15b0ca = Global.NetworkEarnFromBendJob
Global.NetworkEarnFromMissionH = Global.NetworkEarnFromBendJob

function Global.NetworkEarnFromBetting(amount, p1)
	return _in(0x827A5BA1A44ACA6D, amount, _ts(p1))
end

function Global.NetworkEarnFromBounty(amount, p3)
	return _in(0x131BB5DA15453ACF, amount, _i, _i, p3)
end

function Global.NetworkEarnFromBusinessProduct(amount, p1, p2, p3)
	return _in(0x8586789730B10CAF, amount, p1, p2, p3)
end
Global.N_0x8586789730b10caf = Global.NetworkEarnFromBusinessProduct

--- NativeDB Introduced: v1290
-- @param amount :
function Global.NetworkEarnFromCashingOut(amount)
	return _in(0xEFE9C9A1651B81E6, amount)
end

function Global.NetworkEarnFromChallengeWin(p0, p2)
	return _in(0x2B171E6B2F64D8DF, p0, _i, p2)
end
Global.N_0x2b171e6b2f64d8df = Global.NetworkEarnFromChallengeWin

function Global.NetworkEarnFromContraband(amount, p1)
	return _in(0xECA658CE2A4E5A72, amount, p1)
end
Global.N_0xeca658ce2a4e5a72 = Global.NetworkEarnFromContraband

function Global.NetworkEarnFromCrateDrop(amount)
	return _in(0xB1CC1B9EC3007A2A, amount)
end
Global.N_0xb1cc1b9ec3007a2a = Global.NetworkEarnFromCrateDrop

function Global.NetworkEarnFromDailyObjectives(p0, p1, p2)
	return _in(0x6EA318C91C1A8786, p0, _ts(p1), p2)
end
Global.N_0x6ea318c91c1a8786 = Global.NetworkEarnFromDailyObjectives
Global.NetworkEarnFromDailyObjective = Global.NetworkEarnFromDailyObjectives

--- NativeDB Introduced: v1290
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromDarChallenge(amount, p1)
	return _in(0xCAC672087B4A24AB, amount, p1)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param vehicleHash :
function Global.NetworkEarnFromDoomsdayFinaleBonus(amount, vehicleHash)
	return _in(0x128A747F4A230952, amount, _ch(vehicleHash))
end

--- MONEY_EARN_PICKED_UP
function Global.NetworkEarnFromGangPickup(amount)
	return _in(0xA03D4ACE0A3284CE, amount)
end
Global.N_0xa03d4ace0a3284ce = Global.NetworkEarnFromGangPickup

--- NativeDB Introduced: v1290
-- @param amount :
-- @param unk :
-- @param p2 :
function Global.NetworkEarnFromGangopsAwards(amount, unk, p2)
	return _in(0xA9A31475F530DFDA, amount, _ts(unk), p2)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param unk :
-- @param actIndex :
function Global.NetworkEarnFromGangopsElite(amount, unk, actIndex)
	return _in(0x2597A0D4A4FC2C77, amount, _ts(unk), actIndex)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param unk :
function Global.NetworkEarnFromGangopsJobsFinale(amount, unk)
	return _in(0x1C121FC9545E0D52, amount, _ts(unk))
end

--- NativeDB Introduced: v1290
-- @param amount :
function Global.NetworkEarnFromGangopsJobsPrepParticipation(amount)
	return _in(0xED26584F6BDCBBFD, amount)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param unk :
function Global.NetworkEarnFromGangopsJobsSetup(amount, unk)
	return _in(0xA9160796D47A2CF8, amount, _ts(unk))
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromGangopsWages(amount, p1)
	return _in(0x2DCB19ABAB0380A8, amount, p1)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromGangopsWagesBonus(amount, p1)
	return _in(0x15BB2A5C757EB91F, amount, p1)
end

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param amount :
-- @param p2 :
-- @param p3 :
function Global.NetworkEarnFromHackerTruckMission(p0, amount, p2, p3)
	return _in(0xE8815FE993896AD3, p0, amount, p2, p3)
end

function Global.NetworkEarnFromHoldups(amount)
	return _in(0x45B8154E077D9E4D, amount)
end

--- NativeDB Parameter 1: Hash modelHash
function Global.NetworkEarnFromImportExport(amount, modelHash)
	return _in(0xF92A014A634442D6, amount, modelHash)
end

function Global.NetworkEarnFromJob(amount, p1)
	return _in(0xB2CC4836834E8A98, amount, _ts(p1))
end

function Global.NetworkEarnFromJobBonus(p0)
	return _in(0x6816FB4416760775, p0, _i, _i)
end
Global.N_0x6816fb4416760775 = Global.NetworkEarnFromJobBonus
Global.NetworkEarnFromJobBonus = Global.NetworkEarnFromJobBonus

--- Enough007: Adds an entry in the Network Transaction Log.
-- Max value for amount 2000
function Global.NetworkEarnFromNotBadsport(amount)
	return _in(0x4337511FA8221D36, amount)
end
Global.N_0x4337511fa8221d36 = Global.NetworkEarnFromNotBadsport

--- Now has 9 parameters.
function Global.NetworkEarnFromPersonalVehicle(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x3F4D00167E41E0AD, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
Global.N_0x3f4d00167e41e0ad = Global.NetworkEarnFromPersonalVehicle

--- NativeDB Return Type: void
function Global.NetworkEarnFromPickup(amount)
	return _in(0xED1517D3AF17C698, amount, _r, _ri)
end

function Global.NetworkEarnFromPremiumJob(amount, p1)
	return _in(0xC8407624CEF2354B, amount, _ts(p1))
end
Global.N_0xc8407624cef2354b = Global.NetworkEarnFromPremiumJob

function Global.NetworkEarnFromProperty(amount, propertyName)
	return _in(0x849648349D77F5C5, amount, _ch(propertyName))
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromRdrBonus(amount, p1)
	return _in(0x7A5349B773584675, amount, p1)
end

--- This merely adds an entry in the Network Transaction Log;
-- it does not grant cash to the player (on PC).
-- Max value for amount is 9999999.
function Global.NetworkEarnFromRockstar(amount)
	return _in(0x02CE1D6AC0FC73EA, amount)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param baseNameHash :
function Global.NetworkEarnFromSellBase(amount, baseNameHash)
	return _in(0x0E1E2FF3F4EC11AA, amount, _ch(baseNameHash))
end

--- NativeDB Parameter 1: Hash bunkerHash
function Global.NetworkEarnFromSellBunker(amount, bunkerHash)
	return _in(0x9251B6ABF2D0A5B4, amount, bunkerHash)
end
Global.N_0x9251b6abf2d0a5b4 = Global.NetworkEarnFromSellBunker

--- NativeDB Introduced: v1180
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkEarnFromSmuggling(amount, p1, p2, p3)
	return _in(0xDEE612F2D71B0308, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1604
-- @param amount :
function Global.NetworkEarnFromSpinTheWheelCash(amount)
	return _in(0x676C48776CACBB5A, amount)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param p1 :
function Global.NetworkEarnFromTargetRefund(amount, p1)
	return _in(0x5B669CF2299A271F, amount, p1)
end

--- Now has 8 params.
function Global.NetworkEarnFromVehicle(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xB539BD8A4C1EECF8, p0, p1, p2, p3, p4, p5, p6, p7)
end

function Global.NetworkEarnFromVehicleExport(amount, p1, p2)
	return _in(0xEDEAD9A91EC768B3, amount, p1, p2)
end
Global.N_0xedead9a91ec768b3 = Global.NetworkEarnFromVehicleExport

--- NativeDB Introduced: v1180
-- @param amount :
function Global.NetworkEarnFromWagePayment(amount)
	return _in(0x35F8DA0E8A31EF1B, amount)
end

--- NativeDB Introduced: v1180
-- @param amount :
function Global.NetworkEarnFromWagePaymentBonus(amount)
	return _in(0x005ACA7100BD101D, amount)
end

--- NativeDB Added Parameter 1: int amount
-- NativeDB Added Parameter 2: int id
function Global.NetworkEarnFromWarehouse()
	return _in(0x3E4ADAFF1830F146)
end
Global.N_0x3e4adaff1830f146 = Global.NetworkEarnFromWarehouse

function Global.NetworkEndTutorialSession()
	return _in(0xD0AFAFF5A51D72F7)
end

function Global.NetworkEntityAreaDoesExist(areaHandle)
	return _in(0xE64A3CA08DFA37A9, areaHandle, _r)
end
Global.N_0xe64a3ca08dfa37a9 = Global.NetworkEntityAreaDoesExist

function Global.NetworkEntityAreaIsOccupied(areaHandle)
	return _in(0x4A2D4E8BF4265B0F, areaHandle, _r)
end
Global.N_0x4a2d4e8bf4265b0f = Global.NetworkEntityAreaIsOccupied

--- In the console script dumps, this is only referenced once.
-- NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);
-- ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
-- Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
-- am_plane_takedown.c
-- network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
-- armenian2.c
-- network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
-- fm_horde_controler.c
-- network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
-- fm_mission_controller.c, has 6 hits so not going to list them.
-- Side note, setting the first parameter to 0 seems to mute sound or so?
-- Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.NetworkExplodeVehicle(vehicle, isAudible, isInvisible, p3)
	return _in(0x301A42153C9AD707, vehicle, isAudible, isInvisible, p3, _r, _ri)
end

--- state - 0 does 5 fades
-- state - 1 does 6 fades
-- native is missing third argument, also boolean, setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL slow
function Global.NetworkFadeInEntity(entity, state)
	return _in(0x1F4ED342ACEFE62D, entity, state)
end

--- normal - transition like when your coming out of LSC
-- slow - transition like when you walk into a mission
function Global.NetworkFadeOutEntity(entity, normal, slow)
	return _in(0xDE564951F95E09ED, entity, normal, slow)
end

function Global.NetworkFindMatchedGamers(p0, p1, p2, p3)
	return _in(0xF7B2CFDE5C9F700D, p0, p1, p2, p3, _r)
end
Global.N_0xf7b2cfde5c9f700d = Global.NetworkFindMatchedGamers

--- this is lightly associated with the 2 above meaning it accesses a variable that them 2 access also
function Global.NetworkFinishBroadcastingData()
	return _in(0x64F62AFB081E260D)
end
Global.N_0x64f62afb081e260d = Global.NetworkFinishBroadcastingData

function Global.NetworkForceLocalUseOfSyncedSceneCamera(netScene, animDict, animName)
	return _in(0xCF8BD3B0BD6D42D7, netScene, _ts(animDict), _ts(animName))
end
Global.N_0xcf8bd3b0bd6d42d7 = Global.NetworkForceLocalUseOfSyncedSceneCamera

function Global.NetworkGamerHasHeadset(networkHandle)
	return _in(0xF2FD55CB574BCC55, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkGamertagFromHandlePending()
	return _in(0xB071E27958EF4CF0, _r)
end

function Global.NetworkGamertagFromHandleStart(networkHandle)
	return _in(0x9F0C0A981D73FA56, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkGamertagFromHandleSucceeded()
	return _in(0xFD00798DBA7523DD, _r)
end

function Global.NetworkGetActivityPlayerNum(p0)
	return _in(0x73E2B500410DA5A2, p0, _r, _ri)
end

function Global.NetworkGetAgeGroup()
	return _in(0x9614B71F8ADB982B, _r, _ri)
end
Global.N_0x9614b71f8adb982b = Global.NetworkGetAgeGroup

function Global.NetworkGetBackgroundLoadingRecipients(p0, p1)
	return _in(0x97A770BEEF227E2B, p0, p1, _i, _i, _r)
end
Global.N_0x97a770beef227e2b = Global.NetworkGetBackgroundLoadingRecipients

--- Return the content modifier id (the tunables context if you want) of a specific content.
-- It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
-- The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
-- 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
function Global.NetworkGetContentModifierListId(contentHash)
	return _in(0x187382F8A3E0A6C3, _ch(contentHash), _r, _ri)
end
Global.N_0x187382f8a3e0a6c3 = Global.NetworkGetContentModifierListId
Global.GetTunablesContentModifierId = Global.NetworkGetContentModifierListId

function Global.NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(p0)
	return _in(0x74881E6BCAE2327C, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkGetDestroyerOfEntity(p0, p1, weaponHash)
	return _in(0x4CACA84440FA26F6, p0, p1, _ii(weaponHash) --[[ may be optional ]], _r)
end
Global.N_0x4caca84440fa26f6 = Global.NetworkGetDestroyerOfEntity
Global.NetworkGetDesroyerOfEntity = Global.NetworkGetDestroyerOfEntity

function Global.NetworkGetDestroyerOfNetworkId(netId, weaponHash)
	return _in(0x7A1ADEEF01740A24, netId, _ii(weaponHash) --[[ may be optional ]], _r, _ri)
end

function Global.NetworkGetEntityFromNetworkId(netId)
	return _in(0xCE4E5D9B0A4FF560, netId, _r, _ri)
end

function Global.NetworkGetEntityIsLocal(entity)
	return _in(0x0991549DE4D64762, entity, _r)
end

function Global.NetworkGetEntityIsNetworked(entity)
	return _in(0xC7827959479DCC78, entity, _r)
end
Global.N_0xc7827959479dcc78 = Global.NetworkGetEntityIsNetworked

function Global.NetworkGetEntityKillerOfPlayer(player, weaponHash)
	return _in(0x42B2DAA6B596F5F8, player, _ii(weaponHash) --[[ may be optional ]], _r, _ri)
end

function Global.NetworkGetEntityNetScriptId(entity)
	return _in(0x815F18AD865F057F, entity, _r, _ri)
end
Global.N_0x815f18ad865f057f = Global.NetworkGetEntityNetScriptId

--- Returns the owner ID of the specified entity.
-- @param entity The entity to get the owner for.
-- @return On the server, the server ID of the entity owner. On the client, returns the player/slot ID of the entity owner.
function Global.NetworkGetEntityOwner(entity)
	return _in(0x526fee31, entity, _r, _ri)
end

--- NativeDB Introduced: v323
function Global.NetworkGetEvcBalance()
	return _in(0x5D1E75F91C07DEE5, _r, _ri)
end

function Global.NetworkGetFoundGamer(p1)
	return _in(0x9DCFF2AFB68B3476, _i, p1, _r)
end

function Global.NetworkGetFriendCount()
	return _in(0x203F1CFD823B27A4, _r, _ri)
end

function Global.NetworkGetFriendName(friendIndex)
	return _in(0xE11EBBB2A783FE8B, friendIndex, _r, _s)
end

function Global.NetworkGetFriendNameFromIndex(friendIndex)
	return _in(0x4164F227D052E293, friendIndex, _r, _s)
end
Global.NetworkGetFriendName = Global.NetworkGetFriendNameFromIndex

function Global.NetworkGetGamerStatus(p0)
	return _in(0x85A0EF54A500882C, _ii(p0) --[[ may be optional ]], _r)
end
Global.N_0x85a0ef54a500882c = Global.NetworkGetGamerStatus

function Global.NetworkGetGamerStatusResult(p1)
	return _in(0x02A8BEC6FD9AF660, _i, p1, _r)
end
Global.N_0x02a8bec6fd9af660 = Global.NetworkGetGamerStatusResult

function Global.NetworkGetGamertagFromHandle(networkHandle)
	return _in(0x426141162EBE5CDB, _ii(networkHandle) --[[ may be optional ]], _r, _s)
end

--- NETWORK_GET_*
function Global.NetworkGetGlobalMultiplayerClock()
	return _in(0x6D03BFBD643B2A02, _i, _i, _i)
end
Global.N_0x6d03bfbd643b2a02 = Global.NetworkGetGlobalMultiplayerClock
Global.NetworkGetServerTime = Global.NetworkGetGlobalMultiplayerClock

--- scriptName examples:
-- "freemode", "AM_CR_SecurityVan", ...
-- Most of the time, these values are used:
-- p1 = -1
-- p2 = 0
function Global.NetworkGetHostOfScript(scriptName, p1, p2)
	return _in(0x1D6A14F1F9A736FC, _ts(scriptName), p1, p2, _r, _ri)
end

function Global.NetworkGetHostOfThisScript()
	return _in(0xC7B4D79B01FA7A5C, _r, _ri)
end

--- NativeDB Introduced: v323
function Global.NetworkGetIsHighEarner()
	return _in(0xFB2456B2040A6A67, _r)
end

--- Retrieves the local player's NetworkHandle* and stores it in the given buffer.
-- * Currently unknown struct
function Global.NetworkGetLocalHandle(bufferSize)
	return _in(0xE86051786B66CD8E, _i, bufferSize)
end

--- On PC this is hardcoded to 250.
function Global.NetworkGetMaxFriends()
	return _in(0xAFEBB0D5D8F687D2, _r, _ri)
end

--- Seems to always return 0, but it's used in quite a few loops.
-- for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
-- {
-- if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
-- {
-- var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
function Global.NetworkGetMaxNumParticipants()
	return _in(0xA6C90FBC38E395EE, _r, _ri)
end
Global.NetworkGetNumParticipantsHost = Global.NetworkGetMaxNumParticipants

function Global.NetworkGetNetworkIdFromEntity(entity)
	return _in(0xA11700682F3AD45C, entity, _r, _ri)
end

function Global.NetworkGetNumBodyTrackers()
	return _in(0xD38C4A6D047C019D, _r, _ri)
end
Global.N_0xd38c4a6d047c019d = Global.NetworkGetNumBodyTrackers

--- Returns the amount of players connected in the current session. Only works when connected to a session/server.
function Global.NetworkGetNumConnectedPlayers()
	return _in(0xA4A79DD2D9600654, _r, _ri)
end

function Global.NetworkGetNumFoundGamers()
	return _in(0xA1B043EE79A916FB, _r, _ri)
end

function Global.NetworkGetNumParticipants()
	return _in(0x18D0456E86604654, _r, _ri)
end

function Global.NetworkGetNumPresenceInvites()
	return _in(0xCEFA968912D0F78D, _r, _ri)
end
Global.N_0xcefa968912d0f78d = Global.NetworkGetNumPresenceInvites

function Global.NetworkGetNumScriptParticipants(p1, p2)
	return _in(0x3658E8CD94FC121A, _i, p1, p2, _r, _ri)
end
Global.N_0x3658e8cd94fc121a = Global.NetworkGetNumScriptParticipants

--- NativeDB Introduced: v323
-- @param player :
function Global.NetworkGetNumUnackedForPlayer(player)
	return _in(0xFF8FCF9FFC458A1C, player, _r, _ri)
end

--- NETWORK_GET_*
-- NativeDB Introduced: v323
-- @param player :
function Global.NetworkGetOldestResendCountForPlayer(player)
	return _in(0x52C1EADAF7B10302, player, _r, _ri)
end

function Global.NetworkGetParticipantIndex(index)
	return _in(0x1B84DF6AF2A46938, index, _r, _ri)
end

function Global.NetworkGetPlatformPartyMembers(dataSize)
	return _in(0x120364DE2845DAF8, _i, dataSize, _r, _ri)
end
Global.N_0x120364de2845daf8 = Global.NetworkGetPlatformPartyMembers

function Global.NetworkGetPlatformPartyUnk()
	return _in(0x01ABCE5E7CBDA196, _r, _ri)
end
Global.N_0x01abce5e7cbda196 = Global.NetworkGetPlatformPartyUnk

--- Returns the coordinates of another player.
-- Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
-- @param player The player id, MUST be another player.
-- @return A Vector3 containing the coordinates of another player.
function Global.NetworkGetPlayerCoords(player)
	return _in(0x125E6D638B8605D4, player, _r, _rv)
end
Global.N_0x125e6d638b8605d4 = Global.NetworkGetPlayerCoords

function Global.NetworkGetPlayerFromGamerHandle(networkHandle)
	return _in(0xCE5F689CF5A0A49D, _ii(networkHandle) --[[ may be optional ]], _r, _ri)
end

function Global.NetworkGetPlayerIndex(player)
	return _in(0x24FB80D107371267, player, _r, _ri)
end

--- Returns the Player associated to a given Ped when in an online session.
function Global.NetworkGetPlayerIndexFromPed(ped)
	return _in(0x6C0E2E0125610278, ped, _r, _ri)
end
Global.N_0x6c0e2e0125610278 = Global.NetworkGetPlayerIndexFromPed

function Global.NetworkGetPlayerLoudness(player)
	return _in(0x21A1684A25C2867F, player, _r, _rf)
end

function Global.NetworkGetPlayerOwnsWaypoint(player)
	return _in(0x82377B65E943F72D, player, _r)
end
Global.N_0x82377b65e943f72d = Global.NetworkGetPlayerOwnsWaypoint

function Global.NetworkGetPlayerTutorialSessionInstance(player)
	return _in(0x3B39236746714134, player, _r, _ri)
end
Global.N_0x3b39236746714134 = Global.NetworkGetPlayerTutorialSessionInstance

function Global.NetworkGetPresenceInviteContentId(p0)
	return _in(0x24409FC4C55CB22D, p0, _r, _ri)
end
Global.N_0x24409fc4c55cb22d = Global.NetworkGetPresenceInviteContentId

function Global.NetworkGetPresenceInviteHandle(p0, p1)
	return _in(0x38D5B0FEBB086F75, p0, _ii(p1) --[[ may be optional ]], _r)
end

function Global.NetworkGetPresenceInviteId(p0)
	return _in(0xDFF09646E12EC386, p0, _r, _ri)
end
Global.N_0xdff09646e12ec386 = Global.NetworkGetPresenceInviteId

function Global.NetworkGetPresenceInviteInviter(p0)
	return _in(0x4962CC4AA2F345B7, p0, _r, _ri)
end
Global.N_0x4962cc4aa2f345b7 = Global.NetworkGetPresenceInviteInviter

function Global.NetworkGetPresenceInviteSessionId(p0)
	return _in(0x26E1CD96B0903D60, p0, _r, _ri)
end
Global.N_0x26e1cd96b0903d60 = Global.NetworkGetPresenceInviteSessionId

function Global.NetworkGetPrimaryClanDataCancel()
	return _in(0x042E4B70B93E6054)
end
Global.N_0x042e4b70b93e6054 = Global.NetworkGetPrimaryClanDataCancel

function Global.NetworkGetPrimaryClanDataClear()
	return _in(0x9AA46BADAD0E27ED, _r, _ri)
end
Global.N_0x9aa46badad0e27ed = Global.NetworkGetPrimaryClanDataClear

function Global.NetworkGetPrimaryClanDataNew()
	return _in(0xC080FF658B2E41DA, _i, _i, _r)
end

function Global.NetworkGetPrimaryClanDataPending()
	return _in(0xB5074DB804E28CE7, _r, _ri)
end
Global.N_0xb5074db804e28ce7 = Global.NetworkGetPrimaryClanDataPending

function Global.NetworkGetPrimaryClanDataStart(p1)
	return _in(0xCE86D8191B762107, _i, p1, _r)
end

function Global.NetworkGetPrimaryClanDataSuccess()
	return _in(0x5B4F04F19376A0BA, _r, _ri)
end
Global.N_0x5b4f04f19376a0ba = Global.NetworkGetPrimaryClanDataSuccess

--- NativeDB Introduced: v323
function Global.NetworkGetPvcBalance()
	return _in(0x4F54F3B6C202FB4E, _r, _ri)
end

--- Same as 0xEA560AC9EEB1E19B.
-- ```
-- ```
-- Same as 0xEA560AC9EEB1E19B.
-- NativeDB Introduced: v323
function Global.NetworkGetPvcTransferBalance()
	return _in(0x13A8DE2FD77D04F3, _r, _ri)
end
Global.NetworkGetRemainingVcDailyTransfers = Global.NetworkGetPvcTransferBalance

function Global.NetworkGetRandomInt()
	return _in(0x599E4FA1F87EB5FF, _r, _ri)
end
Global.N_0x599e4fa1f87eb5ff = Global.NetworkGetRandomInt

--- Same as GAMEPLAY::GET_RANDOM_INT_IN_RANGE
function Global.NetworkGetRandomIntRanged(rangeStart, rangeEnd)
	return _in(0xE30CF56F1EFA5F43, rangeStart, rangeEnd, _r, _ri)
end
Global.N_0xe30cf56f1efa5f43 = Global.NetworkGetRandomIntRanged
Global.NetworkGetRandomIntInRange = Global.NetworkGetRandomIntRanged

--- Same as 0x13A8DE2FD77D04F3.
-- NativeDB Introduced: v323
function Global.NetworkGetRemainingVcDailyTransfers_2()
	return _in(0xEA560AC9EEB1E19B, _r, _ri)
end

--- Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
function Global.NetworkGetRespawnResult(randomInt)
	return _in(0x371EA43692861CF1, randomInt, _v, _f)
end

function Global.NetworkGetRespawnResultFlags(p0)
	return _in(0x6C34F1208B8923FD, p0, _r, _ri)
end
Global.N_0x6c34f1208b8923fd = Global.NetworkGetRespawnResultFlags

function Global.NetworkGetRosPrivilege_10()
	return _in(0x606E4D3E3CCCF3EB, _r)
end
Global.N_0x606e4d3e3cccf3eb = Global.NetworkGetRosPrivilege_10

function Global.NetworkGetRosPrivilege_24()
	return _in(0x593570C289A77688, _r)
end
Global.N_0x593570c289a77688 = Global.NetworkGetRosPrivilege_24

--- bool?
-- am_crate_drop.c
-- <...>
-- if (network::_network_are_ros_available())
-- {
-- if (network::_0x91B87C55093DE351())
-- <..>
function Global.NetworkGetRosPrivilege_25()
	return _in(0x91B87C55093DE351, _r)
end
Global.N_0x91b87c55093de351 = Global.NetworkGetRosPrivilege_25

--- if(_CAN_PLAY_ONLINE() == 0) means the player is banned(Social Club or Rockstar)
function Global.NetworkGetRosPrivilege_3()
	return _in(0x5F91D5D0B36AA310, _r)
end
Global.IsPlayerBanned = Global.NetworkGetRosPrivilege_3
Global.CanPlayOnline = Global.NetworkGetRosPrivilege_3

--- NETWORK_HAVE_*
function Global.NetworkGetRosPrivilege_4()
	return _in(0x422D396F80A96547, _r)
end
Global.N_0x422d396f80a96547 = Global.NetworkGetRosPrivilege_4

function Global.NetworkGetRosPrivilege_9()
	return _in(0x66B59CFFD78467AF, _r)
end
Global.N_0x66b59cffd78467af = Global.NetworkGetRosPrivilege_9

function Global.NetworkGetScriptStatus()
	return _in(0x57D158647A6BFABF, _r, _ri)
end

function Global.NetworkGetStringBankBalance()
	return _in(0xA6FA3979BED01B81, _r, _s)
end
Global.N_0xa6fa3979bed01b81 = Global.NetworkGetStringBankBalance
Global.NetworkGetBankBalanceString = Global.NetworkGetStringBankBalance

--- NativeDB Introduced: v323
function Global.NetworkGetStringBankWalletBalance()
	return _in(0x700AF71AE615E6DD, _r, _s)
end

--- NativeDB Introduced: v323
-- @param characterSlot :
function Global.NetworkGetStringWalletBalance(characterSlot)
	return _in(0xF9B10B529DCFB33B, characterSlot, _r, _s)
end

function Global.NetworkGetTalkerProximity()
	return _in(0x84F0F13120B4E098, _r, _rf)
end

function Global.NetworkGetTargetingMode()
	return _in(0xDFFA5BE8381C3314, _r, _ri)
end
Global.N_0xdffa5be8381c3314 = Global.NetworkGetTargetingMode

function Global.NetworkGetThisScriptIsNetworkScript()
	return _in(0x2910669969E9535E, _r)
end

--- Returns the value of the tunable 0x9A82F2B. Usually 8000 iirc.
function Global.NetworkGetTimeoutTime()
	return _in(0x5ED0356A0CE3A34F, _r, _ri)
end
Global.N_0x5ed0356a0ce3a34f = Global.NetworkGetTimeoutTime

function Global.NetworkGetTotalNumPlayers()
	return _in(0xCF61D4B4702EE9EB, _r, _ri)
end
Global.N_0xcf61d4b4702ee9eb = Global.NetworkGetTotalNumPlayers

function Global.NetworkGetTransitionHost(networkHandle)
	return _in(0x65042B9774C4435E, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- Returns count.
function Global.NetworkGetTransitionMembers(dataCount)
	return _in(0x73B000F7FBC55829, _i, dataCount, _r, _ri)
end

function Global.NetworkGetTunableCloudCrc()
	return _in(0x10BD227A753B0D84, _r, _ri)
end
Global.N_0x10bd227a753b0d84 = Global.NetworkGetTunableCloudCrc
Global.NetworkGetTunablesVersion = Global.NetworkGetTunableCloudCrc

function Global.NetworkGetVcBalance()
	return _in(0x5CBAD97E059E1B94, _r, _ri)
end
Global.N_0x5cbad97e059e1b94 = Global.NetworkGetVcBalance

--- From what I can see in ida, I believe it retrieves the players online bank balance.
function Global.NetworkGetVcBankBalance()
	return _in(0x76EF28DA05EA395A, _r, _ri)
end
Global.N_0x76ef28da05ea395a = Global.NetworkGetVcBankBalance

--- Returns true if bank balance >= amount.
-- NativeDB Introduced: v323
-- @param amount :
function Global.NetworkGetVcBankBalanceIsNotLessThan(amount)
	return _in(0xA31FD6A0865B6D14, amount, _r)
end

--- probably 0x3461981 on console
function Global.NetworkGetVcBankWalletBalanceIsNotLessThan(amount, characterSlot)
	return _in(0xDC18531D7019A535, amount, characterSlot, _r)
end
Global.N_0xdc18531d7019a535 = Global.NetworkGetVcBankWalletBalanceIsNotLessThan

--- From what I understand, it retrieves STAT_WALLET_BALANCE for the specified character (-1 means use MPPLY_LAST_MP_CHAR)
function Global.NetworkGetVcWalletBalance(characterSlot)
	return _in(0xA40F9C2623F6A8B5, characterSlot, _r, _ri)
end
Global.N_0xa40f9c2623f6a8b5 = Global.NetworkGetVcWalletBalance

--- Returns true if wallet balance >= amount.
-- NativeDB Introduced: v323
-- @param amount :
-- @param characterSlot :
function Global.NetworkGetVcWalletBalanceIsNotLessThan(amount, characterSlot)
	return _in(0xED5AB8860415BABA, amount, characterSlot, _r)
end

function Global.NetworkGivePlayerJobshareCash(amount, networkHandle)
	return _in(0xFB18DF9CB95E0105, amount, _ii(networkHandle) --[[ may be optional ]])
end

function Global.NetworkHandleFromFriend(friendIndex, bufferSize)
	return _in(0xD45CB817D7E177D2, friendIndex, _i, bufferSize)
end

--- Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.
-- * Currently unknown struct
function Global.NetworkHandleFromMemberId(memberId, bufferSize)
	return _in(0xA0FD21BED61E5C4C, _ts(memberId), _i, bufferSize)
end

--- Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.
-- * Currently unknown struct
-- Example:
-- std::vector<UINT64> GetPlayerNetworkHandle(Player player) {
-- const int size = 13;
-- uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();
-- NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);
-- for (int i = 0; i < size; i++) {
-- Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);
-- }
-- std::vector<UINT64> result(buffer, buffer + sizeof(buffer));
-- return result;
-- }
function Global.NetworkHandleFromPlayer(player, bufferSize)
	return _in(0x388EB2B86C73B6B3, player, _i, bufferSize)
end

--- Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.
-- * Currently unknown struct
function Global.NetworkHandleFromUserId(userId, bufferSize)
	return _in(0xDCD51DD8F87AEC5C, _ts(userId), _i, bufferSize)
end

--- Returns some kind of banned state
function Global.NetworkHasAgeRestrictedProfile()
	return _in(0x1353F87E89946207, _r)
end
Global.N_0x1353f87e89946207 = Global.NetworkHasAgeRestrictedProfile

function Global.NetworkHasCachedPlayerHeadBlendData(player)
	return _in(0x237D5336A9A54108, player, _r)
end
Global.N_0x237d5336a9a54108 = Global.NetworkHasCachedPlayerHeadBlendData

function Global.NetworkHasControlOfDoor(doorHash)
	return _in(0xCB3C68ADB06195DF, _ch(doorHash), _r)
end

function Global.NetworkHasControlOfEntity(entity)
	return _in(0x01BF60A500E28887, entity, _r)
end

function Global.NetworkHasControlOfNetworkId(netId)
	return _in(0x4D36070FE0215186, netId, _r)
end

function Global.NetworkHasControlOfPickup(pickup)
	return _in(0x5BC9495F0B3B6FA6, pickup, _r)
end

function Global.NetworkHasFollowInvite()
	return _in(0x76D9B976C4C09FDE, _r)
end
Global.N_0x76d9b976c4c09fde = Global.NetworkHasFollowInvite

--- Returns true if dinput8.dll is present in the game directory.
-- You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
function Global.NetworkHasGameBeenAltered()
	return _in(0x659CF2EF7F550C4F, _r)
end
Global.N_0x659cf2ef7f550c4f = Global.NetworkHasGameBeenAltered

function Global.NetworkHasHeadset()
	return _in(0xE870F9F1F7B4F1FA, _r)
end

function Global.NetworkHasInvitedGamer(p0)
	return _in(0x4D86CD31E8976ECE, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkHasInvitedGamerToTransition(p0)
	return _in(0x7284A47B3540E6CF, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkHasPendingInvite()
	return _in(0xAC8C7B9B88C4A668, _r)
end

--- if(NETWORK::_IS_ROCKSTAR_BANNED() == 0) means the player is rockstar banned
function Global.NetworkHasPlayerBeenBanned()
	return _in(0x8020A73847E0CA7D, _r)
end
Global.IsRockstarBanned = Global.NetworkHasPlayerBeenBanned

function Global.NetworkHasPlayerStartedTransition(player)
	return _in(0x9AC9CCBFA8C29795, player, _r)
end

--- index is always 18 in scripts
function Global.NetworkHasRosPrivilege(index)
	return _in(0xA699957E60D80214, index, _r)
end
Global.N_0xa699957e60d80214 = Global.NetworkHasRosPrivilege

function Global.NetworkHasRosPrivilegeEndDate(p0)
	return _in(0xC22912B1D85F26B1, p0, _i, _v, _r)
end
Global.N_0xc22912b1d85f26b1 = Global.NetworkHasRosPrivilegeEndDate
Global.NetworkGetBanData = Global.NetworkHasRosPrivilegeEndDate

function Global.NetworkHasSocialClubAccount()
	return _in(0x67A5589628E0CFF6, _r)
end
Global.N_0x67a5589628e0cff6 = Global.NetworkHasSocialClubAccount

function Global.NetworkHasViewGamerUserContentResult(networkHandle)
	return _in(0xCCA4318E1AB03F1F, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0xcca4318e1ab03f1f = Global.NetworkHasViewGamerUserContentResult

function Global.NetworkHashFromGamerHandle(networkHandle)
	return _in(0x58575AC3CF2CA8EC, _ii(networkHandle) --[[ may be optional ]], _r, _ri)
end
Global.N_0x58575ac3cf2ca8ec = Global.NetworkHashFromGamerHandle
Global.NetworkHashFromGamerHandle = Global.NetworkHashFromGamerHandle

function Global.NetworkHashFromPlayerHandle(player)
	return _in(0xBC1D768F2F5D6C05, player, _r, _ri)
end
Global.N_0xbc1d768f2f5d6c05 = Global.NetworkHashFromPlayerHandle
Global.NetworkHashFromPlayerHandle = Global.NetworkHashFromPlayerHandle

--- Returns whether the Rockstar game services are available or not
function Global.NetworkHaveJustUploadLater()
	return _in(0x85443FF4C328F53B, _r)
end
Global.N_0x85443ff4c328f53b = Global.NetworkHaveJustUploadLater
Global.NetworkAreRosAvailable = Global.NetworkHaveJustUploadLater

function Global.NetworkHaveOnlinePrivilege_2()
	return _in(0x5EA784D197556507, _r)
end
Global.N_0x5ea784d197556507 = Global.NetworkHaveOnlinePrivilege_2

function Global.NetworkHaveOnlinePrivileges()
	return _in(0x25CB5A9F37BFD063, _r)
end

--- if(_IS_SOCIALCLUB_BANNED() == 0) means the player is social club banned
function Global.NetworkHaveSocialClubPrivilege()
	return _in(0xA0AD7E2AF5349F61, _r)
end
Global.IsSocialclubBanned = Global.NetworkHaveSocialClubPrivilege

function Global.NetworkHaveUserContentPrivileges(p0)
	return _in(0x72D918C99BCACC54, p0, _r)
end
Global.N_0x72d918c99bcacc54 = Global.NetworkHaveUserContentPrivileges

--- From what I can tell it looks like it does the following:
-- Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
-- You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
-- @param p0 Unknown int
-- @param p1 Unknown int
-- @param p2 Unknown int
-- @param p3 Unknown int
-- @param p4 Unknown always 0 in decompiled scripts
-- @param p5 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p6 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p7 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p8 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p9 Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
-- @return Probably a bool indicating if the transition was created.
function Global.NetworkHostTransition(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA60BB5CE242BB254, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r)
end

function Global.NetworkInitializeCash(wallet, bank)
	return _in(0x3DA5ECD1A56CBA6D, wallet, bank)
end
Global.N_0x3da5ecd1a56cba6d = Global.NetworkInitializeCash

--- //nothing doin
-- int Global_1837683 = GlobalVariable::Get(1837683);
-- int Global_1837683_f_404 = GlobalVariable::Get(1837683 + 404);
-- NETWORK_INVITE_GAMERS(&Global_1837683, Global_1837683_f_404, 0, 0);
function Global.NetworkInviteGamers(p1)
	return _in(0x9D80CD1D0E6327DE, _i, p1, _i, _i, _r)
end

function Global.NetworkInviteGamersToTransition(p1)
	return _in(0x4A595C32F77DFF76, _i, p1, _r)
end

function Global.NetworkIsActivitySession()
	return _in(0x05095437424397FA, _r)
end

--- NativeDB Return Type: BOOL
function Global.NetworkIsActivitySpectator()
	return _in(0x12103B9E0C9F92FB, _r, _ri)
end

function Global.NetworkIsActivitySpectatorFromHandle(networkHandle)
	return _in(0x2763BBAA72A7BCB9, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsAddingFriend()
	return _in(0x6EA101606F6E4D81, _r)
end

function Global.NetworkIsCableConnected()
	return _in(0xEFFB25453D8600F9, _r)
end
Global.N_0xeffb25453d8600f9 = Global.NetworkIsCableConnected

--- This would be nice to see if someone is in party chat, but 2 sad notes.
-- 1) It only becomes true if said person is speaking in that party at the time.
-- 2) It will never, become true unless you are in that party with said person.
function Global.NetworkIsChattingInPlatformParty(networkHandle)
	return _in(0x8DE9945BCC9AEC52, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsClanMembershipFinishedDownloading()
	return _in(0xB3F64A6A91432477, _r)
end
Global.N_0xb3f64a6a91432477 = Global.NetworkIsClanMembershipFinishedDownloading

function Global.NetworkIsClockTimeOverridden()
	return _in(0xD7C95D322FF57522, _r)
end
Global.N_0xd7c95d322ff57522 = Global.NetworkIsClockTimeOverridden

function Global.NetworkIsCloudAvailable()
	return _in(0x9A4CF4F48AD77302, _r)
end

function Global.NetworkIsCloudBackgroundScriptRequestPending()
	return _in(0x8132C0EB8B2B3293, _r)
end
Global.N_0x8132c0eb8b2b3293 = Global.NetworkIsCloudBackgroundScriptRequestPending
Global.HasBgScriptBeenDownloaded = Global.NetworkIsCloudBackgroundScriptRequestPending
Global.NetworkIsCloudBackgroundScriptsRequestPending = Global.NetworkIsCloudBackgroundScriptRequestPending

function Global.NetworkIsDoorNetworked(doorHash)
	return _in(0xC01E93FAC20C3346, _ch(doorHash), _r)
end
Global.N_0xc01e93fac20c3346 = Global.NetworkIsDoorNetworked
Global.NetworkHasControlOfPavementStats = Global.NetworkIsDoorNetworked

--- This only works with vehicles.
function Global.NetworkIsEntityConcealed(entity)
	return _in(0x71302EC70689052A, entity, _r)
end

function Global.NetworkIsEntityFading(entity)
	return _in(0x422F32CC7E56ABAD, entity, _r)
end
Global.N_0x422f32cc7e56abad = Global.NetworkIsEntityFading

function Global.NetworkIsFindingGamers()
	return _in(0xDDDF64C91BFCF0AA, _r)
end

function Global.NetworkIsFriend(networkHandle)
	return _in(0x1A24A179F9B31654, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsFriendHandleOnline(networkHandle)
	return _in(0x87EB7A3FFCB314DB, _ii(networkHandle) --[[ may be optional ]], _r)
end
Global.N_0x87eb7a3ffcb314db = Global.NetworkIsFriendHandleOnline
Global.NetworkIsFriendOnline_2 = Global.NetworkIsFriendHandleOnline

function Global.NetworkIsFriendInMultiplayer(friendName)
	return _in(0x57005C18827F3A28, _ts(friendName), _r)
end

--- In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
function Global.NetworkIsFriendInSameTitle(friendName)
	return _in(0x2EA9A3BEDF3F17B8, _ts(friendName), _r)
end

function Global.NetworkIsFriendIndexOnline(friendIndex)
	return _in(0xBAD8F2A42B844821, friendIndex, _r)
end
Global.N_0xbad8f2a42b844821 = Global.NetworkIsFriendIndexOnline

function Global.NetworkIsFriendOnline(name)
	return _in(0x425A44533437B64D, _ts(name), _r)
end

function Global.NetworkIsGameInProgress()
	return _in(0x10FAB35428CCC9D7, _r)
end

function Global.NetworkIsGamerBlockedByMe(networkHandle)
	return _in(0xE944C4F5AF1B5883, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsGamerInMySession(networkHandle)
	return _in(0x0F10B05DDF8D16E9, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsGamerMutedByMe(networkHandle)
	return _in(0xCE60DE011B6C7978, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsGamerTalking(networkHandle)
	return _in(0x71C33B22606CD88A, _ii(networkHandle) --[[ may be optional ]], _r)
end

function Global.NetworkIsHandleValid(bufferSize)
	return _in(0x6F79B93B0A8E4133, _i, bufferSize, _r)
end

--- If you are host, returns true else returns false.
-- anyone know how to use this to find correct host? is possible?
-- go to a mission and it will set a host then search the host name using a program then find the pointer to the host name
function Global.NetworkIsHost()
	return _in(0x8DB296B814EDDA07, _r)
end

function Global.NetworkIsHostOfThisScript()
	return _in(0x83CD99A1E6061AB5, _r)
end

function Global.NetworkIsInMpCutscene()
	return _in(0x6CC27C9FA2040220, _r)
end

--- Note according to IDA TU27 X360(Console),
-- This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
-- Side note: This location just stops where it's at once jumped to.
-- Screenshot for side note,
-- h t t p ://i.imgur.com/m2ci1mF.png
-- h t t p://i.imgur.com/Z0Wx2B6.png
function Global.NetworkIsInParty()
	return _in(0x966C2BC2A7FE3F30, _r)
end

--- Hardcoded to return false.
function Global.NetworkIsInPlatformParty()
	return _in(0x2FC5650B0271CB57, _r)
end
Global.N_0x2fc5650b0271cb57 = Global.NetworkIsInPlatformParty

function Global.NetworkIsInPlatformPartyChat()
	return _in(0xFD8B834A8BA05048, _r)
end
Global.N_0xfd8b834a8ba05048 = Global.NetworkIsInPlatformPartyChat

function Global.NetworkIsInSession()
	return _in(0xCA97246103B63917, _r)
end

function Global.NetworkIsInSpectatorMode()
	return _in(0x048746E388762E11, _r)
end

function Global.NetworkIsInTransition()
	return _in(0x68049AEFF83D8F0A, _r)
end

--- NativeDB Return Type: BOOL
function Global.NetworkIsInTutorialSession()
	return _in(0xADA24309FE08DACF, _r, _ri)
end

function Global.NetworkIsInactiveProfile(p0)
	return _in(0x7E58745504313A2E, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkIsLocalPlayerInvincible()
	return _in(0x8A8694B48715B000, _r)
end

function Global.NetworkIsLocalTalking()
	return _in(0xC0D2AF00BCC234CA, _r)
end
Global.N_0xc0d2af00bcc234ca = Global.NetworkIsLocalTalking

--- NativeDB Return Type: BOOL
function Global.NetworkIsMultiplayerDisabled()
	return _in(0x9747292807126EDA, _r, _ri)
end
Global.N_0x9747292807126eda = Global.NetworkIsMultiplayerDisabled

function Global.NetworkIsOfflineInvitePending()
	return _in(0x74698374C45701D2, _r, _ri)
end
Global.N_0x74698374c45701d2 = Global.NetworkIsOfflineInvitePending

function Global.NetworkIsParticipantActive(p0)
	return _in(0x6FF8FF40B6357D45, p0, _r)
end

--- Note according to IDA TU27 X360(Console),
-- This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
-- Side note: This location just stops where it's at once jumped to.
-- Screenshot for side note,
-- h t t p ://i.imgur.com/m2ci1mF.png
-- h t t p://i.imgur.com/Z0Wx2B6.png
function Global.NetworkIsPartyMember(networkHandle)
	return _in(0x676ED266AADD31E0, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- This function is hard-coded to always return 0.
function Global.NetworkIsPendingFriend(p0)
	return _in(0x0BE73DA6984A6E33, p0, _r)
end

function Global.NetworkIsPlayerAParticipant(player)
	return _in(0x3CA58F6CB7CBD784, player, _r)
end

function Global.NetworkIsPlayerAParticipantOnScript(p0, script, p2)
	return _in(0x1AD5B71586B94820, p0, _ts(script), p2, _r)
end
Global.N_0x1ad5b71586b94820 = Global.NetworkIsPlayerAParticipantOnScript

function Global.NetworkIsPlayerActive(player)
	return _in(0xB8DFD30D6973E135, player, _r)
end

function Global.NetworkIsPlayerBlockedByMe(player)
	return _in(0x57AF1F8E27483721, player, _r)
end

function Global.NetworkIsPlayerConcealed(player)
	return _in(0x919B3C98ED8292F9, player, _r)
end

function Global.NetworkIsPlayerConnected(player)
	return _in(0x93DC1BE4E1ABE9D1, player, _r)
end

--- NETWORK_ARE_*
function Global.NetworkIsPlayerEqualToIndex(player, index)
	return _in(0x9DE986FC9A87C474, player, index, _r)
end
Global.N_0x9de986fc9a87c474 = Global.NetworkIsPlayerEqualToIndex

function Global.NetworkIsPlayerFading(player)
	return _in(0x631DC5DFF4B110E3, player, _r)
end
Global.N_0x631dc5dff4b110e3 = Global.NetworkIsPlayerFading

function Global.NetworkIsPlayerInMpCutscene(player)
	return _in(0x63F9EE203C3619F2, player, _r)
end

function Global.NetworkIsPlayerMutedByMe(player)
	return _in(0x8C71288AE68EDE39, player, _r)
end

--- returns true if someone is screaming or talking in a microphone
function Global.NetworkIsPlayerTalking(player)
	return _in(0x031E11F3D447647E, player, _r)
end

function Global.NetworkIsPsnAvailable()
	return _in(0x8D11E61A4ABF49CC, _r)
end
Global.N_0x8d11e61a4abf49cc = Global.NetworkIsPsnAvailable

function Global.NetworkIsScriptActive(scriptName, player, p2, p3)
	return _in(0x9D40DF90FAD26098, _ts(scriptName), player, p2, p3, _r)
end

function Global.NetworkIsSessionActive()
	return _in(0xD83C2B94E7508980, _r)
end

function Global.NetworkIsSessionBusy()
	return _in(0xF4435D66A8E2905E, _r)
end

--- This checks if player is playing on gta online or not.
-- Please add an if and block your mod if this is "true".
function Global.NetworkIsSessionStarted()
	return _in(0x9DE624D2FC4B603F, _r)
end

--- Returns whether the player is signed into Social Club.
function Global.NetworkIsSignedIn()
	return _in(0x054354A99211EB96, _r)
end

--- Returns whether the game is not in offline mode.
-- seemed not to work for some ppl
function Global.NetworkIsSignedOnline()
	return _in(0x1077788E268557C2, _r)
end

--- Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
function Global.NetworkIsTextChatActive()
	return _in(0x5FCF4D7069B09026, _r)
end

function Global.NetworkIsThisScriptMarked(p0, p1, p2)
	return _in(0xD1110739EEADB592, p0, p1, p2, _r)
end
Global.N_0xd1110739eeadb592 = Global.NetworkIsThisScriptMarked
Global.NetworkSetThisScriptMarked = Global.NetworkIsThisScriptMarked

--- NativeDB Return Type: BOOL
function Global.NetworkIsTransitionBusy()
	return _in(0x520F3282A53D26B7, _r, _ri)
end

function Global.NetworkIsTransitionClosedCrew()
	return _in(0x0DBD5D7E3C5BEC3B, _r)
end
Global.N_0x0dbd5d7e3c5bec3b = Global.NetworkIsTransitionClosedCrew

function Global.NetworkIsTransitionClosedFriends()
	return _in(0x6512765E3BE78C50, _r)
end
Global.N_0x6512765e3be78c50 = Global.NetworkIsTransitionClosedFriends

--- NativeDB Return Type: BOOL
function Global.NetworkIsTransitionHost()
	return _in(0x0B824797C9BF2159, _r, _ri)
end

function Global.NetworkIsTransitionHostFromHandle(networkHandle)
	return _in(0x6B5C83BA3EFE6A10, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- NativeDB Return Type: BOOL
function Global.NetworkIsTransitionMatchmaking()
	return _in(0x292564C735375EDF, _r, _ri)
end
Global.N_0x292564c735375edf = Global.NetworkIsTransitionMatchmaking

function Global.NetworkIsTransitionOpenToMatchmaking()
	return _in(0x37A4494483B9F5C9, _r)
end
Global.N_0x37a4494483b9f5c9 = Global.NetworkIsTransitionOpenToMatchmaking

function Global.NetworkIsTransitionPrivate()
	return _in(0x5A6AA44FF8E931E6, _r)
end
Global.N_0x5a6aa44ff8e931e6 = Global.NetworkIsTransitionPrivate

function Global.NetworkIsTransitionSolo()
	return _in(0x5DC577201723960A, _r)
end
Global.N_0x5dc577201723960a = Global.NetworkIsTransitionSolo

function Global.NetworkIsTransitionStarted()
	return _in(0x53FA83401D9C07FE, _r)
end

--- NativeDB Return Type: BOOL
function Global.NetworkIsTransitionToGame()
	return _in(0x9D7696D8F4FA6CB7, _r, _ri)
end

--- x360 Hash: 0xF637166E
function Global.NetworkIsTransitionVisibilityLocked()
	return _in(0xD0A484CB2F829FBE, _r)
end
Global.N_0xd0a484cb2f829fbe = Global.NetworkIsTransitionVisibilityLocked

function Global.NetworkIsTunableCloudRequestPending()
	return _in(0x0467C11ED88B7D28, _r)
end
Global.N_0x0467c11ed88b7d28 = Global.NetworkIsTunableCloudRequestPending
Global.HasTunablesBeenDownloaded = Global.NetworkIsTunableCloudRequestPending

function Global.NetworkIsTutorialSessionChangePending()
	return _in(0x35F0B98A8387274D, _r)
end
Global.N_0x35f0b98a8387274d = Global.NetworkIsTutorialSessionChangePending

function Global.NetworkJoinGroupActivity()
	return _in(0xA06509A691D12BE4, _r, _ri)
end
Global.N_0xa06509a691d12be4 = Global.NetworkJoinGroupActivity

--- int handle[76];
-- NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
-- Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
-- NETWORK_JOIN_TRANSITION(uVar2);
-- nothing doin.
function Global.NetworkJoinTransition(player)
	return _in(0x9D060B08CD63321A, player, _r)
end

--- NativeDB Return Type: BOOL
function Global.NetworkLaunchTransition()
	return _in(0x2DCF46CB1A4F0884, _r, _ri)
end

--- NativeDB Return Type: BOOL
function Global.NetworkLeaveTransition()
	return _in(0xD23A1A815D21DB19, _r, _ri)
end

function Global.NetworkManualDeleteCharacter(characterSlot)
	return _in(0x821418C727FCACD7, characterSlot)
end
Global.N_0x821418c727fcacd7 = Global.NetworkManualDeleteCharacter

function Global.NetworkMarkTransitionGamerAsFullyJoined(p0)
	return _in(0x5728BB6D63E3FF1D, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkMemberIdFromGamerHandle(networkHandle)
	return _in(0xC82630132081BB6F, _ii(networkHandle) --[[ may be optional ]], _r, _s)
end

function Global.NetworkMoneyCanBet(amount, p1, p2)
	return _in(0x81404F3DC124FE5B, amount, p1, p2, _r)
end
Global.N_0x81404f3dc124fe5b = Global.NetworkMoneyCanBet

function Global.NetworkOpenTransitionMatchmaking()
	return _in(0x2B3A8F7CA3A38FDE)
end
Global.N_0x2b3a8f7ca3a38fde = Global.NetworkOpenTransitionMatchmaking

--- Could possibly bypass being muted or automatically muted
function Global.NetworkOverrideChatRestrictions(player, toggle)
	return _in(0x3039AE5AD2C9C0C4, player, toggle)
end
Global.N_0x3039ae5ad2c9c0c4 = Global.NetworkOverrideChatRestrictions

--- Works in Singleplayer too.
-- Actually has a 4th param (BOOL) that sets byte_14273C46C (in b944) to whatever was passed to p3.
function Global.NetworkOverrideClockTime(Hours, Minutes, Seconds)
	return _in(0xE679E3E06E363892, Hours, Minutes, Seconds)
end

function Global.NetworkOverrideCoordsAndHeading(entity, x, y, z, heading)
	return _in(0xA7E30DE9272B6D49, entity, x, y, z, heading)
end
Global.N_0xa7e30de9272b6d49 = Global.NetworkOverrideCoordsAndHeading

--- R* uses this to hear all player when spectating.
-- It allows you to hear other online players when their chat is on none, crew and or friends
function Global.NetworkOverrideReceiveRestrictions(player, toggle)
	return _in(0xDDF73E2B1FEC5AB4, player, toggle)
end
Global.N_0xddf73e2b1fec5ab4 = Global.NetworkOverrideReceiveRestrictions

--- p0 is always false in scripts.
function Global.NetworkOverrideReceiveRestrictionsAll(toggle)
	return _in(0x0FF2862B61A58AF9, toggle)
end
Global.N_0x0ff2862b61a58af9 = Global.NetworkOverrideReceiveRestrictionsAll

--- "NETWORK_OVERRIDE_SEND_RESTRICTIONS" is right, but dev-c put a _ by default.
-- This is used alongside the native,
-- 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read it's description for more info.
function Global.NetworkOverrideSendRestrictions(player, toggle)
	return _in(0x97DD4C5944CC2E6A, player, toggle)
end
Global.N_0x97dd4c5944cc2e6a = Global.NetworkOverrideSendRestrictions
Global.NetworkOverrideSendRestrictions = Global.NetworkOverrideSendRestrictions

function Global.NetworkOverrideSendRestrictionsAll(toggle)
	return _in(0x57B192B4D4AD23D5, toggle)
end
Global.N_0x57b192b4d4ad23d5 = Global.NetworkOverrideSendRestrictionsAll
Global.NetworkChatMute = Global.NetworkOverrideSendRestrictionsAll

function Global.NetworkOverrideTeamRestrictions(team, toggle)
	return _in(0x6F697A66CE78674E, team, toggle)
end
Global.N_0x6f697a66ce78674e = Global.NetworkOverrideTeamRestrictions

function Global.NetworkOverrideTransitionChat(p0)
	return _in(0xAF66059A131AA269, p0)
end
Global.N_0xaf66059a131aa269 = Global.NetworkOverrideTransitionChat

function Global.NetworkPayEmployeeWage(p0, p1, p2)
	return _in(0x5FD5ED82CBBE9989, p0, p1, p2)
end
Global.N_0x5fd5ed82cbbe9989 = Global.NetworkPayEmployeeWage

--- NativeDB Parameter 1: char* matchId
function Global.NetworkPayMatchEntryFee(amount, p2, p3)
	return _in(0x9346E14F2AF74D46, amount, _i, p2, p3)
end
Global.N_0x9346e14f2af74d46 = Global.NetworkPayMatchEntryFee

function Global.NetworkPayUtilityBill(amount, p1, p2)
	return _in(0xAFE08B35EC0C9EAE, amount, p1, p2)
end
Global.N_0xafe08b35ec0c9eae = Global.NetworkPayUtilityBill

function Global.NetworkPlayerGetCheaterReason()
	return _in(0x172F75B6EE2233BA, _r)
end
Global.N_0x172f75b6ee2233ba = Global.NetworkPlayerGetCheaterReason
Global.NetworkPlayerIsUnk = Global.NetworkPlayerGetCheaterReason

--- Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
-- Does exactly the same as GET_PLAYER_NAME.
function Global.NetworkPlayerGetName(player)
	return _in(0x7718D2E2060837D2, player, _r, _s)
end

--- Sets [userID] to the user id of the given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
-- ```
-- ```
-- NativeDB Parameter 1: int* userID
function Global.NetworkPlayerGetUserid(player, userID)
	return _in(0x4927FC39CD0869A0, player, _ts(userID), _r, _s)
end
Global.NetworkPlayerGetUserId = Global.NetworkPlayerGetUserid

function Global.NetworkPlayerHasHeadset(player)
	return _in(0x3FB99A8B08D18FD6, player, _r)
end

--- Does exactly the same thing as PLAYER_ID()
function Global.NetworkPlayerIdToInt()
	return _in(0xEE68096F9F37341E, _r, _ri)
end

function Global.NetworkPlayerIndexIsCheater(player)
	return _in(0x565E430DB3B05BEC, player, _r)
end
Global.N_0x565e430db3b05bec = Global.NetworkPlayerIndexIsCheater
Global.NetworkPlayerSomething = Global.NetworkPlayerIndexIsCheater

--- Returns whether the player has been reported too often or not.
-- Example : griefing.
function Global.NetworkPlayerIsBadsport()
	return _in(0x19D8DA0E5A68045A, _r)
end

function Global.NetworkPlayerIsCheater()
	return _in(0x655B91F1495A9090, _r)
end

--- Checks if a specific value (BYTE) in CPlayerInfo is nonzero.
-- Returns always false in Singleplayer.
-- No longer used for dev checks since first mods were released on PS3 & 360.
-- R* now checks with the is_dlc_present native for the dlc hash 2532323046,
-- if that is present it will unlock dev stuff.
function Global.NetworkPlayerIsRockstarDev(player)
	return _in(0x544ABDDA3B409B6D, player, _r)
end

function Global.NetworkQueryRespawnResults(p0)
	return _in(0x3C891A251567DFCE, _ii(p0) --[[ may be optional ]], _r, _ri)
end
Global.N_0x3c891a251567dfce = Global.NetworkQueryRespawnResults

function Global.NetworkReceivePlayerJobshareCash(value, networkHandle)
	return _in(0x56A3B51944C50598, value, _ii(networkHandle) --[[ may be optional ]])
end

--- index
-- -------
-- See function sub_1005 in am_boat_taxi.ysc
-- context
-- ----------
-- "BACKUP_VAGOS"
-- "BACKUP_LOST"
-- "BACKUP_FAMILIES"
-- "HIRE_MUGGER"
-- "HIRE_MERCENARY"
-- "BUY_CARDROPOFF"
-- "HELI_PICKUP"
-- "BOAT_PICKUP"
-- "CLEAR_WANTED"
-- "HEAD_2_HEAD"
-- "CHALLENGE"
-- "SHARE_LAST_JOB"
-- "DEFAULT"
-- reason
-- ---------
-- "NOTREACHTARGET"
-- "TARGET_ESCAPE"
-- "DELIVERY_FAIL"
-- "NOT_USED"
-- "TEAM_QUIT"
-- "SERVER_ERROR"
-- "RECEIVE_LJ_L"
-- "CHALLENGE_PLAYER_LEFT"
-- "DEFAULT"
-- unk
-- -----
-- Unknown bool value
function Global.NetworkRefundCash(index, context, reason, unk)
	return _in(0xF9C812CD7C46E817, index, _ts(context), _ts(reason), unk)
end
Global.N_0xf9c812cd7c46e817 = Global.NetworkRefundCash

function Global.NetworkRegisterEntityAsNetworked(entity)
	return _in(0x06FAACD625D80CAA, entity)
end
Global.N_0x06faacd625d80caa = Global.NetworkRegisterEntityAsNetworked

--- sizeofVars is in bytes
function Global.NetworkRegisterHostBroadcastVariables(numVars)
	return _in(0x3E9B2F01C50DF595, _i, numVars)
end

function Global.NetworkRegisterPlayerBroadcastVariables(numVars)
	return _in(0x3364AA97340CA215, _i, numVars)
end

--- NativeDB Parameter 0: Hash contextHash
-- NativeDB Parameter 1: Hash nameHash
function Global.NetworkRegisterTunableBoolHash(contextHash, nameHash, value)
	return _in(0x697F508861875B42, contextHash, nameHash, _i --[[ actually bool ]], _r)
end
Global.N_0x697f508861875b42 = Global.NetworkRegisterTunableBoolHash

--- NativeDB Parameter 0: Hash contextHash
-- NativeDB Parameter 1: Hash nameHash
function Global.NetworkRegisterTunableFloatHash(contextHash, nameHash, value)
	return _in(0x1950DAE9848A4739, contextHash, nameHash, _fi(value) --[[ may be optional ]], _r)
end
Global.N_0x1950dae9848a4739 = Global.NetworkRegisterTunableFloatHash

--- NativeDB Parameter 0: Hash contextHash
-- NativeDB Parameter 1: Hash nameHash
function Global.NetworkRegisterTunableIntHash(contextHash, nameHash, value)
	return _in(0x3A8B55FDA4C8DDEF, contextHash, nameHash, _ii(value) --[[ may be optional ]], _r)
end
Global.N_0x3a8b55fda4c8ddef = Global.NetworkRegisterTunableIntHash

function Global.NetworkRemoveAllTransitionInvite()
	return _in(0x726E0375C7A26368)
end
Global.N_0x726e0375c7a26368 = Global.NetworkRemoveAllTransitionInvite

function Global.NetworkRemoveEntityArea(p0)
	return _in(0x93CF869BAA0C4874, p0, _r)
end

function Global.NetworkRemovePresenceInvite(p0)
	return _in(0xF0210268DB0974B1, p0, _r)
end
Global.N_0xf0210268db0974b1 = Global.NetworkRemovePresenceInvite

function Global.NetworkRemoveTransitionInvite(p0)
	return _in(0x7524B431B2E6F7EE, _ii(p0) --[[ may be optional ]])
end

function Global.NetworkReportMyself()
	return _in(0x5626D9D6810730D5)
end
Global.N_0x5626d9d6810730d5 = Global.NetworkReportMyself

--- Start the downloading of BG_NG.RPF from R* Cloud which contains hotfix.
-- As you can see here you will see the 155465EE first then the correct hash for this native. Then the current 29532731 one which could be the native below or the native below's hash could be the has below the 29532731
-- puu.sh/nhdQI/e0ca5567b4.png
-- The code:
-- seg001:00000000003EFF4C uunk_0x29532731:                        # CODE XREF: sub_158C8AC+14p
-- seg001:00000000003EFF4C                 lis       r3, dword_1CFB100@ha
-- seg001:00000000003EFF50                 lwz       r3, dword_1CFB100@l(r3)
-- seg001:00000000003EFF54                 ld        r3, 0x1020(r3)
-- seg001:00000000003EFF58                 extsw     r3, r3
-- seg001:00000000003EFF5C                 blr
-- seg001:00000000003EFF5C # End of function uunk_0x29532731
function Global.NetworkRequestCloudBackgroundScripts()
	return _in(0x924426BFFD82E915, _r)
end
Global.N_0x924426bffd82e915 = Global.NetworkRequestCloudBackgroundScripts
Global.NetworkRequestCloudBackgroundScripts = Global.NetworkRequestCloudBackgroundScripts

--- This native start the download of tunables from R* cloud
function Global.NetworkRequestCloudTunables()
	return _in(0x42FB3B532D526E6C)
end
Global.N_0x42fb3b532d526e6c = Global.NetworkRequestCloudTunables

function Global.NetworkRequestControlOfDoor(doorID)
	return _in(0x870DDFD5A4A796E4, doorID, _r)
end

function Global.NetworkRequestControlOfEntity(entity)
	return _in(0xB69317BF5E782347, entity, _r)
end

function Global.NetworkRequestControlOfNetworkId(netId)
	return _in(0xA670B3662FAFFBD0, netId, _r)
end

function Global.NetworkResetBodyTracker()
	return _in(0x72433699B4E6DD64)
end

--- p4 and p5 are always 0 in scripts
function Global.NetworkRespawnCoords(player, x, y, z, p4, p5)
	return _in(0x9769F811D1785B03, player, x, y, z, p4, p5)
end
Global.N_0x9769f811d1785b03 = Global.NetworkRespawnCoords

--- NativeDB Added Parameter 7: Any p6
function Global.NetworkResurrectLocalPlayer(x, y, z, heading, unk, changetime)
	return _in(0xEA23C49EAA83ACFB, x, y, z, heading, unk, changetime)
end

--- NativeDB Introduced: v1290
-- @param earnedMoney :
function Global.NetworkRivalDeliveryCompleted(earnedMoney)
	return _in(0x1B882107C23A9022, earnedMoney)
end

function Global.NetworkSendPresenceInvite(p2, p3)
	return _in(0xC3C7A6AFDB244624, _i, _i, p2, p3, _r)
end
Global.N_0xc3c7a6afdb244624 = Global.NetworkSendPresenceInvite

--- String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.
function Global.NetworkSendPresenceTransitionInvite(p2, p3)
	return _in(0xC116FF9B4D488291, _i, _i, p2, p3, _r)
end
Global.N_0xc116ff9b4d488291 = Global.NetworkSendPresenceTransitionInvite

--- how can I increase the character limit on this native?
-- --------------------------------
-- return - it's possible for it to have an error and return a value. One error is if it cannot find space to create the event it doesn't send the text and returns zero. It also returns 0 is the strlen is 0 or the strlen > 0x100 (I thought it was 64 so idk why it's checking 265. I may just be dumb :P ) There are other ways it could return 0 also but who the hell cares cuz it's very unlikely, but it returns a bool.
-- to the top guy, idk if it is possible. It is probably read a max of 64 characters on the recieving end so even if we did modify it to send more it probably wouldn't work. One of the other problems is that in part of the function it copies the string to the local stack which means we would have to change that to make it work.
function Global.NetworkSendTextMessage(message, networkHandle)
	return _in(0x3A214F2EC889B100, _ts(message), _ii(networkHandle) --[[ may be optional ]], _r)
end

--- the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1
-- does this send an invite to a player?
function Global.NetworkSendTransitionGamerInstruction(p1, p2, p3, p4)
	return _in(0x31D1D2B858D25E6B, _i, _ts(p1), p2, p3, p4, _r)
end

function Global.NetworkSessionActivityQuickmatch(p0, p1, p2, p3)
	return _in(0xBE3E347A87ACEB82, p0, p1, p2, p3, _r)
end
Global.N_0xbe3e347a87aceb82 = Global.NetworkSessionActivityQuickmatch

function Global.NetworkSessionBlockJoinRequests(toggle)
	return _in(0xA73667484D7037C3, toggle)
end
Global.N_0xa73667484d7037c3 = Global.NetworkSessionBlockJoinRequests

function Global.NetworkSessionCancelInvite()
	return _in(0x2FBF47B1B36D36F9)
end

function Global.NetworkSessionChangeSlots(p0, p1)
	return _in(0xB4AB419E0D86ACAE, p0, p1)
end
Global.N_0xb4ab419e0d86acae = Global.NetworkSessionChangeSlots

function Global.NetworkSessionCrewMatchmaking(p0, p1, p2, maxPlayers, p4)
	return _in(0x94BC51E9449D917F, p0, p1, p2, maxPlayers, p4, _r)
end
Global.N_0x94bc51e9449d917f = Global.NetworkSessionCrewMatchmaking

--- p0 is always false and p1 varies.
-- NETWORK_SESSION_END(0, 1)
-- NETWORK_SESSION_END(0, 0)
-- Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."
function Global.NetworkSessionEnd(p0, p1)
	return _in(0xA02E59562D711006, p0, p1, _r)
end

--- unknown params
-- p0 = 0, 2, or 999 (The global is 999 by default.)
-- p1 = 0 (Always in every script it's found in atleast.)
-- p2 = 0, 3, or 4 (Based on a var that is determined by a function.)
-- p3 = maxPlayers (It's obvious in x360 scripts it's always 18)
-- p4 = 0 (Always in every script it's found in atleast.)
-- p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)
-- p5 is reset to 0 if,
-- Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.
function Global.NetworkSessionEnter(p0, p1, p2, maxPlayers, p4, p5)
	return _in(0x330ED4D05491934F, p0, p1, p2, maxPlayers, p4, p5, _r, _ri)
end

function Global.NetworkSessionForceCancelInvite()
	return _in(0xA29177F7703B5644)
end
Global.N_0xa29177f7703b5644 = Global.NetworkSessionForceCancelInvite

function Global.NetworkSessionFriendMatchmaking(p0, p1, maxPlayers, p3)
	return _in(0x2CFC76E0D087C994, p0, p1, maxPlayers, p3, _r)
end
Global.N_0x2cfc76e0d087c994 = Global.NetworkSessionFriendMatchmaking

function Global.NetworkSessionGetInviter(networkHandle)
	return _in(0xE57397B4A3429DD0, _ii(networkHandle) --[[ may be optional ]])
end

function Global.NetworkSessionGetKickVote(player)
	return _in(0xD6D09A6F32F49EF1, player, _r)
end
Global.NetworkSessionArePlayersVotingToKick = Global.NetworkSessionGetKickVote
Global.NetworkSessionIsPlayerVotedToKick = Global.NetworkSessionGetKickVote

function Global.NetworkSessionGetMatchmakingGroupFree(p0)
	return _in(0x56CE820830EF040B, p0, _r, _ri)
end
Global.N_0x56ce820830ef040b = Global.NetworkSessionGetMatchmakingGroupFree
Global.NetworkSessionGetUnk = Global.NetworkSessionGetMatchmakingGroupFree

function Global.NetworkSessionGetPrivateSlots()
	return _in(0x53AFD64C6758F2F9, _r, _ri)
end
Global.N_0x53afd64c6758f2f9 = Global.NetworkSessionGetPrivateSlots

--- Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
function Global.NetworkSessionHost(p0, maxPlayers, p2)
	return _in(0x6F3D4ED9BEE4E61D, p0, maxPlayers, p2, _r)
end

function Global.NetworkSessionHostClosed(p0, maxPlayers)
	return _in(0xED34C0C02C098BB7, p0, maxPlayers, _r)
end
Global.N_0xed34c0c02c098bb7 = Global.NetworkSessionHostClosed

--- Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
function Global.NetworkSessionHostFriendsOnly(p0, maxPlayers)
	return _in(0xB9CFD27A5D578D83, p0, maxPlayers, _r)
end

--- Loads up the map that is loaded when beeing in mission creator
-- Player gets placed in a mix between online/offline mode
-- p0 is always 2 in R* scripts.
-- Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
function Global.NetworkSessionHostSinglePlayer(p0)
	return _in(0xC74C33FCA52856D5, p0)
end

function Global.NetworkSessionHosted(p0)
	return _in(0xC19F6C8E7865A6FF, p0)
end
Global.N_0xc19f6c8e7865a6ff = Global.NetworkSessionHosted

function Global.NetworkSessionIsClosedCrew()
	return _in(0x74732C6CA90DA2B4, _r)
end
Global.N_0x74732c6ca90da2b4 = Global.NetworkSessionIsClosedCrew

function Global.NetworkSessionIsClosedFriends()
	return _in(0xFBCFA2EA2E206890, _r)
end
Global.N_0xfbcfa2ea2e206890 = Global.NetworkSessionIsClosedFriends

function Global.NetworkSessionIsInVoiceSession()
	return _in(0x855BC38818F6F684, _r)
end
Global.N_0x855bc38818f6f684 = Global.NetworkSessionIsInVoiceSession

function Global.NetworkSessionIsPrivate()
	return _in(0xCEF70AA5B3F89BA1, _r)
end
Global.N_0xcef70aa5b3f89ba1 = Global.NetworkSessionIsPrivate

function Global.NetworkSessionIsSolo()
	return _in(0xF3929C2379B60CCE, _r)
end
Global.N_0xf3929c2379b60cce = Global.NetworkSessionIsSolo

function Global.NetworkSessionIsVisible()
	return _in(0xBA416D68C631496A, _r)
end
Global.N_0xba416d68c631496a = Global.NetworkSessionIsVisible

function Global.NetworkSessionIsVoiceSessionBusy()
	return _in(0xEF0912DDF7C4CB4B, _r)
end
Global.N_0xef0912ddf7c4cb4b = Global.NetworkSessionIsVoiceSessionBusy

function Global.NetworkSessionJoinInvite()
	return _in(0xC6F8AB8A4189CF3A)
end
Global.NetworkIsPlayerAnimationDrawingSynchronized = Global.NetworkSessionJoinInvite

--- Only works when you are host.
function Global.NetworkSessionKickPlayer(player)
	return _in(0xFA8904DC5F304220, player)
end

function Global.NetworkSessionLeaveSinglePlayer()
	return _in(0x3442775428FD2DAA)
end

function Global.NetworkSessionMarkVisible(toggle)
	return _in(0x271CC6AB59EBF9A5, toggle)
end
Global.N_0x271cc6ab59ebf9a5 = Global.NetworkSessionMarkVisible

--- p0 = 0 or 4
function Global.NetworkSessionSetMatchmakingGroup(matchmakingGroup)
	return _in(0x49EC8030F5015F8B, matchmakingGroup)
end
Global.N_0x49ec8030f5015f8b = Global.NetworkSessionSetMatchmakingGroup
Global.NetworkSctvSlots = Global.NetworkSessionSetMatchmakingGroup

--- playerTypes:
-- 0 = regular joiner
-- 4 = spectator
-- 8 = unknown
function Global.NetworkSessionSetMatchmakingGroupMax(playerType, playerCount)
	return _in(0x8B6A4DD0AF9CE215, playerType, playerCount)
end
Global.N_0x8b6a4dd0af9ce215 = Global.NetworkSessionSetMatchmakingGroupMax
Global.NetworkSessionSetMaxPlayers = Global.NetworkSessionSetMatchmakingGroupMax

function Global.NetworkSessionSetMatchmakingMentalState(p0)
	return _in(0xF1EEA2DDA9FFA69D, p0)
end
Global.N_0xf1eea2dda9ffa69d = Global.NetworkSessionSetMatchmakingMentalState

function Global.NetworkSessionSetMatchmakingPropertyId(p0)
	return _in(0x3F52E880AAF6C8CA, p0)
end
Global.N_0x3f52e880aaf6c8ca = Global.NetworkSessionSetMatchmakingPropertyId

--- Only one occurence in the scripts:
-- auto sub_cb43(auto a_0, auto a_1) {
-- if (g_2594CB._f1) {
-- if (NETWORK::_855BC38818F6F684()) {
-- NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
-- g_2594CB._f14/*{13}*/ = a_0._fB93;
-- g_2594CB._f4/*"64"*/ = a_1;
-- return 1;
-- }
-- }
-- return 0;
-- }
-- other:
-- looks like it passes a player in the paramater
-- Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
function Global.NetworkSessionVoiceConnectToPlayer(globalPtr)
	return _in(0xABD5E88B8A2D3DB2, _ii(globalPtr) --[[ may be optional ]])
end
Global.N_0xabd5e88b8a2d3db2 = Global.NetworkSessionVoiceConnectToPlayer
Global.NetworkVoiceConnectToPlayer = Global.NetworkSessionVoiceConnectToPlayer

function Global.NetworkSessionVoiceHost()
	return _in(0x9C1556705F864230)
end

function Global.NetworkSessionVoiceLeave()
	return _in(0x6793E42BE02B575D)
end

function Global.NetworkSessionWasInvited()
	return _in(0x23DFB504655D0CE4, _r)
end
Global.N_0x23dfb504655d0ce4 = Global.NetworkSessionWasInvited

function Global.NetworkSetActivitySpectator(toggle)
	return _in(0x75138790B4359A74, toggle)
end

function Global.NetworkSetActivitySpectatorMax(maxSpectators)
	return _in(0x9D277B76D1D12222, maxSpectators)
end

--- NETWORK_SET_*
function Global.NetworkSetChoiceMigrateOptions(toggle, player)
	return _in(0x5C707A667DF8B9FA, toggle, player)
end
Global.N_0x5c707a667df8b9fa = Global.NetworkSetChoiceMigrateOptions

function Global.NetworkSetCurrentDataManagerHandle(p0)
	return _in(0x796A87B3B68D1F3D, _ii(p0) --[[ may be optional ]], _r)
end
Global.N_0x796a87b3b68d1f3d = Global.NetworkSetCurrentDataManagerHandle
Global.NetworkCheckDataManagerForHandle = Global.NetworkSetCurrentDataManagerHandle

function Global.NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(p0)
	return _in(0x7206F674F2A3B1BB, _ii(p0) --[[ may be optional ]], _r)
end

function Global.NetworkSetEntityCanBlend(entity, toggle)
	return _in(0xD830567D88A1E873, entity, toggle)
end

--- if set to true other network players can't see it
-- if set to false other network player can see it
-- =========================================
-- ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
-- pc or last gen?
-- ^^ last-gen
function Global.NetworkSetEntityInvisibleToNetwork(entity, toggle)
	return _in(0xF1CA12B18AEF5298, entity, toggle)
end
Global.N_0xf1ca12b18aef5298 = Global.NetworkSetEntityInvisibleToNetwork
Global.NetworkSetEntityVisibleToNetwork = Global.NetworkSetEntityInvisibleToNetwork

--- //friendly fire toggle
function Global.NetworkSetFriendlyFireOption(toggle)
	return _in(0xF808475FA571D823, toggle)
end

function Global.NetworkSetGamerInvitedToTransition(networkHandle)
	return _in(0xCA2C8073411ECDB6, _ii(networkHandle) --[[ may be optional ]])
end

function Global.NetworkSetInFreeCamMode(toggle)
	return _in(0xFC18DB55AE19E046, toggle)
end
Global.N_0xfc18db55ae19e046 = Global.NetworkSetInFreeCamMode

function Global.NetworkSetInMpCutscene(p0, p1)
	return _in(0x9CA5DE655269FEC4, p0, p1)
end

function Global.NetworkSetInSpectatorMode(toggle, playerPed)
	return _in(0x423DE3854BB50894, toggle, playerPed)
end

function Global.NetworkSetInSpectatorModeExtended(toggle, playerPed, p2)
	return _in(0x419594E137637120, toggle, playerPed, p2)
end
Global.N_0x419594e137637120 = Global.NetworkSetInSpectatorModeExtended

function Global.NetworkSetInviteOnCallForInviteMenu(p0)
	return _in(0x66F010A4B031A331, _ii(p0) --[[ may be optional ]])
end
Global.N_0x66f010a4b031a331 = Global.NetworkSetInviteOnCallForInviteMenu

function Global.NetworkSetKeepFocuspoint(p0, p1)
	return _in(0x7F8413B7FC2AA6B9, p0, p1)
end

function Global.NetworkSetLocalPlayerInvincibleTime(time)
	return _in(0x2D95C7E2D7E07307, time)
end

function Global.NetworkSetLocalPlayerSyncLookAt(toggle)
	return _in(0x524FF0AEFF9C3973, toggle)
end
Global.N_0x524ff0aeff9c3973 = Global.NetworkSetLocalPlayerSyncLookAt

function Global.NetworkSetMissionFinished()
	return _in(0x3B3D11CD9FFCDFC9)
end

--- This is called shortly after setting Network ID Migration off it seems. Does anyone know the point of this?
-- Example scenario,
-- If I were to request and gain control of an online players vehicle then their vehicle's Network ID and turn migration off. I wouldn't need to ever request control again as they wouldn't gain control back.
-- - scenario over -
-- So what would be the point hereafter of setting it 'dynamic'?
function Global.NetworkSetNetworkIdDynamic(netID, toggle)
	return _in(0x2B1813ABA29016C5, netID, toggle)
end
Global.N_0x2b1813aba29016c5 = Global.NetworkSetNetworkIdDynamic

function Global.NetworkSetNoSpectatorChat(toggle)
	return _in(0xF46A1E03E8755980, toggle)
end
Global.N_0xf46a1e03e8755980 = Global.NetworkSetNoSpectatorChat

function Global.NetworkSetOverrideSpectatorMode(toggle)
	return _in(0x70DA3BF8DACD3210, toggle)
end

function Global.NetworkSetPlayerIsPassive(toggle)
	return _in(0x1B857666604B1A74, toggle)
end
Global.N_0x1b857666604b1a74 = Global.NetworkSetPlayerIsPassive

--- value must be < 255
function Global.NetworkSetPropertyId(id)
	return _in(0x1775961C2FBBCB5C, id)
end

--- On PC it's a nullsub which means it does absolutely nothing.
-- Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...
function Global.NetworkSetRichPresence(p0, p1, p2, p3)
	return _in(0x1DCCACDCFC569362, p0, p1, p2, p3)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- NETWORK_SET_RICH_PRESENCE but for PlayStation? (On PC it's a nullsub)
-- ```
function Global.NetworkSetRichPresence_2(p0, gxtLabel)
	return _in(0x3E200C2BCF4164EB, p0, _ts(gxtLabel))
end
Global.N_0x3e200c2bcf4164eb = Global.NetworkSetRichPresence_2

function Global.NetworkSetScriptIsSafeForNetworkGame()
	return _in(0x9243BAC96D64C050)
end

function Global.NetworkSetTalkerProximity(value)
	return _in(0xCBF12D65F95AD686, value)
end

function Global.NetworkSetTeamOnlyChat(toggle)
	return _in(0xD5B4883AC32F24C3, toggle)
end

--- p1 is always 0
function Global.NetworkSetThisScriptIsNetworkScript(lobbySize, p1, playerId)
	return _in(0x1CA59E306ECB80A5, lobbySize, p1, playerId)
end

function Global.NetworkSetTransitionActivityId(p0)
	return _in(0x30DE938B516F0AD2, p0)
end
Global.N_0x30de938b516f0ad2 = Global.NetworkSetTransitionActivityId

function Global.NetworkSetTransitionCreatorHandle(p0)
	return _in(0xEF26739BCD9907D5, _ii(p0) --[[ may be optional ]])
end

--- x360 Hash: 0x4AF0ADF5
function Global.NetworkSetTransitionVisibilityLock(p0, p1)
	return _in(0x0C978FDA19692C2C, p0, p1)
end
Global.N_0x0c978fda19692c2c = Global.NetworkSetTransitionVisibilityLock

--- Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
-- ```
-- ```
-- NativeDB Introduced: v1365
-- @param vehicle :
-- @param toggle :
function Global.NetworkSetVehicleWheelsDestructible(vehicle, toggle)
	return _in(0x890E2C5ABED7236D, vehicle, toggle)
end
Global.N_0x890e2c5abed7236d = Global.NetworkSetVehicleWheelsDestructible

function Global.NetworkSetVoiceActive(toggle)
	return _in(0xBABEC9E69A91C57B, toggle)
end

function Global.NetworkSetVoiceChannel(channel)
	return _in(0xEF6212C2EFEF1A23, channel)
end

--- Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
function Global.NetworkShouldShowConnectivityTroubleshooting()
	return _in(0x82A2B386716608F1, _r)
end
Global.N_0x82a2b386716608f1 = Global.NetworkShouldShowConnectivityTroubleshooting

--- Example:
-- int playerHandle;
-- NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);
-- NETWORK_SHOW_PROFILE_UI(&playerHandle);
function Global.NetworkShowProfileUi(networkHandle)
	return _in(0x859ED1CEA343FCA8, _ii(networkHandle) --[[ may be optional ]])
end

function Global.NetworkSpentAmmoDrop(p0, p1, p2)
	return _in(0xB162DC95C0A3317B, p0, p1, p2)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentArenaJoinSpectator(amount, p1, p2, p3)
	return _in(0x14EAEA58F93B55AF, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentArenaPremium(amount, p1, p2)
	return _in(0x619496D837EFD920, amount, p1, p2)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentArenaSpectatorBox(amount, p1, p2, p3)
	return _in(0x7049BF858601DC0F, amount, p1, p2, p3)
end

function Global.NetworkSpentArrestBail(p0, p1, p2)
	return _in(0x812F5488B1B2A299, p0, p1, p2)
end

function Global.NetworkSpentBallisticEquipment(amount, p1, p2)
	return _in(0x5D97630A8A0EF123, amount, p1, p2)
end
Global.N_0x5d97630a8a0ef123 = Global.NetworkSpentBallisticEquipment

--- NativeDB Introduced: v323
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentBankInterest(p0, p1, p2)
	return _in(0xCA230C9682556CF1, p0, p1, p2)
end

--- NativeDB Parameter 2: char* matchId
function Global.NetworkSpentBetting(amount, p1, p3, p4)
	return _in(0x1C436FD11FFA692F, amount, p1, _i, p3, p4)
end

function Global.NetworkSpentBoatPickup(p0, p1, p2)
	return _in(0x524EE43A37232C00, p0, p1, p2)
end

--- NativeDB Added Parameter 1: int amount
-- NativeDB Added Parameter 2: BOOL p1
-- NativeDB Added Parameter 3: BOOL p2
function Global.NetworkSpentBoss()
	return _in(0xFFBE02CD385356BD, _r)
end
Global.N_0xffbe02cd385356bd = Global.NetworkSpentBoss

function Global.NetworkSpentBounty(p0, p1, p2)
	return _in(0x29B260B84947DFCC, p0, p1, p2)
end

--- NativeDB Introduced: v1493
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentBountyHunterMission(amount, p1, p2)
	return _in(0x1BEA0CD93470BB1F, amount, p1, p2)
end

function Global.NetworkSpentBullShark(p0, p1, p2)
	return _in(0xA6DD8458CE24012C, p0, p1, p2)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentBuyArena(amount, p1, p2, p3)
	return _in(0x40D5DA9550B7CB46, amount, p1, p2, _ts(p3))
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentBuyBase(p0, p1, p2, p3)
	return _in(0x4EA3F425C7744D21, p0, p1, p2, p3)
end

function Global.NetworkSpentBuyBunker(p0, p1, p2, p3)
	return _in(0x12D148D26538D0F9, p0, p1, p2, p3)
end
Global.N_0x12d148d26538d0f9 = Global.NetworkSpentBuyBunker

function Global.NetworkSpentBuyOfftheradar(p0, p1, p2)
	return _in(0xA628A745E2275C5D, p0, p1, p2)
end

function Global.NetworkSpentBuyPassiveMode(p0, p1, p2)
	return _in(0x6D3A430D1A809179, p0, p1, p2)
end

function Global.NetworkSpentBuyRevealPlayers(p0, p1, p2)
	return _in(0x6E176F1B18BC0637, p0, p1, p2)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentBuyTiltrotor(p0, p1, p2, p3)
	return _in(0x0CCE73BC7A11E885, p0, p1, p2, p3)
end

function Global.NetworkSpentBuyTruck(p0, p1, p2, p3)
	return _in(0xAC272C0AE01B4BD8, p0, p1, p2, p3)
end
Global.N_0xac272c0ae01b4bd8 = Global.NetworkSpentBuyTruck

function Global.NetworkSpentBuyWantedlevel(p0, p2, p3)
	return _in(0xE1B13771A843C4F6, p0, _i, p2, p3)
end

function Global.NetworkSpentCallPlayer(p0, p2, p3)
	return _in(0xACDE7185B374177C, p0, _i, p2, p3)
end

function Global.NetworkSpentCarwash(p0, p1, p2, p3, p4)
	return _in(0xEC03C719DB2F4306, p0, p1, p2, p3, p4)
end

function Global.NetworkSpentCashDrop(amount, p1, p2)
	return _in(0x289016EC778D60E0, amount, p1, p2)
end

function Global.NetworkSpentCinema(p0, p1, p2, p3)
	return _in(0x6B38ECB05A63A685, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentEmployAssassins(p0, p1, p2, p3)
	return _in(0x5BBBD92186E1F1C5, p0, p1, p2, p3)
end

function Global.NetworkSpentFromRockstar(bank, p1, p2)
	return _in(0x6A445B64ED7ABEB5, bank, p1, p2)
end
Global.N_0x6a445b64ed7abeb5 = Global.NetworkSpentFromRockstar

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentGangopsCannon(p0, p1, p2, p3)
	return _in(0x771ADB0E7635B7BF, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentGangopsStartMission(p0, p1, p2, p3)
	return _in(0xDA947AE8880D5C18, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param type :
-- @param amount :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentGangopsStartStrand(type, amount, p2, p3)
	return _in(0xA19EC0786E326E06, type, amount, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentGangopsTripSkip(amount, p1, p2)
	return _in(0x5ECE6FD7B4EC8D6A, amount, p1, p2)
end

--- NativeDB Introduced: v1180
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentHangarStaffCharges(amount, p1, p2)
	return _in(0xB1F1346FD57685D7, amount, p1, p2)
end

--- NativeDB Introduced: v1180
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentHangarUtilityCharges(amount, p1, p2)
	return _in(0xB18AC2ECBB15CB6A, amount, p1, p2)
end

function Global.NetworkSpentHeliPickup(p0, p1, p2)
	return _in(0x7BF1D73DB2ECA492, p0, p1, p2)
end

function Global.NetworkSpentHireMercenary(p0, p1, p2)
	return _in(0xE7B80E2BF9D80BD6, p0, p1, p2)
end

--- Only used once in a script (am_contact_requests)
-- p1 = 0
-- p2 = 1
function Global.NetworkSpentHireMugger(p0, p1, p2)
	return _in(0xE404BFB981665BF0, p0, p1, p2)
end

function Global.NetworkSpentHoldups(p0, p1, p2)
	return _in(0xD9B86B9872039763, p0, p1, p2)
end

function Global.NetworkSpentImportExportRepair(p0, p1, p2)
	return _in(0xC1952F3773BA18FE, p0, p1, p2)
end
Global.N_0xc1952f3773ba18fe = Global.NetworkSpentImportExportRepair

function Global.NetworkSpentInStripclub(p0, p1, p2, p3)
	return _in(0xEE99784E4467689C, p0, p1, p2, p3)
end
Global.N_0xee99784e4467689c = Global.NetworkSpentInStripclub

--- NativeDB Introduced: v323
-- @param amount :
-- @param matchId :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentJobSkip(amount, matchId, p2, p3)
	return _in(0x28F174A67B8D0C2F, amount, _ts(matchId), p2, p3)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentMakeItRain(amount, p1, p2)
	return _in(0xE5F5A060439C2F5D, amount, p1, p2)
end

function Global.NetworkSpentMoveYacht(amount, p1, p2)
	return _in(0xE7DF4E0545DFB56E, amount, p1, p2)
end
Global.N_0xe7df4e0545dfb56e = Global.NetworkSpentMoveYacht

--- NativeDB Introduced: v1493
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentNightclubBarDrink(amount, p1, p2, p3)
	return _in(0xDD21B016E4289465, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1493
-- @param player :
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentNightclubEntryFee(player, amount, p1, p2, p3)
	return _in(0x876056684281655D, player, amount, p1, p2, p3)
end

function Global.NetworkSpentNoCops(p0, p1, p2)
	return _in(0xD5BB406F4E04019F, p0, p1, p2)
end
Global.N_0xd5bb406f4e04019f = Global.NetworkSpentNoCops

function Global.NetworkSpentPayGoon(p0, p1, amount)
	return _in(0x08A1B82B91900682, p0, p1, amount)
end
Global.N_0x08a1b82b91900682 = Global.NetworkSpentPayGoon

--- According to how I understood this in the freemode script alone,
-- The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
-- The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
-- The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
-- The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
-- The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
-- bool hasTheMoney = NETWORKCASH::_GET_BANK_BALANCE() < carCost.
function Global.NetworkSpentPayVehicleInsurancePremium(amount, vehicleModel, notBankrupt, hasTheMoney)
	return _in(0x9FF28D88C766E3E8, amount, _ch(vehicleModel), _i, notBankrupt, hasTheMoney)
end

function Global.NetworkSpentPlayerHealthcare(p0, p1, p2, p3)
	return _in(0x7C99101F7FCE2EE5, p0, p1, p2, p3)
end
Global.N_0x7c99101f7fce2ee5 = Global.NetworkSpentPlayerHealthcare

function Global.NetworkSpentProstitutes(p0, p1, p2)
	return _in(0xB21B89501CFAC79E, p0, p1, p2)
end

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentPurchaseHangar(p0, p1, p2, p3)
	return _in(0xCCB339CC970452DA, p0, p1, p2, p3)
end

function Global.NetworkSpentPurchaseWarehouse(amount, data, p2, p3)
	return _in(0x33981D6804E62F49, amount, data, p2, p3)
end
Global.N_0x33981d6804e62f49 = Global.NetworkSpentPurchaseWarehouse

--- NativeDB Introduced: v1493
-- @param amount :
-- @param p1 :
-- @param p2 :
function Global.NetworkSpentRdrhatchetBonus(amount, p1, p2)
	return _in(0xE284D46FFDB82E36, amount, p1, p2)
end

--- NativeDB Introduced: v1493
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentRehireDj(amount, p1, p2, p3)
	return _in(0xF6C8A544E4CF14FC, amount, p1, p2, p3)
end

function Global.NetworkSpentRequestHeist(p0, p1, p2)
	return _in(0x9D26502BB97BFE62, p0, p1, p2)
end
Global.N_0x9d26502bb97bfe62 = Global.NetworkSpentRequestHeist
Global.NetworkSpentRequestHeist = Global.NetworkSpentRequestHeist

function Global.NetworkSpentRequestJob(p0, p1, p2)
	return _in(0x8204DA7934DF3155, p0, p1, p2)
end
Global.N_0x8204da7934df3155 = Global.NetworkSpentRequestJob

function Global.NetworkSpentRobbedByMugger(amount, p1, p2)
	return _in(0x995A65F15F581359, amount, p1, p2)
end
Global.N_0x995a65f15f581359 = Global.NetworkSpentRobbedByMugger

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentSpinTheWheelPayment(amount, p1, p2, p3)
	return _in(0x9A5BD1D0000B339C, amount, p1, p2, p3)
end

function Global.NetworkSpentTaxi(amount, p1, p2)
	return _in(0x17C3A7D31EAE39F9, amount, p1, p2)
end

function Global.NetworkSpentTelescope(p0, p1, p2)
	return _in(0x7FE61782AD94CC09, p0, p1, p2)
end

--- NativeDB Introduced: v1604
-- @param amount :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentUpgradeArena(amount, p1, p2, p3)
	return _in(0x037ABB06825D7AB1, amount, p1, p2, _ts(p3))
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentUpgradeBase(p0, p1, p2, p3)
	return _in(0x3DD3F33A5D55EA6F, p0, p1, p2, p3)
end

function Global.NetworkSpentUpgradeBunker(p0, p1, p2, p3)
	return _in(0x0C82D21A77C22D49, p0, p1, p2, p3)
end
Global.N_0x0c82d21a77c22d49 = Global.NetworkSpentUpgradeBunker

--- NativeDB Introduced: v1180
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentUpgradeHangar(p0, p1, p2, p3)
	return _in(0x615EB504B0788DAF, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.NetworkSpentUpgradeTiltrotor(p0, p1, p2, p3)
	return _in(0x165E135D6DFA2907, p0, p1, p2, p3)
end

function Global.NetworkSpentUpgradeTruck(p0, p1, p2, p3)
	return _in(0x365E877C61D6988B, p0, p1, p2, p3)
end
Global.N_0x365e877c61d6988b = Global.NetworkSpentUpgradeTruck

function Global.NetworkSpentVipUtilityCharges(p0, p1, p2)
	return _in(0x5182A339A3474510, p0, p1, p2)
end
Global.N_0x5182a339a3474510 = Global.NetworkSpentVipUtilityCharges

function Global.NetworkSpentWager(p0, p1, amount)
	return _in(0xD99DB210089617FE, p0, p1, amount)
end
Global.N_0xd99db210089617fe = Global.NetworkSpentWager

--- One of the first things it does is get the players ped.
-- Then it calls a function that is used in some tasks and ped based functions.
function Global.NetworkStartRespawnSearchForPlayer(player, p1, p2, p3, p4, p5, p6, p7, flags)
	return _in(0x5A6FFA2433E2F14C, player, p1, p2, p3, p4, p5, p6, p7, flags, _r)
end
Global.N_0x5a6ffa2433e2f14c = Global.NetworkStartRespawnSearchForPlayer

--- Seems to call GET_PAUSED_MAP_STREAMING_REQUEST lol wtf
-- seg001:000000000158C324 sub_158C324:                            # DATA XREF: OPD:stru_1C29978o
-- seg001:000000000158C324
-- seg001:000000000158C324 .set arg_10,  0x10
-- seg001:000000000158C324
-- seg001:000000000158C324                 mflr      r0
-- seg001:000000000158C328                 bl        sub_1803774
-- seg001:000000000158C32C                 stdu      r1, -0x80(r1)
-- seg001:000000000158C330                 std       r0, 0x80+arg_10(r1)
-- seg001:000000000158C334                 mr        r31, r3
-- seg001:000000000158C338                 lwz       r3, 8(r31)
-- seg001:000000000158C33C                 addic     r4, r3, 4
-- seg001:000000000158C340                 addic     r5, r3, 0x10
-- seg001:000000000158C344                 addic     r7, r3, 0x20
-- seg001:000000000158C348                 lwz       r6, 0(r3)
-- seg001:000000000158C34C                 lfs       f1, 0x1C(r3)
-- seg001:000000000158C350                 lwz       r8, 0x2C(r3)
-- seg001:000000000158C354                 extsw     r3, r6
-- seg001:000000000158C358                 extsw     r8, r8
-- seg001:000000000158C35C                 bl        GET_PAUSED_MAP_STREAMING_REQUEST
-- seg001:000000000158C360                 lwz       r4, 0(r31)
-- seg001:000000000158C364                 stw       r3, 0(r4)
-- seg001:000000000158C368                 addi      r1, r1, 0x80
-- seg001:000000000158C36C                 b         loc_18037D8
-- sorta makes sense though since the one above this native and GET_PAUSED_MAP_STREAMING_REQUEST are used together often in scripts
function Global.NetworkStartRespawnSearchInAngledAreaForPlayer(player, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, flags)
	return _in(0x4BA92A18502BCA61, player, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, flags, _r)
end
Global.N_0x4ba92a18502bca61 = Global.NetworkStartRespawnSearchInAngledAreaForPlayer

--- NETWORK_START_R/S*
function Global.NetworkStartSoloTutorialSession()
	return _in(0x17E0198B3882C2CB)
end
Global.N_0x17e0198b3882c2cb = Global.NetworkStartSoloTutorialSession

function Global.NetworkStartSynchronisedScene(netScene)
	return _in(0x9A1B3FCDB36C8697, netScene)
end

function Global.NetworkStopLoadScene()
	return _in(0x64E630FAF5F60F44)
end

function Global.NetworkStopSynchronisedScene(netScene)
	return _in(0xC254481A4574CB2F, netScene)
end

function Global.NetworkSuppressInvite(toggle)
	return _in(0xA0682D67EF1FBA3D, toggle)
end

--- NativeDB Parameter 0: Hash hash
function Global.NetworkTransitionTrack(hash, p1, p2, state, p4)
	return _in(0xC3BFED92026A2AAD, hash, p1, p2, state, p4)
end
Global.N_0xc3bfed92026a2aad = Global.NetworkTransitionTrack

--- Returns a default value if the tunable don't exist.
function Global.NetworkTryAccessTunableBoolHash(tunableContext, tunableName, defaultValue)
	return _in(0xC7420099936CE286, _ch(tunableContext), _ch(tunableName), defaultValue, _r)
end
Global.N_0xc7420099936ce286 = Global.NetworkTryAccessTunableBoolHash
Global.NetworkAccessTunableBoolHashFailVal = Global.NetworkTryAccessTunableBoolHash

function Global.NetworkUnregisterNetworkedEntity(entity)
	return _in(0x7368E683BB9038D6, entity)
end
Global.N_0x7368e683bb9038d6 = Global.NetworkUnregisterNetworkedEntity

--- NativeDB Return Type: BOOL
function Global.NetworkUpdateLoadScene()
	return _in(0xC4582015556D1C46)
end

function Global.NetworkUpdatePlayerScars()
	return _in(0xB7C7F6AD6424304B)
end
Global.N_0xb7c7f6ad6424304b = Global.NetworkUpdatePlayerScars

function Global.NetworkXAffectsGamers(p0)
	return _in(0xE532D6811B3A4D2A, p0, _r)
end
Global.N_0xe532d6811b3a4d2a = Global.NetworkXAffectsGamers

function Global.NewLoadSceneStart(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x212A8D0D2BABFAC2, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

--- if (!sub_8f12("START LOAD SCENE SAFE")) {
-- if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
-- STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
-- sub_8e9e("START LOAD SCENE SAFE", 1);
-- }
-- }
-- (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
function Global.NewLoadSceneStartSphere(x, y, z, radius, p4)
	return _in(0xACCFB4ACF53551B0, x, y, z, radius, p4, _r)
end
Global.N_0xaccfb4acf53551b0 = Global.NewLoadSceneStartSphere

function Global.NewLoadSceneStop()
	return _in(0xC197616D221FF4A4)
end

--- Lets objects spawn online simply do it like this:
-- int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
function Global.ObjToNet(object)
	return _in(0x99BFDC94A603E541, object, _r, _ri)
end

function Global.ObjectValueAddArray(key)
	return _in(0x5B11728527CA6E5F, _i, _ts(key), _r, _ri)
end

function Global.ObjectValueAddBoolean(key, value)
	return _in(0x35124302A556A325, _i, _ts(key), value)
end

function Global.ObjectValueAddFloat(key, value)
	return _in(0xC27E1CC2D795105E, _i, _ts(key), value)
end

function Global.ObjectValueAddInteger(key, value)
	return _in(0xE7E035450A7948D5, _i, _ts(key), value)
end

function Global.ObjectValueAddObject(key)
	return _in(0xA358F56F10732EE1, _i, _ts(key), _r, _ri)
end

function Global.ObjectValueAddString(key, value)
	return _in(0x8FF3847DADD8E30C, _i, _ts(key), _ts(value))
end

function Global.ObjectValueAddVector3(key, valueX, valueY, valueZ)
	return _in(0x4CD49B76338C7DEE, _i, _ts(key), valueX, valueY, valueZ)
end

function Global.ObjectValueGetArray(key)
	return _in(0x7A983AA9DA2659ED, _i, _ts(key), _r, _ri)
end

function Global.ObjectValueGetBoolean(key)
	return _in(0x1186940ED72FFEEC, _i, _ts(key), _r)
end

function Global.ObjectValueGetFloat(key)
	return _in(0x06610343E73B9727, _i, _ts(key), _r, _rf)
end

function Global.ObjectValueGetInteger(key)
	return _in(0x78F06F6B1FB5A80C, _i, _ts(key), _r, _ri)
end

function Global.ObjectValueGetObject(key)
	return _in(0xB6B9DDC412FCEEE2, _i, _ts(key), _r, _ri)
end

function Global.ObjectValueGetString(key)
	return _in(0x3D2FD9E763B24472, _i, _ts(key), _r, _s)
end

--- Types:
-- 1 = Boolean
-- 2 = Integer
-- 3 = Float
-- 4 = String
-- 5 = Vector3
-- 6 = Object
-- 7 = Array
function Global.ObjectValueGetType(key)
	return _in(0x031C55ED33227371, _i, _ts(key), _r, _ri)
end

function Global.ObjectValueGetVector3(key)
	return _in(0x46CD3CB66E0825CC, _i, _ts(key), _r, _rv)
end

--- This loads the GTA:O dlc map parts (high end garages, apartments).
-- Works in singleplayer.
-- In order to use GTA:O heist IPL's you have to call this native with the following params: _9BAE5AD2508DF078(1);
function Global.OnEnterMp()
	return _in(0x0888C3502DBBEEF5)
end
Global.LoadMpDlcMaps = Global.OnEnterMp

--- Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
-- The original (and wrong) definition is below:
-- This unload the GTA:O DLC map parts (like high end garages/apartments).
-- Works in singleplayer.
function Global.OnEnterSp()
	return _in(0xD7C10C4A637992C9)
end
Global.N_0xd7c10c4a637992c9 = Global.OnEnterSp
Global.LoadSpDlcMaps = Global.OnEnterSp

function Global.OpenBombBayDoors(vehicle)
	return _in(0x87E7F24270732CB1, vehicle)
end
Global.OpenVehicleBombBay = Global.OpenBombBayDoors

--- probs one frame
function Global.OpenOnlinePoliciesMenu()
	return _in(0x805D7CBB36FD6C4C)
end
Global.ShowSocialClubLegalScreen = Global.OpenOnlinePoliciesMenu

--- patrolRoutes found in the b617d scripts:
-- "miss_Ass0",
-- "miss_Ass1",
-- "miss_Ass2",
-- "miss_Ass3",
-- "miss_Ass4",
-- "miss_Ass5",
-- "miss_Ass6",
-- "MISS_PATROL_6",
-- "MISS_PATROL_7",
-- "MISS_PATROL_8",
-- "MISS_PATROL_9",
-- "miss_Tower_01",
-- "miss_Tower_02",
-- "miss_Tower_03",
-- "miss_Tower_04",
-- "miss_Tower_05",
-- "miss_Tower_06",
-- "miss_Tower_07",
-- "miss_Tower_08",
-- "miss_Tower_10"
function Global.OpenPatrolRoute(patrolRoute)
	return _in(0xA36BFB5EE89F3D82, _ts(patrolRoute))
end

--- Shows a hud element for reporting jobs
function Global.OpenReportugcMenu()
	return _in(0x523A590C1A3CC0D3)
end
Global.N_0x523a590c1a3cc0d3 = Global.OpenReportugcMenu
Global.DisplayJobReport = Global.OpenReportugcMenu

--- NativeDB Return Type: void
function Global.OpenSequenceTask(taskSequenceId)
	return _in(0xE8854A4326B9E12B, _ii(taskSequenceId) --[[ may be optional ]], _r, _ri)
end

--- Uses the `SOCIAL_CLUB2` scaleform. <https://i.imgur.com/KleabIw.png>
-- Old name: `_SHOW_SOCIAL_CLUB_BANNED_SCREEN`
function Global.OpenSocialClubMenu()
	return _in(0x75D3691713C3B05A)
end
Global.N_0x75d3691713c3b05a = Global.OpenSocialClubMenu

--- NativeDB Parameter 2: Hash vehicleHash
function Global.OrderedBossVehicle(p0, p1, vehicleHash)
	return _in(0xCEA553E35C2246E1, p0, p1, vehicleHash)
end
Global.N_0xcea553e35c2246e1 = Global.OrderedBossVehicle

--- Max value for p1 is 15.
function Global.OverrideCamSplineMotionBlur(cam, p1, p2, p3)
	return _in(0x7DCF7C708D292D55, cam, p1, p2, p3)
end

function Global.OverrideCamSplineVelocity(cam, p1, p2, p3)
	return _in(0x40B62FA033EB0346, cam, p1, p2, p3)
end

--- REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
-- *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
-- _0x8A35C742130C6080(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
function Global.OverrideDecalTexture(decalType, textureDict, textureName)
	return _in(0x8A35C742130C6080, decalType, _ts(textureDict), _ts(textureName))
end
Global.N_0x8a35c742130c6080 = Global.OverrideDecalTexture
Global.AddDecalToMarker = Global.OverrideDecalTexture

function Global.OverrideInteriorSmokeEnd()
	return _in(0xEFB55E7C25D3B3BE)
end
Global.N_0xefb55e7c25d3b3be = Global.OverrideInteriorSmokeEnd

function Global.OverrideInteriorSmokeLevel(level)
	return _in(0x1600FD8CF72EBC12, level)
end
Global.N_0x1600fd8cf72ebc12 = Global.OverrideInteriorSmokeLevel

function Global.OverrideInteriorSmokeName(name)
	return _in(0x2A2A52824DB96700, _ts(name))
end
Global.N_0x2a2a52824db96700 = Global.OverrideInteriorSmokeName

--- NativeDB Parameter 0: Hash hash
function Global.OverrideMicrophoneSettings(hash, toggle)
	return _in(0x75773E11BA459E90, hash, toggle)
end
Global.N_0x75773e11ba459e90 = Global.OverrideMicrophoneSettings

function Global.OverrideMultiplayerChatColour(p0, hudColor)
	return _in(0xF47E567B3630DD12, p0, hudColor)
end
Global.N_0xf47e567b3630dd12 = Global.OverrideMultiplayerChatColour

--- NativeDB Parameter 0: Hash gxtEntryHash
function Global.OverrideMultiplayerChatPrefix(gxtEntryHash)
	return _in(0x6A1738B4323FE2D9, gxtEntryHash)
end
Global.N_0x6a1738b4323fe2d9 = Global.OverrideMultiplayerChatPrefix

--- NativeDB Parameter 0: Hash hash
function Global.OverridePlayerGroundMaterial(hash, toggle)
	return _in(0xD2CC78CD3D0B50F9, hash, toggle)
end
Global.N_0xd2cc78cd3d0b50f9 = Global.OverridePlayerGroundMaterial

--- Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
-- Modified example from "am_imp_exp.c4", line 6406:
-- /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
-- etc.
-- */
-- ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);
-- STREAMING::REQUEST_MODEL(vehicleHash);
function Global.OverridePopscheduleVehicleModel(scheduleId, vehicleHash)
	return _in(0x5F7D596BAC2E7777, scheduleId, _ch(vehicleHash))
end

function Global.OverrideSaveHouse(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x1162EA8AE9D24EEA, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

--- NativeDB Parameter 0: char* p0
function Global.OverrideTrevorRage(p0)
	return _in(0x13AD665062541A7E, _ii(p0) --[[ may be optional ]])
end

function Global.OverrideUnderwaterStream(p1)
	return _in(0xF2A9CDABCEA04BD6, _i, p1)
end

--- Overrides the vehicle's horn hash.
-- When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#_0xACB5DCCA1EC76840) will **not** return the 'overwritten' hash. It will still always return the default horn hash (same as [`GET_VEHICLE_DEFAULT_HORN`](#_0x02165D55000219AC)).
-- List of possible hashes (found in decompiled scripts):
-- |        signed |     unsigned |      hex     |
-- | ------------: | -----------: | :----------: |
-- |  `1604822495` | `1604822495` | `0x5FA7A5DF` |
-- | `-1262465009` | `3032502287` | `0xB4C0500F` |
-- |  `-889553789` | `3405413507` | `0xCAFA7C83` |
-- | `-1557943086` | `2737024210` | `0xA323ACD2` |
-- | `-1318696617` | `2976270679` | `0xB1664957` |
-- |    `-7740003` | `4287227293` | `0xFF89E59D` |
-- | `-1815146967` | `2479820329` | `0x93CF0E29` |
-- |  `-339919356` | `3955047940` | `0xEBBD3E04` |
-- Old description:
-- ```
-- vehicle - the vehicle whose horn should be overwritten
-- mute - p1 seems to be an option for muting the horn
-- p2 - maybe a horn id, since the function AUDIO::GET_VEHICLE_DEFAULT_HORN(veh) exists?
-- ```
-- @param vehicle The vehicle you want to change the horn on.
-- @param override Must be set to true. If set to false, the default horn hash will be restored.
-- @param hornHash A horn hash.
function Global.OverrideVehHorn(vehicle, override, hornHash)
	return _in(0x3CDC1E622CCE0356, vehicle, override, hornHash)
end

--- Return the local Participant ID
function Global.ParticipantId()
	return _in(0x90986E8876CE0A83, _r, _ri)
end

--- Return the local Participant ID.
-- This native is exactly the same as 'PARTICIPANT_ID' native.
function Global.ParticipantIdToInt()
	return _in(0x57A3BDDAD8E5AA0A, _r, _ri)
end

function Global.PauseClock(toggle)
	return _in(0x4055E40BD2DBEC1D, toggle)
end

function Global.PauseDeathArrestRestart(toggle)
	return _in(0x2C2B3493FBF51C71, toggle)
end
Global.DisableAutomaticRespawn = Global.PauseDeathArrestRestart

--- Activates the specified frontend menu context.
-- pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
-- The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
-- The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
-- This basically allows you to hide certain menu sections, or things like instructional buttons.
-- See the old description below for more info.
-- * * *
-- > Seems to add/set the current menu context (to show/hide buttons?)
-- > Pausemenu.xml:
-- > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
-- > Code:
-- >
-- > ```
-- > if (...) {
-- >     sub_bbd34(a_0, 0, "FM_BET_HELP");
-- >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
-- >     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
-- > } else {
-- >     sub_bbd34(a_0, 0, "");
-- >     UI::OBJECT_DECAL_TOGGLE(${bet_available});
-- >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
-- > }
-- > ```
-- >
-- > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
-- > // Old
-- > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
-- @param hash Context name hash.
function Global.PauseMenuActivateContext(hash)
	return _in(0xDD564BDD0472C936, _ch(hash))
end
Global.N_0xdd564bdd0472c936 = Global.PauseMenuActivateContext
Global.AddFrontendMenuContext = Global.PauseMenuActivateContext

function Global.PauseMenuDeactivateContext(contextHash)
	return _in(0x444D8CF241EC25C5, _ch(contextHash))
end
Global.ObjectDecalToggle = Global.PauseMenuDeactivateContext

function Global.PauseMenuIsContextActive(contextHash)
	return _in(0x84698AB38D0C6636, _ch(contextHash), _r)
end
Global.N_0x84698ab38d0c6636 = Global.PauseMenuIsContextActive

function Global.PausePlaybackRecordedVehicle(vehicle)
	return _in(0x632A689BF42301B1, vehicle)
end

function Global.PauseScriptedConversation(p0)
	return _in(0x8530AD776CD72B12, p0)
end

function Global.PausedScreenblurLoaded()
	return _in(0xDE81239437E8C5A8)
end
Global.N_0xde81239437e8c5a8 = Global.PausedScreenblurLoaded

function Global.PedHasUseScenarioTask(ped)
	return _in(0x295E3CCEC879CCD7, ped, _r)
end

--- [23.03.2017 19:08] by ins1de :
-- "_IS_PED_RELOADING" is totally a wrong name...
-- This native actually disables the reloading animation and script for the specified ped. Native renamed.
function Global.PedSkipNextReloading(ped)
	return _in(0x8C0D57EA686FAD87, ped, _r)
end
Global.IsPedReloading = Global.PedSkipNextReloading

--- gets the network id of a ped
function Global.PedToNet(ped)
	return _in(0x0EDEC3C276198689, ped, _r, _ri)
end

--- Load interior
function Global.PinInteriorInMemory(interior)
	return _in(0x2CA429C029CCF247, interior)
end
Global.N_0x2ca429c029ccf247 = Global.PinInteriorInMemory
Global.LoadInterior = Global.PinInteriorInMemory

function Global.PinRopeVertex(ropeId, vertex, x, y, z)
	return _in(0x2B320CF14146B69A, ropeId, vertex, x, y, z)
end

function Global.PlaceObjectOnGroundProperly(object)
	return _in(0x58A850EAEE20FAA3, object, _r)
end

function Global.PlaceObjectOnGroundProperly_2(object)
	return _in(0xD76EEEF746057FD6, object, _r)
end
Global.N_0xd76eeef746057fd6 = Global.PlaceObjectOnGroundProperly_2

--- Plays ambient speech. See also _0x444180DB.
-- ped: The ped to play the ambient speech.
-- speechName: Name of the speech to play, eg. "GENERIC_HI".
-- speechParam: Can be one of the following:
-- SPEECH_PARAMS_STANDARD
-- SPEECH_PARAMS_ALLOW_REPEAT
-- SPEECH_PARAMS_BEAT
-- SPEECH_PARAMS_FORCE
-- SPEECH_PARAMS_FORCE_FRONTEND
-- SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
-- SPEECH_PARAMS_FORCE_NORMAL
-- SPEECH_PARAMS_FORCE_NORMAL_CLEAR
-- SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
-- SPEECH_PARAMS_FORCE_SHOUTED
-- SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
-- SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY
-- SPEECH_PARAMS_MEGAPHONE
-- SPEECH_PARAMS_HELI
-- SPEECH_PARAMS_FORCE_MEGAPHONE
-- SPEECH_PARAMS_FORCE_HELI
-- SPEECH_PARAMS_INTERRUPT
-- SPEECH_PARAMS_INTERRUPT_SHOUTED
-- SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
-- SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
-- SPEECH_PARAMS_INTERRUPT_NO_FORCE
-- SPEECH_PARAMS_INTERRUPT_FRONTEND
-- SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
-- SPEECH_PARAMS_ADD_BLIP
-- SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
-- SPEECH_PARAMS_ADD_BLIP_FORCE
-- SPEECH_PARAMS_ADD_BLIP_SHOUTED
-- SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
-- SPEECH_PARAMS_ADD_BLIP_INTERRUPT
-- SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
-- SPEECH_PARAMS_SHOUTED
-- SPEECH_PARAMS_SHOUTED_CLEAR
-- SPEECH_PARAMS_SHOUTED_CRITICAL
-- Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
-- Full list of speeches and voices names by some spanish shitbag: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.PlayAmbientSpeech1(ped, speechName, speechParam)
	return _in(0x8E04FEDD28D42462, ped, _ts(speechName), _ts(speechParam))
end

--- Plays ambient speech. See also _0x5C57B85D.
-- See _PLAY_AMBIENT_SPEECH1 for parameter specifications.
-- Full list of speeches and voices names: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.PlayAmbientSpeech2(ped, speechName, speechParam)
	return _in(0xC6941B4A3A8FBBB9, ped, _ts(speechName), _ts(speechParam))
end

function Global.PlayAmbientSpeechAtCoords(p0, p1, p2, p3, p4, p5)
	return _in(0xED640017ED337E45, _ts(p0), _ts(p1), p2, p3, p4, _ts(p5))
end
Global.N_0xed640017ed337e45 = Global.PlayAmbientSpeechAtCoords

--- This is the same as _PLAY_AMBIENT_SPEECH1 and _PLAY_AMBIENT_SPEECH2 but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
-- EX (C#):
-- GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
-- The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
-- Full list of speeches and voices names: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992
function Global.PlayAmbientSpeechWithVoice(p0, speechName, voiceName, speechParam, p4)
	return _in(0x3523634255FC3318, p0, _ts(speechName), _ts(voiceName), _ts(speechParam), p4)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlayAnimOnRunningScenario(ped, animDict, animName)
	return _in(0x748040460F8DF5DC, ped, _ts(animDict), _ts(animName))
end

function Global.PlayAnimalVocalization(pedHandle, p1, p2)
	return _in(0xEE066C7006C49C0A, pedHandle, p1, _ts(p2))
end
Global.N_0xee066c7006c49c0a = Global.PlayAnimalVocalization

--- NativeDB Introduced: v1290
-- @param binkMovie :
function Global.PlayBinkMovie(binkMovie)
	return _in(0x70D2CC8A542A973C, binkMovie)
end

--- ```
-- Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
-- p9 is unknown at this time.
-- p10 throughout all the X360 Scripts is always 2.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlayCamAnim(cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10)
	return _in(0x9A2D0FB2E7852392, cam, _ts(animName), _ts(animDictionary), x, y, z, xRot, yRot, zRot, p9, p10, _r)
end

--- Only call found in the b617d scripts:
-- AUDIO::_CADA5A0D0702381E("BACK", "HUD_FREEMODE_SOUNDSET");
function Global.PlayDeferredSoundFrontend(soundName, soundsetName)
	return _in(0xCADA5A0D0702381E, _ts(soundName), _ts(soundsetName))
end
Global.N_0xcada5a0d0702381e = Global.PlayDeferredSoundFrontend

function Global.PlayEndCreditsMusic(play)
	return _in(0xCD536C4D33DCC900, play)
end

--- ```
-- delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
-- The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlayEntityAnim(entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset)
	return _in(0x7FB218262B810701, entity, _ts(animName), _ts(animDict), p3, loop, stayInAnim, p6, delta, bitset, _r)
end

function Global.PlayEntityScriptedAnim(p0, p4, p5)
	return _in(0x77A1EEC547E7FCF1, p0, _i, _i, _i, p4, p5)
end

--- Look at facials@gen_male@base and facials@gen_female@base for some common facial animations.
-- !!!NOTE!!!
-- Unlike most animation natives, the animation comes BEFORE the animation dictionary here. So you could call e.g.
-- PLAY_FACIAL_ANIM(ped, "dead_1", "facials@gen_male@base")
function Global.PlayFacialAnim(ped, animName, animDict)
	return _in(0xE1E65CA8AC9C00ED, ped, _ts(animName), _ts(animDict))
end

--- Called 38 times in the scripts. There are 5 different audioNames used.
-- One unknown removed below.
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
function Global.PlayMissionCompleteAudio(audioName)
	return _in(0xB138AAB8A70D3C69, _ts(audioName))
end

--- Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);
-- Last 2 parameters always seem to be 0.
-- EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);
-- Known Pain IDs
-- ________________________
-- 1 - Doesn't seem to do anything. Does NOT crash the game like previously said. (Latest patch)
-- 6 - Scream (Short)
-- 7 - Scared Scream (Kinda Long)
-- 8 - On Fire
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.PlayPain(ped, painID, p1)
	return _in(0xBC9AE166038A5CEC, ped, painID, p1)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny
-- AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
-- AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
function Global.PlayPedRingtone(ringtoneName, ped, p2)
	return _in(0xF9E56683CA8E11A5, _ts(ringtoneName), ped, p2)
end

--- Please change to void. (Does not return anything!)
-- Plays the given police radio message.
-- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
function Global.PlayPoliceReport(name, p1)
	return _in(0xDFEBD56D9BD1EB16, _ts(name), p1, _r, _ri)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ
function Global.PlaySound(soundId, audioName, audioRef, p3, p4, p5)
	return _in(0x7FF4944CC209192D, soundId, _ts(audioName), _ts(audioRef), p3, p4, p5)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW
-- gtaforums.com/topic/795622-audio-for-mods
function Global.PlaySoundFromCoord(soundId, audioName, x, y, z, audioRef, p6, range, p8)
	return _in(0x8D8686B622B88120, soundId, _ts(audioName), x, y, z, _ts(audioRef), p6, range, p8)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0
-- No changes made in b678d.
-- gtaforums.com/topic/795622-audio-for-mods
function Global.PlaySoundFromEntity(soundId, audioName, entity, audioRef, p4, p5)
	return _in(0xE65F427EB70AB1ED, soundId, _ts(audioName), entity, _ts(audioRef), p4, p5)
end

--- list: pastebin.com/DCeRiaLJ
-- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/0neZdsZ5
function Global.PlaySoundFrontend(soundId, audioName, audioRef, p3)
	return _in(0x67C540AA08E4A6F5, soundId, _ts(audioName), _ts(audioRef), p3)
end

--- Used with AUDIO::LOAD_STREAM
-- Example from finale_heist2b.c4:
-- AI::TASK_SYNCHRONIZED_SCENE(l_4C8[2/*14*/], l_4C8[2/*14*/]._f7, l_30A, "push_out_vault_l", 4.0, -1.5, 5, 713, 4.0, 0);
-- PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2/*14*/]._f7, 0.0);
-- PED::_2208438012482A1A(l_4C8[2/*14*/], 0, 0);
-- PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2/*14*/], 38, 1);
-- PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2/*14*/], 1);
-- if (AUDIO::LOAD_STREAM("Gold_Cart_Push_Anim_01", "BIG_SCORE_3B_SOUNDS")) {
-- AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0/*1*/]);
-- }
function Global.PlayStreamFromObject(object)
	return _in(0xEBAA9B64D76356FD, object)
end

function Global.PlayStreamFromPed(ped)
	return _in(0x89049DD63C08B5D1, ped)
end
Global.N_0x89049dd63c08b5d1 = Global.PlayStreamFromPed

function Global.PlayStreamFromPosition(x, y, z)
	return _in(0x21442F412E8DE56B, x, y, z)
end
Global.SpecialFrontendEqual = Global.PlayStreamFromPosition

function Global.PlayStreamFromVehicle(vehicle)
	return _in(0xB70374A758007DFA, vehicle)
end

function Global.PlayStreamFrontend()
	return _in(0x58FCE43488F9F5F4)
end

function Global.PlaySynchronizedAudioEvent(p0)
	return _in(0x8B2FD4560E55DD2D, p0, _r)
end

--- ```
-- Examples:
-- CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");
-- CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlaySynchronizedCamAnim(p0, p1, animName, animDictionary)
	return _in(0xE32EFE9AB4A9AA0C, p0, p1, _ts(animName), _ts(animDictionary), _r)
end

--- ```
-- p4 and p7 are usually 1000.0f.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlaySynchronizedEntityAnim(entity, syncedScene, animation, propName, p4, p5, p6, p7)
	return _in(0xC77720A12FE14A86, entity, syncedScene, _ts(animation), _ts(propName), p4, p5, p6, p7, _r)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.PlaySynchronizedMapEntityAnim(p0, p1, p2, p3, p4, p5, p8, p9, p10, p11)
	return _in(0xB9C54555ED30FBC4, p0, p1, p2, p3, p4, p5, _i, _i, p8, p9, p10, p11, _r)
end

function Global.PlayTennisDiveAnim(ped, p1, p2, p3, p4, p5)
	return _in(0x8FA9C42FC5D7C64B, ped, p1, p2, p3, p4, p5)
end
Global.N_0x8fa9c42fc5d7c64b = Global.PlayTennisDiveAnim

function Global.PlayTennisSwingAnim(ped, animDict, animName, p3, p4, p5)
	return _in(0xE266ED23311F24D4, ped, _ts(animDict), _ts(animName), p3, p4, p5)
end
Global.N_0xe266ed23311f24d4 = Global.PlayTennisSwingAnim

--- This native only comes up once. And in that one instance, p1 is "1".
function Global.PlayVehicleDoorCloseSound(vehicle, doorIndex)
	return _in(0x62A456AA4769EF34, vehicle, doorIndex)
end

--- p1 appears to only be "0" or "3". I personally use "0" as p1.
function Global.PlayVehicleDoorOpenSound(vehicle, doorIndex)
	return _in(0x3A539D52857EA82D, vehicle, doorIndex)
end

--- Only 1 match. ob_sofa_michael.
-- PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function Global.PlayerAttachVirtualBound(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xED51733DC73AED51, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function Global.PlayerDetachVirtualBound()
	return _in(0x1DD5897E2FA6E7C9)
end

--- This returns YOUR 'identity' as a Player type.
-- Always returns 0 in story mode.
function Global.PlayerId()
	return _in(0x4F8644AF03D0E0D6, _r, _ri)
end

--- Returns current player ped
function Global.PlayerPedId()
	return _in(0xD80958FC74E988A6, _r, _ri)
end

function Global.PlaystatsAcquiredHiddenPackage(p0)
	return _in(0x79AB33F0FBFAC40C, p0)
end
Global.N_0x79ab33f0fbfac40c = Global.PlaystatsAcquiredHiddenPackage

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
function Global.PlaystatsArenaWarSpectator(p0, p1, p2, p3, p4)
	return _in(0x6F4F599753F8200A, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
-- @param data :
function Global.PlaystatsArenaWarsEnded(data)
	return _in(0xB479D9F0D48A1BC5, _ii(data) --[[ may be optional ]])
end

function Global.PlaystatsAwardBadsport(id)
	return _in(0x47B32F5611E6E483, id)
end
Global.N_0x47b32f5611e6e483 = Global.PlaystatsAwardBadsport

--- NativeDB Parameter 1: Hash type
-- NativeDB Parameter 2: Hash category
function Global.PlaystatsAwardXp(amount, type, category)
	return _in(0x46F917F6B4128FE4, amount, type, category)
end

function Global.PlaystatsBackgroundScriptAction(action, value)
	return _in(0x5009DFD741329729, _ts(action), value)
end
Global.N_0x5009dfd741329729 = Global.PlaystatsBackgroundScriptAction

function Global.PlaystatsBanAlert(p0)
	return _in(0x516FC96EB88EEFE5, p0)
end
Global.N_0x516fc96eb88eefe5 = Global.PlaystatsBanAlert

function Global.PlaystatsChangeMcEmblem(p0, p1, p2, p3, p4)
	return _in(0x0A50D2604E05CB94, p0, p1, p2, p3, p4)
end
Global.N_0x0a50d2604e05cb94 = Global.PlaystatsChangeMcEmblem

function Global.PlaystatsCheatApplied(cheat)
	return _in(0x6058665D72302D3F, _ts(cheat))
end

function Global.PlaystatsClothChange(p0, p1, p2, p3, p4)
	return _in(0x34B973047A2268B9, p0, p1, p2, p3, p4)
end

function Global.PlaystatsCopyRankIntoNewSlot(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xB7257BA2550EA10A, p0, p1, p2, p3, p4, p5, p6)
end
Global.N_0xb7257ba2550ea10a = Global.PlaystatsCopyRankIntoNewSlot

function Global.PlaystatsCrateCreated(p0, p1, p2)
	return _in(0xAFC7E5E075A96F46, p0, p1, p2)
end
Global.N_0xafc7e5e075a96f46 = Global.PlaystatsCrateCreated
Global.PlaystatsAmbientMissionCrateCreated = Global.PlaystatsCrateCreated

--- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function Global.PlaystatsCrateDrop(p0, p1, p2, p3, p4, p5)
	return _in(0x1CAE5D2E3F9A07F0, p0, p1, p2, p3, p4, p5)
end
Global.N_0x1cae5d2e3f9a07f0 = Global.PlaystatsCrateDrop

--- NativeDB Introduced: v1290
-- @param data :
function Global.PlaystatsDarMissionEnd(data)
	return _in(0x0BC254FF3A911501, _ii(data) --[[ may be optional ]])
end

function Global.PlaystatsDirectorMode(p0)
	return _in(0x46326E13DA4E0546, _ii(p0) --[[ may be optional ]])
end
Global.N_0x46326e13da4e0546 = Global.PlaystatsDirectorMode

--- NativeDB Introduced: v1493
-- @param p0 :
-- @param p1 :
-- @param p2 :
function Global.PlaystatsDroneUsage(p0, p1, p2)
	return _in(0x66C7BB2416ED3FCE, p0, p1, p2)
end

function Global.PlaystatsDupeDetection(data)
	return _in(0x848B66100EE33B05, _ii(data) --[[ may be optional ]])
end
Global.N_0x848b66100ee33b05 = Global.PlaystatsDupeDetection

function Global.PlaystatsEarnedMcPoints(p0, p1, p2, p3, p4, p5)
	return _in(0x501478855A6074CE, p0, p1, p2, p3, p4, p5)
end
Global.N_0x501478855a6074ce = Global.PlaystatsEarnedMcPoints

--- NativeDB Introduced: v1290
-- @param data :
function Global.PlaystatsEnterSessionPack(data)
	return _in(0x878FF156D36E9956, _ii(data) --[[ may be optional ]])
end

function Global.PlaystatsFriendActivity(p0, p1)
	return _in(0x0F71DE29AB2258F1, p0, p1)
end

function Global.PlaystatsGunrunMissionEnded(data)
	return _in(0x0EACDF8487D5155A, _ii(data) --[[ may be optional ]])
end
Global.N_0x0eacdf8487d5155a = Global.PlaystatsGunrunMissionEnded

--- NativeDB Introduced: v1290
-- @param data :
function Global.PlaystatsH2FmprepEnd(data)
	return _in(0xD8AFB345A9C5CCBB, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1290
-- @param data :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.PlaystatsH2InstanceEnd(p1, p2, p3)
	return _in(0x1E1497D0D2108115, _i, p1, p2, p3)
end

--- NativeDB Parameter 0: Hash hash
function Global.PlaystatsHeistSaveCheat(hash, p1)
	return _in(0xF4FF020A08BC8863, hash, p1)
end
Global.N_0xf4ff020a08bc8863 = Global.PlaystatsHeistSaveCheat

function Global.PlaystatsHoldUp(p0, p1, p2, p3)
	return _in(0xCB00196B31C39EB1, p0, p1, p2, p3)
end
Global.N_0xcb00196b31c39eb1 = Global.PlaystatsHoldUp

--- longest time being ilde?
function Global.PlaystatsIdleKick(time)
	return _in(0x5DA3A8DE8CB6226F, time)
end
Global.N_0x5da3a8de8cb6226f = Global.PlaystatsIdleKick

function Global.PlaystatsImpExp(p0, p1, p2, p3)
	return _in(0x2B69F5074C894811, p0, p1, p2, p3)
end
Global.N_0x2b69f5074c894811 = Global.PlaystatsImpExp

function Global.PlaystatsMatchStarted(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xBC80E22DED931E3D, p0, p1, p2, p3, p4, p5, p6)
end

function Global.PlaystatsMissionCheckpoint(p1, p2, p3)
	return _in(0xC900596A63978C1D, _i, p1, p2, p3)
end

function Global.PlaystatsMissionOver(p1, p2, p3, p4, p5)
	return _in(0x7C4BB33A8CED7324, _i, p1, p2, p3, p4, p5)
end

function Global.PlaystatsMissionStarted(p1, p2, p3)
	return _in(0xC19A2925C34D2231, _i, p1, p2, p3)
end

function Global.PlaystatsNpcInvite(p0)
	return _in(0x93054C88E6AA7C44, _ii(p0) --[[ may be optional ]])
end

--- **This native does absolutely nothing, just a nullsub**
function Global.PlaystatsOddjobDone(p0, p1, p2)
	return _in(0x69DEA3E9DB727B4C, p0, p1, p2)
end

--- NativeDB Introduced: v1180
-- @param modelHash :
function Global.PlaystatsPegasaircraft(modelHash)
	return _in(0x9572BD4DD6B72122, _ch(modelHash))
end

function Global.PlaystatsPiMenuHideSettings(data)
	return _in(0x203B381133817079, _ii(data) --[[ may be optional ]])
end
Global.N_0x203b381133817079 = Global.PlaystatsPiMenuHideSettings

function Global.PlaystatsPropChange(p0, p1, p2, p3)
	return _in(0xBA739D6D5A05D6E7, p0, p1, p2, p3)
end

function Global.PlaystatsQuickfixTool(element, item)
	return _in(0x90D0622866E80445, element, _ts(item))
end
Global.N_0x90d0622866e80445 = Global.PlaystatsQuickfixTool

function Global.PlaystatsRaceCheckpoint(p0, p1, p2, p3, p4)
	return _in(0x9C375C315099DDE4, p0, p1, p2, p3, p4)
end

function Global.PlaystatsRaceToPoint(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xADDD1C754E2E2914, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end
Global.N_0xaddd1c754e2e2914 = Global.PlaystatsRaceToPoint

function Global.PlaystatsRandomMissionDone(name, p1, p2, p3)
	return _in(0x71862B1D855F32E1, _ts(name), p1, p2, p3)
end
Global.N_0x71862b1d855f32e1 = Global.PlaystatsRandomMissionDone

function Global.PlaystatsRankUp(rank)
	return _in(0xC7F2DE41D102BFB4, rank)
end

function Global.PlaystatsRosBet(amount, act, player, cm)
	return _in(0x121FB4DDDC2D5291, amount, act, player, cm)
end
Global.N_0x121fb4dddc2d5291 = Global.PlaystatsRosBet

function Global.PlaystatsShopItem(p0, p1, p2, p3, p4)
	return _in(0x176852ACAAC173D1, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1180
-- @param data :
function Global.PlaystatsSmugMissionEnded(data)
	return _in(0x320C35147D5B5DDD, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1604
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
function Global.PlaystatsSpectatorWheelSpin(p0, p1, p2, p3)
	return _in(0x6731DE84A38BFAD0, p0, p1, p2, p3)
end

function Global.PlaystatsSpentPiCustomLoadout(amount)
	return _in(0xBE509B0A3693DE8B, amount)
end
Global.N_0xbe509b0a3693de8b = Global.PlaystatsSpentPiCustomLoadout

function Global.PlaystatsStartOfflineMode()
	return _in(0x098760C7461724CD)
end
Global.N_0x098760c7461724cd = Global.PlaystatsStartOfflineMode

--- NativeDB Introduced: v1493
-- @param data :
function Global.PlaystatsStoneHatchetEnd(data)
	return _in(0x35E39E5570358630, _ii(data) --[[ may be optional ]])
end

--- Allows CEventNetworkStuntPerformed to be triggered.
function Global.PlaystatsStuntPerformedEventAllowTrigger()
	return _in(0x928DBFB892638EF3)
end
Global.N_0x928dbfb892638ef3 = Global.PlaystatsStuntPerformedEventAllowTrigger

--- Disallows CEventNetworkStuntPerformed to be triggered.
function Global.PlaystatsStuntPerformedEventDisallowTrigger()
	return _in(0x8A800DACCC0DA55D)
end
Global.N_0x8a800daccc0da55d = Global.PlaystatsStuntPerformedEventDisallowTrigger

--- NativeDB Parameter 0: Hash weaponHash
-- NativeDB Parameter 1: Hash componentHashTo
-- NativeDB Parameter 2: Hash componentHashFrom
function Global.PlaystatsWeaponModeChange(weaponHash, componentHashTo, componentHashFrom)
	return _in(0xE95C8A1875A02CA4, weaponHash, componentHashTo, componentHashFrom)
end
Global.N_0xe95c8a1875a02ca4 = Global.PlaystatsWeaponModeChange

function Global.PlaystatsWebsiteVisited(scaleformHash, p1)
	return _in(0xDDF24D535060F811, _ch(scaleformHash), p1)
end
Global.N_0xddf24d535060f811 = Global.PlaystatsWebsiteVisited

function Global.PointCamAtCoord(cam, x, y, z)
	return _in(0xF75497BB865F0803, cam, x, y, z)
end

--- p5 always seems to be 1 i.e TRUE
function Global.PointCamAtEntity(cam, entity, p2, p3, p4, p5)
	return _in(0x5640BFF86B16E8DC, cam, entity, p2, p3, p4, p5)
end

--- Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
function Global.PointCamAtPedBone(cam, ped, boneIndex, x, y, z, p6)
	return _in(0x68B2B5F33BA63C41, cam, ped, boneIndex, x, y, z, p6)
end

function Global.PopTimecycleModifier()
	return _in(0x3C8938D7D872211E)
end

--- spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
function Global.PopulateNow()
	return _in(0x7472BB270D7B4F3E)
end

function Global.Pow(base, exponent)
	return _in(0xE3621CC40F31FE2E, base, exponent, _r, _rf)
end

--- This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
-- For instance, GTA:O opening cutscene.
-- <https://pastebin.com/2EeKVeLA> : a list of SRL found in srllist.meta
-- <https://pastebin.com/zd9XYUWY> : here is the content of a SRL file opened with codewalker.
-- @param srl A SRL name.
function Global.PrefetchSrl(srl)
	return _in(0x3D245789CE12982C, _ts(srl))
end

--- Often called after _REMOVE_LOADING_PROMPT. Unsure what exactly it does, but It references busy_spinner, I can only guess its freeing the busy_spinner scaleform from memory
function Global.PreloadBusyspinner()
	return _in(0xC65AB383CD91DF98)
end
Global.N_0xc65ab383cd91df98 = Global.PreloadBusyspinner

--- Found in the scripts:
-- GAMEPLAY::_11B56FBBF7224868("CONTRAILS");
function Global.PreloadCloudHat(name)
	return _in(0x11B56FBBF7224868, _ts(name))
end
Global.N_0x11b56fbbf7224868 = Global.PreloadCloudHat

function Global.PreloadScriptConversation(p0, p1, p2, p3)
	return _in(0x3B3CAD6166916D87, p0, p1, p2, p3)
end

function Global.PreloadScriptPhoneConversation(p0, p1)
	return _in(0x6004BCB0E226AAEA, p0, p1)
end

function Global.PreloadVehicleMod(p0, modType, p2)
	return _in(0x758F49C24925568A, p0, modType, p2)
end

--- Example:
-- bool prepareAlarm = AUDIO::PREPARE_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
function Global.PrepareAlarm(alarmName)
	return _in(0x9D74AE343DB65533, _ts(alarmName), _r)
end

--- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function Global.PrepareMusicEvent(eventName)
	return _in(0x1E5185B72EF5158A, _ts(eventName), _r)
end

function Global.PrepareSynchronizedAudioEvent(p0, p1)
	return _in(0xC7ABCACA4985A766, _ts(p0), p1, _r, _ri)
end

function Global.PrepareSynchronizedAudioEventForScene(p0, p1)
	return _in(0x029FE7CD1B7E2E75, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- Only one match in the scripts:
-- GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
function Global.PresetInteriorAmbientCache(timecycleModifierName)
	return _in(0xD7021272EB0A451E, _ts(timecycleModifierName))
end
Global.N_0xd7021272eb0a451e = Global.PresetInteriorAmbientCache
Global.PresetInteriorAmbientCache = Global.PresetInteriorAmbientCache

function Global.ProcessCashGift(p2)
	return _in(0x20194D48EAEC9A41, _i, _i, _ts(p2), _r, _s)
end
Global.N_0x20194d48eaec9a41 = Global.ProcessCashGift

--- Called to update entity attachments.
-- When using ATTACH_ENTITY_TO_ENTITY and using bone '0' then you set the first entity invisible. The attachments will mess up, use bone '-1' to fix that issue
function Global.ProcessEntityAttachments(entity)
	return _in(0xF4080490ADC51C6F, entity)
end

--- Scope entry for profiler.
-- @param scopeName Scope name.
function Global.ProfilerEnterScope(scopeName)
	return _in(0xc795a4a9, _ts(scopeName))
end

--- Scope exit for profiler.
function Global.ProfilerExitScope()
	return _in(0xb39ca35c)
end

--- Returns true if the profiler is active.
-- @return True or false.
function Global.ProfilerIsRecording()
	return _in(0xf8b7d7bb, _r)
end

function Global.PulseBlip(blip)
	return _in(0x742D6FD43115AF73, blip)
end

function Global.PushTimecycleModifier()
	return _in(0x58F735290861E6B4)
end

--- Add a BLIP_GALLERY at the specific coordinate.
-- Used in fm_maintain_transition_players to display race track points.
function Global.RaceGalleryAddBlip(x, y, z)
	return _in(0x551DF99658DB6EE8, x, y, z, _r, _ri)
end
Global.N_0x551df99658db6ee8 = Global.RaceGalleryAddBlip

--- Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
function Global.RaceGalleryNextBlipSprite(spriteId)
	return _in(0x1EAE6DD17B7A5EFA, spriteId)
end
Global.N_0x1eae6dd17b7a5efa = Global.RaceGalleryNextBlipSprite

function Global.RaiseConvertibleRoof(vehicle, instantlyRaise)
	return _in(0x8F5FB35D7E88FC70, vehicle, instantlyRaise)
end

function Global.RaiseRetractableWheels(vehicle)
	return _in(0xF660602546D27BA8, vehicle)
end
Global.RaiseLowerableWheels = Global.RaiseRetractableWheels

function Global.RecordBrokenGlass(x, y, z, radius)
	return _in(0xFBE20329593DEC9D, x, y, z, radius)
end
Global.N_0xfbe20329593dec9d = Global.RecordBrokenGlass

function Global.RefreshInterior(interiorID)
	return _in(0x41F37C3427C75AE0, interiorID)
end

function Global.RefreshWaypoint()
	return _in(0x81FA173F170560D1)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a set of archetypes with the game engine. These should match `CBaseArchetypeDef` class information from the game.
-- @param factory A function returning a list of archetypes.
function Global.RegisterArchetypes(factory)
	return _in(0x3c2f9037, _mfr(factory))
end

function Global.RegisterBoolToSave(name)
	return _in(0xC8F4131414C835A1, _i, _ts(name))
end

--- Registered commands can be executed by entering them in the client console (this works for client side and server side registered commands). Or by entering them in the server console/through an RCON client (only works for server side registered commands). Or if you use a supported chat resource, like the default one provided in the cfx-server-data repository, then you can enter the command in chat by prefixing it with a `/`.
-- Commands registered using this function can also be executed by resources, using the [`ExecuteCommand` native](#_0x561C060B).
-- The restricted bool is not used on the client side. Permissions can only be checked on the server side, so if you want to limit your command with an ace permission automatically, make it a server command (by registering it in a server script).
-- **Example result**:
-- ![](https://i.imgur.com/TaCnG09.png)
-- @param commandName The command you want to register.
-- @param handler A handler function that gets called whenever the command is executed.
-- @param restricted If this is a server command and you set this to true, then players will need the command.yourCommandName ace permission to execute this command.
function Global.RegisterCommand(commandName, handler, restricted)
	return _in(0x5fa79b0f, _ts(commandName), _mfr(handler), restricted)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a set of entities with the game engine. These should match `CEntityDef` class information from the game.
-- At this time, this function **should not be used in a live environment**.
-- @param factory A function returning a list of entities.
function Global.RegisterEntities(factory)
	return _in(0x410da7d3, _mfr(factory))
end

function Global.RegisterEntityForCutscene(cutscenePed, cutsceneEntName, p2, modelHash, p4)
	return _in(0xE40C1C56DF95C2E8, cutscenePed, _ts(cutsceneEntName), p2, _ch(modelHash), p4)
end

function Global.RegisterEnumToSave(name)
	return _in(0x10C2FA78D0E128A1, _i, _ts(name))
end

function Global.RegisterFloatToSave(name)
	return _in(0x7CAEC29ECB5DFEBB, _i, _ts(name))
end

--- Registers a specified .gfx file as GFx font library.
-- The .gfx file has to be registered with the streamer already.
-- @param fileName The name of the .gfx file, without extension.
function Global.RegisterFontFile(fileName)
	return _in(0x1b3a363, _ts(fileName))
end

--- Registers a specified font name for use with text draw commands.
-- @param fontName The name of the font in the GFx font library.
-- @return An index to use with [SET_TEXT_FONT](#_0x66E0276CC5F6B9DA) and similar natives.
function Global.RegisterFontId(fontName)
	return _in(0xacf6d8ee, _ts(fontName), _r, _ri)
end

--- Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
function Global.RegisterHatedTargetsAroundPed(ped, radius)
	return _in(0x9222F300BF8354FE, ped, radius)
end

function Global.RegisterInt64ToSave(name)
	return _in(0xA735353C77334EA0, _i, _ts(name))
end
Global.N_0xa735353c77334ea0 = Global.RegisterInt64ToSave

function Global.RegisterIntToSave(name)
	return _in(0x34C9EE5986258415, _i, _ts(name))
end

--- Registers a key mapping for the current resource.
-- See the related [cookbook post](https://cookbook.fivem.net/2020/01/06/using-the-new-console-key-bindings/) for more information.
-- @param commandString The command to execute, and the identifier of the binding.
-- @param description A description for in the settings menu.
-- @param defaultMapper The mapper ID to use for the default binding, e.g. `keyboard`.
-- @param defaultParameter The IO parameter ID to use for the default binding, e.g. `f3`.
function Global.RegisterKeyMapping(commandString, description, defaultMapper, defaultParameter)
	return _in(0xd7664fd1, _ts(commandString), _ts(description), _ts(defaultMapper), _ts(defaultParameter))
end

function Global.RegisterNamedRendertarget(name, p1)
	return _in(0x57D9C12635E25CE3, _ts(name), p1, _r)
end

function Global.RegisterNuiCallbackType(callbackType)
	return _in(0xcd03cda9, _ts(callbackType))
end

--- Registers a script for any object with a specific model hash.
-- BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);
function Global.RegisterObjectScriptBrain(scriptName, modelHash, p2, activationRange, p4, p5)
	return _in(0x0BE84C318BA6EC22, _ts(scriptName), _ch(modelHash), p2, activationRange, p4, p5)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.RegisterPedheadshot(ped)
	return _in(0x4462658788425076, ped, _r, _ri)
end

--- Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
-- **Result of the example code:**
-- <https://i.imgur.com/iHz8ztn.png>
-- @param ped A ped handle.
-- @return The Pedheadshot handle.
function Global.RegisterPedheadshotTransparent(ped)
	return _in(0x953563CE563143AF, ped, _r, _ri)
end
Global.N_0x953563ce563143af = Global.RegisterPedheadshotTransparent

function Global.RegisterPedheadshot_3(ped)
	return _in(0xBA8805A1108A2515, ped, _r, _ri)
end
Global.N_0xba8805a1108a2515 = Global.RegisterPedheadshot_3

--- An internal function which allows the current resource's HLL script runtimes to receive state for the specified event.
-- @param eventName An event name, or "\*" to disable HLL event filtering for this resource.
function Global.RegisterResourceAsEventHandler(eventName)
	return _in(0xd233a168, _ts(eventName))
end

function Global.RegisterSaveHouse(p0, p1, p2, p3, p5, p6)
	return _in(0xC0714D0A7EEECA54, p0, p1, p2, p3, _i, p5, p6, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.RegisterScriptWithAudio(p0)
	return _in(0xC6ED9D5092438D91, p0)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a dynamic streaming asset from the server with the GTA streaming module system.
-- @param resourceName The resource to add the asset to.
-- @param fileName A file name in the resource.
-- @param cacheString The string returned from `REGISTER_RESOURCE_ASSET` on the server.
function Global.RegisterStreamingFileFromCache(resourceName, fileName, cacheString)
	return _in(0xcead2d4b, _ts(resourceName), _ts(fileName), _ts(cacheString))
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a KVP value as an asset with the GTA streaming module system. This function currently won't work.
-- @param kvsKey The KVP key in the current resource to register as an asset.
function Global.RegisterStreamingFileFromKvs(kvsKey)
	return _in(0x1493dcc1, _ts(kvsKey))
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a file from an URL as a streaming asset in the GTA streaming subsystem. This will asynchronously register the asset, and caching is done based on the URL itself - cache headers are ignored.
-- Use `IS_STREAMING_FILE_READY` to check if the asset has been registered successfully.
-- @param registerAs The file name to register as, for example `asset.ydr`.
-- @param url The URL to fetch the asset from.
function Global.RegisterStreamingFileFromUrl(registerAs, url)
	return _in(0xf44bfb95, _ts(registerAs), _ts(url))
end

function Global.RegisterSynchronisedScriptSpeech()
	return _in(0x2131046957F31B04)
end

--- PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.
-- l_216 = RECSBRobber1
function Global.RegisterTarget(ped, target)
	return _in(0x2F25D9AEFA34FBA2, ped, target)
end

function Global.RegisterTextLabelToSave(name)
	return _in(0xEDB1232C5BEAE62F, _i, _ts(name))
end

--- Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
-- GAMEPLAY::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
-- GAMEPLAY::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
-- GAMEPLAY::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
-- "tl" prefix sounds like "Text Label"
function Global.RegisterTextLabelToSave_2(name)
	return _in(0x6F7794F28C6B2535, _i, _ts(name))
end
Global.N_0x6f7794f28c6b2535 = Global.RegisterTextLabelToSave_2

--- NativeDB Parameter 0: char* scriptName
function Global.RegisterWorldPointScriptBrain(activationRange, p2)
	return _in(0x3CDC7136613284BD, _i, activationRange, p2)
end

function Global.ReleaseAllCommerceItemImages()
	return _in(0x72D0706CD6CCDB58)
end
Global.N_0x72d0706cd6ccdb58 = Global.ReleaseAllCommerceItemImages

function Global.ReleaseAmbientAudioBank()
	return _in(0x65475A218FFAA93D)
end

--- NativeDB Introduced: v1290
-- @param binkMovie :
function Global.ReleaseBinkMovie(binkMovie)
	return _in(0x04D950EEFA4EED8C, binkMovie)
end

function Global.ReleaseMissionAudioBank()
	return _in(0x0EC92A1BF0857187)
end

function Global.ReleaseMovieMeshSet(movieMeshSet)
	return _in(0xEB119AA014E89183, movieMeshSet)
end

function Global.ReleaseNamedRendertarget(name)
	return _in(0xE9F6FFE837354DD4, _ts(name), _r)
end

function Global.ReleaseNamedScriptAudioBank(audioBank)
	return _in(0x77ED170667F50170, _ts(audioBank))
end

function Global.ReleasePedPreloadPropData(ped)
	return _in(0xF79F9DEF0AADE61A, ped)
end
Global.N_0xf79f9def0aade61a = Global.ReleasePedPreloadPropData

function Global.ReleasePedPreloadVariationData(ped)
	return _in(0x5AAB586FFEC0FD96, ped)
end
Global.N_0x5aab586ffec0fd96 = Global.ReleasePedPreloadVariationData

function Global.ReleasePedheadshotImgUpload(id)
	return _in(0x5D517B27CF6ECD04, id)
end
Global.N_0x5d517b27cf6ecd04 = Global.ReleasePedheadshotImgUpload

function Global.ReleasePreloadMods(vehicle)
	return _in(0x445D79F995508307, vehicle)
end

function Global.ReleaseScriptAudioBank()
	return _in(0x7A2D8AD0A9EB9C3F)
end

function Global.ReleaseSoundId(soundId)
	return _in(0x353FC880830B88FA, soundId)
end

--- NativeDB Introduced: v323
function Global.ReleaseWeaponAudio()
	return _in(0xCE4AC0439F607045)
end

--- NativeDB Added Parameter 1: Player player
-- NativeDB Added Parameter 2: int a
-- NativeDB Added Parameter 3: int b
function Global.RemoteCheatDetected()
	return _in(0x472841A026D26D8B, _r)
end
Global.N_0x472841a026d26d8b = Global.RemoteCheatDetected

function Global.RemoveActionModeAsset(asset)
	return _in(0x13E940F88470FA51, _ts(asset))
end

function Global.RemoveAirDefenseZone(zoneId)
	return _in(0x0ABF535877897560, zoneId, _r)
end
Global.N_0x0abf535877897560 = Global.RemoveAirDefenseZone

function Global.RemoveAllAirDefenseZones()
	return _in(0x1E45B34ADEBEE48E)
end
Global.N_0x1e45b34adebee48e = Global.RemoveAllAirDefenseZones

function Global.RemoveAllCoverBlockingAreas()
	return _in(0xDB6708C0B46F56D8)
end

--- setting the last params to false it does that same so I would suggest its not a toggle
function Global.RemoveAllPedWeapons(ped, p1)
	return _in(0xF25DF915FA38C5F3, ped, p1)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
function Global.RemoveAllPickupsOfType(pickupHash)
	return _in(0x27F9D613092159CF, _ch(pickupHash))
end

--- p1 seems always to be 0
function Global.RemoveAllProjectilesOfType(weaponHash, p1)
	return _in(0xFC52E0F37E446528, _ch(weaponHash), p1)
end

function Global.RemoveAllShockingEvents(p0)
	return _in(0xEAABE8FDFA21274C, p0)
end

--- Used in am_mp_property_ext and am_mp_property_int
-- ```
-- ```
-- NativeDB Added Parameter 2: Ped ped
function Global.RemoveAllStickyBombsFromEntity(entity)
	return _in(0x715135F4B82AC90D, entity)
end
Global.N_0x715135f4b82ac90d = Global.RemoveAllStickyBombsFromEntity

function Global.RemoveAnimDict(animDict)
	return _in(0xF66A602F829E2A06, _ts(animDict))
end

--- Unloads the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
-- Animation set and clip set are synonymous.
function Global.RemoveAnimSet(animSet)
	return _in(0x16350528F93024B3, _ts(animSet))
end

--- In the C++ SDK, this seems not to work-- the blip isn't removed immediately. I use it for saving cars.
-- E.g.:
-- Ped pped = PLAYER::PLAYER_PED_ID();
-- Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);
-- Blip b = UI::ADD_BLIP_FOR_ENTITY(v);
-- works fine.
-- But later attempting to delete it with:
-- Blip b = UI::GET_BLIP_FROM_ENTITY(v);
-- if (UI::DOES_BLIP_EXIST(b)) UI::REMOVE_BLIP(&b);
-- doesn't work. And yes, doesn't work without the DOES_BLIP_EXIST check either. Also, if you attach multiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attach to other things (in my case, a vehicle).
-- Thus for me, UI::REMOVE_BLIP(&b) only works if there's one blip, (in my case) the vehicle is marked as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip attached to it. I never intentionally attach multiple blips but if the user saves the car, this adds a blip. Then if they delete it, it is supposed to remove the blip, but it doesn't. Then they can immediately save it again, causing another blip to re-appear.
-- -------------
-- Passing the address of the variable instead of the value works for me.
-- e.g.
-- int blip = UI::ADD_BLIP_FOR_ENTITY(ped);
-- UI::REMOVE_BLIP(&blip);
-- Remove blip will currently crash your game, just artificially remove the blip by setting the sprite to a id that is 'invisible'.
-- --
-- It crashes my game.
function Global.RemoveBlip(blip)
	return _in(0x86A652570E5F25DD, _ii(blip) --[[ may be optional ]])
end

--- Alias for REMOVE_ANIM_SET.
function Global.RemoveClipSet(clipSet)
	return _in(0x01F73A131C18CD94, _ts(clipSet))
end

function Global.RemoveCoverPoint(coverpoint)
	return _in(0xAE287C923D891715, coverpoint)
end

--- p0 is the handle returned from _0xFDBF4CDBC07E1706
function Global.RemoveCurrentRise(p0)
	return _in(0xB1252E3E59A82AAF, p0)
end
Global.N_0xb1252e3e59a82aaf = Global.RemoveCurrentRise

--- Unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
function Global.RemoveCutFile(cutsceneName)
	return _in(0xD00D76A7DFC9D852, _ts(cutsceneName))
end
Global.N_0xd00d76a7dfc9d852 = Global.RemoveCutFile

function Global.RemoveCutscene()
	return _in(0x440AF51A3462B86F)
end

function Global.RemoveDecal(decal)
	return _in(0xED3F346429CCD659, decal)
end

function Global.RemoveDecalsFromObject(obj)
	return _in(0xCCF71CBDDF5B6CB9, obj)
end

function Global.RemoveDecalsFromObjectFacing(obj, x, y, z)
	return _in(0xA6F6F70FDC6D144C, obj, x, y, z)
end

function Global.RemoveDecalsFromVehicle(vehicle)
	return _in(0xE91F1B65F2B48D57, vehicle)
end

--- Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
function Global.RemoveDecalsInRange(x, y, z, range)
	return _in(0x5D6B2D4830A67C62, x, y, z, range)
end

function Global.RemoveDispatchSpawnBlockingArea(p0)
	return _in(0x264AC28B01B353A5, p0)
end

function Global.RemoveDoorFromSystem(doorHash)
	return _in(0x464D8E1427156FE4, _ch(doorHash))
end

function Global.RemoveEntityFromAudioMixGroup(entity, p1)
	return _in(0x18EB48CFC41F2EA0, entity, p1)
end
Global.N_0x18eb48cfc41f2ea0 = Global.RemoveEntityFromAudioMixGroup

function Global.RemoveForcedObject(p0, p1, p2, p3, p4)
	return _in(0x61B6775E83C0DB6F, p0, p1, p2, p3, p4)
end

function Global.RemoveFromItemset(p0, p1)
	return _in(0x25E68244B0177686, p0, p1)
end

function Global.RemoveGroup(groupId)
	return _in(0x8EB2F69076AF7053, groupId)
end

--- IPL list: pastebin.com/iNGLY32D
function Global.RemoveIpl(iplName)
	return _in(0xEE6C5AD3ECE0A82D, _ts(iplName))
end

--- NativeDB Parameter 0: Hash modelHash
function Global.RemoveModelFromCreatorBudget(modelHash)
	return _in(0xF086AD9354FAC3A3, modelHash)
end
Global.N_0xf086ad9354fac3a3 = Global.RemoveModelFromCreatorBudget

function Global.RemoveModelHide(p0, p1, p2, p3, p4, p5)
	return _in(0xD9E3006FB3CBD765, p0, p1, p2, p3, p4, p5)
end

function Global.RemoveModelSwap(x, y, z, radius, originalModel, newModel, p6)
	return _in(0x033C0F9A64E229AE, x, y, z, radius, _ch(originalModel), _ch(newModel), p6)
end

function Global.RemoveMpGamerTag(gamerTagId)
	return _in(0x31698AA80E0223F8, gamerTagId)
end
Global.N_0x31698aa80e0223f8 = Global.RemoveMpGamerTag

function Global.RemoveMultiplayerBankCash()
	return _in(0xC7C6789AA1CFEDD0)
end

--- Removes multiplayer cash hud each frame
function Global.RemoveMultiplayerHudCash()
	return _in(0x968F270E39141ECA)
end

function Global.RemoveMultiplayerWalletCash()
	return _in(0x95CF81BD06EE1887)
end
Global.N_0x95cf81bd06ee1887 = Global.RemoveMultiplayerWalletCash

--- assetName = For example "core"
function Global.RemoveNamedPtfxAsset(fxName)
	return _in(0x5F61EBBE1A00F96D, _ts(fxName))
end
Global.RemoveNamedPtfxAsset = Global.RemoveNamedPtfxAsset

function Global.RemoveNavmeshBlockingObject(p0)
	return _in(0x46399A7895957C0E, p0)
end

function Global.RemoveNavmeshRequiredRegions()
	return _in(0x916F0A3CDEC3445E)
end

function Global.RemoveObjectHighDetailModel(p0)
	return _in(0x4A39DB43E47CF3AA, p0)
end
Global.N_0x4a39db43e47cf3aa = Global.RemoveObjectHighDetailModel

function Global.RemoveParticleFx(ptfxHandle, p1)
	return _in(0xC401503DFE8D53CF, ptfxHandle, p1)
end

function Global.RemoveParticleFxFromEntity(entity)
	return _in(0xB8FEAEEBCC127425, entity)
end

function Global.RemoveParticleFxInRange(X, Y, Z, radius)
	return _in(0xDD19FA1C6D657305, X, Y, Z, radius)
end

--- Ped will no longer get angry when you stay near him.
function Global.RemovePedDefensiveArea(ped, toggle)
	return _in(0x74D4E028107450A9, ped, toggle)
end

--- Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed. - very elegant..
function Global.RemovePedElegantly(ped)
	return _in(0xAC6D445B994DF95E, _ii(ped) --[[ may be optional ]])
end

function Global.RemovePedFromGroup(ped)
	return _in(0xED74007FFB146BC2, ped)
end

function Global.RemovePedHelmet(ped, instantly)
	return _in(0xA7B2458D0AD6DED8, ped, instantly)
end

function Global.RemovePedPreferredCoverSet(ped)
	return _in(0xFDDB234CF74073D9, ped)
end
Global.N_0xfddb234cf74073d9 = Global.RemovePedPreferredCoverSet

--- Retracts the hook on the cargobob.
-- Note: after you retract it the natives for dropping the hook no longer work
function Global.RemovePickUpRopeForCargobob(cargobob)
	return _in(0x9768CF648F54C804, cargobob)
end
Global.RetractCargobobHook = Global.RemovePickUpRopeForCargobob

function Global.RemovePickup(pickup)
	return _in(0x3288D8ACAECD2AB2, pickup)
end

--- NativeDB Return Type: void
function Global.RemovePlayerHelmet(player, p2)
	return _in(0xF3AC26D3CC576528, player, p2, _r, _ri)
end

function Global.RemovePopMultiplierArea(id, p1)
	return _in(0xB129E447A2EDA4BF, id, p1)
end
Global.N_0xb129e447a2eda4bf = Global.RemovePopMultiplierArea

function Global.RemovePopMultiplierSphere(id, p1)
	return _in(0xE6869BECDD8F2403, id, p1)
end
Global.N_0xe6869becdd8f2403 = Global.RemovePopMultiplierSphere

--- Found in the b617d scripts, duplicates removed:
-- AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
-- AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
-- AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
-- AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
-- AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
function Global.RemovePortalSettingsOverride(p0)
	return _in(0xB4BBFD9CD8B3922B, _ts(p0))
end
Global.N_0xb4bbfd9cd8b3922b = Global.RemovePortalSettingsOverride

function Global.RemovePtfxAsset()
	return _in(0x88C6814073DD4A73)
end

function Global.RemoveRelationshipGroup(groupHash)
	return _in(0xB6BA2444AB393DA2, _ch(groupHash))
end

--- Experimental natives, please do not use in a live environment.
function Global.RemoveReplaceTexture(origTxd, origTxn)
	return _in(0xa896b20a, _ts(origTxd), _ts(origTxn))
end

--- Another function related to "HUD scaleforms"
function Global.RemoveScaleformScriptHudMovie(hudComponent)
	return _in(0xF44A5456AC3F4F97, hudComponent)
end
Global.N_0xf44a5456ac3f4f97 = Global.RemoveScaleformScriptHudMovie

function Global.RemoveScenarioBlockingArea(p0, p1)
	return _in(0x31D16B74C6E29D66, p0, p1)
end

function Global.RemoveScenarioBlockingAreas()
	return _in(0xD37401D78A929A49)
end

function Global.RemoveScriptFire(fireHandle)
	return _in(0x7FF548385680673F, fireHandle)
end

function Global.RemoveShockingEvent(event)
	return _in(0x2CDA538C44C6CCE5, event, _r)
end

function Global.RemoveShockingEventSpawnBlockingAreas()
	return _in(0x340F1415B68AEADE)
end

--- Used to remove a speedzone.
-- This is the speed zone native.
-- Example usage C#:
-- uint speedZone = Function.Call<uint>((Hash) 0x2CE544C68FB812A0, Game.PlayerPed.Position.X, Game.PlayerPed.Position.Y, Game.PlayerPed.Position.Z, 100.0f, 0.0f, false);
-- bool speedZoneClosed = Function.Call<bool>((Hash) 0x1033371FC8E842A7, speedZone);
-- (Thanks to alexguirre for his help!)
function Global.RemoveSpeedZone(speedzone)
	return _in(0x1033371FC8E842A7, speedzone, _r)
end
Global.N_0x1033371fc8e842a7 = Global.RemoveSpeedZone

--- Appears to remove stealth kill action from memory.
-- ------------------------------------
-- I agree with the above statement.
-- p1 is unknown, my best guess would be if false it marks the stealth kill for immediate deletion, or if true marks it for deletion later.
function Global.RemoveStealthKill(hash, p1)
	return _in(0xA6A12939F16D85BE, _ch(hash), p1)
end
Global.N_0xa6a12939f16d85be = Global.RemoveStealthKill

function Global.RemoveStealthModeAsset(asset)
	return _in(0x9219857D21F0E842, _ts(asset))
end

function Global.RemoveVehicleAsset(vehicleAsset)
	return _in(0xACE699C71AB9DEB5, vehicleAsset)
end

function Global.RemoveVehicleCombatAvoidanceArea(p0)
	return _in(0xE30524E1871F481D, p0)
end
Global.N_0xe30524e1871f481d = Global.RemoveVehicleCombatAvoidanceArea

function Global.RemoveVehicleCrewEmblem(vehicle, p1)
	return _in(0xD2300034310557E4, vehicle, p1)
end
Global.N_0xd2300034310557e4 = Global.RemoveVehicleCrewEmblem

function Global.RemoveVehicleHighDetailModel(vehicle)
	return _in(0x00689CDE5F7C6787, vehicle)
end

function Global.RemoveVehicleMod(vehicle, modType)
	return _in(0x92D619E420858204, vehicle, modType)
end

function Global.RemoveVehicleRecording(p0, p1)
	return _in(0xF1160ACCF98A3FC8, p0, _ii(p1) --[[ may be optional ]])
end

function Global.RemoveVehicleStuckCheck(vehicle)
	return _in(0x8386BFB614D06749, vehicle)
end

function Global.RemoveVehicleUpsidedownCheck(vehicle)
	return _in(0xC53EB42A499A7E90, vehicle)
end

--- windowIndex:
-- 0 = Front Right Window
-- 1 = Front Left Window
-- 2 = Back Right Window
-- 3 = Back Left Window
function Global.RemoveVehicleWindow(vehicle, windowIndex)
	return _in(0xA711568EEDB43069, vehicle, windowIndex)
end

function Global.RemoveVehiclesFromGeneratorsInArea(x1, y1, z1, x2, y2, z2, unk)
	return _in(0x46A1E1A299EC4BBA, x1, y1, z1, x2, y2, z2, unk)
end

function Global.RemoveWarningMessageListItems()
	return _in(0x6EF54AB721DC6242)
end
Global.N_0x6ef54ab721dc6242 = Global.RemoveWarningMessageListItems

--- For a full list, see here: pastebin.com/Tp0XpBMN
function Global.RemoveWaypointRecording(name)
	return _in(0xFF1B8B4AA1C25DC8, _ts(name))
end

function Global.RemoveWeaponAsset(weaponHash)
	return _in(0xAA08EF13F341C8FC, _ch(weaponHash))
end

function Global.RemoveWeaponComponentFromPed(ped, weaponHash, componentHash)
	return _in(0x1E8BE90C74FB4C09, ped, _ch(weaponHash), _ch(componentHash))
end

function Global.RemoveWeaponComponentFromWeaponObject(p0, p1)
	return _in(0xF7D82B0D66777611, p0, p1)
end

--- This native removes a specified weapon from your selected ped.
-- Weapon Hashes: pastebin.com/0wwDZgkF
-- Example:
-- C#:
-- Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
-- C++:
-- WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);
-- The code above removes the knife from the player.
function Global.RemoveWeaponFromPed(ped, weaponHash)
	return _in(0x4899CB088EDF59B8, ped, _ch(weaponHash))
end

--- This native makes the gameplay camera zoom into first person/third person with a special effect.
-- For example, if you were first person in a mission and after the cutscene ends, the camera would then zoom into the first person camera view.
-- if (CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() != 4)
-- CAM::_C819F3CBB62BF692(1, 0, 3, 0)
-- This makes the camera zoom in to first person.
-- --------------------------------------------
-- 1st Param Options: 0 or 1 (Changes quit often, toggle?)
-- 2nd Param Options: 0, 0f, 1f, 3.8f, 10f, 20f (Mostly 0)
-- 3rd Param Options: 3, 2, 1 (Mostly 3);
-- Note for the 2nd param 10f (offroad_race.c) and 3rd param 20f (range_modern.c) are the only times those 2 high floats are called.
-- Note for the 3rd param 2 is only ever set in (franklin0.c), but it also sets it as 3. (0, 0, 3) ||(0, 0f, 2) || (0, 0, 3)
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.RenderFirstPersonCam(render, p1, p2)
	return _in(0xC819F3CBB62BF692, render, p1, p2)
end
Global.N_0xc819f3cbb62bf692 = Global.RenderFirstPersonCam

--- ease - smooth transition between the camera's positions
-- easeTime - Time in milliseconds for the transition to happen
-- If you have created a script (rendering) camera, and want to go back to the
-- character (gameplay) camera, call this native with render set to 0.
-- Setting ease to 1 will smooth the transition.
-- ```
-- ```
-- NativeDB Added Parameter 6: Any p5
function Global.RenderScriptCams(render, ease, easeTime, p3, p4)
	return _in(0x07E5B515DB0636FC, render, ease, easeTime, p3, p4)
end

--- HUD colors and their values: pastebin.com/d9aHPbXN
-- --------------------------------------------------
-- makes hudColorIndex2 color into hudColorIndex color
function Global.ReplaceHudColour(hudColorIndex, hudColorIndex2)
	return _in(0x1CCC708F0F850613, hudColorIndex, hudColorIndex2)
end
Global.N_0x1ccc708f0f850613 = Global.ReplaceHudColour
Global.SetHudColoursSwitch = Global.ReplaceHudColour

--- HUD colors and their values: pastebin.com/d9aHPbXN
function Global.ReplaceHudColourWithRgba(hudColorIndex, r, g, b, a)
	return _in(0xF314CF4F0211894E, hudColorIndex, r, g, b, a)
end
Global.N_0xf314cf4f0211894e = Global.ReplaceHudColourWithRgba
Global.SetHudColour = Global.ReplaceHudColourWithRgba

function Global.ReplayFreeCamGetMaxRange()
	return _in(0x8BFCEB5EA1B161B6, _r, _rf)
end
Global.N_0x8bfceb5ea1b161b6 = Global.ReplayFreeCamGetMaxRange

--- PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));
-- From am_armybase.ysc.c4:
-- PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));
-- -----
-- This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7
-- -----
-- crimeType:
-- 1: Firearms possession
-- 2: Person running a red light ("5-0-5")
-- 3: Reckless driver
-- 4: Speeding vehicle (a "5-10")
-- 5: Traffic violation (a "5-0-5")
-- 6: Motorcycle rider without a helmet
-- 7: Vehicle theft (a "5-0-3")
-- 8: Grand Theft Auto
-- 9: ???
-- 10: ???
-- 11: Assault on a civilian (a "2-40")
-- 12: Assault on an officer
-- 13: Assault with a deadly weapon (a "2-45")
-- 14: Officer shot (a "2-45")
-- 15: Pedestrian struck by a vehicle
-- 16: Officer struck by a vehicle
-- 17: Helicopter down (an "AC"?)
-- 18: Civilian on fire (a "2-40")
-- 19: Officer set on fire (a "10-99")
-- 20: Car on fire
-- 21: Air unit down (an "AC"?)
-- 22: An explosion (a "9-96")
-- 23: A stabbing (a "2-45") (also something else I couldn't understand)
-- 24: Officer stabbed (also something else I couldn't understand)
-- 25: Attack on a vehicle ("MDV"?)
-- 26: Damage to property
-- 27: Suspect threatening officer with a firearm
-- 28: Shots fired
-- 29: ???
-- 30: ???
-- 31: ???
-- 32: ???
-- 33: ???
-- 34: A "2-45"
-- 35: ???
-- 36: A "9-25"
-- 37: ???
-- 38: ???
-- 39: ???
-- 40: ???
-- 41: ???
-- 42: ???
-- 43: Possible disturbance
-- 44: Civilian in need of assistance
-- 45: ???
-- 46: ???
function Global.ReportCrime(player, crimeType, wantedLvlThresh)
	return _in(0xE9B09589827545E7, player, crimeType, wantedLvlThresh)
end

function Global.RequestActionModeAsset(asset)
	return _in(0x290E2780BB7AA598, _ts(asset))
end

--- MulleDK19: Alias of REQUEST_COLLISION_AT_COORD.
function Global.RequestAdditionalCollisionAtCoord(x, y, z)
	return _in(0xC9156DC11411A9EA, x, y, z)
end

--- Request a gxt into the passed slot.
function Global.RequestAdditionalText(gxt, slot)
	return _in(0x71A78003C8E71424, _ts(gxt), slot)
end

function Global.RequestAdditionalTextForDlc(gxt, slot)
	return _in(0x6009F9F1AE90D8A6, _ts(gxt), slot)
end
Global.RequestAdditionalText_2 = Global.RequestAdditionalTextForDlc

--- All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/XZ1tmGEz
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.RequestAmbientAudioBank(p0, p1)
	return _in(0xFE02FFBED8CA9D99, _ts(p0), p1, _r)
end

function Global.RequestAnimDict(animDict)
	return _in(0xD3BD40951412FEF6, _ts(animDict))
end

--- Starts loading the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
function Global.RequestAnimSet(animSet)
	return _in(0x6EA47DAE7FAD0EED, _ts(animSet))
end

function Global.RequestClipSet(clipSet)
	return _in(0xD2A71E1A77418A49, _ts(clipSet))
end

--- NativeDB Return Type: void
function Global.RequestCollisionAtCoord(x, y, z)
	return _in(0x07503F7948F491A7, x, y, z, _r, _ri)
end

function Global.RequestCollisionForModel(model)
	return _in(0x923CB32A3B874FCB, _ch(model))
end

function Global.RequestCommerceItemImage(index)
	return _in(0xA2F952104FC6DD4B, index, _r)
end
Global.N_0xa2f952104fc6dd4b = Global.RequestCommerceItemImage

--- Loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
function Global.RequestCutFile(cutsceneName)
	return _in(0x06A3524161C502BA, _ts(cutsceneName))
end
Global.N_0x06a3524161c502ba = Global.RequestCutFile

--- p1: usually 8
-- Cutscene list: pastebin.com/Bbj7ANpQ
function Global.RequestCutscene(cutsceneName, flags)
	return _in(0x7A86743F475D9E09, _ts(cutsceneName), flags)
end

--- Example:
-- CUTSCENE::_0xC23DE0E91C30B58C("JOSH_1_INT_CONCAT", 13, 8);
-- Cutscene list: pastebin.com/Bbj7ANpQ
function Global.RequestCutsceneWithPlaybackList(cutsceneName, playbackFlags, flags)
	return _in(0xC23DE0E91C30B58C, _ts(cutsceneName), playbackFlags, flags)
end
Global.N_0xc23de0e91c30b58c = Global.RequestCutsceneWithPlaybackList
Global.RequestCutsceneEx = Global.RequestCutsceneWithPlaybackList

--- IPL list: pastebin.com/iNGLY32D
function Global.RequestIpl(iplName)
	return _in(0x41B4893843BBDB74, _ts(iplName))
end

--- streaming::request_menu_ped_model(joaat("player_zero"));
-- iVar0 = ped::create_ped(25, joaat("player_zero"), cam::_get_gameplay_cam_coords(), 0f, 0, false);
-- entity::freeze_entity_position(iVar0, true);
-- ped::_0x4668d80430d6c299(iVar0);
-- ui::give_ped_to_pause_menu(iVar0, 1);
function Global.RequestMenuPedModel(model)
	return _in(0xA0261AEF7ACFC51E, _ch(model))
end
Global.N_0xa0261aef7acfc51e = Global.RequestMenuPedModel

--- All occurrences and usages found in b617d: pastebin.com/NzZZ2Tmm
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.RequestMissionAudioBank(p0, p1)
	return _in(0x7345BDD95E62E0F2, _ts(p0), p1, _r)
end

--- Request a model to be loaded into memory
-- Looking it the disassembly, it seems like it actually returns the model if it's already loaded.
function Global.RequestModel(model)
	return _in(0x963D27A58DF860AC, _ch(model))
end

--- Something to do with interiors that have been loaded.
-- STREAMING::_8A7A40100EDFEC58(l_13BC, "V_FIB01_cur_elev");
-- STREAMING::_8A7A40100EDFEC58(l_13BC, "limbo");
-- STREAMING::_8A7A40100EDFEC58(l_13BB, "V_Office_gnd_lifts");
-- STREAMING::_8A7A40100EDFEC58(l_13BB, "limbo");
-- STREAMING::_8A7A40100EDFEC58(l_13BC, "v_fib01_jan_elev");
-- STREAMING::_8A7A40100EDFEC58(l_13BC, "limbo");
function Global.RequestModelsInRoom(interiorID, roomName)
	return _in(0x8A7A40100EDFEC58, interiorID, _ts(roomName))
end
Global.N_0x8a7a40100edfec58 = Global.RequestModelsInRoom
Global.RequestInteriorRoomByName = Global.RequestModelsInRoom

--- assetName = For example "core"
-- From the b678d decompiled scripts:
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
function Global.RequestNamedPtfxAsset(assetName)
	return _in(0xB80D8756B4668AB6, _ts(assetName))
end

--- Used internally for long range tasks
function Global.RequestPathsPreferAccurateBoundingstruct(x1, y1, x2, y2)
	return _in(0x07FB139B592FA687, x1, y1, x2, y2, _r)
end
Global.N_0x07fb139b592fa687 = Global.RequestPathsPreferAccurateBoundingstruct

function Global.RequestPedVehicleVisibilityTracking(ped, p1)
	return _in(0x2BC338A7B21F4608, ped, p1)
end
Global.GetPedFloodInvincibility = Global.RequestPedVehicleVisibilityTracking

--- i found this function just like VEHICLE::TRACK_VEHICLE_VISIBILITY
-- example:
-- PED::_0x7D7A2E43E74E2EB8(ped);// TRACK_PED_VISIBILITY
-- if (PED::IS_TRACKED_PED_VISIBLE(ped))
-- {
-- }
function Global.RequestPedVisibilityTracking(ped)
	return _in(0x7D7A2E43E74E2EB8, ped)
end
Global.N_0x7d7a2e43e74e2eb8 = Global.RequestPedVisibilityTracking

function Global.RequestPedheadshotImgUpload(id)
	return _in(0xF0DAEF2F545BEE25, id, _r)
end
Global.N_0xf0daef2f545bee25 = Global.RequestPedheadshotImgUpload

--- maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
-- ```
-- ```
-- NativeDB Return Type: void
function Global.RequestPtfxAsset()
	return _in(0x944955FB2A3935C8, _r, _ri)
end

--- GTA V Scaleforms Decompiled
-- pastebin.com/mmNdjX2k
-- Gets a new native after almost every update.
-- Update 1.0.393.2
-- 0x67D02A194A2FC2BD
-- Update 1.0.463.1
-- 0xC97D787CE7726A2F
-- Update 1.0.505.2
-- 0x36ECDA4DD9A3F08D
-- Update 1.0.573.1
-- 0xE3C796DC28BC3254
-- Update 1.0.678.1
-- 0x2F14983962462691
function Global.RequestScaleformMovie(scaleformName)
	return _in(0x11FE353CF9733E6F, _ts(scaleformName), _r, _ri)
end

--- Also used by 0x67D02A194A2FC2BD
function Global.RequestScaleformMovieInstance(scaleformName)
	return _in(0xC514489CFB8AF806, _ts(scaleformName), _r, _ri)
end

--- Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?
-- These seem to be the only scaleforms ever requested by this native:
-- "breaking_news"
-- "desktop_pc"
-- "ECG_MONITOR"
-- "Hacking_PC"
-- "TEETH_PULLING"
-- Note: Unless this hash is out-of-order, this native is next-gen only.
function Global.RequestScaleformMovieInteractive(scaleformName)
	return _in(0xBD06C611BB9048C2, _ts(scaleformName), _r, _ri)
end
Global.RequestScaleformMovie3 = Global.RequestScaleformMovieInteractive

--- Another [REQUEST_SCALEFORM_MOVIE](#_0x11FE353CF9733E6F) equivalent.
function Global.RequestScaleformMovie_2(scaleformName)
	return _in(0x65E7E78842E74CDB, _ts(scaleformName), _r, _ri)
end
Global.N_0x65e7e78842e74cdb = Global.RequestScaleformMovie_2

--- http://gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/?p=1068285912
function Global.RequestScaleformScriptHudMovie(hudComponent)
	return _in(0x9304881D6F6537EA, hudComponent)
end
Global.N_0x9304881d6f6537ea = Global.RequestScaleformScriptHudMovie
Global.RequestHudScaleform = Global.RequestScaleformScriptHudMovie

--- For a full list, see here: pastebin.com/yLNWicUi
function Global.RequestScript(scriptName)
	return _in(0x6EB5F71AA68F2E8E, _ts(scriptName))
end

--- All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/AkmDAVn6
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.RequestScriptAudioBank(p0, p1)
	return _in(0x2F844A8B08D76685, _ts(p0), p1, _r)
end

--- formerly _REQUEST_STREAMED_SCRIPT
function Global.RequestScriptWithNameHash(scriptHash)
	return _in(0xD62A67D26D9653E6, _ch(scriptHash))
end
Global.RequestStreamedScript = Global.RequestScriptWithNameHash

function Global.RequestStealthModeAsset(asset)
	return _in(0x2A0A62FCDEE16D4F, _ts(asset))
end

--- last param seems to be unused in disassembly
function Global.RequestStreamedTextureDict(textureDict, p1)
	return _in(0xDFA2EF8E04127DD5, _ts(textureDict), p1)
end

function Global.RequestTaskMoveNetworkStateTransition(ped, name)
	return _in(0xD01015C7316AE176, ped, _ts(name), _r)
end
Global.N_0xd01015c7316ae176 = Global.RequestTaskMoveNetworkStateTransition

--- REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
-- vehicle found that have asset's:
-- cargobob3
-- submersible
-- blazer
function Global.RequestVehicleAsset(vehicleHash, vehicleAsset)
	return _in(0x81A15811460FAB3A, _ch(vehicleHash), vehicleAsset)
end

--- REQUEST_VEHICLE_*
function Global.RequestVehicleDashboardScaleformMovie(vehicle)
	return _in(0xDBA3C090E3D74690, vehicle)
end
Global.N_0xdba3c090e3d74690 = Global.RequestVehicleDashboardScaleformMovie

function Global.RequestVehicleHighDetailModel(vehicle)
	return _in(0xA6E9FDCB2C76785E, vehicle)
end

--- In script files, seen as REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER");
function Global.RequestVehicleRecording(i, name)
	return _in(0xAF514CABE74CBF15, i, _ts(name))
end

--- For a full list, see here: pastebin.com/Tp0XpBMN
-- For a full list of the points, see here: goo.gl/wIH0vn
-- Max number of loaded recordings is 32.
function Global.RequestWaypointRecording(name)
	return _in(0x9EEFB62EB27B5792, _ts(name))
end

--- Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
-- REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
function Global.RequestWeaponAsset(weaponHash, p1, p2)
	return _in(0x5443438F033E29C3, _ch(weaponHash), p1, p2)
end

function Global.RequestWeaponHighDetailModel(weaponObject)
	return _in(0x48164DBB970AC3F0, weaponObject)
end

--- Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
-- ```
-- ```
-- NativeDB Introduced: v1290
-- @param amount :
function Global.ReserveNetworkLocalObjects(amount)
	return _in(0x797F9C5E661D920E, amount)
end
Global.N_0x797f9c5e661d920e = Global.ReserveNetworkLocalObjects

--- Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
-- ```
-- ```
-- NativeDB Introduced: v1493
-- @param amount :
function Global.ReserveNetworkLocalPeds(amount)
	return _in(0x2C8DF5D129595281, amount)
end
Global.N_0x2c8df5d129595281 = Global.ReserveNetworkLocalPeds

--- Internal logging string: SCRIPT_RESERVING_LOCAL_VEHICLES
function Global.ReserveNetworkLocalVehicles(amount)
	return _in(0x42613035157E4208, amount)
end
Global.N_0x42613035157e4208 = Global.ReserveNetworkLocalVehicles

function Global.ReserveNetworkMissionObjects(amount)
	return _in(0x4E5C93BD0C32FBF8, amount)
end

function Global.ReserveNetworkMissionPeds(amount)
	return _in(0xB60FEBA45333D36F, amount)
end

function Global.ReserveNetworkMissionVehicles(amount)
	return _in(0x76B02E21ED27A469, amount)
end

function Global.ResetAiMeleeWeaponDamageModifier()
	return _in(0x46E56A7CD1D63C3F)
end

function Global.ResetAiWeaponDamageModifier()
	return _in(0xEA16670E7BA4743C)
end

--- Begins with RESET_*. Next character in the name is either D or E.
function Global.ResetBenchmarkRecording()
	return _in(0x437138B6A830166A)
end
Global.N_0x437138b6a830166a = Global.ResetBenchmarkRecording

--- Sets the waves intensity back to original (1.0 in most cases).
function Global.ResetDeepOceanScaler()
	return _in(0x5E5E99285AE812DB)
end
Global.N_0x5e5e99285ae812db = Global.ResetDeepOceanScaler
Global.ResetWavesIntensity = Global.ResetDeepOceanScaler
Global.ResetCurrentIntensity = Global.ResetDeepOceanScaler

function Global.ResetDispatchIdealSpawnDistance()
	return _in(0x77A84429DD9F0A15)
end

function Global.ResetDispatchSpawnBlockingAreas()
	return _in(0xAC7BFD5C1D83EA75)
end

--- NativeDB Introduced: v323
-- @param p0 :
function Global.ResetDispatchTimeBetweenSpawnAttempts(p0)
	return _in(0xEB2DB0CAD13154B3, p0)
end

--- Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
function Global.ResetEditorValues()
	return _in(0x3353D13F09307691)
end
Global.N_0x3353d13f09307691 = Global.ResetEditorValues

--- NativeDB Return Type: void
function Global.ResetEntityAlpha(entity)
	return _in(0x9B1E824FFBB7027A, entity, _r, _ri)
end

function Global.ResetExclusiveScenarioGroup()
	return _in(0x4202BBCB8684563D)
end

--- Resets the extra timecycle modifier strength normally set with [`SetExtraTimecycleModifierStrength`](#_0x2C328AF17210F009)
function Global.ResetExtraTimecycleModifierStrength()
	return _in(0x2BF72AD5B41AA739)
end
Global.N_0x2bf72ad5b41aa739 = Global.ResetExtraTimecycleModifierStrength

function Global.ResetGroupFormationDefaultSpacing(groupHandle)
	return _in(0x63DAB4CCB3273205, groupHandle)
end

function Global.ResetHudComponentValues(id)
	return _in(0x450930E616475D0D, id)
end

--- S*
function Global.ResetInputMappingScheme()
	return _in(0x643ED62D5EA3BEBD)
end
Global.N_0x643ed62d5ea3bebd = Global.ResetInputMappingScheme

--- Sets the localplayer playerinfo state back to playing (State 0)
-- States are:
-- -1: "Invalid"
-- 0: "Playing"
-- 1: "Died"
-- 2: "Arrested"
-- 3: "Failed Mission"
-- 4: "Left Game"
-- 5: "Respawn"
-- 6: "In MP Cutscene"
function Global.ResetLocalplayerState()
	return _in(0xC0AA53F866B3134D)
end

--- Resets values from the zoom level data by index to defaults from mapzoomdata.meta.
-- @param index Zoom level index.
function Global.ResetMapZoomDataLevel(index)
	return _in(0x11a5b7ed, index)
end

--- Resets the effect of _SET_PARTICLE_FX_ASSET_OLD_TO_NEW
function Global.ResetParticleFxOverride(name)
	return _in(0x89C8553DD3274AAE, _ts(name))
end
Global.N_0x89c8553dd3274aae = Global.ResetParticleFxOverride
Global.ResetParticleFxAssetOldToNew = Global.ResetParticleFxOverride

function Global.ResetPausedRenderphases()
	return _in(0xE1C8709406F2C41C)
end
Global.N_0xe1c8709406f2c41c = Global.ResetPausedRenderphases

function Global.ResetPedAudioFlags(ped)
	return _in(0xF54BB7B61036F335, ped)
end

function Global.ResetPedInVehicleContext(ped)
	return _in(0x22EF8FF8778030EB, ped)
end

--- Resets the value for the last vehicle driven by the Ped.
function Global.ResetPedLastVehicle(ped)
	return _in(0xBB8DE8CF6A8DD8BB, ped)
end

--- If p1 is 0.0, I believe you are back to normal.
-- If p1 is 1.0, it looks like you can only rotate the ped, not walk.
-- Using the following code to reset back to normal
-- PED::RESET_PED_MOVEMENT_CLIPSET(PLAYER::PLAYER_PED_ID(), 0.0);
function Global.ResetPedMovementClipset(ped, p1)
	return _in(0xAA74EC0CB0AAEA2C, ped, p1)
end

function Global.ResetPedRagdollTimer(ped)
	return _in(0x9FA4664CF62E47E8, ped)
end

function Global.ResetPedStrafeClipset(ped)
	return _in(0x20510814175EA477, ped)
end

--- NativeDB Return Type: void
function Global.ResetPedVisibleDamage(ped)
	return _in(0x3AC1F7B898F30C05, ped, _r, _ri)
end

function Global.ResetPedWeaponMovementClipset(ped)
	return _in(0x97B0DB5B4AA74E77, ped)
end

function Global.ResetPlayerArrestState(player)
	return _in(0x2D03E13C460760D6, player)
end

function Global.ResetPlayerInputGait(player)
	return _in(0x19531C47A2ABD691, player)
end

function Global.ResetPlayerStamina(player)
	return _in(0xA6F312FCCE9C1DFE, player)
end

function Global.ResetReticuleValues()
	return _in(0x12782CE0A636E9F0)
end

function Global.ResetScenarioGroupsEnabled()
	return _in(0xDD902D0349AFAD3A)
end

function Global.ResetScenarioTypesEnabled()
	return _in(0x0D40EE2A7F2B2D6D)
end

--- This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
-- values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
-- any other scripts attempting to draw.
function Global.ResetScriptGfxAlign()
	return _in(0xE3A3DB414A373DAB)
end
Global.N_0xe3a3db414a373dab = Global.ResetScriptGfxAlign
Global.ScreenDrawPositionEnd = Global.ResetScriptGfxAlign

function Global.ResetTrevorRage()
	return _in(0xE78503B10C4314E0)
end

--- The inner function has a switch on the second parameter. It's the stuck timer index.
-- Here's some pseudo code I wrote for the inner function:
-- void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
-- {
-- switch (timerIndex)
-- {
-- case 0:
-- unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
-- case 1:
-- unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
-- case 2:
-- unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
-- case 3:
-- unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
-- case 4:
-- unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
-- unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
-- unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
-- unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
-- break;
-- };
-- }
function Global.ResetVehicleStuckTimer(vehicle, nullAttributes)
	return _in(0xD7591B0065AFAA7A, vehicle, nullAttributes)
end

function Global.ResetVehicleWheels(vehicle, toggle)
	return _in(0x21D2E5662C1F6FED, vehicle, toggle)
end

function Global.ResetWantedLevelDifficulty(player)
	return _in(0xB9D0DD990DC141DD, player)
end

--- NativeDB Introduced: v323
function Global.ResetWorldBoundaryForPlayer()
	return _in(0xDA1DF03D5A315F4E)
end

--- Before using this native click the native above and look at the decription.
-- Example:
-- int GetHash = Function.Call<int>(Hash.GET_HASH_KEY, "fe_menu_version_corona_lobby");
-- Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
-- Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);
-- This native refreshes the frontend menu.
-- p1 = Hash of Menu
-- p2 = Unknown but always works with -1.
function Global.RestartFrontendMenu(menuHash, p1)
	return _in(0x10706DC6AD2D49C0, _ch(menuHash), p1)
end

--- Shows `Disconnecting from GTA Online` HUD and then quits the game. Better name `_QUIT_GAME`?
function Global.RestartGame()
	return _in(0xE574A662ACAEFBB1)
end
Global.N_0xe574a662acaefbb1 = Global.RestartGame

function Global.RestartScriptedConversation()
	return _in(0x9AEB285D1818C9AC)
end

function Global.RestorePlayerStamina(player, p1)
	return _in(0xA352C1B864CAFD33, player, p1)
end

--- This function will simply bring the dead person back to life.
-- Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
-- Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
-- Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
function Global.ResurrectPed(ped)
	return _in(0x71BC8E838B9C6035, ped)
end

--- It returns two lol
-- li r3, 2
-- blr
-- thats all it does.
-- mov dword ptr [rax], 2
-- Заебись функционал
function Global.ReturnTwo(p0)
	return _in(0x40AFB081F8ADD4EE, p0, _r, _ri)
end
Global.N_0x40afb081f8add4ee = Global.ReturnTwo

--- It will revive/cure the injured ped. The condition is ped must not be dead.
-- Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
-- This function is well suited there.
function Global.ReviveInjuredPed(ped)
	return _in(0x8D8ACD8388CD99CE, ped)
end

function Global.RockstarMessageGetString()
	return _in(0xDF649C4E9AFDD788, _r, _s)
end
Global.N_0xdf649c4e9afdd788 = Global.RockstarMessageGetString

--- windowIndex:
-- 0 = Front Right Window
-- 1 = Front Left Window
-- 2 = Back Right Window
-- 3 = Back Left Window
-- ```
-- ```
-- NativeDB Return Type: void
function Global.RollDownWindow(vehicle, windowIndex)
	return _in(0x7AD9E6CE657D69E3, vehicle, windowIndex, _r, _ri)
end

--- Roll down all the windows of the vehicle passed through the first parameter.
function Global.RollDownWindows(vehicle)
	return _in(0x85796B0549DDE156, vehicle)
end

--- 0 = Front Right Window
-- 1 = Front Left Window
-- 2 = Back Right Window
-- 3 = Back Left Window
-- ```
-- ```
-- NativeDB Return Type: void
function Global.RollUpWindow(vehicle, windowIndex)
	return _in(0x602E548F46E24D59, vehicle, windowIndex, _r, _ri)
end

function Global.RopeAreTexturesLoaded()
	return _in(0xF2D0E6A75CC05597, _r)
end

function Global.RopeConvertToSimple(ropeId)
	return _in(0x5389D48EFA2F079A, ropeId)
end

function Global.RopeDrawShadowEnabled(toggle)
	return _in(0xF159A63806BB5BA8, _i, toggle)
end

--- Forces a rope to a certain length.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.RopeForceLength(ropeId, length)
	return _in(0xD009F759A723DB1B, ropeId, length, _r, _ri)
end

--- Get a rope's length.  Can be modified with ROPE_FORCE_LENGTH
function Global.RopeGetDistanceBetweenEnds(ropeId)
	return _in(0x73040398DFF9A4A6, ropeId, _r, _rf)
end
Global.GetRopeLength = Global.RopeGetDistanceBetweenEnds

--- Loads rope textures for all ropes in the current scene.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.RopeLoadTextures()
	return _in(0x9B9039DBF2D258C1, _r, _ri)
end

--- Reset a rope to a certain length.
function Global.RopeResetLength(ropeId, length)
	return _in(0xC16DE94D9BEA14A0, ropeId, length)
end

--- ROPE_*
function Global.RopeSetUpdateOrder(ropeId, p1)
	return _in(0xDC57A637A20006ED, ropeId, p1)
end
Global.N_0xdc57a637a20006ed = Global.RopeSetUpdateOrder

function Global.RopeSetUpdatePinverts(ropeId)
	return _in(0xC8D667EE52114ABA, ropeId)
end

--- Unloads rope textures for all ropes in the current scene.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.RopeUnloadTextures()
	return _in(0x6CE36C35C1AC8163, _r, _ri)
end

function Global.Round(value)
	return _in(0xF2DB717A73826179, value, _r, _ri)
end

--- Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
function Global.SaveBenchmarkRecording()
	return _in(0x37DEB0AA183FB6D8)
end
Global.N_0x37deb0aa183fb6d8 = Global.SaveBenchmarkRecording

function Global.SaveRecordingClip()
	return _in(0x644546EC5287471B, _r)
end
Global.N_0x644546ec5287471b = Global.SaveRecordingClip

function Global.ScEmailMessageClearRecipList()
	return _in(0x55DF6DB45179236E)
end
Global.N_0x55df6db45179236e = Global.ScEmailMessageClearRecipList

function Global.ScEmailMessagePushGamerToRecipList(networkHandle)
	return _in(0x2330C12A7A605D16, _ii(networkHandle) --[[ may be optional ]])
end

--- Same as HAS_ACHIEVEMENT_BEEN_PASSED
function Global.ScGetHasAchievementBeenPassed(achievement)
	return _in(0x418DC16FAE452C1C, achievement, _r)
end
Global.N_0x418dc16fae452c1c = Global.ScGetHasAchievementBeenPassed

--- sfink: from scripts:
-- func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
-- func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
function Global.ScGetIsProfileAttributeSet(name)
	return _in(0x8416FE4E4629D7D7, _ts(name), _r)
end
Global.N_0x8416fe4e4629d7d7 = Global.ScGetIsProfileAttributeSet

--- Returns the nickname of the logged-in Rockstar Social Club account.
-- ```
-- ```
-- NativeDB Return Type: char*
function Global.ScGetNickname()
	return _in(0x198D161F458ECC7F, _r, _ri)
end

function Global.ScInboxGetEmails(offset, limit)
	return _in(0x040ADDCBAFA1018A, offset, limit)
end
Global.N_0x040addcbafa1018a = Global.ScInboxGetEmails

function Global.ScInboxMessageDoApply(p0)
	return _in(0x9A2C8064B6C1E41A, p0, _r)
end
Global.N_0x9a2c8064b6c1e41a = Global.ScInboxMessageDoApply
Global.ScInboxMessagePush = Global.ScInboxMessageDoApply

function Global.ScInboxMessageGetBountyData(index, outData)
	return _in(0x87E0052F08BD64E6, index, _ii(outData) --[[ may be optional ]], _r)
end
Global.N_0x87e0052f08bd64e6 = Global.ScInboxMessageGetBountyData

function Global.ScInboxMessageGetDataBool(p0, p1)
	return _in(0xFFE5C16F402D851D, p0, _ts(p1), _r)
end
Global.N_0xffe5c16f402d851d = Global.ScInboxMessageGetDataBool

function Global.ScInboxMessageGetDataInt(p0, context, out)
	return _in(0xA00EFE4082C4056E, p0, _ts(context), _ii(out) --[[ may be optional ]], _r)
end

function Global.ScInboxMessageGetDataString(p0, context, out)
	return _in(0x7572EF42FC6A9B6D, p0, _ts(context), _ts(out), _r)
end

function Global.ScInboxMessageGetString(p0)
	return _in(0xF3E31D16CBDCB304, p0, _r, _s)
end
Global.N_0xf3e31d16cbdcb304 = Global.ScInboxMessageGetString

function Global.ScInboxMessageGetUgcdata(p0, p1)
	return _in(0x69D82604A1A5A254, p0, _ii(p1) --[[ may be optional ]], _r)
end

function Global.ScInboxMessageInit(p0)
	return _in(0xBB8EA16ECBC976C4, p0, _r, _ri)
end
Global.N_0xbb8ea16ecbc976c4 = Global.ScInboxMessageInit

function Global.ScInboxMessagePop(p0)
	return _in(0x2C015348CF19CA1D, p0, _r)
end
Global.N_0x2c015348cf19ca1d = Global.ScInboxMessagePop

--- In scripts it's used with a var, that is used elsewhere in a check regarding if the given networkHandle is valid.
function Global.ScInboxMessagePushGamerToEventRecipList(networkHandle)
	return _in(0xDA024BDBD600F44A, _ii(networkHandle) --[[ may be optional ]])
end
Global.N_0xda024bdbd600f44a = Global.ScInboxMessagePushGamerToEventRecipList

--- I put the argument as 'playerName' as when it's called in freemode.c TU27 X360 scripts. It's given a var that has GET_PLAYER_NAME stored in it via StringCopy.
function Global.ScInboxMessageSendBountyPresenceEvent(data)
	return _in(0x6AFD2CD753FEEF83, _ts(data), _r)
end
Global.N_0x6afd2cd753feef83 = Global.ScInboxMessageSendBountyPresenceEvent

function Global.ScInboxMessageSendUgcStatUpdateEvent(data)
	return _in(0xA68D3D229F4F3B06, _ts(data))
end
Global.N_0xa68d3d229f4f3b06 = Global.ScInboxMessageSendUgcStatUpdateEvent

--- Starts a task to check an entered string for profanity on the ROS/Social Club services.
-- See also: 1753344C770358AE, 82E4A58BABC15AE7.
function Global.ScProfanityCheckString(string, token)
	return _in(0x75632C5ECD7ED843, _ts(string), _ii(token) --[[ may be optional ]], _r)
end
Global.N_0x75632c5ecd7ed843 = Global.ScProfanityCheckString
Global.ScStartCheckStringTask = Global.ScProfanityCheckString

function Global.ScProfanityCheckUgcString(string, token)
	return _in(0xEB2BF817463DFA28, _ts(string), _ii(token) --[[ may be optional ]], _r)
end
Global.N_0xeb2bf817463dfa28 = Global.ScProfanityCheckUgcString

--- Returns the status of a _SC_START_CHECK_STRING_TASK task.
-- Possible return values:
-- 0: not a profane string
-- 1: a profane string
-- 3: server error occurred
-- ```
-- ```
-- NativeDB Return Type: BOOL
function Global.ScProfanityGetCheckIsPending(token)
	return _in(0x82E4A58BABC15AE7, token, _r, _ri)
end
Global.N_0x82e4a58babc15ae7 = Global.ScProfanityGetCheckIsPending
Global.ScGetCheckStringStatus = Global.ScProfanityGetCheckIsPending

--- Returns whether or not a task started with _SC_START_CHECK_STRING_TASK has completed.
function Global.ScProfanityGetCheckIsValid(token)
	return _in(0x1753344C770358AE, token, _r)
end
Global.N_0x1753344c770358ae = Global.ScProfanityGetCheckIsValid
Global.ScHasCheckStringTaskCompleted = Global.ScProfanityGetCheckIsValid

function Global.ScProfanityGetStringPassed(token)
	return _in(0x85535ACF97FC0969, token, _r)
end
Global.N_0x85535acf97fc0969 = Global.ScProfanityGetStringPassed

--- Unknown.
-- Seems to return either 0, 1, or -1.
function Global.ScProfanityGetStringStatus(token)
	return _in(0x930DE22F07B1CCE3, token, _r, _ri)
end
Global.N_0x930de22f07b1cce3 = Global.ScProfanityGetStringStatus

--- Pushes a boolean for the Scaleform function onto the stack.
function Global.ScaleformMovieMethodAddParamBool(value)
	return _in(0xC58424BA936EB458, value)
end
Global.PushScaleformMovieFunctionParameterBool = Global.ScaleformMovieMethodAddParamBool
Global.PushScaleformMovieMethodParameterBool = Global.ScaleformMovieMethodAddParamBool

--- Pushes a float for the Scaleform function onto the stack.
function Global.ScaleformMovieMethodAddParamFloat(value)
	return _in(0xD69736AAE04DB51A, value)
end
Global.PushScaleformMovieFunctionParameterFloat = Global.ScaleformMovieMethodAddParamFloat
Global.PushScaleformMovieMethodParameterFloat = Global.ScaleformMovieMethodAddParamFloat

--- Pushes an integer for the Scaleform function onto the stack.
function Global.ScaleformMovieMethodAddParamInt(value)
	return _in(0xC3D0841A0CC546A6, value)
end
Global.PushScaleformMovieFunctionParameterInt = Global.ScaleformMovieMethodAddParamInt
Global.PushScaleformMovieMethodParameterInt = Global.ScaleformMovieMethodAddParamInt

function Global.ScaleformMovieMethodAddParamLatestBriefString(value)
	return _in(0xEC52C631A1831C03, value)
end
Global.N_0xec52c631a1831c03 = Global.ScaleformMovieMethodAddParamLatestBriefString
Global.ScaleformMovieMethodAddParamIntString = Global.ScaleformMovieMethodAddParamLatestBriefString

--- This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
-- When switching with a controller, the icons update and become the controller's icons.
function Global.ScaleformMovieMethodAddParamPlayerNameString(string)
	return _in(0xE83A3E3557A56640, _ts(string))
end
Global.N_0xe83a3e3557a56640 = Global.ScaleformMovieMethodAddParamPlayerNameString
Global.PushScaleformMovieMethodParameterButtonName = Global.ScaleformMovieMethodAddParamPlayerNameString

function Global.ScaleformMovieMethodAddParamTextureNameString(string)
	return _in(0xBA7148484BD90365, _ts(string))
end
Global.PushScaleformMovieFunctionParameterString = Global.ScaleformMovieMethodAddParamTextureNameString
Global.PushScaleformMovieMethodParameterString = Global.ScaleformMovieMethodAddParamTextureNameString

--- GRAPHICS::\_0x77FE3402004CD1B0(HUD::\_GET_LABEL_TEXT("YACHT_GSY"));
-- GRAPHICS::\_0x77FE3402004CD1B0(PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()));
-- Both \_0xBA7148484BD90365 / \_0x77FE3402004CD1B0 works, but \_0x77FE3402004CD1B0 is usually used for "name" (organisation, players..).
function Global.ScaleformMovieMethodAddParamTextureNameString_2(string)
	return _in(0x77FE3402004CD1B0, _ts(string))
end
Global.N_0x77fe3402004cd1b0 = Global.ScaleformMovieMethodAddParamTextureNameString_2
Global.PushScaleformMovieMethodParameterString_2 = Global.ScaleformMovieMethodAddParamTextureNameString_2

--- If bool Toggle = true so the mobile is hide to screen.
-- If bool Toggle = false so the mobile is show to screen.
function Global.ScriptIsMovingMobilePhoneOffscreen(toggle)
	return _in(0xF511F759238A5122, toggle)
end

--- MulleDK19: Gets the ID of the next active thread.
-- First call _BEGIN_ENUMERATE_THREADS (0xDADFADA5A20143A8).
-- Any subsequent call to this function will then return the ID of the next active thread.
-- If the function returns 0, the end of the enumeration has been reached.
-- -----------------------------------------------------------------------
-- Here's an example:
-- std::vector<int> vecCurrentThreads;
-- void update_current_threads_list()
-- {
-- vecCurrentThreads.clear();
-- _BEGIN_ENUMERATING_THREADS();
-- int id = _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();
-- while (id != 0)
-- {
-- id = _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();
-- vecCurrentThreads.push_back(id);
-- }
-- }
function Global.ScriptThreadIteratorGetNextThreadId()
	return _in(0x30B4FA1C82DD4B9F, _r, _ri)
end
Global.N_0x30b4fa1c82dd4b9f = Global.ScriptThreadIteratorGetNextThreadId
Global.GetIdOfNextThreadInEnumeration = Global.ScriptThreadIteratorGetNextThreadId

--- MulleDK19: Starts a new enumeration of the current threads.
-- Call this first, then _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION (0x30B4FA1C82DD4B9F)
-- see _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION (0x30B4FA1C82DD4B9F) for an example
function Global.ScriptThreadIteratorReset()
	return _in(0xDADFADA5A20143A8)
end
Global.N_0xdadfada5a20143a8 = Global.ScriptThreadIteratorReset
Global.BeginEnumeratingThreads = Global.ScriptThreadIteratorReset

--- NativeDB Introduced: v1290
function Global.SeethroughGetMaxThickness()
	return _in(0x43DBAE39626CE83F, _r, _rf)
end

--- NativeDB Introduced: v323
function Global.SeethroughReset()
	return _in(0x70A64C0234EF522C)
end

function Global.SeethroughSetColorNear(red, green, blue)
	return _in(0x1086127B3A63505E, red, green, blue)
end
Global.N_0x1086127b3a63505e = Global.SeethroughSetColorNear

function Global.SeethroughSetFadeEndDistance(distance)
	return _in(0x9D75795B9DC6EBBF, distance)
end
Global.N_0x9d75795b9dc6ebbf = Global.SeethroughSetFadeEndDistance

function Global.SeethroughSetFadeStartDistance(distance)
	return _in(0xA78DE25577300BA1, distance)
end
Global.N_0xa78de25577300ba1 = Global.SeethroughSetFadeStartDistance

function Global.SeethroughSetHeatscale(index, heatScale)
	return _in(0xD7D0B00177485411, index, heatScale)
end
Global.N_0xd7d0b00177485411 = Global.SeethroughSetHeatscale

function Global.SeethroughSetHiLightIntensity(intensity)
	return _in(0x19E50EB6E33E1D28, intensity)
end
Global.N_0x19e50eb6e33e1d28 = Global.SeethroughSetHiLightIntensity

function Global.SeethroughSetHiLightNoise(noise)
	return _in(0x1636D7FC127B10D2, noise)
end
Global.N_0x1636d7fc127b10d2 = Global.SeethroughSetHiLightNoise

function Global.SeethroughSetMaxThickness(thickness)
	return _in(0x0C8FAC83902A62DF, thickness)
end
Global.N_0x0c8fac83902a62df = Global.SeethroughSetMaxThickness

function Global.SeethroughSetNoiseAmountMax(amount)
	return _in(0xFEBFBFDFB66039DE, amount)
end
Global.N_0xfebfbfdfb66039de = Global.SeethroughSetNoiseAmountMax

function Global.SeethroughSetNoiseAmountMin(amount)
	return _in(0xFF5992E1C9E65D05, amount)
end
Global.N_0xff5992e1c9e65d05 = Global.SeethroughSetNoiseAmountMin

--- Sends a message to the specific DUI root page. This is similar to SEND_NUI_MESSAGE.
-- @param duiObject The DUI browser handle.
-- @param jsonString The message, encoded as JSON.
function Global.SendDuiMessage(duiObject, jsonString)
	return _in(0xcd380da9, duiObject, _ts(jsonString))
end

--- Injects a 'mouse down' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
-- @param duiObject The DUI browser handle.
-- @param button Either `'left'`, `'middle'` or `'right'`.
function Global.SendDuiMouseDown(duiObject, button)
	return _in(0x5d01f191, duiObject, _ts(button))
end

--- Injects a 'mouse move' event for a DUI object. Coordinates are in browser space.
-- @param duiObject The DUI browser handle.
-- @param x The mouse X position.
-- @param y The mouse Y position.
function Global.SendDuiMouseMove(duiObject, x, y)
	return _in(0xd9d7a0aa, duiObject, x, y)
end

--- Injects a 'mouse up' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
-- @param duiObject The DUI browser handle.
-- @param button Either `'left'`, `'middle'` or `'right'`.
function Global.SendDuiMouseUp(duiObject, button)
	return _in(0x1d735b93, duiObject, _ts(button))
end

--- Injects a 'mouse wheel' event for a DUI object.
-- @param duiObject The DUI browser handle.
-- @param deltaY The wheel Y delta.
-- @param deltaX The wheel X delta.
function Global.SendDuiMouseWheel(duiObject, deltaY, deltaX)
	return _in(0x2d62133a, duiObject, deltaY, deltaX)
end

--- Sends a message to the `loadingScreen` NUI frame, which contains the HTML page referenced in `loadscreen` resources.
-- @param jsonString The JSON-encoded message.
-- @return A success value.
function Global.SendLoadingScreenMessage(jsonString)
	return _in(0x8bbe6cc0, _ts(jsonString), _r)
end

function Global.SendNuiMessage(jsonString)
	return _in(0x78608acb, _ts(jsonString), _r)
end

--- If 'value' is 50 and 'maxValue' is 100, the bar is halfway filled.
-- Same with 5/10, 2/4, etc.
function Global.SetAbilityBarValue(value, maxValue)
	return _in(0x9969599CCFF5D85E, value, maxValue)
end

--- NativeDB Introduced: v1493
-- @param visible :
function Global.SetAbilityBarVisibilityInMultiplayer(visible)
	return _in(0x1DFEDD15019315A9, visible)
end

--- This seems to be related to Steam achievements.
-- p0 and p1 are int (?)
-- ------
-- Can't say anything about the Steam version but it is hardcoded to always return false in the retail version.
-- Dr. Underscore (1/6/18):
-- This has to do with achievement progression. If this achievement has progression, it will set the progression of it to this value.
-- Only tested on un-achieved achievements, Steamworks probably just rejects it if it has already been achieved.
-- Steamworks also seems to not like reversing achievement progression.
function Global.SetAchievementProgression(achievement, progress)
	return _in(0xC2AFFFDABBDC2C5C, achievement, progress, _r)
end
Global.N_0xc2afffdabbdc2c5c = Global.SetAchievementProgression

function Global.SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object, toggle)
	return _in(0x406137F8EF90EAF5, object, toggle)
end

--- Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
function Global.SetAggressiveHorns(toggle)
	return _in(0x395BF71085D1B1D9, toggle)
end

function Global.SetAiMeleeWeaponDamageModifier(modifier)
	return _in(0x66460DEDDD417254, modifier)
end

function Global.SetAiWeaponDamageModifier(value)
	return _in(0x1B1E2A40A65B8521, value)
end

--- This can be between 1.0f - 14.9f
-- You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
-- On PC the multiplier can be between 0.0f and 50.0f (inclusive).
function Global.SetAirDragMultiplierForPlayersVehicle(player, multiplier)
	return _in(0xCA7DC8329F0A1E9E, player, multiplier)
end

function Global.SetAllLowPriorityVehicleGeneratorsActive(active)
	return _in(0x608207E7A8FB787C, active)
end

--- Toggles a global boolean, name is probably a hash collision but describes its functionality.
function Global.SetAllPathsCacheBoundingstruct(toggle)
	return _in(0x228E5C6AD4D74BFD, toggle)
end
Global.N_0x228e5c6ad4d74bfd = Global.SetAllPathsCacheBoundingstruct

function Global.SetAllRandomPedsFlee(player, toggle)
	return _in(0x056E0FE8534C2949, player, toggle)
end

function Global.SetAllRandomPedsFleeThisFrame(player)
	return _in(0x471D2FF42A94B4F2, player)
end

function Global.SetAllVehicleGeneratorsActive()
	return _in(0x34AD89078831A4BC)
end

function Global.SetAllVehicleGeneratorsActiveInArea(x1, y1, z1, x2, y2, z2, p6, p7)
	return _in(0xC12321827687FE4D, x1, y1, z1, x2, y2, z2, p6, p7)
end

function Global.SetAmbientPedRangeMultiplierThisFrame(multiplier)
	return _in(0x0B919E1FB47CC4E0, multiplier)
end
Global.N_0x0b919e1fb47cc4e0 = Global.SetAmbientPedRangeMultiplierThisFrame

--- Sets the ambient vehicle spawn range.
-- For example, if you set the range to 0.1, the ambient cars will spawn close to your player.
-- This native needs to be called every frame.
-- @param range Most likely a value between 0.0 and 1.0.
function Global.SetAmbientVehicleRangeMultiplierThisFrame(range)
	return _in(0x90B6DA738A9A25DA, range)
end
Global.N_0x90b6da738a9a25da = Global.SetAmbientVehicleRangeMultiplierThisFrame
Global.SetSomeVehicleDensityMultiplierThisFrame = Global.SetAmbientVehicleRangeMultiplierThisFrame

--- Audio List
-- gtaforums.com/topic/795622-audio-for-mods/
-- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/FTeAj4yZ
-- Yes
function Global.SetAmbientVoiceName(ped, name)
	return _in(0x6C8065A3B780185B, ped, _ts(name))
end

--- NativeDB Parameter 1: Hash hash
function Global.SetAmbientVoiceNameHash(ped, hash)
	return _in(0x9A53DED9921DE990, ped, hash)
end
Global.N_0x9a53ded9921de990 = Global.SetAmbientVoiceNameHash

function Global.SetAmbientZoneListState(p0, p1, p2)
	return _in(0x9748FA4DE50CCE3E, _ts(p0), p1, p2)
end

--- All occurrences found in b617d, sorted alphabetically and identical lines removed: pastebin.com/WkXDGgQL
-- New Ambient Zone List (Combind with old): pastebin.com/h8BsKgUD -DasChaos
function Global.SetAmbientZoneListStatePersistent(ambientZone, p1, p2)
	return _in(0xF3638DAE8C4045E1, _ts(ambientZone), p1, p2)
end

--- NativeDB Parameter 0: char* zoneName
function Global.SetAmbientZoneState(p1, p2)
	return _in(0xBDA07E5950085E46, _i, p1, p2)
end

--- All occurrences found in b617d, sorted alphabetically and identical lines removed: pastebin.com/jYvw7N1S
-- New Ambient Zone List (Combind with old): pastebin.com/h8BsKgUD -DasChaos
function Global.SetAmbientZoneStatePersistent(ambientZone, p1, p2)
	return _in(0x1D6650420CEC9D3B, _ts(ambientZone), p1, p2)
end

function Global.SetAmmoInClip(ped, weaponHash, ammo)
	return _in(0xDCD2A934D65CB497, ped, _ch(weaponHash), ammo, _r)
end

function Global.SetAnimLooped(p0, p1, p2, p3)
	return _in(0x70033C3CC29A1FF4, p0, p1, p2, p3)
end

function Global.SetAnimRate(p0, p1, p2, p3)
	return _in(0x032D49C5E359C847, p0, p1, p2, p3)
end

function Global.SetAnimWeight(p0, p1, p2, p3, p4)
	return _in(0x207F1A47C0342F48, p0, p1, p2, p3, p4)
end

--- mood can be 0 or 1 (it's not a boolean value!). Effects audio of the animal.
function Global.SetAnimalMood(animal, mood)
	return _in(0xCC97B29285B1DC3B, animal, mood)
end

--- Does not affect weapons, particles, fire/explosions, flashlights or the sun.
-- When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
-- Used in Humane Labs Heist for EMP.
-- @param state True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
function Global.SetArtificialLightsState(state)
	return _in(0x1268615ACE24D504, state)
end
Global.SetBlackout = Global.SetArtificialLightsState

--- Possible flag names:
-- "ActivateSwitchWheelAudio"
-- "AllowAmbientSpeechInSlowMo"
-- "AllowCutsceneOverScreenFade"
-- "AllowForceRadioAfterRetune"
-- "AllowPainAndAmbientSpeechToPlayDuringCutscene"
-- "AllowPlayerAIOnMission"
-- "AllowPoliceScannerWhenPlayerHasNoControl"
-- "AllowRadioDuringSwitch"
-- "AllowRadioOverScreenFade"
-- "AllowScoreAndRadio"
-- "AllowScriptedSpeechInSlowMo"
-- "AvoidMissionCompleteDelay"
-- "DisableAbortConversationForDeathAndInjury"
-- "DisableAbortConversationForRagdoll"
-- "DisableBarks"
-- "DisableFlightMusic"
-- "DisableReplayScriptStreamRecording"
-- "EnableHeadsetBeep"
-- "ForceConversationInterrupt"
-- "ForceSeamlessRadioSwitch"
-- "ForceSniperAudio"
-- "FrontendRadioDisabled"
-- "HoldMissionCompleteWhenPrepared"
-- "IsDirectorModeActive"
-- "IsPlayerOnMissionForSpeech"
-- "ListenerReverbDisabled"
-- "LoadMPData"
-- "MobileRadioInGame"
-- "OnlyAllowScriptTriggerPoliceScanner"
-- "PlayMenuMusic"
-- "PoliceScannerDisabled"
-- "ScriptedConvListenerMaySpeak"
-- "SpeechDucksScore"
-- "SuppressPlayerScubaBreathing"
-- "WantedMusicDisabled"
-- "WantedMusicOnMission"
-- -------------------------------
-- No added flag names between b393d and b573d, including b573d.
-- #######################################################################
-- "IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
-- -----------------------------------------------------------------------
-- All flag IDs and hashes:
-- ID: 01 | Hash: 0x20A7858F
-- ID: 02 | Hash: 0xA11C2259
-- ID: 03 | Hash: 0x08DE4700
-- ID: 04 | Hash: 0x989F652F
-- ID: 05 | Hash: 0x3C9E76BA
-- ID: 06 | Hash: 0xA805FEB0
-- ID: 07 | Hash: 0x4B94EA26
-- ID: 08 | Hash: 0x803ACD34
-- ID: 09 | Hash: 0x7C741226
-- ID: 10 | Hash: 0x31DB9EBD
-- ID: 11 | Hash: 0xDF386F18
-- ID: 12 | Hash: 0x669CED42
-- ID: 13 | Hash: 0x51F22743
-- ID: 14 | Hash: 0x2052B35C
-- ID: 15 | Hash: 0x071472DC
-- ID: 16 | Hash: 0xF9928BCC
-- ID: 17 | Hash: 0x7ADBDD48
-- ID: 18 | Hash: 0xA959BA1A
-- ID: 19 | Hash: 0xBBE89B60
-- ID: 20 | Hash: 0x87A08871
-- ID: 21 | Hash: 0xED1057CE
-- ID: 22 | Hash: 0x1584AD7A
-- ID: 23 | Hash: 0x8582CFCB
-- ID: 24 | Hash: 0x7E5E2FB0
-- ID: 25 | Hash: 0xAE4F72DB
-- ID: 26 | Hash: 0x5D16D1FA
-- ID: 27 | Hash: 0x06B2F4B8
-- ID: 28 | Hash: 0x5D4CDC96
-- ID: 29 | Hash: 0x8B5A48BA
-- ID: 30 | Hash: 0x98FBD539
-- ID: 31 | Hash: 0xD8CB0473
-- ID: 32 | Hash: 0x5CBB4874
-- ID: 33 | Hash: 0x2E9F93A9
-- ID: 34 | Hash: 0xD93BEA86
-- ID: 35 | Hash: 0x92109B7D
-- ID: 36 | Hash: 0xB7EC9E4D
-- ID: 37 | Hash: 0xCABDBB1D
-- ID: 38 | Hash: 0xB3FD4A52
-- ID: 39 | Hash: 0x370D94E5
-- ID: 40 | Hash: 0xA0F7938F
-- ID: 41 | Hash: 0xCBE1CE81
-- ID: 42 | Hash: 0xC27F1271
-- ID: 43 | Hash: 0x9E3258EB
-- ID: 44 | Hash: 0x551CDA5B
-- ID: 45 | Hash: 0xCB6D663C
-- ID: 46 | Hash: 0x7DACE87F
-- ID: 47 | Hash: 0xF9DE416F
-- ID: 48 | Hash: 0x882E6E9E
-- ID: 49 | Hash: 0x16B447E7
-- ID: 50 | Hash: 0xBD867739
-- ID: 51 | Hash: 0xA3A58604
-- ID: 52 | Hash: 0x7E046BBC
-- ID: 53 | Hash: 0xD95FDB98
-- ID: 54 | Hash: 0x5842C0ED
-- ID: 55 | Hash: 0x285FECC6
-- ID: 56 | Hash: 0x9351AC43
-- ID: 57 | Hash: 0x50032E75
-- ID: 58 | Hash: 0xAE6D0D59
-- ID: 59 | Hash: 0xD6351785
-- ID: 60 | Hash: 0xD25D71BC
-- ID: 61 | Hash: 0x1F7F6423
-- ID: 62 | Hash: 0xE24C3AA6
-- ID: 63 | Hash: 0xBFFDD2B7
function Global.SetAudioFlag(flagName, toggle)
	return _in(0xB9EFD5C25018725A, _ts(flagName), toggle)
end

function Global.SetAudioSceneVariable(scene, variable, value)
	return _in(0xEF21A9EF089A2668, _ts(scene), _ts(variable), value)
end

--- p0 is usually 0. sometimes 2. Not sure what this does.
function Global.SetAudioSpecialEffectMode(mode)
	return _in(0x12561FCBB62D5B9C, mode)
end
Global.N_0x12561fcbb62d5b9c = Global.SetAudioSpecialEffectMode

function Global.SetAudioVehiclePriority(vehicle, p1)
	return _in(0xE5564483E407F914, vehicle, p1)
end

function Global.SetAutoGiveParachuteWhenEnterPlane(player, toggle)
	return _in(0x9F343285A00B4BB6, player, toggle)
end

--- 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function Global.SetAutoGiveScubaGearWhenExitVehicle(player, toggle)
	return _in(0xD2B315B6689D537D, player, toggle)
end
Global.N_0xd2b315b6689d537d = Global.SetAutoGiveScubaGearWhenExitVehicle

--- Dr. Underscore (1/6/18):
-- Found only in all creator scripts. (fm_capture_creator, fm_deathmatch_creator, fm_lts_creator, fm_mission_controller, fm_race_creator)
-- Used in-between DRAW_* calls (DRAW_POLY specifically).
function Global.SetBackfaceculling(toggle)
	return _in(0x23BA6B0C2AD7B0D3, toggle)
end
Global.N_0x23ba6b0c2ad7b0d3 = Global.SetBackfaceculling

--- NativeDB Parameter 0: char* contentId
-- NativeDB Parameter 1: char* contentTypeName
function Global.SetBalanceAddMachine()
	return _in(0x815E5E3073DA1D67, _i, _i, _r)
end

--- NativeDB Parameter 2: char* contentTypeName
function Global.SetBalanceAddMachines(dataCount)
	return _in(0xB8322EEB38BE7C26, _i, dataCount, _i, _r)
end

--- Toggles the big minimap state like in GTA:Online.
-- To get the current state of the minimap, use [`GetBigmapActive`](#_0xF6AE18A7).
-- @param toggleBigMap Enable or disable the expanded minimap.
-- @param showFullMap Enable or disable the full map from being shown on the minimap, requires p0 to be true.
function Global.SetBigmapActive(toggleBigMap, showFullMap)
	return _in(0x231C8F89D0539D8F, toggleBigMap, showFullMap)
end
Global.SetRadarBigmapEnabled = Global.SetBigmapActive

--- Only works on bikes, both X and Y work in the -1 - 1 range.
-- X forces the bike to turn left or right (-1, 1)
-- Y forces the bike to lean to the left or to the right (-1, 1)
-- Example with X -1/Y 1
-- http://i.imgur.com/TgIuAPJ.jpg
function Global.SetBikeOnStand(vehicle, x, y)
	return _in(0x9CFA4896C3A53CBB, vehicle, x, y)
end
Global.SetBikeLeanAngle = Global.SetBikeOnStand

--- In percentage: 0.0 - 100.0
-- NativeDB Introduced: v1290
-- @param binkMovie :
-- @param progress :
function Global.SetBinkMovieProgress(binkMovie, progress)
	return _in(0x0CB6B3446855B57A, binkMovie, progress)
end

--- NativeDB Introduced: v1290
-- @param name :
function Global.SetBinkMovieRequested(name)
	return _in(0x338D9F609FD632DB, _ts(name), _r, _ri)
end

--- NativeDB Introduced: v1290
-- @param binkMovie :
-- @param value :
function Global.SetBinkMovieUnk(binkMovie, value)
	return _in(0xAFF33B1178172223, binkMovie, value)
end

--- This sets bit [offset] of [address] to on.
-- The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
-- Example:
-- GAMEPLAY::SET_BIT(&bitAddress, 1);
-- To check if this bit has been enabled:
-- GAMEPLAY::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
-- Please note, this method may assign a value to [address] when used.
function Global.SetBit(offset)
	return _in(0x933D6A9EEC1BACD0, _i, offset)
end

function Global.SetBitsInRange(rangeStart, rangeEnd, p3)
	return _in(0x8EF07E15701D61ED, _i, rangeStart, rangeEnd, p3)
end

--- Sets alpha-channel for blip color.
-- Example:
-- Blip blip = UI::ADD_BLIP_FOR_ENTITY(entity);
-- UI::SET_BLIP_COLOUR(blip , 3);
-- UI::SET_BLIP_ALPHA(blip , 64);
function Global.SetBlipAlpha(blip, alpha)
	return _in(0x45FF974EEE1C8734, blip, alpha)
end

--- false for enemy
-- true for friendly
function Global.SetBlipAsFriendly(blip, toggle)
	return _in(0x6F6F290102C02AB4, blip, toggle)
end

function Global.SetBlipAsMissionCreatorBlip(blip, toggle)
	return _in(0x24AC0137444F9FD5, blip, toggle)
end

--- Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
-- @param blip The blip handle.
-- @param toggle True to only display the blip as 'short range', false to display the blip from a longer distance.
function Global.SetBlipAsShortRange(blip, toggle)
	return _in(0xBE8BE4FE60E27B72, blip, toggle)
end

function Global.SetBlipBright(blip, toggle)
	return _in(0xB203913733F27884, blip, toggle)
end

--- Examples result:
-- ![](https://i.imgur.com/skY6vAJ.png)
-- **index:**
-- ```
-- 1 = No distance shown in legend
-- 2 = Distance shown in legend
-- 7 = "Other Players" category, also shows distance in legend
-- 10 = "Property" category
-- 11 = "Owned Property" category
-- ```
-- Any other value behaves like `index = 1`, `index` wraps around after 255
-- Blips with categories `7`, `10` or `11` will all show under the specific categories listing in the map legend, regardless of sprite or name.
-- **Legend entries**
-- | index | Legend entry   | Label           |
-- | ----- | -------------- | --------------- |
-- | 7     | Other Players  | `BLIP_OTHPLYR`  |
-- | 10    | Property       | `BLIP_PROPCAT`  |
-- | 11    | Owned Property | `BLIP_APARTCAT` |
-- @param blip The blip to change the category index of
-- @param index The category index to change to
function Global.SetBlipCategory(blip, index)
	return _in(0x234CDD44D996FD9A, blip, index)
end

--- (Hex code are approximate)
-- 0: White (#fefefe)
-- 1: Red (#e03232)
-- 2: Green (#71cb71)
-- 3: Blue (#5db6e5)
-- 4: White (#fefefe)
-- 5: Taxi Yellow (#eec64e)
-- 6: Light Red (#c25050)
-- 7: Violet (#9c6eaf)
-- 8: Pink (#fe7ac3)
-- 9: Light Orange (#f59d79)
-- 10: Light Brown (#b18f83)
-- 11: Light Green (#8dcea7)
-- 12: Light Blue (Teal) (#70a8ae)
-- 13: Very Light Purple (#d3d1e7)
-- 14: Dark Purple (#8f7e98)
-- 15: Cyan (#6ac4bf)
-- 16: Light Yellow (#d5c398)
-- 17: Orange (#ea8e50)
-- 18: Light Blue (#97cae9)
-- 19: Dark Pink (#b26287)
-- 20: Dark Yellow (#8f8d79)
-- 21: Dark Orange (#a6755e)
-- 22: Light Gray (#afa8a8)
-- 23: Light Pink (#e78d9a)
-- 24: Lemon Green (#bbd65b)
-- 25: Forest Green (#0c7b56)
-- 26: Electric Blue (#7ac3fe)
-- 27: Bright Purple (#ab3ce6)
-- 28: Dark Taxi Yellow (#cda80c)
-- 29: Dark Blue (#4561ab)
-- 30: Dark Cyan (#29a5b8)
-- 31: Light Brown (#b89b7b)
-- 32: Very Light Blue (#c8e0fe)
-- 33: Light Yellow (#f0f096)
-- 34: Light Pink (#ed8ca1)
-- 35: Light Red (#f98a8a)
-- 36: Light Yellow (#fbeea5)
-- 37: White (#fefefe)
-- 38: Blue (#2c6db8)
-- 39: Light Gray (#9a9a9a)
-- 40: Dark Gray (#4c4c4c)
-- Certainly a lot more remaining.
function Global.SetBlipColour(blip, color)
	return _in(0x03D7FB09E75D6B7E, blip, color)
end

function Global.SetBlipCoords(blip, posX, posY, posZ)
	return _in(0xAE2AF67E9D9AF65D, blip, posX, posY, posZ)
end

--- **displayId Behaviour** <br>
-- 0 = Doesn't show up, ever, anywhere. <br>
-- 1 = Doesn't show up, ever, anywhere. <br>
-- 2 = Shows on both main map and minimap. (Selectable on map) <br>
-- 3 = Shows on main map only. (Selectable on map) <br>
-- 4 = Shows on main map only. (Selectable on map) <br>
-- 5 = Shows on minimap only. <br>
-- 6 = Shows on both main map and minimap. (Selectable on map) <br>
-- 7 = Doesn't show up, ever, anywhere. <br>
-- 8 = Shows on both main map and minimap. (Not selectable on map) <br>
-- 9 = Shows on minimap only. <br>
-- 10 = Shows on both main map and minimap. (Not selectable on map) <br>
-- Anything higher than 10 seems to be exactly the same as 10. <br>
-- <br>
-- Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
function Global.SetBlipDisplay(blip, displayId)
	return _in(0x9029B2F3DA924928, blip, displayId)
end

--- Must be toggled before being queued for animation
function Global.SetBlipDisplayIndicatorOnBlip(blip, p1)
	return _in(0xC4278F70131BAA6D, blip, p1)
end
Global.N_0xc4278f70131baa6d = Global.SetBlipDisplayIndicatorOnBlip

function Global.SetBlipFade(blip, opacity, duration)
	return _in(0x2AEE8F8390D2298C, blip, opacity, duration)
end

function Global.SetBlipFlashInterval(blip, p1)
	return _in(0xAA51DB313C010A7E, blip, p1)
end

--- Adds up after viewing multiple R* scripts. I believe that the duration is in miliseconds.
function Global.SetBlipFlashTimer(blip, duration)
	return _in(0xD3CD6FD297AE87CC, blip, duration)
end

function Global.SetBlipFlashes(blip, toggle)
	return _in(0xB14552383D39CE3E, blip, toggle)
end

function Global.SetBlipFlashesAlternate(blip, toggle)
	return _in(0x2E8D9498C56DD0D1, blip, toggle)
end

function Global.SetBlipHiddenOnLegend(blip, toggle)
	return _in(0x54318C915D27E4CE, blip, toggle)
end
Global.N_0x54318c915d27e4ce = Global.SetBlipHiddenOnLegend

function Global.SetBlipHighDetail(blip, toggle)
	return _in(0xE2590BC29220CEBB, blip, toggle)
end

--- Doesn't work if the label text of gxtEntry is >= 80.
function Global.SetBlipNameFromTextFile(blip, gxtEntry)
	return _in(0xEAA0FFE120D92784, blip, _ts(gxtEntry))
end

function Global.SetBlipNameToPlayerName(blip, player)
	return _in(0x127DE7B20C60A6A3, blip, player)
end

--- See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
function Global.SetBlipPriority(blip, priority)
	return _in(0xAE9FC9EF6A9FAC79, blip, priority)
end

--- After some testing, looks like you need to use UI:CEIL() on the rotation (vehicle/ped heading) before using it there.
function Global.SetBlipRotation(blip, rotation)
	return _in(0xF87683CDF73C3F6E, blip, rotation)
end

--- Enable / disable showing route for the Blip-object.
function Global.SetBlipRoute(blip, enabled)
	return _in(0x4F7D8A9BFB0B43E9, blip, enabled)
end

function Global.SetBlipRouteColour(blip, colour)
	return _in(0x837155CD2F63DA09, blip, colour)
end

function Global.SetBlipScale(blip, scale)
	return _in(0xD38744167B2FA257, blip, scale)
end

function Global.SetBlipSecondaryColour(blip, r, g, b)
	return _in(0x14892474891E09EB, blip, r, g, b)
end

function Global.SetBlipShowCone(blip, toggle)
	return _in(0x13127EC3665E8EE1, blip, toggle)
end

--- Makes a blip go small when off the minimap.
function Global.SetBlipShrink(blip, toggle)
	return _in(0x2B6D467DAB714E8D, blip, toggle)
end
Global.N_0x2b6d467dab714e8d = Global.SetBlipShrink

--- <!--
-- _loc1_.map((name, idx) => `| ${idx} | ${name} | ![${name}](https://runtime.fivem.net/blips/${name}.svg) |`).join('\n')
-- -->
-- Sets the displayed sprite for a specific blip.
-- There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
-- @param blip The blip to change.
-- @param spriteId The sprite ID to set.
function Global.SetBlipSprite(blip, spriteId)
	return _in(0xDF735600A4696DAF, blip, spriteId)
end

--- Does not require whole whole number/integer rotations.
function Global.SetBlipSquaredRotation(p0, heading)
	return _in(0xA8B6AFDAC320AC87, p0, heading)
end
Global.N_0xa8b6afdac320ac87 = Global.SetBlipSquaredRotation

--- works with AI::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
function Global.SetBlockingOfNonTemporaryEvents(ped, toggle)
	return _in(0x9F8AA94D6D97DBF4, ped, toggle)
end

--- Works with boats, submarines, submarine cars, amphibious bikes, and planes that implement CSeaPlaneExtension
function Global.SetBoatAnchor(vehicle, toggle)
	return _in(0x75DBEC174AEEAD10, vehicle, toggle)
end

--- Vehicle must be a boat.
function Global.SetBoatAnchorBuoyancyCoefficient(vehicle, value)
	return _in(0xE842A9398079BD82, vehicle, value)
end
Global.N_0xe842a9398079bd82 = Global.SetBoatAnchorBuoyancyCoefficient

function Global.SetBoatDisableAvoidance(vehicle, p1)
	return _in(0x0A6A279F3AA4FD70, vehicle, p1)
end
Global.N_0x0a6a279f3aa4fd70 = Global.SetBoatDisableAvoidance

function Global.SetBoatFrozenWhenAnchored(vehicle, toggle)
	return _in(0xE3EBAAE484798530, vehicle, toggle)
end
Global.N_0xe3ebaae484798530 = Global.SetBoatFrozenWhenAnchored

function Global.SetBoatSinking(vehicle)
	return _in(0xBD32E46AA95C1DD2, vehicle)
end
Global.N_0xbd32e46aa95c1dd2 = Global.SetBoatSinking

--- NativeDB Parameter 1: BOOL toggle
function Global.SetBoatSinksWhenWrecked(vehicle, toggle)
	return _in(0x8F719973E1445BA2, vehicle, toggle)
end
Global.N_0x8f719973e1445ba2 = Global.SetBoatSinksWhenWrecked
Global.SetBoatExplodesOnWreckedAction = Global.SetBoatSinksWhenWrecked

--- Set camera as active/inactive.
function Global.SetCamActive(cam, active)
	return _in(0x026FB97D0A425F84, cam, active)
end

--- Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
function Global.SetCamActiveWithInterp(camTo, camFrom, duration, easeLocation, easeRotation)
	return _in(0x9FBDA379383A52A4, camTo, camFrom, duration, easeLocation, easeRotation)
end

--- Allows you to aim and shoot at the direction the camera is facing.
function Global.SetCamAffectsAiming(cam, toggle)
	return _in(0x8C1DC7770C51DC8D, cam, toggle)
end

function Global.SetCamAnimCurrentPhase(cam, phase)
	return _in(0x4145A4C44FF3B5A6, cam, phase)
end

--- Sets the position of the cam.
function Global.SetCamCoord(cam, posX, posY, posZ)
	return _in(0x4D41783FB745E42E, cam, posX, posY, posZ)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.SetCamDebugName(camera, name)
	return _in(0x1B93E0107865DD40, camera, _ts(name))
end

--- This native has its name defined inside its codE
function Global.SetCamDofFnumberOfLens(camera, p1)
	return _in(0x7DD234D6F3914C5B, camera, p1)
end
Global.N_0x7dd234d6f3914c5b = Global.SetCamDofFnumberOfLens

--- Native name labeled within its code
function Global.SetCamDofFocalLengthMultiplier(camera, p1)
	return _in(0x47B595D60664CFFA, camera, p1)
end
Global.N_0x47b595d60664cffa = Global.SetCamDofFocalLengthMultiplier

--- This native has a name defined inside its code
function Global.SetCamDofFocusDistanceBias(camera, p1)
	return _in(0xC669EEA5D031B7DE, camera, p1)
end
Global.N_0xc669eea5d031b7de = Global.SetCamDofFocusDistanceBias

--- This native has a name defined inside its code
function Global.SetCamDofMaxNearInFocusDistance(camera, p1)
	return _in(0xC3654A441402562D, camera, p1)
end
Global.N_0xc3654a441402562d = Global.SetCamDofMaxNearInFocusDistance

--- This native has a name defined inside its code
function Global.SetCamDofMaxNearInFocusDistanceBlendLevel(camera, p1)
	return _in(0x2C654B4943BDDF7C, camera, p1)
end
Global.N_0x2c654b4943bddf7c = Global.SetCamDofMaxNearInFocusDistanceBlendLevel

function Global.SetCamDofPlanes(cam, p1, p2, p3, p4)
	return _in(0x3CF48F6F96E749DC, cam, p1, p2, p3, p4)
end

function Global.SetCamDofStrength(cam, dofStrength)
	return _in(0x5EE29B4D7D5DF897, cam, dofStrength)
end

--- if p0 is 0, effect is cancelled
-- if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
-- if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
function Global.SetCamEffect(p0)
	return _in(0x80C8B1846639BB19, p0)
end

function Global.SetCamFarClip(cam, farClip)
	return _in(0xAE306F2A904BF86E, cam, farClip)
end

function Global.SetCamFarDof(cam, farDOF)
	return _in(0xEDD91296CD01AEE0, cam, farDOF)
end

--- Sets the field of view of the cam.
-- ---------------------------------------------
-- Min: 1.0f
-- Max: 130.0f
function Global.SetCamFov(cam, fieldOfView)
	return _in(0xB13C14F66A00D047, cam, fieldOfView)
end

--- The native seems to only be called once.
-- The native is used as so,
-- CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));
-- In the exile1 script.
function Global.SetCamInheritRollVehicle(cam, p1)
	return _in(0x45F1DE9C34B93AE6, cam, p1)
end

function Global.SetCamMotionBlurStrength(cam, strength)
	return _in(0x6F0F77FBA9A8F2E6, cam, strength)
end

function Global.SetCamNearClip(cam, nearClip)
	return _in(0xC7848EFCCC545182, cam, nearClip)
end

function Global.SetCamNearDof(cam, nearDOF)
	return _in(0x3FA4BF0A7AB7DE2C, cam, nearDOF)
end

function Global.SetCamParams(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11)
	return _in(0xBFD8727AEA3CCEBA, cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11)
end

--- Sets the rotation of the cam.
-- Last parameter unknown.
-- Last parameter seems to always be set to 2.
function Global.SetCamRot(cam, rotX, rotY, rotZ, rotationOrder)
	return _in(0x85973643155D0B07, cam, rotX, rotY, rotZ, rotationOrder)
end

function Global.SetCamShakeAmplitude(cam, amplitude)
	return _in(0xD93DB43B82BC0D00, cam, amplitude)
end

--- I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
function Global.SetCamSplineDuration(cam, timeDuration)
	return _in(0x1381539FEE034CDA, cam, timeDuration)
end

function Global.SetCamSplineNodeEase(cam, p1, p2, p3)
	return _in(0x83B8201ED82A9A2D, cam, p1, p2, p3)
end
Global.N_0x83b8201ed82a9a2d = Global.SetCamSplineNodeEase

function Global.SetCamSplineNodeExtraFlags(cam, p1, flags)
	return _in(0x7BF1A54AE67AC070, cam, p1, flags)
end
Global.N_0x7bf1a54ae67ac070 = Global.SetCamSplineNodeExtraFlags

function Global.SetCamSplineNodeVelocityScale(cam, p1, scale)
	return _in(0xA6385DEB180F319F, cam, p1, scale)
end
Global.N_0xa6385deb180f319f = Global.SetCamSplineNodeVelocityScale

function Global.SetCamSplinePhase(cam, p1)
	return _in(0x242B5874F0A4E052, cam, p1)
end

function Global.SetCamSplineSmoothingStyle(cam, smoothingStyle)
	return _in(0xD1B0F412F109EA5D, cam, smoothingStyle)
end
Global.N_0xd1b0f412f109ea5d = Global.SetCamSplineSmoothingStyle

function Global.SetCamUseShallowDofMode(cam, toggle)
	return _in(0x16A96863A17552BB, cam, toggle)
end

--- Disables wheel cambering & hydraulics
function Global.SetCamberedWheelsDisabled(vehicle, toggle)
	return _in(0x1201E8A3290A3B98, vehicle, toggle)
end
Global.N_0x1201e8a3290a3b98 = Global.SetCamberedWheelsDisabled

--- Setting ped to true allows the ped to shoot "friendlies".
-- p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
-- p1 = false & p2 = false for unable to aim at.
-- p1 = true & p2 = false for able to aim at.
function Global.SetCanAttackFriendly(ped, toggle, p2)
	return _in(0xB3B1CB349FF9C75D, ped, toggle, p2)
end

function Global.SetCanAutoVaultOnEntity(entity, p1)
	return _in(0xE12ABE5E3A389A6C, entity, p1)
end
Global.N_0xe12abe5e3a389a6c = Global.SetCanAutoVaultOnEntity

function Global.SetCanClimbOnEntity(entity, p1)
	return _in(0xA80AE305E0A3044F, entity, p1)
end
Global.N_0xa80ae305e0a3044f = Global.SetCanClimbOnEntity

--- Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](https://runtime.fivem.net/doc/natives/#_0xB4771B9AAF4E68E4) except for all weapons.
function Global.SetCanPedEquipAllWeapons(ped, toggle)
	return _in(0xEFF296097FF1E509, ped, toggle)
end
Global.N_0xeff296097ff1e509 = Global.SetCanPedEquipAllWeapons

--- For the player ped this will also gray out the weapon in the weapon wheel.
function Global.SetCanPedSelectWeapon(ped, weaponHash, toggle)
	return _in(0xB4771B9AAF4E68E4, ped, _ch(weaponHash), toggle)
end
Global.N_0xb4771b9aaf4e68e4 = Global.SetCanPedSelectWeapon

--- Hardcoded to not work in multiplayer.
function Global.SetCanResprayVehicle(vehicle, state)
	return _in(0x52BBA29D5EC69356, vehicle, state)
end

--- Opens the trunk of the vehicle. Initially used in Max Payne 3, that's why we know the name.
function Global.SetCarBootOpen(vehicle)
	return _in(0xFC40CBF7B90CA77C, vehicle)
end
Global.N_0xfc40cbf7b90ca77c = Global.SetCarBootOpen

--- Something to do with "high speed bump severity"?
-- if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {
-- VEHICLE::_84FD40F56075E816(0.0);
-- sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);
-- }
function Global.SetCarHighSpeedBumpSeverityMultiplier(multiplier)
	return _in(0x84FD40F56075E816, multiplier)
end
Global.N_0x84fd40f56075e816 = Global.SetCarHighSpeedBumpSeverityMultiplier

--- For now, I changed the last one from bool to int.
-- According to scripts specifically 'fm_mission_controller' this last parameter is 'false/0' when its called after the create rope native above is called for the magnet and 'true/1' after the create rope native above is called for the hook.
function Global.SetCargobobHookPosition(cargobob, xOffset, yOffset, state)
	return _in(0x877C1EAEAC531023, cargobob, xOffset, yOffset, state)
end
Global.N_0x877c1eaeac531023 = Global.SetCargobobHookPosition

--- Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
function Global.SetCargobobPickupMagnetActive(cargobob, isActive)
	return _in(0x9A665550F8DA349B, cargobob, isActive)
end
Global.CargobobMagnetGrabVehicle = Global.SetCargobobPickupMagnetActive
Global.SetCargobobPickupMagnetActive = Global.SetCargobobPickupMagnetActive

function Global.SetCargobobPickupMagnetEffectRadius(vehicle, p1)
	return _in(0xA17BAD153B51547E, vehicle, p1)
end
Global.N_0xa17bad153b51547e = Global.SetCargobobPickupMagnetEffectRadius

function Global.SetCargobobPickupMagnetFalloff(vehicle, p1)
	return _in(0x685D5561680D088B, vehicle, p1)
end
Global.N_0x685d5561680d088b = Global.SetCargobobPickupMagnetFalloff

function Global.SetCargobobPickupMagnetPullRopeLength(cargobob, p1)
	return _in(0x6D8EAC07506291FB, cargobob, p1)
end
Global.N_0x6d8eac07506291fb = Global.SetCargobobPickupMagnetPullRopeLength

function Global.SetCargobobPickupMagnetPullStrength(cargobob, p1)
	return _in(0xED8286F71A819BAA, cargobob, p1)
end
Global.N_0xed8286f71a819baa = Global.SetCargobobPickupMagnetPullStrength

function Global.SetCargobobPickupMagnetReducedFalloff(cargobob, p1)
	return _in(0x66979ACF5102FD2F, cargobob, p1)
end
Global.N_0x66979acf5102fd2f = Global.SetCargobobPickupMagnetReducedFalloff

function Global.SetCargobobPickupMagnetReducedStrength(cargobob, vehicle)
	return _in(0xE301BD63E9E13CF0, cargobob, vehicle)
end
Global.N_0xe301bd63e9e13cf0 = Global.SetCargobobPickupMagnetReducedStrength

function Global.SetCargobobPickupMagnetStrength(cargobob, strength)
	return _in(0xBCBFCD9D1DAC19E2, cargobob, strength)
end
Global.N_0xbcbfcd9d1dac19e2 = Global.SetCargobobPickupMagnetStrength
Global.SetCargobobPickupMagnetStrength = Global.SetCargobobPickupMagnetStrength

--- NativeDB Parameter 1: float p1
function Global.SetCargobobPickupRopeDampingMultiplier(cargobob, p1)
	return _in(0xCF1182F682F65307, cargobob, p1)
end
Global.N_0xcf1182f682f65307 = Global.SetCargobobPickupRopeDampingMultiplier

function Global.SetCargobobPickupRopeType(vehicle, state)
	return _in(0x0D5F65A8F4EBDAB5, vehicle, state)
end
Global.N_0x0d5f65a8f4ebdab5 = Global.SetCargobobPickupRopeType

function Global.SetCgAtBoundcenter(entity)
	return _in(0xBE520D9761FF811F, entity)
end

function Global.SetCgoffset(entity, x, y, z)
	return _in(0xD8FA3908D7B86904, entity, x, y, z)
end

--- Sets the cylinder height of the checkpoint.
-- Parameters:
-- * nearHeight - The height of the checkpoint when inside of the radius.
-- * farHeight - The height of the checkpoint when outside of the radius.
-- * radius - The radius of the checkpoint.
function Global.SetCheckpointCylinderHeight(checkpoint, nearHeight, farHeight, radius)
	return _in(0x2707AAE9D9297D89, checkpoint, nearHeight, farHeight, radius)
end

--- Sets the checkpoint icon color.
function Global.SetCheckpointIconRgba(checkpoint, red, green, blue, alpha)
	return _in(0xB9EA40907C680580, checkpoint, red, green, blue, alpha)
end

--- Sets the checkpoint color.
function Global.SetCheckpointRgba(checkpoint, red, green, blue, alpha)
	return _in(0x7167371E8AD747F7, checkpoint, red, green, blue, alpha)
end

--- p0 - Scale? Looks to be a normalized value (0.0 - 1.0)
-- offroad_races.c4, line ~67407:
-- a_3._f7 = GRAPHICS::CREATE_CHECKPOINT(v_D, v_A, a_4, a_7, v_E, v_F, v_10, sub_62b2(v_A, 220, 255), 0);
-- UI::GET_HUD_COLOUR(134, &v_E, &v_F, &v_10, &v_11);
-- GRAPHICS::_SET_CHECKPOINT_ICON_RGBA(a_3._f7, v_E, v_F, v_10, sub_62b2(v_A, 70, 210));
-- GRAPHICS::_4B5B4DA5D79F1943(a_3._f7, 0.95);
-- GRAPHICS::SET_CHECKPOINT_CYLINDER_HEIGHT(a_3._f7, 4.0, 4.0, 100.0);
function Global.SetCheckpointScale(checkpoint, p0)
	return _in(0x4B5B4DA5D79F1943, checkpoint, p0)
end
Global.N_0x4b5b4da5d79f1943 = Global.SetCheckpointScale

function Global.SetCinematicButtonActive(p0)
	return _in(0x51669F7D1FB53D9F, p0)
end

function Global.SetCinematicCamShakeAmplitude(p0)
	return _in(0xC724C701C30B2FE7, p0)
end

--- p0 = 0/1 or true/false
-- It doesn't seems to work
function Global.SetCinematicModeActive(p0)
	return _in(0xDCF0754AC3D6FD4E, p0)
end

function Global.SetClockDate(day, month, year)
	return _in(0xB096419DF0D06CE7, day, month, year)
end

--- SET_CLOCK_TIME(12, 34, 56);
function Global.SetClockTime(hour, minute, second)
	return _in(0x47C3B5848C3E45D8, hour, minute, second)
end

function Global.SetCloudHatOpacity(opacity)
	return _in(0xF36199225D6D8C86, opacity)
end
Global.N_0xf36199225d6d8c86 = Global.SetCloudHatOpacity

--- sets font color for the next notification
function Global.SetColourOfNextTextComponent(hudColorIndex)
	return _in(0x39BBF623FC803EAC, hudColorIndex)
end
Global.N_0x39bbf623fc803eac = Global.SetColourOfNextTextComponent
Global.SetNotificationColorNext = Global.SetColourOfNextTextComponent

--- combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
function Global.SetCombatFloat(ped, combatType, p2)
	return _in(0xFF41B4B141ED981C, ped, combatType, p2)
end

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
function Global.SetControlGroupColor(inputGroup, red, green, blue)
	return _in(0x8290252FFF36ACB5, inputGroup, red, green, blue)
end
Global.N_0x8290252fff36acb5 = Global.SetControlGroupColor

--- This is for simulating player input.
-- amount is a float value from 0
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function Global.SetControlNormal(inputGroup, control, amount)
	return _in(0xE8A25867FBA3B05E, inputGroup, control, amount, _r)
end
Global.N_0xe8a25867fba3b05e = Global.SetControlNormal

function Global.SetConvertibleRoof(vehicle, p1)
	return _in(0xF39C4F538B5124C2, vehicle, p1)
end

function Global.SetConvertibleRoofLatchState(vehicle, state)
	return _in(0x1A78AD3D8240536F, vehicle, state)
end
Global.N_0x1a78ad3d8240536f = Global.SetConvertibleRoofLatchState

function Global.SetCreateRandomCops(toggle)
	return _in(0x102E68B2024D536D, toggle)
end

function Global.SetCreateRandomCopsNotOnScenarios(toggle)
	return _in(0x8A4986851C4EF6E7, toggle)
end

function Global.SetCreateRandomCopsOnScenarios(toggle)
	return _in(0x444CB7D7DBE6973D, toggle)
end

--- Requires a component_at_*_flsh to be attached to the weapon object
function Global.SetCreateWeaponObjectLightSource(object, toggle)
	return _in(0xBCE595371A5FBAAF, object, toggle)
end
Global.N_0xbce595371a5fbaaf = Global.SetCreateWeaponObjectLightSource

function Global.SetCreditsActive(toggle)
	return _in(0xB938B7E6D3C0620C, toggle)
end

function Global.SetCurrentPedVehicleWeapon(ped, weaponHash)
	return _in(0x75C55983C2C39DAA, ped, _ch(weaponHash), _r)
end

function Global.SetCurrentPedWeapon(ped, weaponHash, equipNow)
	return _in(0xADF692B254977C0C, ped, _ch(weaponHash), equipNow)
end

function Global.SetCurrentPlayerTcmodifier(modifierName)
	return _in(0xBBF327DED94E4DEB, _ts(modifierName))
end
Global.N_0xbbf327ded94e4deb = Global.SetCurrentPlayerTcmodifier

--- Renamed to SET_CURSOR_LOCATION (I previously named it _SET_CURSOR_POSTION) which is the correct name as far as I can tell.
function Global.SetCursorLocation(x, y)
	return _in(0xFC695459D4D0E219, x, y, _r)
end
Global.N_0xfc695459d4d0e219 = Global.SetCursorLocation

--- Examples:
-- AUDIO::_4E404A9361F75BB2("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);
-- AUDIO::_4E404A9361F75BB2("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
function Global.SetCustomRadioTrackList(radioStation, trackListName, p2)
	return _in(0x4E404A9361F75BB2, _ts(radioStation), _ts(trackListName), p2)
end
Global.N_0x4e404a9361f75bb2 = Global.SetCustomRadioTrackList

--- Specifies a custom respawn position to be used in conjunction with _SET_NEXT_RESPAWN_TO_CUSTOM
function Global.SetCustomRespawnPosition(x, y, z, heading)
	return _in(0x706B5EDCAA7FA663, x, y, z, heading)
end
Global.N_0x706b5edcaa7fa663 = Global.SetCustomRespawnPosition

--- All occurrences found in b617d, sorted alphabetically and identical lines removed:
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
function Global.SetCutsceneAudioOverride(name)
	return _in(0x3B4BF5F0859204D9, _ts(name))
end

function Global.SetCutsceneEntityStreamingFlags(cutsceneEntName, p1, p2)
	return _in(0x4C61C75BEE8184C2, _ts(cutsceneEntName), p1, p2)
end
Global.N_0x4c61c75bee8184c2 = Global.SetCutsceneEntityStreamingFlags

function Global.SetCutsceneFadeValues(p0, p1, p2, p3)
	return _in(0x8093F23ABACCC7D4, p0, p1, p2, p3)
end

--- p3 could be heading. Needs more research.
function Global.SetCutsceneOrigin(x, y, z, p3, p4)
	return _in(0xB812B3FD1C01CF27, x, y, z, p3, p4)
end

function Global.SetCutscenePedComponentVariation(cutsceneEntName, p1, p2, p3, modelHash)
	return _in(0xBA01E7B6DEEFBBC9, _ts(cutsceneEntName), p1, p2, p3, _ch(modelHash))
end

function Global.SetCutscenePedComponentVariationFromPed(cutsceneEntName, ped, modelHash)
	return _in(0x2A56C06EBEF2B0D9, _ts(cutsceneEntName), ped, _ch(modelHash))
end
Global.N_0x2a56c06ebef2b0d9 = Global.SetCutscenePedComponentVariationFromPed

--- Thanks R*! ;)
-- if ((l_161 == 0) || (l_161 == 2)) {
-- sub_2ea27("Trying to set Jimmy prop variation");
-- CUTSCENE::_0546524ADE2E9723("Jimmy_Boston", 1, 0, 0, 0);
-- }
function Global.SetCutscenePedPropVariation(cutsceneEntName, p1, p2, p3, modelHash)
	return _in(0x0546524ADE2E9723, _ts(cutsceneEntName), p1, p2, p3, _ch(modelHash))
end
Global.N_0x0546524ade2e9723 = Global.SetCutscenePedPropVariation

--- Only used twice in R* scripts
function Global.SetCutsceneTriggerArea(p0, p1, p2, p3, p4, p5)
	return _in(0x9896CE4721BE84BA, p0, p1, p2, p3, p4, p5)
end

function Global.SetDamping(entity, vertex, value)
	return _in(0xEEA3B200A6FEB65B, entity, vertex, value)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.SetDebugLinesAndSpheresDrawingActive(enabled)
	return _in(0x175B6BFC15CDD0C5, enabled)
end

function Global.SetDecisionMaker(ped, name)
	return _in(0xB604A2942ADED0EE, ped, _ch(name))
end

--- Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
-- Works only ~200 meters around the player.
function Global.SetDeepOceanScaler(intensity)
	return _in(0xB96B00E976BE977F, intensity)
end
Global.N_0xb96b00e976be977f = Global.SetDeepOceanScaler
Global.SetWavesIntensity = Global.SetDeepOceanScaler
Global.SetCurrentIntensity = Global.SetDeepOceanScaler

--- SET_*
function Global.SetDirectorModeClearTriggeredFlag()
	return _in(0x2632482FD6B9AB87)
end
Global.N_0x2632482fd6b9ab87 = Global.SetDirectorModeClearTriggeredFlag

function Global.SetDisableAmbientMeleeMove(player, toggle)
	return _in(0x2E8AABFA40A84F8C, player, toggle)
end

--- NativeDB Return Type: void
function Global.SetDisableBreaking(object, toggle)
	return _in(0x5CEC1A84620E7D5B, object, toggle, _r, _ri)
end

--- sometimes used used with NET_TO_OBJ
function Global.SetDisableFragDamage(object, toggle)
	return _in(0x01BA3AED21C16CFB, object, toggle)
end

function Global.SetDisablePretendOccupants(vehicle, p1)
	return _in(0x25367DE49D64CF16, vehicle, p1)
end
Global.N_0x25367de49d64cf16 = Global.SetDisablePretendOccupants

--- SET_*_MULTIPLIER_THIS_FRAME
function Global.SetDisableRandomTrainsThisFrame(toggle)
	return _in(0xD4B8E3D1917BC86B, toggle)
end
Global.N_0xd4b8e3d1917bc86b = Global.SetDisableRandomTrainsThisFrame
Global.SetSomethingMultiplierThisFrame = Global.SetDisableRandomTrainsThisFrame

function Global.SetDisableVehicleEngineFires(vehicle, p1)
	return _in(0x91A0BD635321F145, vehicle, p1)
end
Global.N_0x91a0bd635321f145 = Global.SetDisableVehicleEngineFires

function Global.SetDisableVehiclePetrolTankDamage(vehicle, toggle)
	return _in(0x37C8252A7C92D017, vehicle, toggle)
end

function Global.SetDisableVehiclePetrolTankFires(vehicle, toggle)
	return _in(0x465BF26AB9684352, vehicle, toggle)
end
Global.N_0x465bf26ab9684352 = Global.SetDisableVehiclePetrolTankFires

--- NativeDB Introduced: v1604
-- @param toggle :
function Global.SetDisableVehicleUnk(toggle)
	return _in(0x143921E45EC44D62, toggle)
end

--- NativeDB Introduced: v1604
-- @param toggle :
function Global.SetDisableVehicleUnk_2(toggle)
	return _in(0x211E95CE9903940C, toggle)
end

--- Must be called each frame
function Global.SetDisableVehicleWindowCollisions(vehicle, p1)
	return _in(0x1087BC8EC540DAEB, vehicle, p1)
end
Global.N_0x1087bc8ec540daeb = Global.SetDisableVehicleWindowCollisions

--- This native sets the app id for the discord rich presence implementation.
function Global.SetDiscordAppId(appId)
	return _in(0x6a02254d, _ts(appId))
end

--- This native sets the image asset for the discord rich presence implementation.
-- @param assetName The name of a valid asset registered on Discordapp's developer dashboard. note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
function Global.SetDiscordRichPresenceAsset(assetName)
	return _in(0x53dfd530, _ts(assetName))
end

--- This native sets the small image asset for the discord rich presence implementation.
-- @param assetName The name of a valid asset registered on Discordapp's developer dashboard. Note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
function Global.SetDiscordRichPresenceAssetSmall(assetName)
	return _in(0xf61d04c4, _ts(assetName))
end

--- This native sets the hover text of the small image asset for the discord rich presence implementation.
-- @param text Text to be displayed when hovering over small image asset. Note that you must also set a valid small image asset using the SET_DISCORD_RICH_PRESENCE_ASSET_SMALL native.
function Global.SetDiscordRichPresenceAssetSmallText(text)
	return _in(0x35e62b6a, _ts(text))
end

--- This native sets the hover text of the image asset for the discord rich presence implementation.
-- @param text Text to be displayed when hovering over image asset. Note that you must also set a valid image asset using the SET_DISCORD_RICH_PRESENCE_ASSET native.
function Global.SetDiscordRichPresenceAssetText(text)
	return _in(0xb029d2fa, _ts(text))
end

function Global.SetDispatchCopsForPlayer(player, toggle)
	return _in(0xDB172424876553F4, player, toggle)
end

function Global.SetDispatchIdealSpawnDistance(p0)
	return _in(0x6FE601A64180D423, p0)
end

function Global.SetDispatchSpawnLocation(x, y, z)
	return _in(0xD10F442036302D50, x, y, z)
end
Global.N_0xd10f442036302d50 = Global.SetDispatchSpawnLocation

function Global.SetDispatchTimeBetweenSpawnAttempts(p0, p1)
	return _in(0x44F7CBC1BEB3327D, p0, p1)
end

function Global.SetDispatchTimeBetweenSpawnAttemptsMultiplier(p0, p1)
	return _in(0x48838ED9937A15D1, p0, p1)
end

--- Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
function Global.SetDistantCarsEnabled(toggle)
	return _in(0xF796359A959DF65D, toggle)
end
Global.N_0xf796359a959df65d = Global.SetDistantCarsEnabled
Global.DisplayDistantVehicles = Global.SetDistantCarsEnabled

--- This is a NOP function. It does nothing at all.
function Global.SetDitchPoliceModels(toggle)
	return _in(0x42CBE54462D92634, toggle)
end

--- Sets the on-screen drawing origin for draw-functions (which is normally x=0,y=0 in the upper left corner of the screen) to a world coordinate.
-- From now on, the screen coordinate which displays the given world coordinate on the screen is seen as x=0,y=0.
-- Example in C#:
-- Vector3 boneCoord = somePed.GetBoneCoord(Bone.SKEL_Head);
-- Function.Call(Hash.SET_DRAW_ORIGIN, boneCoord.X, boneCoord.Y, boneCoord.Z, 0);
-- Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, -0.015, 0.013, 0.013, 0.0, 255, 0, 0, 200);
-- Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, -0.015, 0.013, 0.013, 90.0, 255, 0, 0, 200);
-- Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, 0.015, 0.013, 0.013, 270.0, 255, 0, 0, 200);
-- Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, 0.015, 0.013, 0.013, 180.0, 255, 0, 0, 200);
-- Function.Call(Hash.CLEAR_DRAW_ORIGIN);
-- Result: www11.pic-upload.de/19.06.15/bkqohvil2uao.jpg
-- If the pedestrian starts walking around now, the sprites are always around her head, no matter where the head is displayed on the screen.
-- This function also effects the drawing of texts and other UI-elements.
-- The effect can be reset by calling GRAPHICS::CLEAR_DRAW_ORIGIN().
function Global.SetDrawOrigin(x, y, z, p3)
	return _in(0xAA0008F3BBB8F416, x, y, z, p3)
end

function Global.SetDriveTaskCruiseSpeed(driver, cruiseSpeed)
	return _in(0x5C9B84BD7D31D908, driver, cruiseSpeed)
end

--- This native is used to set the driving style for specific ped.
-- Driving styles id seems to be:
-- 786468
-- 262144
-- 786469
-- http://gtaforums.com/topic/822314-guide-driving-styles/
function Global.SetDriveTaskDrivingStyle(ped, drivingStyle)
	return _in(0xDACE1BE37D88AF67, ped, drivingStyle)
end

function Global.SetDriveTaskMaxCruiseSpeed(p0, p1)
	return _in(0x404A5AA9B9F0B746, p0, p1)
end

--- For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
function Global.SetDrivebyTaskTarget(shootingPed, targetPed, targetVehicle, x, y, z)
	return _in(0xE5B302114D8162EE, shootingPed, targetPed, targetVehicle, x, y, z)
end

--- The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
function Global.SetDriverAbility(driver, ability)
	return _in(0xB195FFA8042FC5C3, driver, ability)
end

--- range 0.0f - 1.0f
function Global.SetDriverAggressiveness(driver, aggressiveness)
	return _in(0xA731F608CA104E3C, driver, aggressiveness)
end

--- Scripts use 0.2, 0.5 and 1.0.
function Global.SetDriverRacingModifier(driver, modifier)
	return _in(0xDED5AF5A0EA4B297, driver, modifier)
end
Global.N_0xded5af5a0ea4b297 = Global.SetDriverRacingModifier

--- Navigates the specified DUI browser to a different URL.
-- @param duiObject The DUI browser handle.
-- @param url The new URL.
function Global.SetDuiUrl(duiObject, url)
	return _in(0xf761d9f3, duiObject, _ts(url))
end

function Global.SetEmitterRadioStation(emitterName, radioStation)
	return _in(0xACF57305B12AF907, _ts(emitterName), _ts(radioStation))
end

--- Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
-- ```
-- ```
-- NativeDB Introduced: v1604
-- @param entity :
-- @param p1 :
-- @param p2 :
function Global.SetEnableArenaPropPhysics(entity, p1, p2)
	return _in(0x911024442F4898F0, entity, p1, p2)
end
Global.N_0x911024442f4898f0 = Global.SetEnableArenaPropPhysics

--- NativeDB Introduced: v1604
-- @param entity :
-- @param p1 :
-- @param p2 :
-- @param ped :
function Global.SetEnableArenaPropPhysicsOnPed(entity, p1, p2, ped)
	return _in(0xB20834A7DD3D8896, entity, p1, p2, ped)
end
Global.N_0xb20834a7dd3d8896 = Global.SetEnableArenaPropPhysicsOnPed

--- Used with [SET_ENABLE_HANDCUFFS](#_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
function Global.SetEnableBoundAnkles(ped, toggle)
	return _in(0xC52E0F855C58FC2E, ped, toggle)
end

--- ped can not pull out a weapon when true
function Global.SetEnableHandcuffs(ped, toggle)
	return _in(0xDF1AF8B5D56542FA, ped, toggle)
end

function Global.SetEnablePedEnveffScale(ped, toggle)
	return _in(0xD2C5AA0C0E8D0F1E, ped, toggle)
end

--- Enables diving motion when underwater.
function Global.SetEnableScuba(ped, toggle)
	return _in(0xF99F62004024D506, ped, toggle)
end

--- NativeDB Introduced: v1493
-- @param ped :
-- @param toggle :
function Global.SetEnableScubaGearLight(ped, toggle)
	return _in(0xEE2476B9EE4A094F, ped, toggle)
end

--- skin - everything alpha except skin
-- Set entity alpha level. Ranging from 0 to 255 but chnages occur after every 20 percent (after every 51).
-- ```
-- ```
-- NativeDB Parameter 2: BOOL skin
-- @param entity The entity the alpha will be changed for.
-- @param alphaLevel The alpha level between 0-255.
-- @param skin Whether to not change alpha level of the entity skin.
function Global.SetEntityAlpha(entity, alphaLevel, skin)
	return _in(0x44A0870B7E92D7C0, entity, alphaLevel, skin)
end

function Global.SetEntityAlwaysPrerender(entity, toggle)
	return _in(0xACAD101E1FB66689, entity, toggle)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetEntityAnimCurrentTime(entity, animDictionary, animName, time)
	return _in(0x4487C259F0F70977, entity, _ts(animDictionary), _ts(animName), time)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetEntityAnimSpeed(entity, animDictionary, animName, speedMultiplier)
	return _in(0x28D1A16553C51776, entity, _ts(animDictionary), _ts(animName), speedMultiplier)
end

--- Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
-- p1 has no effect when either its on or off
-- maybe a quick disassembly will tell us what it does
-- p2 has no effect when either its on or off
-- maybe a quick disassembly will tell us what it does
function Global.SetEntityAsMissionEntity(entity, p1, p2)
	return _in(0xAD738C3085FE7E11, entity, p1, p2)
end

--- Marks the specified entity (ped, vehicle or object) as no longer needed.
-- Entities marked as no longer needed, will be deleted as the engine sees fit.
function Global.SetEntityAsNoLongerNeeded(entity)
	return _in(0xB736A491E64A32CF, _ii(entity) --[[ may be optional ]])
end

function Global.SetEntityCanBeDamaged(entity, toggle)
	return _in(0x1760FFA8AB074D66, entity, toggle)
end

function Global.SetEntityCanBeDamagedByRelationshipGroup(entity, bCanBeDamaged, relGroup)
	return _in(0xE22D8FDE858B8119, entity, bCanBeDamaged, relGroup)
end

--- Sets whether the entity can be targeted without being in line-of-sight.
function Global.SetEntityCanBeTargetedWithoutLos(entity, toggle)
	return _in(0xD3997889736FD899, entity, toggle)
end

function Global.SetEntityCollision(entity, toggle, keepPhysics)
	return _in(0x1A9205C1B9EE827F, entity, toggle, keepPhysics)
end

--- internally it calls the same function as 'SET_ENTITY_COLLISION'. but uses a hard coded parameter that only activates when p1 is set to true
-- =============================
-- Weirdly enough in the 3 scripts it's used in on PC,
-- - director_mode (2 hits)
-- - re_duel (2 hits)
-- - re_seaplane (1 hit)
-- Most of the time in the hits its actually used after the normal SET_ENTITY_COLLISION. Example from re_seaplane,
-- Local_49[iParam0 /*6*/] = create_ped(26, iVar4, vVar0, fVar3, 1, true);
-- set_entity_collision(Local_49[iParam0 /*6*/], iVar42, 0);
-- _0x9EBC85ED0FFFE51C(Local_49[iParam0 /*6*/], !iVar66, 0); (_SET_ENTITY_COLLISION_2)
-- iVar42 being true so the normal collision native is true, 0
-- iVar66 being false so !false so it's true, 0
-- Gonna ignore the 'vars' for the create_ped no point in defining them.
function Global.SetEntityCompletelyDisableCollision(entity, p1, p2)
	return _in(0x9EBC85ED0FFFE51C, entity, p1, p2)
end
Global.N_0x9ebc85ed0fffe51c = Global.SetEntityCompletelyDisableCollision
Global.SetEntityCollision_2 = Global.SetEntityCompletelyDisableCollision

--- ```
-- p7 is always 1 in the scripts. Set to 1, an area around the destination coords for the moved entity is cleared from other entities.
-- Often ends with 1, 0, 0, 1); in the scripts. It works.
-- Axis - Invert Axis Flags
-- ```
-- Sets an entity's coordinates in world space.
-- @param entity The entity to change coordinates for.
-- @param xPos The x coordinate.
-- @param yPos The y coordinate.
-- @param zPos The z coordinate.
-- @param xAxis Whether to invert x axis.
-- @param yAxis Whether to invert y axis.
-- @param zAxis Whether to invert z axis.
-- @param clearArea Whether to clear other entities in area around entity.
function Global.SetEntityCoords(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea)
	return _in(0x06843DA7060A026B, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea)
end

--- Axis - Invert Axis Flags
function Global.SetEntityCoordsNoOffset(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis)
	return _in(0x239A3351AC1DA385, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis)
end

--- does the same as SET_ENTITY_COORDS.
function Global.SetEntityCoords_2(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea)
	return _in(0x621873ECE1178967, entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea)
end

function Global.SetEntityDynamic(entity, toggle)
	return _in(0x1718DE8E3F2823CA, entity, toggle)
end

function Global.SetEntityHasGravity(entity, toggle)
	return _in(0x4A4722448F18EEF5, entity, toggle)
end

--- Set the heading of an entity in degrees also known as "Yaw".
-- @param entity The entity to set the heading for.
-- @param heading The heading in degrees.
function Global.SetEntityHeading(entity, heading)
	return _in(0x8E2530AA8ADA980E, entity, heading)
end

--- health >= 0
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.SetEntityHealth(entity, health)
	return _in(0x6B76DC1F3AE6E6A3, entity, health)
end

function Global.SetEntityIconColor(entity, red, green, blue, alpha)
	return _in(0x1D5F595CCAE2E238, entity, red, green, blue, alpha)
end

function Global.SetEntityIconVisibility(entity, toggle)
	return _in(0xE0E8BEECCA96BA31, entity, toggle)
end

--- Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
-- If you use this for a ped and you want Ragdoll to stay enabled, then do:
-- *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
-- Use this if you want to get the invincibility status:
-- bool IsPedInvincible(Ped ped)
-- {
-- auto addr = getScriptHandleBaseAddress(ped);
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x188);
-- return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
-- }
-- return false;
-- }
function Global.SetEntityInvincible(entity, toggle)
	return _in(0x3882114BDE571AD4, entity, toggle)
end

function Global.SetEntityIsTargetPriority(entity, p1, p2)
	return _in(0xEA02E132F5C68722, entity, p1, p2)
end

function Global.SetEntityLights(entity, toggle)
	return _in(0x7CFBA6A80BDF3874, entity, toggle)
end

--- Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.SetEntityLoadCollisionFlag(entity, toggle)
	return _in(0x0DC7CABAB1E9B67E, entity, toggle)
end

--- I tried using this and I see nothing happening, what is this suppose to do?
function Global.SetEntityLocallyInvisible(entity)
	return _in(0xE135A9FF3F5D05D8, entity)
end

--- I tried using this and I see nothing happening, what is this suppose to do?
function Global.SetEntityLocallyVisible(entity)
	return _in(0x241E289B5C059EDC, entity)
end

--- LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
function Global.SetEntityLodDist(entity, value)
	return _in(0x5927F96A78577363, entity, value)
end

--- For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849
function Global.SetEntityMaxHealth(entity, value)
	return _in(0x166E7CF68597D8B5, entity, value)
end

function Global.SetEntityMaxSpeed(entity, speed)
	return _in(0x0E46A3FCBDE2A1B1, entity, speed)
end

function Global.SetEntityMotionBlur(entity, toggle)
	return _in(0x295D82A8559F9150, entity, toggle)
end

--- Calling this function disables collision between two entities.
-- The importance of the order for entity1 and entity2 is unclear.
-- The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
function Global.SetEntityNoCollisionEntity(entity1, entity2, thisFrameOnly)
	return _in(0xA53ED5520C07654A, entity1, entity2, thisFrameOnly)
end

function Global.SetEntityOnlyDamagedByPlayer(entity, toggle)
	return _in(0x79F020FF9EDC0748, entity, toggle)
end

function Global.SetEntityOnlyDamagedByRelationshipGroup(entity, p1, relationshipHash)
	return _in(0x7022BD828FA0B082, entity, p1, _ch(relationshipHash))
end

function Global.SetEntityProofUnk(entity, toggle)
	return _in(0x15F944730C832252, entity, toggle)
end
Global.N_0x15f944730c832252 = Global.SetEntityProofUnk

--- Enable / disable each type of damage.
-- --------------
-- p7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);
function Global.SetEntityProofs(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, p6, p7, drownProof)
	return _in(0xFAEE099C6F890BB8, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, p6, p7, drownProof)
end

--- w is the correct parameter name!
function Global.SetEntityQuaternion(entity, x, y, z, w)
	return _in(0x77B21BE7AC540F07, entity, x, y, z, w)
end

function Global.SetEntityRecordsCollisions(entity, toggle)
	return _in(0x0A50A1EEDAD01E65, entity, toggle)
end

function Global.SetEntityRenderScorched(entity, toggle)
	return _in(0x730F5F8D3F0F2050, entity, toggle)
end

--- rotationOrder refers to the order yaw pitch roll is applied
-- value ranges from 0 to 5. What you use for rotationOrder when setting must be the same as rotationOrder when getting the rotation.
-- Unsure what value corresponds to what rotation order, more testing will be needed for that.
-- For the most part R* uses 1 or 2 as the order.
-- p5 is usually set as true
function Global.SetEntityRotation(entity, pitch, roll, yaw, rotationOrder, p5)
	return _in(0x8524A8B0171D5E07, entity, pitch, roll, yaw, rotationOrder, p5)
end

--- what does this native do?
-- bool IsEntitySomething(Entity entity)
-- {
-- auto addr = getScriptHandleBaseAddress(entity);
-- printf("addr: 0x%X \n", addr);
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x48D);
-- printf("flag: 0x%X \n", flag);
-- return ((flag & (1 << 3)) != 0) || ((flag & (1 << 30)) != 0);
-- }
-- return false;
-- }
-- wot ?
function Global.SetEntitySomething(entity, toggle)
	return _in(0x3910051CCECDB00C, entity, toggle)
end
Global.N_0x3910051ccecdb00c = Global.SetEntitySomething
Global.SetEntityRegister = Global.SetEntitySomething

--- Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
-- 0 = green
-- 1 = red
-- 2 = yellow
-- changing lights may not change the behavior of vehicles
function Global.SetEntityTrafficlightOverride(entity, state)
	return _in(0x57C5DB656185EAC4, entity, state)
end

--- Note that the third parameter(denoted as z) is "up and down" with positive ment.
function Global.SetEntityVelocity(entity, x, y, z)
	return _in(0x1C99BB7B6E96D16F, entity, x, y, z)
end

--- unk was always 0.
function Global.SetEntityVisible(entity, toggle, unk)
	return _in(0xEA1C610A04DB6BBB, entity, toggle, unk)
end

function Global.SetEntityVisibleInCutscene(p0, p1, p2)
	return _in(0xE0031D3C8F36AB82, p0, p1, p2)
end

function Global.SetEveryoneIgnorePlayer(player, toggle)
	return _in(0x8EEDA153AD141BA4, player, toggle)
end

--- Groups found in the scripts used with this native:
-- "AMMUNATION",
-- "QUARRY",
-- "Triathlon_1",
-- "Triathlon_2",
-- "Triathlon_3"
function Global.SetExclusiveScenarioGroup(scenarioGroup)
	return _in(0x535E97E1F7FC0C6A, _ts(scenarioGroup))
end

function Global.SetExplosiveAmmoThisFrame(player)
	return _in(0xA66C71C98D5F2CFB, player)
end

--- NativeDB Return Type: void
function Global.SetExplosiveMeleeThisFrame(player)
	return _in(0xFF1BED81BFDC0FE0, player, _r, _ri)
end

--- Sets a secondary timecycle modifier.
function Global.SetExtraTimecycleModifier(modifierName)
	return _in(0x5096FD9CCB49056D, _ts(modifierName))
end

--- The same as [`SetTimecycleModifierStrength`](#_0x82E7FFCD5B2326B3) but for the secondary tiemcycle modifier.
-- @param strength :
function Global.SetExtraTimecycleModifierStrength(strength)
	return _in(0x2C328AF17210F009, strength)
end
Global.N_0x2c328af17210f009 = Global.SetExtraTimecycleModifierStrength

function Global.SetFacialIdleAnimOverride(ped, animName, animDict)
	return _in(0xFFC24B988B938B38, ped, _ts(animName), _ts(animDict))
end

--- Sets whether the game should fade in after the player dies or is arrested.
function Global.SetFadeInAfterDeathArrest(toggle)
	return _in(0xDA66D2796BA33F12, toggle)
end

function Global.SetFadeInAfterLoad(toggle)
	return _in(0xF3D78F59DFE18D79, toggle)
end

--- Sets whether the game should fade out after the player is arrested.
function Global.SetFadeOutAfterArrest(toggle)
	return _in(0x1E0B4DC0D990A4E7, toggle)
end

--- Sets whether the game should fade out after the player dies.
function Global.SetFadeOutAfterDeath(toggle)
	return _in(0x4A18E01DF2C87B86, toggle)
end

--- Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are ignored.
-- Max is 6. Also the mini-map gets the red & blue flashing effect.
function Global.SetFakeWantedLevel(fakeWantedLevel)
	return _in(0x1454F2448DE30163, fakeWantedLevel)
end

function Global.SetFarDrawVehicles(toggle)
	return _in(0x26324F33423F3CC3, toggle)
end

--- When this is set to ON, shadows only draw as you get nearer.
-- When OFF, they draw from a further distance. (((BUT))) f*ck up nearer shadows quality.
function Global.SetFarShadowsSuppressed(toggle)
	return _in(0x80ECBC0C856D3B0B, toggle)
end

--- NativeDB Return Type: void
function Global.SetFireAmmoThisFrame(player)
	return _in(0x11879CDD803D30F4, player, _r, _ri)
end

function Global.SetFirstPersonAimCamZoomFactor(p0)
	return _in(0x70894BD0915C5BCA, p0)
end
Global.N_0x70894bd0915c5bca = Global.SetFirstPersonAimCamZoomFactor

--- Sets the near clipping plane of the first person camera.
function Global.SetFirstPersonCamNearClip(distance)
	return _in(0x0AF7B437918103B3, distance)
end
Global.N_0x0af7b437918103b3 = Global.SetFirstPersonCamNearClip

--- Similar to _CLAMP_GAMEPLAY_CAM_PITCH except this is specifically for the FP camera, and it only lets you clamp the pitch within the normal range.
function Global.SetFirstPersonCamPitchRange(minAngle, maxAngle)
	return _in(0xBCFC632DB7673BF0, minAngle, maxAngle)
end
Global.N_0xbcfc632db7673bf0 = Global.SetFirstPersonCamPitchRange

--- Purpose of p0 and p1 unknown.
function Global.SetFlash(p0, p1, fadeIn, duration, fadeOut)
	return _in(0x0AB84296FED9CFC6, p0, p1, fadeIn, duration, fadeOut)
end

function Global.SetFlashLightFadeDistance(distance)
	return _in(0xCEA66DAD478CD39B, distance, _r, _ri)
end

function Global.SetFloatingHelpTextScreenPosition(hudIndex, p1, p2)
	return _in(0x7679CC1BCEBE3D4C, hudIndex, p1, p2)
end
Global.N_0x7679cc1bcebe3d4c = Global.SetFloatingHelpTextScreenPosition

function Global.SetFloatingHelpTextStyle(p0, p1, p2, p3, p4, p5)
	return _in(0x788E7FD431BD67F1, p0, p1, p2, p3, p4, p5)
end
Global.N_0x788e7fd431bd67f1 = Global.SetFloatingHelpTextStyle

function Global.SetFloatingHelpTextToEntity(hudIndex, entity, p2, p3)
	return _in(0xB094BC1DB4018240, hudIndex, entity, p2, p3)
end
Global.N_0xb094bc1db4018240 = Global.SetFloatingHelpTextToEntity

function Global.SetFloatingHelpTextWorldPosition(hudIndex, x, y, z)
	return _in(0x784BA7E0ECEB4178, hudIndex, x, y, z)
end
Global.N_0x784ba7e0eceb4178 = Global.SetFloatingHelpTextWorldPosition

function Global.SetFlyCamCoordAndConstrain(cam, x, y, z)
	return _in(0xC91C6C55199308CA, cam, x, y, z)
end
Global.N_0xc91c6c55199308ca = Global.SetFlyCamCoordAndConstrain

function Global.SetFlyCamHorizontalResponse(cam, p1, p2, p3)
	return _in(0x503F5920162365B2, cam, p1, p2, p3)
end
Global.N_0x503f5920162365b2 = Global.SetFlyCamHorizontalResponse

function Global.SetFlyCamMaxHeight(cam, height)
	return _in(0xF9D02130ECDD1D77, cam, height)
end
Global.N_0xf9d02130ecdd1d77 = Global.SetFlyCamMaxHeight
Global.SetCameraRange = Global.SetFlyCamMaxHeight

function Global.SetFlyCamVerticalSpeedMultiplier(cam, p1, p2, p3)
	return _in(0xE827B9382CFB41BA, cam, p1, p2, p3)
end
Global.N_0xe827b9382cfb41ba = Global.SetFlyCamVerticalSpeedMultiplier

--- It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
function Global.SetFocusEntity(entity)
	return _in(0x198F77705FA0931D, entity)
end

--- Override the area where the camera will render the terrain.
-- p3, p4 and p5 are usually set to 0.0
function Global.SetFocusPosAndVel(x, y, z, offsetX, offsetY, offsetZ)
	return _in(0xBB7454BAFF08FE25, x, y, z, offsetX, offsetY, offsetZ)
end
Global.SetFocusArea = Global.SetFocusPosAndVel

--- From the b617d scripts:
-- CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);
-- CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);
-- CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
function Global.SetFollowPedCamThisUpdate(camName, p1)
	return _in(0x44A113DD6FFC48D1, _ts(camName), p1, _r)
end
Global.SetFollowPedCamCutsceneChat = Global.SetFollowPedCamThisUpdate

--- Sets the type of Player camera:
-- 0 - Third Person Close
-- 1 - Third Person Mid
-- 2 - Third Person Far
-- 4 - First Person
function Global.SetFollowPedCamViewMode(viewMode)
	return _in(0x5A4F9EDF1673F704, viewMode)
end

--- Sets the type of Player camera in vehicles:
-- 0 - Third Person Close
-- 1 - Third Person Mid
-- 2 - Third Person Far
-- 4 - First Person
function Global.SetFollowVehicleCamViewMode(viewMode)
	return _in(0xAC253D7842768F48, viewMode)
end

function Global.SetFollowVehicleCamZoomLevel(zoomLevel)
	return _in(0x19464CB6E4078C8A, zoomLevel)
end

function Global.SetForceFootstepUpdate(ped, toggle)
	return _in(0x129466ED55140F8D, ped, toggle)
end
Global.N_0x129466ed55140f8d = Global.SetForceFootstepUpdate

function Global.SetForceHdVehicle(vehicle, toggle)
	return _in(0x97CE68CB032583F0, vehicle, toggle)
end
Global.N_0x97ce68cb032583f0 = Global.SetForceHdVehicle

--- NativeDB Parameter 0: float x
-- NativeDB Parameter 1: float y
-- NativeDB Parameter 2: float z
-- NativeDB Parameter 3: float p3
function Global.SetForceObjectThisFrame(x, y, z, p3)
	return _in(0xF538081986E49E9D, x, y, z, p3)
end

--- Forces footstep tracks on all surfaces.
function Global.SetForcePedFootstepsTracks(toggle)
	return _in(0xAEEDAD1420C65CC0, toggle)
end

function Global.SetForceStepType(ped, p1, type, p3)
	return _in(0xCB968B53FC7F916D, ped, p1, type, p3)
end
Global.N_0xcb968b53fc7f916d = Global.SetForceStepType

--- Forces vehicle trails on all surfaces.
function Global.SetForceVehicleTrails(toggle)
	return _in(0x4CC7F0FEA5283FE0, toggle)
end

--- X,Y position of boat is frozen in place when anchored and its engine disabled, only the Z value changes. Requires 0xE3EBAAE484798530 to be set to true.
-- SET_FORCED_ZENITH_QUADTREE?
function Global.SetForcedBoatLocationWhenAnchored(vehicle, toggle)
	return _in(0xB28B1FE5BFADD7F5, vehicle, toggle)
end
Global.N_0xb28b1fe5bfadd7f5 = Global.SetForcedBoatLocationWhenAnchored

--- Sets some values in a vehicle gadget (tow arm, digger arm, etc.). Don't know which one though.
-- I've tested on the towtruck 1 & 2, Dock Lift (Crate Arm), Dozer, and such have no effect. However when used on a Forklift it sets the height of the forks. 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
function Global.SetForkliftForkHeight(vehicle, height)
	return _in(0x37EBBF3117BD6A25, vehicle, height)
end
Global.N_0x37ebbf3117bd6a25 = Global.SetForkliftForkHeight

function Global.SetFrontendActive(active)
	return _in(0x745711A75AB09277, active)
end

function Global.SetFrontendRadioActive(active)
	return _in(0xF7F26C6E9CC9EBB8, active)
end

--- Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
function Global.SetGamePaused(toggle)
	return _in(0x577D1284D6873711, toggle)
end

function Global.SetGamePausesForStreaming(toggle)
	return _in(0x717CD6E6FAEBBEDC, toggle)
end

function Global.SetGameplayCamRawPitch(pitch)
	return _in(0x759E13EBC1C15C5A, pitch)
end

--- Does nothing
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function Global.SetGameplayCamRawYaw(yaw)
	return _in(0x103991D4A307D472, yaw)
end

--- Sets the camera position relative to heading in float from -360 to +360.
-- Heading is alwyas 0 in aiming camera.
function Global.SetGameplayCamRelativeHeading(heading)
	return _in(0xB4EC2312F4E5B1F1, heading)
end

--- Sets the camera pitch.
-- Parameters:
-- x = pitches the camera on the x axis.
-- Value2 = always seems to be hex 0x3F800000 (1.000000 float).
function Global.SetGameplayCamRelativePitch(x, Value2)
	return _in(0x6D0858B8EDFD2B7D, x, Value2)
end

function Global.SetGameplayCamRelativeRotation(roll, pitch, yaw)
	return _in(0x48608C3464F58AB4, roll, pitch, yaw)
end
Global.N_0x48608c3464f58ab4 = Global.SetGameplayCamRelativeRotation

--- Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
function Global.SetGameplayCamShakeAmplitude(amplitude)
	return _in(0xA87E00932DB4D85D, amplitude)
end

--- From b617 scripts:
-- CAM::_21E253A7F8DA5DFB("DINGHY");
-- CAM::_21E253A7F8DA5DFB("ISSI2");
-- CAM::_21E253A7F8DA5DFB("SPEEDO");
function Global.SetGameplayCamVehicleCamera(vehicleName)
	return _in(0x21E253A7F8DA5DFB, _ts(vehicleName))
end
Global.N_0x21e253a7f8da5dfb = Global.SetGameplayCamVehicleCamera

--- NativeDB Parameter 0: Hash vehicleModel
function Global.SetGameplayCamVehicleCameraName(vehicleModel)
	return _in(0x11FA5D3479C7DD47, vehicleModel)
end
Global.N_0x11fa5d3479c7dd47 = Global.SetGameplayCamVehicleCameraName

--- Example C#:
-- Function.Call(Hash.SET_GAMEPLAY_COORD_HINT, position.X, position.Y, position.Z, hintDuration, 1500, 1000, 0);
-- The camera look-at is canceled if the user is already panning the camera around.
function Global.SetGameplayCoordHint(x, y, z, duration, blendOutDuration, blendInDuration, unk)
	return _in(0xD51ADCD2D8BC0FB3, x, y, z, duration, blendOutDuration, blendInDuration, unk)
end

--- p6 & p7 - possibly length or time
function Global.SetGameplayEntityHint(entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)
	return _in(0x189E955A8313E298, entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)
end

function Global.SetGameplayHintAngle(roll)
	return _in(0xD1F8363DFAD03848, roll)
end
Global.N_0xd1f8363dfad03848 = Global.SetGameplayHintAngle

function Global.SetGameplayHintAnimCloseup(p0)
	return _in(0xE3433EADAAF7EE40, p0)
end
Global.GetIsMultiplayerBrief = Global.SetGameplayHintAnimCloseup
Global.N_0xe3433eadaaf7ee40 = Global.SetGameplayHintAnimCloseup

function Global.SetGameplayHintAnimOffsetx(xoffset)
	return _in(0x5D7B620DAE436138, xoffset)
end
Global.N_0x5d7b620dae436138 = Global.SetGameplayHintAnimOffsetx

function Global.SetGameplayHintAnimOffsety(yoffset)
	return _in(0xC92717EF615B6704, yoffset)
end
Global.N_0xc92717ef615b6704 = Global.SetGameplayHintAnimOffsety

function Global.SetGameplayHintAnimOffsetz(zoffset)
	return _in(0xF8BDBF3D573049A1, zoffset)
end
Global.N_0xf8bdbf3d573049a1 = Global.SetGameplayHintAnimOffsetz

function Global.SetGameplayHintFov(FOV)
	return _in(0x513403FB9C56211F, FOV)
end

function Global.SetGameplayObjectHint(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x83E87508A2CA2AC6, p0, p1, p2, p3, p4, p5, p6, p7)
end

function Global.SetGameplayPedHint(p0, x1, y1, z1, p4, p5, p6, p7)
	return _in(0x2B486269ACD548D3, p0, x1, y1, z1, p4, p5, p6, p7)
end

--- Focuses the camera on the specified vehicle.
-- @param vehicle The vehicle to focus on.
-- @param offsetX Position offset X
-- @param offsetY Position offset Y
-- @param offsetZ Position offset Z
-- @param time Effect duration
-- @param easeInTime Effect fade in duration
-- @param easeOutTime EFfect fade out duration
function Global.SetGameplayVehicleHint(vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
	return _in(0xA2297E18F3E71C2E, vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
end

--- NativeDB Return Type: void
function Global.SetGarbageTrucks(toggle)
	return _in(0x2AFD795EEAC8D30D, toggle, _r, _ri)
end

--- Birds will try to reach the given height.
function Global.SetGlobalMinBirdFlightHeight(height)
	return _in(0x6C6B148586F934F7, height)
end

function Global.SetGpsActive(active)
	return _in(0x3BD3F52BA9B1E4E8, active)
end

function Global.SetGpsCustomRouteRender(toggle, radarThickness, mapThickness)
	return _in(0x900086F371220B6F, toggle, radarThickness, mapThickness)
end
Global.N_0x900086f371220b6f = Global.SetGpsCustomRouteRender

--- NativeDB Parameter 0: float x1
-- NativeDB Parameter 1: float y1
-- NativeDB Parameter 2: float z1
-- NativeDB Parameter 3: float x2
-- NativeDB Parameter 4: float y2
-- NativeDB Parameter 5: float z3
function Global.SetGpsDisabledZone(x1, y1, z1, x2, y2, z3)
	return _in(0xDC20483CD3DD5201, x1, y1, z1, x2, y2, z3)
end

--- Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
-- You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
-- **Setting a waypoint at the same coordinate:**
-- Disabled Zone: <https://i.imgur.com/P9VUuxM.png>
-- Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
-- @param x1 X coordinate of first vector.
-- @param y1 Y coordinate of first vector.
-- @param z1 Z coordinate of first vector.
-- @param x2 X coordinate of second vector.
-- @param y2 Y coordinate of second vector.
-- @param z2 Z coordinate of second vector.
-- @param index Index of zone.
function Global.SetGpsDisabledZoneAtIndex(x1, y1, z1, x2, y2, z2, index)
	return _in(0xD0BC1C6FB18EE154, x1, y1, z1, x2, y2, z2, index)
end
Global.N_0xd0bc1c6fb18ee154 = Global.SetGpsDisabledZoneAtIndex

--- Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
-- Doesn't seem like the flags are actually read by the game at all.
-- ---------------
-- Might be left-over from GTA IV. I kind of miss the *ding-dong* turn left in 2 meters lady lol.
function Global.SetGpsFlags(p0, p1)
	return _in(0x5B440763A4C8D15B, p0, p1)
end

function Global.SetGpsFlashes(toggle)
	return _in(0x320D0E0D936A0E9B, toggle)
end

function Global.SetGpsMultiRouteRender(toggle)
	return _in(0x3DDA37128DD1ACA8, toggle)
end
Global.N_0x3dda37128dd1aca8 = Global.SetGpsMultiRouteRender

--- level can be from 0 to 3
-- 0: 9.8
-- 1: 2.4
-- 2: 0.1 - very low
-- 3: 0.0
function Global.SetGravityLevel(level)
	return _in(0x740E14FAD5842351, level)
end

--- 0: Default
-- 1: Circle Around Leader
-- 2: Alternative Circle Around Leader
-- 3: Line, with Leader at center
function Global.SetGroupFormation(groupId, formationType)
	return _in(0xCE2F5FC3AF7E8C1E, groupId, formationType)
end

function Global.SetGroupFormationSpacing(groupId, p1, p2, p3)
	return _in(0x1D9D45004C28C916, groupId, p1, p2, p3)
end

--- Sets the range at which members will automatically leave the group.
function Global.SetGroupSeparationRange(groupHandle, separationRange)
	return _in(0x4102C7858CFEE4E4, groupHandle, separationRange)
end

function Global.SetHandleRockstarMessageViaScript(toggle)
	return _in(0xBFA0A56A817C6C7D, toggle)
end
Global.N_0xbfa0a56a817c6c7d = Global.SetHandleRockstarMessageViaScript

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingField('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The value to set.
function Global.SetHandlingField(vehicle, class_, fieldName, value)
	return _in(0xfe8064e3, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingFloat('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The floating-point value to set.
function Global.SetHandlingFloat(vehicle, class_, fieldName, value)
	return _in(0x90dd01c, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The integer value to set.
function Global.SetHandlingInt(vehicle, class_, fieldName, value)
	return _in(0x8ab3f46c, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingVector('AIRTUG', 'CHandlingData', 'vecCentreOfMassOffset', vector3(0.0, 0.0, -5.0))`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The Vector3 value to set.
function Global.SetHandlingVector(vehicle, class_, fieldName, value)
	return _in(0x7f9d543, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Set profile setting 866
function Global.SetHasContentUnlocksFlags(value)
	return _in(0xDAC073C7901F9E15, value)
end
Global.N_0xdac073c7901f9e15 = Global.SetHasContentUnlocksFlags

--- Harcoded limit for radius is 30.0f
function Global.SetHdArea(x, y, z, radius)
	return _in(0xB85F26619073E775, x, y, z, radius)
end

--- Preview: <https://gfycat.com/MaleRareAmazonparrot>
-- @param id From 0 to 3.
function Global.SetHeadBlendPaletteColor(ped, r, g, b, id)
	return _in(0xCC9682B8951C5229, ped, r, g, b, id)
end
Global.N_0xcc9682b8951c5229 = Global.SetHeadBlendPaletteColor

function Global.SetHealthHudDisplayValues(health, capacity, wasAdded)
	return _in(0x3F5CC444DCAAA8F2, health, capacity, wasAdded)
end
Global.N_0x3f5cc444dcaaa8f2 = Global.SetHealthHudDisplayValues

--- Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
-- this native works on planes to?
function Global.SetHeliBladesFullSpeed(vehicle)
	return _in(0xA178472EBB8AE60D, vehicle)
end

--- Sets the speed of the helicopter blades in percentage of the full speed.
-- vehicleHandle: The helicopter.
-- speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
function Global.SetHeliBladesSpeed(vehicle, speed)
	return _in(0xFD280B4D7F3ABC4D, vehicle, speed)
end

--- If false the tail to the helicopter stays attached to the helicopter on explosion.
-- ```
-- ```
-- NativeDB Parameter 1: BOOL p1
-- NativeDB Return Type: void
function Global.SetHeliTailExplodeThrowDashboard(vehicle, p1)
	return _in(0x3EC8BF18AA453FE9, vehicle, p1, _r)
end
Global.WasCounterActivated = Global.SetHeliTailExplodeThrowDashboard
Global.N_0x3ec8bf18aa453fe9 = Global.SetHeliTailExplodeThrowDashboard

function Global.SetHeliTailRotorHealth(vehicle, health)
	return _in(0xFE205F38AAA58E5B, vehicle, health)
end
Global.N_0xfe205f38aaa58e5b = Global.SetHeliTailRotorHealth

function Global.SetHeliTurbulenceScalar(vehicle, p1)
	return _in(0xE6F13851780394DA, vehicle, p1)
end
Global.N_0xe6f13851780394da = Global.SetHeliTurbulenceScalar

--- value between 0.0 and 1.0
function Global.SetHelicopterRollPitchYawMult(helicopter, multiplier)
	return _in(0x6E0859B530A365CC, helicopter, multiplier)
end

--- SET_HELP_MESSAGE_*
function Global.SetHelpMessageTextStyle(style, hudColor, alpha, p3, p4)
	return _in(0xB9C362BABECDDC7A, style, hudColor, alpha, p3, p4)
end
Global.N_0xb9c362babecddc7a = Global.SetHelpMessageTextStyle

function Global.SetHidofOverride(p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
	return _in(0xBA3D65906822BED5, p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
end
Global.N_0xba3d65906822bed5 = Global.SetHidofOverride
Global.SetHidofEnvBlurParams = Global.SetHidofOverride

--- Makes the ped ragdoll like when falling from a great height
function Global.SetHighFallTask(ped, p1, p2, p3)
	return _in(0x8C825BDC7741D37C, ped, p1, p2, p3)
end

function Global.SetHornEnabled(vehicle, toggle)
	return _in(0x76D683C108594D0E, vehicle, toggle)
end

function Global.SetHudComponentPosition(id, x, y)
	return _in(0xAABB1F56E2A17CED, id, x, y)
end

--- Toggles between raised & lower hydraulics
function Global.SetHydraulicRaised(vehicle, toggle)
	return _in(0x28B18377EB6E25F6, vehicle, toggle)
end
Global.N_0x28b18377eb6e25f6 = Global.SetHydraulicRaised

function Global.SetHydraulicState(vehicle, wheelID, height)
	return _in(0x84EA99C62CB3EF0C, vehicle, wheelID, height)
end
Global.N_0x84ea99c62cb3ef0c = Global.SetHydraulicState

function Global.SetHydraulicWheelState(vehicle, state)
	return _in(0x8EA86DF356801C7D, vehicle, state)
end
Global.N_0x8ea86df356801c7d = Global.SetHydraulicWheelState

function Global.SetHydraulicWheelStateTransition(vehicle, wheelID, p2, p3, p4)
	return _in(0xC24075310A8B9CD1, vehicle, wheelID, p2, p3, p4)
end
Global.N_0xc24075310a8b9cd1 = Global.SetHydraulicWheelStateTransition

function Global.SetIgnoreLowPriorityShockingEvents(player, toggle)
	return _in(0x596976B02B6B5700, player, toggle)
end

function Global.SetIgnoreNoGpsFlag(toggle)
	return _in(0x72751156E7678833, toggle)
end

--- See: SET_BLIP_ROUTE
function Global.SetIgnoreSecondaryRouteNodes(toggle)
	return _in(0x1FC289A0C3FF470F, toggle)
end
Global.N_0x1fc289a0c3ff470f = Global.SetIgnoreSecondaryRouteNodes

--- No other indices work...
-- IK Index ---------
-- 1 = head
-- 3 = left arm
-- 4 = right arm
-- ------------------
-- EntityLookAt can be null (0 handle)
function Global.SetIkTarget(ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
	return _in(0xC32779C16FCEECD9, ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
end

function Global.SetIncidentRequestedUnits(incidentId, dispatchService, numUnits)
	return _in(0xB08B85D860E7BA3C, incidentId, dispatchService, numUnits)
end
Global.N_0xb08b85d860e7ba3c = Global.SetIncidentRequestedUnits

--- SET_INCIDENT_*
function Global.SetIncidentUnk(incidentId, p1)
	return _in(0xD261BA3E7E998072, incidentId, p1)
end
Global.N_0xd261ba3e7e998072 = Global.SetIncidentUnk

function Global.SetInitialPlayerStation(radioStation)
	return _in(0x88795F13FACDA88D, _ts(radioStation))
end

--- inputGroup: 0 (PLAYER_CONTROL), 1 (unk) and 2 (unk) used in the scripts.
function Global.SetInputExclusive(inputGroup, control)
	return _in(0xEDE476E5EE29EDB1, inputGroup, control)
end

--- Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to 9BAE5AD2508DF078.
-- Documented by NTAuthority (http://fivem.net/).
function Global.SetInstancePriorityHint(flag)
	return _in(0xC5F0A8EBD3F361CE, flag)
end
Global.SetUnkMapFlag = Global.SetInstancePriorityHint

--- Formerly known as _LOWER_MAP_PROP_DENSITY and wrongly due to idiots as _ENABLE_MP_DLC_MAPS.
-- Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. Does not touch DLC map data at all.
-- In fact, I doubt this changes the flag whatsoever, that's the OTHER native idiots use together with this that does so, this one only causes a loading screen to show as it reloads map data.
-- ------------------------
-- While you're going on your rant about other "idiots" can you please supply the name of the "other native" for us "idiots" who'd like to actually learn about loading IPL's? Thank, you.
-- ```
-- ```
-- NativeDB Parameter 0: int toggle
function Global.SetInstancePriorityMode(toggle)
	return _in(0x9BAE5AD2508DF078, toggle)
end
Global.EnableMpDlcMaps = Global.SetInstancePriorityMode
Global.UseFreemodeMapBehavior = Global.SetInstancePriorityMode

function Global.SetInteriorActive(interiorID, toggle)
	return _in(0xE37B76C387BE28ED, interiorID, toggle)
end

function Global.SetInteriorEntitySetColor(interior, entitySetName, color)
	return _in(0xC1F1920BAF281317, interior, _ts(entitySetName), color)
end
Global.SetInteriorPropColor = Global.SetInteriorEntitySetColor

function Global.SetInteriorPortalCornerPosition(interiorId, portalIndex, cornerIndex, posX, posY, posZ)
	return _in(0x87f43553, interiorId, portalIndex, cornerIndex, posX, posY, posZ)
end

function Global.SetInteriorPortalFlag(interiorId, portalIndex, flag)
	return _in(0x88b2355e, interiorId, portalIndex, flag)
end

function Global.SetInteriorPortalRoomFrom(interiorId, portalIndex, roomFrom)
	return _in(0x298fc783, interiorId, portalIndex, roomFrom)
end

function Global.SetInteriorPortalRoomTo(interiorId, portalIndex, roomTo)
	return _in(0x58982680, interiorId, portalIndex, roomTo)
end

function Global.SetInteriorRoomExtents(interiorId, roomIndex, bbMinX, bbMinY, bbMinZ, bbMaxX, bbMaxY, bbMaxZ)
	return _in(0x4fdcf51e, interiorId, roomIndex, bbMinX, bbMinY, bbMinZ, bbMaxX, bbMaxY, bbMaxZ)
end

function Global.SetInteriorRoomFlag(interiorId, roomIndex, flag)
	return _in(0x5518d60b, interiorId, roomIndex, flag)
end

function Global.SetInteriorRoomTimecycle(interiorId, roomIndex, timecycleHash)
	return _in(0x31c9a848, interiorId, roomIndex, timecycleHash)
end

function Global.SetLastDrivenVehicle(vehicle)
	return _in(0xACFB2463CC22BED2, vehicle)
end
Global.N_0xacfb2463cc22bed2 = Global.SetLastDrivenVehicle

function Global.SetLightsCutoffDistanceTweak(distance)
	return _in(0xBC3CCA5844452B06, distance)
end
Global.N_0xbc3cca5844452b06 = Global.SetLightsCutoffDistanceTweak

--- SET_LOCAL_PLAYER_*
function Global.SetLocalPlayerCanUsePickupsWithThisModel(modelHash, toggle)
	return _in(0x88EAEC617CD26926, _ch(modelHash), toggle)
end
Global.N_0x88eaec617cd26926 = Global.SetLocalPlayerCanUsePickupsWithThisModel

function Global.SetLocalPlayerInvisibleLocally(p0)
	return _in(0xE5F773C1A1D9D168, p0)
end

function Global.SetLocalPlayerVisibleInCutscene(p0, p1)
	return _in(0xD1065D68947E7B6E, p0, p1)
end

function Global.SetLocalPlayerVisibleLocally(p0)
	return _in(0x7619364C82D3BF14, p0)
end

--- Sets whether or not `SHUTDOWN_LOADING_SCREEN` automatically shuts down the NUI frame for the loading screen. If this is enabled,
-- you will have to manually invoke `SHUTDOWN_LOADING_SCREEN_NUI` whenever you want to hide the NUI loading screen.
-- @param manualShutdown TRUE to manually shut down the loading screen NUI.
function Global.SetManualShutdownLoadingScreenNui(manualShutdown)
	return _in(0x1722c938, manualShutdown)
end

--- If toggle is true, the map is shown in full screen
-- If toggle is false, the map is shown in normal mode
function Global.SetMapFullScreen(toggle)
	return _in(0x5354C5BA2EA868A4, toggle)
end
Global.N_0x5354c5ba2ea868a4 = Global.SetMapFullScreen

--- Sets values to the zoom level data by index.
-- @param index Zoom level index.
-- @param zoomScale fZoomScale value.
-- @param zoomSpeed fZoomSpeed value.
-- @param scrollSpeed fScrollSpeed value.
-- @param tilesX vTiles X.
-- @param tilesY vTiles Y.
function Global.SetMapZoomDataLevel(index, zoomScale, zoomSpeed, scrollSpeed, tilesX, tilesY)
	return _in(0x447c718e, index, zoomScale, zoomSpeed, scrollSpeed, tilesX, tilesY)
end

--- Possible p0 values:
-- "prologue"
-- "Prologue_Main"
function Global.SetMapdatacullboxEnabled(name, toggle)
	return _in(0xAF12610C644A35C9, _ts(name), toggle)
end
Global.N_0xaf12610c644a35c9 = Global.SetMapdatacullboxEnabled

function Global.SetMaxArmourHudDisplay(p0)
	return _in(0x06A320535F5F0248, p0)
end
Global.N_0x06a320535f5f0248 = Global.SetMaxArmourHudDisplay

function Global.SetMaxHealthHudDisplay(p0)
	return _in(0x975D66A0BC17064C, p0)
end
Global.N_0x975d66a0bc17064c = Global.SetMaxHealthHudDisplay

function Global.SetMaxWantedLevel(maxWantedLevel)
	return _in(0xAA5F02DB48D704B9, maxWantedLevel)
end

--- If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so..
function Global.SetMicrophonePosition(p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)
	return _in(0xB6AE90EDDE95C762, p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)
end

--- Overrides how many real ms are equal to one game minute.
-- A setter for [`GetMillisecondsPerGameMinute`](#_0x2F8B4D1C595B11DB).
-- @param value Milliseconds.
function Global.SetMillisecondsPerGameMinute(value)
	return _in(0x36ca2554, value)
end

function Global.SetMinigameInProgress(toggle)
	return _in(0x19E00D7322C6F85B, toggle)
end

--- Argument must be 0.0f or above 38.0f, or it will be ignored.
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function Global.SetMinimapAltitudeIndicatorLevel(altitude, p1)
	return _in(0xD201F3FF917A506D, altitude, p1)
end
Global.SetMinimapAttitudeIndicatorLevel = Global.SetMinimapAltitudeIndicatorLevel

function Global.SetMinimapBlockWaypoint(toggle)
	return _in(0x58FADDED207897DC, toggle)
end

--- This native is used to toggle map components like the army base at the top of the map.
-- p2 appears to be always -1.
-- An incomplete list of components ID:
-- ```
-- 0: Los Santos' air port yellow lift-off markers.
-- 1: Sandy Shore's air port yellow lift-off markers.
-- 2: Trevor's air port yellow lift-off markers.
-- 3: Unknown.
-- 4: Unknown.
-- 5: Unknown.
-- 6: Vespucci Beach lifeguard building.
-- 7: Unknown.
-- 8: Unknown.
-- 15: Army base.
-- ```
function Global.SetMinimapComponent(componentID, toggle, p2)
	return _in(0x75A9A10948D1DEA6, componentID, toggle, p2, _r, _ri)
end

--- Not much is known so far on what it does _exactly_.
-- All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
-- You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
-- You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
-- Use [`N_0x35edd5b2e3ff01c0()`](https://runtime.fivem.net/doc/reference.html#_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
-- @param hole The ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.
function Global.SetMinimapGolfCourse(hole)
	return _in(0x71BDB63DBAF8DA59, hole)
end
Global.N_0x71bdb63dbaf8da59 = Global.SetMinimapGolfCourse

function Global.SetMinimapGolfCourseOff()
	return _in(0x35EDD5B2E3FF01C0)
end
Global.N_0x35edd5b2e3ff01c0 = Global.SetMinimapGolfCourseOff

--- If true, the entire map will be revealed.
function Global.SetMinimapHideFow(toggle)
	return _in(0xF8DEE0A5600CBB93, toggle)
end
Global.N_0xf8dee0a5600cbb93 = Global.SetMinimapHideFow
Global.SetMinimapRevealed = Global.SetMinimapHideFow

--- Toggles the North Yankton map
function Global.SetMinimapInPrologue(toggle)
	return _in(0x9133955F1A2DA957, toggle)
end
Global.SetDrawMapVisible = Global.SetMinimapInPrologue
Global.SetNorthYanktonMap = Global.SetMinimapInPrologue

function Global.SetMinimapInSpectatorMode(toggle, ped)
	return _in(0x1A5CD7752DD28CD3, toggle, ped)
end
Global.KeyHudColour = Global.SetMinimapInSpectatorMode

--- Sets the display info for a minimap overlay.
-- @param miniMap The minimap overlay ID.
-- @param x The X position for the overlay. This is equivalent to a game coordinate X.
-- @param y The Y position for the overlay. This is equivalent to a game coordinate Y, except that it's inverted (gfxY = -gameY).
-- @param xScale The X scale for the overlay. This is equivalent to the Flash \_xscale property, therefore 100 = 100%.
-- @param yScale The Y scale for the overlay. This is equivalent to the Flash \_yscale property.
-- @param alpha The alpha value for the overlay. This is equivalent to the Flash \_alpha property, therefore 100 = 100%.
function Global.SetMinimapOverlayDisplay(miniMap, x, y, xScale, yScale, alpha)
	return _in(0x6a48b3ca, miniMap, x, y, xScale, yScale, alpha)
end

--- If true, the player can't save the game.
-- If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
-- ^ also, if the mission flag is already set, the function does nothing at all
function Global.SetMissionFlag(toggle)
	return _in(0xC4301E5121A0ED73, toggle)
end

--- Takes a text label, gets the string (must not be longer than 600 chars, should not exceed 64 chars) and sets the name to that string.
-- p0 must be true.
function Global.SetMissionName(p0, name)
	return _in(0x5F28ECF5FC84772F, p0, _ts(name))
end

--- Similar to SET_MISSION_NAME but this one can take any string (must not be greater than 600 chars, should not exceed 64 chars), not just text labels.
-- p0 must be true.
function Global.SetMissionName_2(p0, name)
	return _in(0xE45087D85F468BC2, p0, _ts(name))
end
Global.N_0xe45087d85f468bc2 = Global.SetMissionName_2

--- p1 is always 0
function Global.SetMissionTrainAsNoLongerNeeded(p1)
	return _in(0xBBE7648349B49BE8, _i, p1)
end

function Global.SetMissionTrainCoords(train, x, y, z)
	return _in(0x591CA673AA6AB736, train, x, y, z)
end

function Global.SetMobilePhonePosition(posX, posY, posZ)
	return _in(0x693A5C6D6734085B, posX, posY, posZ)
end

function Global.SetMobilePhoneRadioState(state)
	return _in(0xBF286C554784F3DF, state)
end

--- Last parameter is unknown and always zero.
function Global.SetMobilePhoneRotation(rotX, rotY, rotZ, p3)
	return _in(0xBB779C0CA917E865, rotX, rotY, rotZ, p3)
end

--- The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
function Global.SetMobilePhoneScale(scale)
	return _in(0xCBDD322A73D6D932, scale)
end

function Global.SetMobilePhoneUnk(toggle)
	return _in(0x375A706A5C2FD084, toggle)
end
Global.N_0x375a706a5c2fd084 = Global.SetMobilePhoneUnk

--- Enables Radio on phone.
function Global.SetMobileRadioEnabledDuringGameplay(toggle)
	return _in(0x1098355A16064BB3, toggle)
end

--- Unloads model from memory
function Global.SetModelAsNoLongerNeeded(model)
	return _in(0xE532F5D78798DAAB, _ch(model))
end

function Global.SetModelHeadlightConfiguration(modelHash, ratePerSecond, headlightRotation, invertRotation)
	return _in(0x7f6b8d75, _ch(modelHash), ratePerSecond, headlightRotation, invertRotation)
end

--- Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function Global.SetMountedWeaponTarget(shootingPed, targetPed, targetVehicle, x, y, z)
	return _in(0xCCD892192C6D2BB9, shootingPed, targetPed, targetVehicle, x, y, z)
end

--- Shows the cursor on screen for the frame its called.
function Global.SetMouseCursorActiveThisFrame()
	return _in(0xAAE7CE1D63167423)
end
Global.ShowCursorThisFrame = Global.SetMouseCursorActiveThisFrame

--- Changes the mouse cursor's sprite.
-- public enum CursorType
-- {
-- None = 0,
-- Normal = 1,
-- TransparentNormal = 2,
-- PreGrab = 3,
-- Grab = 4,
-- MiddleFinger = 5,
-- LeftArrow = 6,
-- RightArrow = 7,
-- UpArrow = 8,
-- DownArrow = 9,
-- HorizontalExpand = 10,
-- Add = 11,
-- Remove = 12,
-- }
function Global.SetMouseCursorSprite(spriteId)
	return _in(0x8DB8CFFD58B62552, spriteId)
end
Global.N_0x8db8cffd58b62552 = Global.SetMouseCursorSprite
Global.SetCursorSprite = Global.SetMouseCursorSprite

--- p1: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
function Global.SetMovementModeOverride(ped, name)
	return _in(0x781DE8FA214E87D2, ped, _ts(name))
end
Global.N_0x781de8fa214e87d2 = Global.SetMovementModeOverride

--- NativeDB Introduced: v1365
-- @param gamerTagId :
-- @param p1 :
function Global.SetMpGamerHealthBarDisplay(gamerTagId, p1)
	return _in(0xD29EC58C2F6B5014, gamerTagId, p1)
end
Global.N_0xd29ec58c2f6b5014 = Global.SetMpGamerHealthBarDisplay

--- NativeDB Introduced: v1365
-- @param gamerTagId :
-- @param value :
-- @param maximumValue :
function Global.SetMpGamerHealthBarMax(gamerTagId, value, maximumValue)
	return _in(0x1563FE35E9928E67, gamerTagId, value, maximumValue)
end
Global.N_0x1563fe35e9928e67 = Global.SetMpGamerHealthBarMax

function Global.SetMpGamerTag(headDisplayId, p1)
	return _in(0xEE76FF7E6A0166B0, headDisplayId, p1)
end
Global.N_0xee76ff7e6a0166b0 = Global.SetMpGamerTag
Global.SetMpGamerTag_ = Global.SetMpGamerTag

--- Sets flag's sprite transparency. 0-255.
function Global.SetMpGamerTagAlpha(gamerTagId, component, alpha)
	return _in(0xD48FE545CD46F857, gamerTagId, component, alpha)
end
Global.N_0xd48fe545cd46f857 = Global.SetMpGamerTagAlpha

--- Set's the string displayed when flag 3 (AudioSpeaker) active.
function Global.SetMpGamerTagBigText(gamerTagId, string)
	return _in(0x7B7723747CCB55B6, gamerTagId, _ts(string))
end
Global.N_0x7b7723747ccb55b6 = Global.SetMpGamerTagBigText
Global.SetMpGamerTagChatting = Global.SetMpGamerTagBigText

--- Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
function Global.SetMpGamerTagColour(gamerTagId, flag, color)
	return _in(0x613ED644950626AE, gamerTagId, flag, color)
end
Global.N_0x613ed644950626ae = Global.SetMpGamerTagColour

--- Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
-- Should be enabled as flag (2). Has 0 opacity by default.
-- - This was _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR,
function Global.SetMpGamerTagHealthBarColour(headDisplayId, color)
	return _in(0x3158C77A7E888AB4, headDisplayId, color)
end
Global.N_0x3158c77a7e888ab4 = Global.SetMpGamerTagHealthBarColour
Global.SetMpGamerTagHealthBarColor = Global.SetMpGamerTagHealthBarColour

--- Displays a bunch of icons above the players name, and level, and their name twice
function Global.SetMpGamerTagIcons(gamerTagId, p1)
	return _in(0xA67F9C46D612B6F1, gamerTagId, p1)
end
Global.N_0xa67f9c46d612b6f1 = Global.SetMpGamerTagIcons

--- displays wanted star above head
function Global.SetMpGamerTagMpBagLargeCount(gamerTagId, count)
	return _in(0x9B9AA95688F78DD3, gamerTagId, count)
end
Global.N_0x9b9aa95688f78dd3 = Global.SetMpGamerTagMpBagLargeCount

function Global.SetMpGamerTagName(gamerTagId, string)
	return _in(0xDEA2B8283BAA3944, gamerTagId, _ts(string))
end
Global.N_0xdea2b8283baa3944 = Global.SetMpGamerTagName

function Global.SetMpGamerTagUnk(gamerTagId, p1)
	return _in(0x9C16459B2324B2CF, gamerTagId, p1)
end
Global.N_0x9c16459b2324b2cf = Global.SetMpGamerTagUnk

--- enum MpGamerTagComponent
-- {
-- GAMER_NAME = 0,
-- CREW_TAG,
-- healthArmour,
-- BIG_TEXT,
-- AUDIO_ICON,
-- MP_USING_MENU,
-- MP_PASSIVE_MODE,
-- WANTED_STARS,
-- MP_DRIVER,
-- MP_CO_DRIVER,
-- MP_TAGGED,
-- GAMER_NAME_NEARBY,
-- ARROW,
-- MP_PACKAGES,
-- INV_IF_PED_FOLLOWING,
-- RANK_TEXT,
-- MP_TYPING
-- };
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function Global.SetMpGamerTagVisibility(gamerTagId, component, toggle)
	return _in(0x63BB75ABEDC1F6A0, gamerTagId, component, toggle)
end
Global.N_0x63bb75abedc1f6a0 = Global.SetMpGamerTagVisibility

--- displays wanted star above head
function Global.SetMpGamerTagWantedLevel(gamerTagId, wantedlvl)
	return _in(0xCF228E2AA03099C3, gamerTagId, wantedlvl)
end
Global.N_0xcf228e2aa03099c3 = Global.SetMpGamerTagWantedLevel

function Global.SetMultiplayerBankCash()
	return _in(0xDD21B55DF695CD0A)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetMultiplayerHudCash(p0, p1)
	return _in(0xFD1D220394BCB824, p0, p1)
end

function Global.SetMultiplayerWalletCash()
	return _in(0xC2D15BEF167E27BC)
end
Global.N_0xc2d15bef167e27bc = Global.SetMultiplayerWalletCash

function Global.SetNetworkCutsceneEntities(toggle)
	return _in(0xAAA553E7DD28A457, toggle)
end
Global.N_0xaaa553e7dd28a457 = Global.SetNetworkCutsceneEntities

--- Whether or not another player is allowed to take control of the entity
function Global.SetNetworkIdCanMigrate(netId, toggle)
	return _in(0x299EEB23175895FC, netId, toggle)
end

function Global.SetNetworkIdExistsOnAllMachines(netId, toggle)
	return _in(0xE05E81A888FA63C8, netId, toggle)
end

--- not tested....
function Global.SetNetworkIdSyncToPlayer(netId, player, toggle)
	return _in(0xA8A024587329F36A, netId, player, toggle)
end
Global.N_0xa8a024587329f36a = Global.SetNetworkIdSyncToPlayer

function Global.SetNetworkIdVisibleInCutscene(netId, p1, p2)
	return _in(0xA6928482543022B4, netId, p1, p2)
end

--- Original put name,
-- _SET_NETWORK_VEHICLE_NON_CONTACT
-- However changed to 'object' as the instances where this is called in scripts both freemode and golf it's only used on objects after the objects are called OBJ_TO_NET p_parachute_s (freemode) prop_golf_ball (golf). Tho the script search was done via TU27 Xbox360 ones.
-- Got my hopes up whoever put this as vehicle. I was hoping it was what R* used in non-contact races.
function Global.SetNetworkVehicleAsGhost(vehicle, toggle)
	return _in(0x6274C4712850841E, vehicle, toggle)
end
Global.N_0x6274c4712850841e = Global.SetNetworkVehicleAsGhost
Global.SetNetworkObjectNonContact = Global.SetNetworkVehicleAsGhost

--- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
function Global.SetNetworkVehicleRespotTimer(netId, time)
	return _in(0xEC51713AB6EC36E8, netId, time)
end

function Global.SetNewWaypoint(x, y)
	return _in(0xFE43368D2AA4F2FC, x, y)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Not used in the scripts.
-- Bullshit! It's used in spawn_activities
-- ```
function Global.SetNextDesiredMoveState(p0)
	return _in(0xF1B9F16E89E2C93A, p0)
end

--- Something to do with timecycles.
function Global.SetNextPlayerTcmodifier(modifierName)
	return _in(0xBF59707B3E5ED531, _ts(modifierName))
end
Global.N_0xbf59707b3e5ed531 = Global.SetNextPlayerTcmodifier

--- Enables Night Vision.
-- Example:
-- C#: Function.Call(Hash.SET_NIGHTVISION, true);
-- C++: GRAPHICS::SET_NIGHTVISION(true);
-- BOOL toggle:
-- true = turns night vision on for your player.
-- false = turns night vision off for your player.
function Global.SetNightvision(toggle)
	return _in(0x18F621F7A5B1F85D, toggle)
end

function Global.SetNoLoadingScreen(toggle)
	return _in(0x5262CC1995D07E09, toggle)
end

function Global.SetNoiseoveride(toggle)
	return _in(0xE787BF1C5CF823C9, toggle)
end

function Global.SetNoisinessoveride(value)
	return _in(0xCB6A7C3BB17A0C67, value)
end

function Global.SetNuiFocus(hasFocus, hasCursor)
	return _in(0x5b98ae30, hasFocus, hasCursor)
end

function Global.SetNuiFocusKeepInput(keepInput)
	return _in(0x3ff5e5f8, keepInput)
end

--- NativeDB Return Type: void
function Global.SetNumberOfParkedVehicles(value)
	return _in(0xCAA15F13EBD417FF, value, _r, _ri)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function Global.SetObjectAsNoLongerNeeded(object)
	return _in(0x3AE22DEB5BA5A3E6, _ii(object) --[[ may be optional ]])
end

--- Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
function Global.SetObjectCanClimbOn(object, toggle)
	return _in(0x4D89D607CB3DD1D2, object, toggle)
end
Global.N_0x4d89d607cb3dd1d2 = Global.SetObjectCanClimbOn

--- Seems to set the colour of the prop. Haven't really tested it on other props.
-- Only appears in am_mp_nightclub.c for the nightclub dancefloor.
-- Not sure what p1 does, seems to only ever be '1' in scripts.
-- ```
-- NativeDB Parameter 1: BOOL toggle
-- NativeDB Removed Parameter 3: int R
-- NativeDB Removed Parameter 4: int G
-- NativeDB Removed Parameter 5: int B
-- ```
-- @param R :
-- @param G :
-- @param B :
function Global.SetObjectColour(object, toggle, R, G, B)
	return _in(0x3B2FD68DB5F8331C, object, toggle, R, G, B)
end
Global.N_0x3b2fd68db5f8331c = Global.SetObjectColour

--- NativeDB Introduced: v1493
-- @param object :
-- @param p1 :
-- @param r :
-- @param g :
-- @param b :
function Global.SetObjectLightColor(object, p1, r, g, b)
	return _in(0x5F048334B4A4E774, object, p1, r, g, b, _r, _ri)
end

--- Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
-- Other parameters seem to be unknown.
-- p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
-- p3: seems similar to p2
-- p4: makes obj fall slower the higher the value
-- p5: similar to p4
function Global.SetObjectPhysicsParams(object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy)
	return _in(0xF6DF6E90DE7DF90F, object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy)
end

--- `
-- i don't know what this does
-- ```<pre>
-- void __fastcall OBJECT___0x77F33F2CCF64B3AA_START(scrNativeCallContext *args)
-- {
-- bool p2; // bl@1
-- CObject *pObject; // rax@1
-- scrNativeCallContextArgStruct *pArgs; // rax@1
-- pArgs = args->pArgs;
-- p2 = pArgs->a2.BOOL != 0;
-- pObject = getAddressOfObject(pArgs->a1.Object);
-- if ( pObject )
-- {
-- pObject->field_425 &= 0xDFu;                // 1101 1111 (clear bit 6)
-- pObject->field_425 |= 32 * p2;              // bit 6 = p2
-- }
-- }
-- // sfink
-- // note to AB: please set "white-space: pre" in css
-- ````
-- ```
-- ## Parameters
-- * **object**:
-- * **p1**:
function Global.SetObjectSomething(object, p1)
	return _in(0x77F33F2CCF64B3AA, object, p1)
end
Global.N_0x77f33f2ccf64b3aa = Global.SetObjectSomething

function Global.SetObjectStuntPropDuration(object, duration)
	return _in(0xDF6CA0330F2E737B, object, duration)
end
Global.N_0xdf6ca0330f2e737b = Global.SetObjectStuntPropDuration

function Global.SetObjectStuntPropSpeedup(object, p1)
	return _in(0x96EE0EBA0163DF80, object, p1)
end
Global.N_0x96ee0eba0163df80 = Global.SetObjectStuntPropSpeedup

--- NativeDB Return Type: void
function Global.SetObjectTargettable(object, targettable)
	return _in(0x8A7391690F5AFD81, object, targettable, _r, _ri)
end

--- enum ObjectPaintVariants
-- {
-- Pacific = 0,
-- Azure = 1,
-- Nautical = 2,
-- Continental = 3,
-- Battleship = 4,
-- Intrepid = 5,
-- Uniform = 6,
-- Classico = 7,
-- Mediterranean = 8,
-- Command = 9,
-- Mariner = 10,
-- Ruby = 11,
-- Vintage = 12,
-- Pristine = 13,
-- Merchant = 14,
-- Voyager = 15
-- };
function Global.SetObjectTextureVariant(object, textureVariation)
	return _in(0x971DA0055324D033, object, textureVariation)
end
Global.N_0x971da0055324d033 = Global.SetObjectTextureVariant

--- Appears to have an optional bool parameter that is unused in the scripts.
-- If you pass true, something will be set to zero.
function Global.SetOverrideWeather(weatherType)
	return _in(0xA43D5C6FE51ADBEF, _ts(weatherType))
end

--- p0 always seems to be 0
-- duration in milliseconds
-- frequency should range from about 10 (slow vibration) to 255 (very fast)
-- example:
-- SET_PAD_SHAKE(0, 100, 200);
function Global.SetPadShake(inputGroup, duration, frequency)
	return _in(0x48B3886C1358D0D5, inputGroup, duration, frequency)
end

function Global.SetParachuteTaskTarget(ped, x, y, z)
	return _in(0xC313379AF0FCEDA7, ped, x, y, z)
end

function Global.SetParachuteTaskThrust(ped, thrust)
	return _in(0x0729BAC1B8C64317, ped, thrust)
end

function Global.SetParkedVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0xEAE6DCC7EEE3DB1D, multiplier)
end

function Global.SetParticleFxCamInsideNonplayerVehicle(vehicle, p1)
	return _in(0xACEE6F360FC1F6B6, vehicle, p1)
end

function Global.SetParticleFxCamInsideVehicle(p0)
	return _in(0xEEC4047028426510, p0)
end

function Global.SetParticleFxLoopedAlpha(ptfxHandle, alpha)
	return _in(0x726845132380142E, ptfxHandle, alpha)
end

--- only works on some fx's
-- p4 = 0
function Global.SetParticleFxLoopedColour(ptfxHandle, r, g, b, p4)
	return _in(0x7F8F65877F88783B, ptfxHandle, r, g, b, p4)
end

--- Should be named SET_PARTICLE_FX_LOOPED_PROPERTY. "Evolution" doesn't make much sense...
-- --------
-- p4 seems to be always 0.
-- Usage:
-- if (!GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(l_25C7)) {
-- l_25C7 = GRAPHICS::_DDE23F30CC5A0F03("scr_veh_plane_gen_damage", l_8B9, l_25C4, 0.0, 0.0, 0.0, ENTITY::_GET_ENTITY_BONE_INDEX(l_8B9, "exhaust"), 1.0, 0, 0, 0);
-- GRAPHICS::SET_PARTICLE_FX_LOOPED_EVOLUTION(l_25C7, "damage_smoke", 0.5, 0);
-- GRAPHICS::SET_PARTICLE_FX_LOOPED_EVOLUTION(l_25C7, "damage_fire", 0.2, 0);
-- }
function Global.SetParticleFxLoopedEvolution(ptfxHandle, propertyName, amount, noNetwork)
	return _in(0x5F0C4B5B1C393BE2, ptfxHandle, _ts(propertyName), amount, noNetwork)
end

function Global.SetParticleFxLoopedFarClipDist(ptfxHandle, range)
	return _in(0xDCB194B85EF7B541, ptfxHandle, range)
end
Global.SetParticleFxLoopedRange = Global.SetParticleFxLoopedFarClipDist

function Global.SetParticleFxLoopedOffsets(ptfxHandle, x, y, z, rotX, rotY, rotZ)
	return _in(0xF7DDEBEC43483C43, ptfxHandle, x, y, z, rotX, rotY, rotZ)
end

function Global.SetParticleFxLoopedScale(ptfxHandle, scale)
	return _in(0xB44250AAA456492D, ptfxHandle, scale)
end

--- Usage example for C#:
-- Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
-- Note: the argument alpha ranges from 0.0f-1.0f !
function Global.SetParticleFxNonLoopedAlpha(alpha)
	return _in(0x77168D722C58B2FC, alpha)
end

--- only works on some fx's
function Global.SetParticleFxNonLoopedColour(r, g, b)
	return _in(0x26143A59EF48B262, r, g, b)
end

function Global.SetParticleFxOverride(oldAsset, newAsset)
	return _in(0xEA1E2D93F6F75ED9, _ts(oldAsset), _ts(newAsset))
end
Global.SetPtfxAssetOld_2New = Global.SetParticleFxOverride
Global.SetParticleFxAssetOldToNew = Global.SetParticleFxOverride

function Global.SetParticleFxShootoutBoat(p0)
	return _in(0x96EF97DAEB89BEF5, p0)
end

function Global.SetPauseMenuActive(toggle)
	return _in(0xDF47FC56C71569CF, toggle)
end

--- Toggles the light state for the pause menu ped in frontend menus.
-- This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
-- Example:
-- On: ![lights on](https://vespura.com/hi/i/2019-04-01_16-09_540ee_1015.png)
-- Off: ![lights off](https://vespura.com/hi/i/2019-04-01_16-10_8b5e7_1016.png)
-- @param state True enables the light, false disables the light.
function Global.SetPauseMenuPedLighting(state)
	return _in(0x3CA6050692BC61B0, state)
end
Global.N_0x3ca6050692bc61b0 = Global.SetPauseMenuPedLighting

--- Toggles the pause menu ped sleep state for frontend menus.
-- [Example GIF](https://vespura.com/hi/i/2019-04-01_15-51_8ed38_1014.gif)
-- @param state 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
function Global.SetPauseMenuPedSleepState(state)
	return _in(0xECF128344E9FF9F1, state)
end
Global.N_0xecf128344e9ff9f1 = Global.SetPauseMenuPedSleepState

--- accuracy = 0-100, 100 being perfectly accurate
-- ```
-- ```
-- NativeDB Return Type: void
function Global.SetPedAccuracy(ped, accuracy)
	return _in(0x7AEFB85C1D49DEB6, ped, accuracy, _r, _ri)
end

--- if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
-- If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
function Global.SetPedAiBlipForcedOn(ped, toggle)
	return _in(0x0C4BBF625CA98C4E, ped, toggle)
end
Global.N_0x0c4bbf625ca98c4e = Global.SetPedAiBlipForcedOn
Global.IsAiBlipAlwaysShown = Global.SetPedAiBlipForcedOn

--- Set a ped's AI blip type:
-- 1 - Yellow blip with no name
-- 2
function Global.SetPedAiBlipGangId(ped, gangId)
	return _in(0xE52B8E7F85D39A08, ped, gangId)
end
Global.N_0xe52b8e7f85d39a08 = Global.SetPedAiBlipGangId
Global.SetAiBlipType = Global.SetPedAiBlipGangId

--- If used with a Ped that has an AI blip as the first argument:
-- - if p1 is true, a view cone is displayed with the AI blip
function Global.SetPedAiBlipHasCone(ped, toggle)
	return _in(0x3EED80DFF7325CAA, ped, toggle)
end
Global.HideSpecialAbilityLockonOperation = Global.SetPedAiBlipHasCone

--- Previously named _0x97C65887D4B37FA9.
-- Sets the maximum view distance for the AI BIP
function Global.SetPedAiBlipNoticeRange(ped, range)
	return _in(0x97C65887D4B37FA9, ped, range)
end
Global.N_0x97c65887d4b37fa9 = Global.SetPedAiBlipNoticeRange
Global.SetAiBlipMaxDistance = Global.SetPedAiBlipNoticeRange

function Global.SetPedAiBlipSprite(ped, spriteId)
	return _in(0xFCFACD0DB9D7A57D, ped, spriteId)
end
Global.N_0xfcfacd0db9d7a57d = Global.SetPedAiBlipSprite

--- value ranges from 0 to 3.
function Global.SetPedAlertness(ped, value)
	return _in(0xDBA71115ED9941A6, ped, value)
end

function Global.SetPedAllowVehiclesOverride(ped, toggle)
	return _in(0x3C028C636A414ED9, ped, toggle)
end

function Global.SetPedAllowedToDuck(ped, toggle)
	return _in(0xDA1F1B7BE1A8766F, ped, toggle)
end

--- ```
-- stance:
-- 0 = idle
-- 1 = walk
-- 2 = running
-- p5 = usually set to true
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetPedAlternateMovementAnim(ped, stance, animDictionary, animationName, p4, p5)
	return _in(0x90A43CC281FFAB46, ped, stance, _ts(animDictionary), _ts(animationName), p4, p5)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.SetPedAlternateWalkAnim(ped, animDict, animName, p3, p4)
	return _in(0x6C60394CB4F75E9A, ped, _ts(animDict), _ts(animName), p3, p4)
end

--- NativeDB Added Parameter 4: BOOL p3
function Global.SetPedAmmo(ped, weaponHash, ammo)
	return _in(0x14E56BC5B5DB6A19, ped, _ch(weaponHash), ammo)
end

function Global.SetPedAmmoByType(ped, ammoType, ammo)
	return _in(0x5FD1E1F011E76D7E, ped, ammoType, ammo)
end

function Global.SetPedAmmoToDrop(ped, ammo)
	return _in(0xA4EFEF9440A5B0EF, ped, ammo)
end

function Global.SetPedAngledDefensiveArea(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xC7F76DF27A5045A1, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- Sets the armor of the specified ped.
-- ped: The Ped to set the armor of.
-- amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
function Global.SetPedArmour(ped, amount)
	return _in(0xCEA04D83135264CC, ped, amount)
end

--- Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
function Global.SetPedAsCop(ped, toggle)
	return _in(0xBB03C38DD3FB7FFD, ped, toggle)
end

function Global.SetPedAsEnemy(ped, toggle)
	return _in(0x02A0C9720B854BFA, ped, toggle)
end

function Global.SetPedAsGroupLeader(ped, groupId)
	return _in(0x2A7819605465FBCE, ped, groupId)
end

function Global.SetPedAsGroupMember(ped, groupId)
	return _in(0x9F3480FE65DB31B5, ped, groupId)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function Global.SetPedAsNoLongerNeeded(ped)
	return _in(0x2595DD4236549CE3, _ii(ped) --[[ may be optional ]])
end

function Global.SetPedBlendFromParents(ped, father, mother, fathersSide, mothersSide)
	return _in(0x137BBD05230DB22D, ped, father, mother, fathersSide, mothersSide)
end

function Global.SetPedBlocksPathingWhenDead(ped, p1)
	return _in(0x576594E8D64375E2, ped, p1)
end
Global.N_0x576594e8d64375e2 = Global.SetPedBlocksPathingWhenDead

function Global.SetPedBoundsOrientation(ped, p1, p2, p3, p4, p5)
	return _in(0x4F5F651ACCC9C4CF, ped, p1, p2, p3, p4, p5)
end

function Global.SetPedCanArmIk(ped, toggle)
	return _in(0x6C3B4D6D13B4C841, ped, toggle)
end

function Global.SetPedCanBeDraggedOut(ped, toggle)
	return _in(0xC1670E958EEE24E5, ped, toggle)
end

--- 0 = can (bike)
-- 1 = can't (bike)
-- 2 = unk
-- 3 = unk
function Global.SetPedCanBeKnockedOffVehicle(ped, state)
	return _in(0x7A6535691B477C48, ped, state)
end

function Global.SetPedCanBeShotInVehicle(ped, toggle)
	return _in(0xC7EF1BA83230BA07, ped, toggle)
end

function Global.SetPedCanBeTargetedWhenInjured(ped, toggle)
	return _in(0x638C03B0F9878F57, ped, toggle)
end

function Global.SetPedCanBeTargetedWithoutLos(ped, toggle)
	return _in(0x4328652AE5769C71, ped, toggle)
end

function Global.SetPedCanBeTargetted(ped, toggle)
	return _in(0x63F58F7C80513AAD, ped, toggle)
end

function Global.SetPedCanBeTargettedByPlayer(ped, player, toggle)
	return _in(0x66B57B72E0836A76, ped, player, toggle)
end

function Global.SetPedCanBeTargettedByTeam(ped, team, toggle)
	return _in(0xBF1CA77833E58F2C, ped, team, toggle)
end

--- It simply makes the said ped to cower behind cover object(wall, desk, car)
-- Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
function Global.SetPedCanCowerInCover(ped, toggle)
	return _in(0xCB7553CDCEF4A735, ped, toggle)
end

function Global.SetPedCanEvasiveDive(ped, toggle)
	return _in(0x6B7A646C242A7059, ped, toggle)
end

function Global.SetPedCanHeadIk(ped, toggle)
	return _in(0xC11C18092C5530DC, ped, toggle)
end

function Global.SetPedCanLegIk(ped, toggle)
	return _in(0x73518ECE2485412B, ped, toggle)
end

function Global.SetPedCanPeekInCover(ped, toggle)
	return _in(0xC514825C507E3736, ped, toggle)
end

function Global.SetPedCanPlayAmbientAnims(ped, toggle)
	return _in(0x6373D1349925A70E, ped, toggle)
end

function Global.SetPedCanPlayAmbientBaseAnims(ped, toggle)
	return _in(0x0EB0585D15254740, ped, toggle)
end

--- Appears only in fm_mission_controller and used only 3 times.
-- ped was always PLAYER_PED_ID()
-- p1 was always true
-- p2 was always true
function Global.SetPedCanPlayAmbientIdles(ped, p1, p2)
	return _in(0x8FD89A6240813FD0, ped, p1, p2)
end
Global.N_0x8fd89a6240813fd0 = Global.SetPedCanPlayAmbientIdles

function Global.SetPedCanPlayGestureAnims(ped, toggle)
	return _in(0xBAF20C5432058024, ped, toggle)
end

function Global.SetPedCanPlayInjuredAnims(ped, p1)
	return _in(0x33A60D8BDD6E508C, ped, p1)
end
Global.N_0x33a60d8bdd6e508c = Global.SetPedCanPlayInjuredAnims

--- p2 usually 0
function Global.SetPedCanPlayVisemeAnims(ped, toggle, p2)
	return _in(0xF833DDBA3B104D43, ped, toggle, p2)
end

function Global.SetPedCanRagdoll(ped, toggle)
	return _in(0xB128377056A54E2A, ped, toggle)
end

function Global.SetPedCanRagdollFromPlayerImpact(ped, toggle)
	return _in(0xDF993EE5E90ABA25, ped, toggle)
end

function Global.SetPedCanSmashGlass(ped, p1, p2)
	return _in(0x1CCE141467FF42A2, ped, p1, p2)
end

function Global.SetPedCanSwitchWeapon(ped, toggle)
	return _in(0xED7F7EFE9FABF340, ped, toggle)
end

--- This only will teleport the ped to the group leader if the group leader teleports (sets coords).
-- Only works in singleplayer
function Global.SetPedCanTeleportToGroupLeader(pedHandle, groupHandle, toggle)
	return _in(0x2E2F4240B3F24647, pedHandle, groupHandle, toggle)
end

function Global.SetPedCanTorsoIk(ped, toggle)
	return _in(0xF2B7106D37947CE0, ped, toggle)
end

function Global.SetPedCanTorsoReactIk(ped, p1)
	return _in(0xF5846EDB26A98A24, ped, p1)
end
Global.N_0xf5846edb26a98a24 = Global.SetPedCanTorsoReactIk

function Global.SetPedCanTorsoVehicleIk(ped, p1)
	return _in(0x6647C5F6F5792496, ped, p1)
end
Global.N_0x6647c5f6f5792496 = Global.SetPedCanTorsoVehicleIk

function Global.SetPedCanUseAutoConversationLookat(ped, toggle)
	return _in(0xEC4686EC06434678, ped, toggle)
end

--- Overrides the ped's collision capsule radius for the current tick.
-- Must be called every tick to be effective.
-- Setting this to 0.001 will allow warping through some objects.
function Global.SetPedCapsule(ped, value)
	return _in(0x364DF566EC833DE2, ped, value)
end

function Global.SetPedChanceOfFiringBlanks(ped, xBias, yBias)
	return _in(0x8378627201D5497D, ped, xBias, yBias)
end

function Global.SetPedClothPackageIndex(ped, p1)
	return _in(0x78C4E9961DB3EB5B, ped, p1)
end
Global.N_0x78c4e9961db3eb5b = Global.SetPedClothPackageIndex

function Global.SetPedClothProne(p0, p1)
	return _in(0x82A3D6D9CC2CB8E3, p0, p1)
end
Global.N_0x82a3d6d9cc2cb8e3 = Global.SetPedClothProne

--- 100 would equal attack
-- less then 50ish would mean run away
-- Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:
-- 0: CA_Poor
-- 1: CA_Average
-- 2: CA_Professional
-- Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.
function Global.SetPedCombatAbility(ped, p1)
	return _in(0xC7622C0D36B2FDA8, ped, p1)
end

--- These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
-- So far, these are the equivalents found:
-- enum CombatAttributes
-- {
-- BF_CanUseCover = 0,
-- BF_CanUseVehicles = 1,
-- BF_CanDoDrivebys = 2,
-- BF_CanLeaveVehicle = 3,
-- BF_CanFightArmedPedsWhenNotArmed = 5,
-- BF_CanTauntInVehicle = 20,
-- BF_AlwaysFight = 46,
-- BF_IgnoreTrafficWhenDriving = 52,
-- BF_FreezeMovement = 292,
-- BF_PlayerCanUseFiringWeapons = 1424
-- };
-- 8 = ?
-- 9 = ?
-- 13 = ?
-- 14 ?
-- Research thread: gtaforums.com/topic/833391-researchguide-combat-behaviour-flags/
function Global.SetPedCombatAttributes(ped, attributeIndex, enabled)
	return _in(0x9F7794730795E019, ped, attributeIndex, enabled)
end

--- 0 - Stationary (Will just stand in place)
-- 1 - Defensive (Will try to find cover and very likely to blind fire)
-- 2 - Offensive (Will attempt to charge at enemy but take cover as well)
-- 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
function Global.SetPedCombatMovement(ped, combatMovement)
	return _in(0x4D9CA1009AFBD057, ped, combatMovement)
end

--- Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described as AttackRange in combatbehaviour.meta:
-- 0: CR_Near
-- 1: CR_Medium
-- 2: CR_Far
function Global.SetPedCombatRange(ped, p1)
	return _in(0x3C606747B23E497B, ped, p1)
end

--- This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
-- ### MP Freemode list of components
-- **0**: Face
-- **1**: Mask
-- **2**: Hair
-- **3**: Torso
-- **4**: Leg
-- **5**: Parachute / bag
-- **6**: Shoes
-- **7**: Accessory
-- **8**: Undershirt
-- **9**: Kevlar
-- **10**: Badge
-- **11**: Torso 2
-- ### Related and useful natives
-- [GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS](#_0x27561561732A7842)
-- [GET_NUMBER_OF_PED_TEXTURE_VARIATIONS](#_0x8F7156A3142A6BAD)
-- [List of component/props ID](gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
-- @param ped The ped handle.
-- @param componentId The component that you want to set.
-- @param drawableId The drawable id that is going to be set.
-- @param textureId The texture id of the drawable.
-- @param paletteId 0 to 3.
function Global.SetPedComponentVariation(ped, componentId, drawableId, textureId, paletteId)
	return _in(0x262B14F48D29DE80, ped, componentId, drawableId, textureId, paletteId)
end

--- Research help : pastebin.com/fPL1cSwB
-- New items added with underscore as first char
-- -----------------------------------------------------------------------
-- enum PedConfigFlags
-- {
-- PED_FLAG_CAN_FLY_THRU_WINDSCREEN = 32,
-- PED_FLAG_DIES_BY_RAGDOLL = 33,
-- _PED_FLAG_PUT_ON_MOTORCYCLE_HELMET = 35,
-- PED_FLAG_NO_COLLISION = 52,
-- _PED_FLAG_IS_SHOOTING = 58,
-- _PED_FLAG_IS_ON_GROUND = 60,
-- PED_FLAG_NO_COLLIDE = 62,
-- PED_FLAG_DEAD = 71,
-- PED_FLAG_IS_SNIPER_SCOPE_ACTIVE = 72,
-- PED_FLAG_SUPER_DEAD = 73,
-- _PED_FLAG_IS_IN_AIR = 76,
-- PED_FLAG_IS_AIMING = 78,
-- PED_FLAG_DRUNK = 100,
-- _PED_FLAG_IS_NOT_RAGDOLL_AND_NOT_PLAYING_ANIM = 104,
-- PED_FLAG_NO_PLAYER_MELEE = 122,
-- PED_FLAG_NM_MESSAGE_466 = 125,
-- PED_FLAG_INJURED_LIMP = 166,
-- PED_FLAG_INJURED_LIMP_2 = 170,
-- _PED_FLAG_DISABLE_SHUFFLING_TO_DRIVER_SEAT = 184,
-- PED_FLAG_INJURED_DOWN = 187,
-- PED_FLAG_SHRINK = 223,
-- PED_FLAG_MELEE_COMBAT = 224,
-- _PED_FLAG_IS_ON_STAIRS = 253,
-- _PED_FLAG_HAS_ONE_LEG_ON_GROUND = 276,
-- PED_FLAG_NO_WRITHE = 281,
-- PED_FLAG_FREEZE = 292,
-- PED_FLAG_IS_STILL = 301,
-- PED_FLAG_NO_PED_MELEE = 314,
-- _PED_SWITCHING_WEAPON = 331,
-- PED_FLAG_ALPHA = 410,
-- _PED_FLAG_DISABLE_STARTING_VEH_ENGINE = 429,
-- };
-- (*) When flagId is set to 33 and the bool value to true, peds will die by starting ragdoll, so you should set this flag to false when you resurrect a ped.
-- When flagId is set to 62 and the boolvalue to false this happens: Ped is taken out of vehicle and can't get back in when jacking their empty vehicle. If in a plane it falls from the sky and crashes. Sometimes peds vehicle continue to drive the route without its driver who's running after.
-- (*)
-- JUMPING CHANGES  60,61,104 TO FALSE
-- BEING ON WATER CHANGES 60,61 TO FALSE AND 65,66,168 TO TRUE
-- FALLING CHANGES 60,61,104,276 TO FALSE AND TO 76 TRUE
-- DYING CHANGES 60,61,104,276* TO FALSE AND (NONE) TO TRUE
-- DYING MAKES 60,61,104 TO FALSE
-- BEING IN A CAR CHANGES 60,79,104 TO FALSE AND 62 TO TRUE
-- (*)Maximum value for flagId is 0x1AA (426) in b944.
-- ID 0xF0 (240) appears to be a special flag which is handled different compared to the others IDs.
function Global.SetPedConfigFlag(ped, flagId, value)
	return _in(0x1913FE4CBF41C463, ped, flagId, value)
end

--- teleports ped to coords along with the vehicle ped is in
function Global.SetPedCoordsKeepVehicle(ped, posX, posY, posZ)
	return _in(0x9AFEFF481A85AB2E, ped, posX, posY, posZ)
end

function Global.SetPedCoordsNoGang(ped, posX, posY, posZ)
	return _in(0x87052FE446E07247, ped, posX, posY, posZ)
end

--- Found in the b617d scripts:
-- PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
function Global.SetPedCoverClipsetOverride(ped, p1)
	return _in(0x9DBA107B4937F809, ped, _ts(p1))
end
Global.N_0x9dba107b4937f809 = Global.SetPedCoverClipsetOverride

--- p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
function Global.SetPedCowerHash(ped, p1)
	return _in(0xA549131166868ED3, ped, _ts(p1))
end

--- Has 5 parameters since latest patches.
function Global.SetPedCurrentWeaponVisible(ped, visible, deselectWeapon, p3, p4)
	return _in(0x0725A4CCFDED9A70, ped, visible, deselectWeapon, p3, p4)
end

--- Sets Ped Default Clothes
function Global.SetPedDefaultComponentVariation(ped)
	return _in(0x45EEE61580806D63, ped)
end

function Global.SetPedDefensiveAreaAttachedToPed(ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0x4EF47FE21698A8B6, ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

function Global.SetPedDefensiveAreaDirection(ped, p1, p2, p3, p4)
	return _in(0x413C6C763A4AFFAD, ped, p1, p2, p3, p4)
end

function Global.SetPedDefensiveSphereAttachedToPed(ped, target, xOffset, yOffset, zOffset, radius, p6)
	return _in(0xF9B8F91AAD3B953E, ped, target, xOffset, yOffset, zOffset, radius, p6)
end
Global.N_0xf9b8f91aad3b953e = Global.SetPedDefensiveSphereAttachedToPed

function Global.SetPedDefensiveSphereAttachedToVehicle(ped, target, xOffset, yOffset, zOffset, radius, p6)
	return _in(0xE4723DB6E736CCFF, ped, target, xOffset, yOffset, zOffset, radius, p6)
end
Global.N_0xe4723db6e736ccff = Global.SetPedDefensiveSphereAttachedToVehicle

--- • Usage
-- → Use this native inside a looped function.
-- → Values:
-- → 0.0 = no peds on streets
-- → 1.0 = normal peds on streets
function Global.SetPedDensityMultiplierThisFrame(multiplier)
	return _in(0x95E3D6257B166CF2, multiplier)
end

function Global.SetPedDesiredHeading(ped, heading)
	return _in(0xAA5A7ECE2AA8FE70, ped, heading)
end

function Global.SetPedDesiredMoveBlendRatio(ped, p1)
	return _in(0x1E982AC8716912C5, ped, p1)
end

function Global.SetPedDiesInSinkingVehicle(ped, toggle)
	return _in(0xD718A22995E2B4BC, ped, toggle)
end

function Global.SetPedDiesInVehicle(ped, toggle)
	return _in(0x2A30922C90C9B42C, ped, toggle)
end

function Global.SetPedDiesInWater(ped, toggle)
	return _in(0x56CEF0AC79073BDE, ped, toggle)
end

function Global.SetPedDiesInstantlyInWater(ped, toggle)
	return _in(0xEEB64139BA29A7CF, ped, toggle)
end

--- NativeDB Return Type: void
function Global.SetPedDiesWhenInjured(ped, toggle)
	return _in(0x5BA7919BED300023, ped, toggle, _r, _ri)
end

function Global.SetPedDriveByClipsetOverride(ped, clipset)
	return _in(0xED34AB6C5CB36520, ped, _ts(clipset))
end

--- [16/06/2017 by ins1de] :
-- Drops the weapon object from selected peds and turns it into a pickup.
-- Offset defines the next position of the weapon, ammo count is the stored ammo in the pickup (if ammoCount == 0, pickup won't be created)
-- Default offset values (freemode.c):
-- if (is_ped_walking(player_ped_id()))
-- {
-- vVar1 = {0.6f, 4.7f, -0.1f};
-- }
-- else if (is_ped_sprinting(player_ped_id()))
-- {
-- vVar1 = {0.6f, 5.7f, -0.1f};
-- }
-- else if (is_ped_running(player_ped_id()))
-- {
-- vVar1 = {0.6f, 4.7f, -0.1f};
-- }
-- else
-- {
-- vVar1 = {0.4f, 4.7f, -0.1f};
-- }
function Global.SetPedDropsInventoryWeapon(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount)
	return _in(0x208A1888007FC0E6, ped, _ch(weaponHash), xOffset, yOffset, zOffset, ammoCount)
end

function Global.SetPedDropsWeapon(ped)
	return _in(0x6B7513D9966FBEC0, ped)
end

function Global.SetPedDropsWeaponsWhenDead(ped, toggle)
	return _in(0x476AE72C1D19D1A8, ped, toggle)
end

--- This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
function Global.SetPedDucking(ped, toggle)
	return _in(0x030983CA930B692D, ped, toggle)
end

--- NativeDB Return Type: void
function Global.SetPedEnableWeaponBlocking(ped, toggle)
	return _in(0x97A790315D3831FD, ped, toggle, _r, _ri)
end

--- Something related to the environmental effects natives.
-- In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
function Global.SetPedEnveffColorModulator(ped, r, g, b)
	return _in(0xD69411AA0CEBF9E9, ped, r, g, b)
end
Global.N_0xd69411aa0cebf9e9 = Global.SetPedEnveffColorModulator

--- Values look to be between 0.0 and 1.0
-- From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
-- You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
function Global.SetPedEnveffScale(ped, value)
	return _in(0xBF29516833893561, ped, value)
end

--- Used for freemode (online) characters.
-- For some reason, the scripts use a rounded float for the index.
function Global.SetPedEyeColor(ped, index)
	return _in(0x50B56988B170AFDF, ped, index)
end

--- Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.
-- Index can be 0
-- Edit:---->Thanks to the first user.
-- Enum Face_Feature
-- Nose_Width
-- Nose_Peak_Hight
-- Nose_Peak_Lenght
-- Nose_Bone_High
-- Nose_Peak_Lowering
-- Nose_Bone_Twist
-- EyeBrown_High
-- EyeBrown_Forward
-- Cheeks_Bone_High
-- Cheeks_Bone_Width
-- Cheeks_Width
-- Eyes_Openning
-- Lips_Thickness
-- Jaw_Bone_Width 'Bone size to sides
-- Jaw_Bone_Back_Lenght 'Bone size to back
-- Chimp_Bone_Lowering 'Go Down
-- Chimp_Bone_Lenght 'Go forward
-- Chimp_Bone_Width
-- Chimp_Hole
-- Neck_Thikness
-- End Enum
-- Example in VB.Net
-- Public Shared Sub SET_PED_FACE_FEATURE(FreemodePed As Ped, Index As Face_Feature, Scale As Single)
-- Native.Function.Call(Native.Hash._SET_PED_FACE_FEATURE, FreemodePed, Index, Scale)
-- End Sub
function Global.SetPedFaceFeature(ped, index, scale)
	return _in(0x71A5C1DBA060049E, ped, index, scale)
end

--- FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
-- FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
-- FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
-- FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
-- FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
-- FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
-- FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
-- FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
-- FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
-- FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
-- FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
-- FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
-- FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
-- FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
-- FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
-- FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
-- if anyone is interested firing pattern info: pastebin.com/Px036isB
function Global.SetPedFiringPattern(ped, patternHash)
	return _in(0x9AC577F5A12AD8A9, ped, _ch(patternHash))
end

--- Bool probably has something to do with vehicles, maybe if the ped can use vehicle to flee?
-- Values used as attributes are those in sequence of powers of two, 1, 2, 4, 8, 16, 32, 64.... 65536.
-- jedijosh920: Setting attribute "2" to true will make the ped steal a vehicle.
function Global.SetPedFleeAttributes(ped, attributeFlags, enable)
	return _in(0x70A2D1137C8ED7C9, ped, attributeFlags, enable)
end

--- p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
-- p2 is always true.
function Global.SetPedGadget(ped, gadgetHash, p2)
	return _in(0xD0D7B1E680ED4A1A, ped, _ch(gadgetHash), p2)
end

function Global.SetPedGeneratesDeadBodyEvents(ped, toggle)
	return _in(0x7FB17BA2E7DECA5B, ped, toggle)
end

--- From the scripts:
-- PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
-- "ANIM_GROUP_GESTURE_MISS_FRA0");
-- PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
-- "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
function Global.SetPedGestureGroup(ped, animGroupGesture)
	return _in(0xDDF803377F94AAA8, ped, _ts(animGroupGesture))
end

function Global.SetPedGetOutUpsideDownVehicle(ped, toggle)
	return _in(0xBC0ED94165A48BC2, ped, toggle)
end

--- enable or disable the gravity of a ped
-- Examples:
-- PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);
-- PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);
function Global.SetPedGravity(ped, toggle)
	return _in(0x9FF447B6B6AD960A, ped, toggle)
end

function Global.SetPedGroupMemberPassengerIndex(ped, index)
	return _in(0x0BDDB8D9EC6BCF3C, ped, index)
end

--- Used for freemode (online) characters.
function Global.SetPedHairColor(ped, colorID, highlightColorID)
	return _in(0x4CFFC65454C93A49, ped, colorID, highlightColorID)
end

--- Previously named _0xD30C50DF888D58B5, this native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
-- See gtaforums.com/topic/884370-native-research-ai-blips for further information.
-- Note: Everything said at the bottom is only valid for persistant peds, as AI blips seem to behave differently for non-persistant peds.
-- • To create an AI blip, you must use UI::0xD30C50DF888D58B5() (_SET_PED_ENEMY_AI_BLIP). It has two arguments: "ped" which is the ped you want to AI blip to be linked to, and "showViewCones" which needs to be true for AI blips to appear.
-- • To check if a ped has an AI blip, you can use UI::DOES_PED_HAVE_AI_BLIP(Ped ped), which returns a simple bool.
-- • By default, AI blips never disappear. If you want them to disappear when you're at a certain distance from a ped, you can use UI::0x97C65887D4B37FA9(Ped ped, float distance) (_SET_AI_BLIP_MAX_DISTANCE)
-- • By default, the blip only appears when you're in combat with the specified ped. If you want it to be always displayed, you can use UI::x0C4BBF625CA98C4E() (_IS_AI_BLIP_ALWAYS_SHOWN). It also has two arguments: "ped", and a flag. If the flag is set to true, the blip will always be displayed. If it's set to false, the AI blip will have its default behaviour.
-- • By default, a view cone is displayed with the blip (basically a blue surface that represents the field of view of the ped, like in vanilla stealth missions). If you don't want it, you can disable it with UI::HIDE_SPECIAL_ABILITY_LOCKON_OPERATION(Ped ped, bool flag). If the flag is set to true, the view cone is displayed. If the flag is set to false, it is not.
-- • Finally, there's actually 3 types of AI blips:
-- 0 - the default, red, "enemy" blip
-- 1 - a weird, semi-transparent, nameless, yellow blip
-- 2 - the blue "friend" blip
-- You can change an AI blip's type with UI::0xE52B8E7F85D39A08(Ped ped, int type) (_SET_AI_BLIP_TYPE).
function Global.SetPedHasAiBlip(ped, hasCone)
	return _in(0xD30C50DF888D58B5, ped, hasCone)
end
Global.N_0xd30c50df888d58b5 = Global.SetPedHasAiBlip
Global.SetPedEnemyAiBlip = Global.SetPedHasAiBlip
Global.SetPedAiBlip = Global.SetPedHasAiBlip

--- Called in decompiled scripts as alternative to _SET_PED_ENEMY_AI_BLIP in an else, when the additional parameter p3 is not -1
function Global.SetPedHasAiBlipWithColor(ped, hasCone, color)
	return _in(0xB13DCB4C6FAAD238, ped, hasCone, color)
end
Global.N_0xb13dcb4c6faad238 = Global.SetPedHasAiBlipWithColor

--- The "shape" parameters control the shape of the ped's face. The "skin" parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
-- The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.
-- !!!Can someone add working example for this???
-- try this:
-- headBlendData headData;
-- _GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);
-- SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
-- , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);
-- For more info please refer to this topic.
-- gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
function Global.SetPedHeadBlendData(ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
	return _in(0x9414E18B9434C2FE, ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
end

--- OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
-- overlayID       Part                  Index, to disable
-- 0               Blemishes             0 - 23, 255
-- 1               Facial Hair           0 - 28, 255
-- 2               Eyebrows              0 - 33, 255
-- 3               Ageing                0 - 14, 255
-- 4               Makeup                0 - 74, 255
-- 5               Blush                 0 - 6, 255
-- 6               Complexion            0 - 11, 255
-- 7               Sun Damage            0 - 10, 255
-- 8               Lipstick              0 - 9, 255
-- 9               Moles/Freckles        0 - 17, 255
-- 10              Chest Hair            0 - 16, 255
-- 11              Body Blemishes        0 - 11, 255
-- 12              Add Body Blemishes    0 - 1, 255
function Global.SetPedHeadOverlay(ped, overlayID, index, opacity)
	return _in(0x48F44967FA05CC1E, ped, overlayID, index, opacity)
end

--- Used for freemode (online) characters.
-- ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
-- Called after SET_PED_HEAD_OVERLAY().
function Global.SetPedHeadOverlayColor(ped, overlayID, colorType, colorID, secondColorID)
	return _in(0x497BF74A7B9CB952, ped, overlayID, colorType, colorID, secondColorID)
end

function Global.SetPedHearingRange(ped, value)
	return _in(0x33A8F7F7D5F7F33C, ped, value)
end

function Global.SetPedHeatscaleOverride(p0, p1)
	return _in(0xC1F6EBF9A3D55538, p0, p1)
end
Global.N_0xc1f6ebf9a3d55538 = Global.SetPedHeatscaleOverride

function Global.SetPedHelmet(ped, canWearHelmet)
	return _in(0x560A43136EB58105, ped, canWearHelmet)
end

function Global.SetPedHelmetFlag(ped, helmetFlag)
	return _in(0xC0E78D5C2CE3EB25, ped, helmetFlag)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL p2
function Global.SetPedHelmetPropIndex(ped, propIndex)
	return _in(0x26D83693ED99291C, ped, propIndex)
end

function Global.SetPedHelmetTextureIndex(ped, textureIndex)
	return _in(0xF1550C4BD22582E2, ped, textureIndex)
end

function Global.SetPedHelmetUnk(ped, p1, p2, p3)
	return _in(0x3F7325574E41B44D, ped, p1, p2, p3)
end
Global.N_0x3f7325574e41b44d = Global.SetPedHelmetUnk

function Global.SetPedHighlyPerceptive(ped, toggle)
	return _in(0x52D59AB61DDC05DD, ped, toggle)
end
Global.N_0x52d59ab61ddc05dd = Global.SetPedHighlyPerceptive

function Global.SetPedIdRange(ped, value)
	return _in(0xF107E836A70DCE05, ped, value)
end

--- This native sets the glow intensity of illuminated clothing items.
-- This native does **NOT** need to be executed every tick.
-- This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
-- Glow intensity is a value between `0.0` and `1.0`.
-- In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
-- Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
-- Use [`GetPedIlluminatedClothingGlowIntensity`](#_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
-- Intensity: `1.0`:
-- ![](https://www.vespura.com/hi/i/2018-11-13_17-03_c2e23_229.png)
-- Intensity: `0.0`:
-- ![](https://www.vespura.com/hi/i/2018-11-13_17-03_35c33_230.png)
-- **Examples code result**:
-- ![](https://www.vespura.com/hi/i/2018-11-13_17-11_10199_232.gif)
-- (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13_17-11_10199_232.gif))
-- @param ped The ped to set the glow intensity on.
-- @param intensity The glow intensity, value between `0.0` and `1.0`.
function Global.SetPedIlluminatedClothingGlowIntensity(ped, intensity)
	return _in(0x4E90D746056E273D, ped, intensity)
end
Global.N_0x4e90d746056e273d = Global.SetPedIlluminatedClothingGlowIntensity

--- PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, GAMEPLAY::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, GAMEPLAY::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, GAMEPLAY::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, GAMEPLAY::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, GAMEPLAY::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(num3, GAMEPLAY::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
function Global.SetPedInVehicleContext(ped, context)
	return _in(0x530071295899A8C6, ped, _ch(context))
end

function Global.SetPedIncreasedAvoidanceRadius(ped)
	return _in(0x570389D1C3DE3C6B, ped)
end
Global.N_0x570389d1c3de3c6b = Global.SetPedIncreasedAvoidanceRadius

function Global.SetPedInfiniteAmmo(ped, toggle, weaponHash)
	return _in(0x3EDCB0505123623B, ped, toggle, _ch(weaponHash))
end

function Global.SetPedInfiniteAmmoClip(ped, toggle)
	return _in(0x183DADC6AA953186, ped, toggle)
end

--- Ped: The ped to warp.
-- vehicle: The vehicle to warp the ped into.
-- Seat_Index: [-1 is driver seat, -2 first free passenger seat]
-- Moreinfo of Seat Index
-- DriverSeat = -1
-- Passenger = 0
-- Left Rear = 1
-- RightRear = 2
function Global.SetPedIntoVehicle(ped, vehicle, seatIndex)
	return _in(0xF75B0D629E1C063D, ped, vehicle, seatIndex)
end

--- Sets the ped drunk sounds.  Only works with PLAYER_PED_ID
-- ====================================================
-- As mentioned above, this only sets the drunk sound to ped/player.
-- To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET
-- Below is an example
-- if (!Function.Call<bool>(Hash.HAS_ANIM_SET_LOADED, "move_m@drunk@verydrunk"))
-- {
-- Function.Call(Hash.REQUEST_ANIM_SET, "move_m@drunk@verydrunk");
-- }
-- Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, "move_m@drunk@verydrunk", 0x3E800000);
-- And to stop the effect use
-- RESET_PED_MOVEMENT_CLIPSET
function Global.SetPedIsDrunk(ped, toggle)
	return _in(0x95D2D383D5396B8A, ped, toggle)
end

function Global.SetPedKeepTask(ped, toggle)
	return _in(0x971D38760FBC02EF, ped, toggle)
end

--- "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
function Global.SetPedLegIkMode(ped, mode)
	return _in(0xC396F5B86FF9FEBD, ped, mode)
end

function Global.SetPedLodMultiplier(ped, multiplier)
	return _in(0xDC2C5C242AAC342B, ped, multiplier)
end

--- sets the maximum health of a ped
-- I think it's never been used in any script
function Global.SetPedMaxHealth(ped, value)
	return _in(0xF5F6378C4F3419D3, ped, value)
end

function Global.SetPedMaxMoveBlendRatio(ped, value)
	return _in(0x433083750C5E064A, ped, value)
end

function Global.SetPedMaxTimeInWater(ped, value)
	return _in(0x43C851690662113D, ped, value)
end

function Global.SetPedMaxTimeUnderwater(ped, value)
	return _in(0x6BA428C528D9E522, ped, value)
end

--- Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
function Global.SetPedMinGroundTimeForStungun(ped, ms)
	return _in(0xFA0675AB151073FA, ped, ms)
end

function Global.SetPedMinMoveBlendRatio(ped, value)
	return _in(0x01A898D26E2333DD, ped, value)
end

function Global.SetPedModelIsSuppressed(ped, toggle)
	return _in(0xE163A4BCE4DE6F11, ped, toggle)
end

--- Maximum possible amount of money on MP is 2000. ~JX
-- -----------------------------------------------------------------------------
-- Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
function Global.SetPedMoney(ped, amount)
	return _in(0xA9C8960E8684C1B5, ped, amount)
end

function Global.SetPedMotionBlur(ped, toggle)
	return _in(0x0A986918B102B448, ped, toggle)
end

function Global.SetPedMoveAnimsBlendOut(ped)
	return _in(0x9E8C908F41584ECD, ped)
end

--- Min: 0.00
-- Max: 10.00
-- Can be used in combo with fast run cheat.
-- When value is set to 10.00:
-- Sprinting without fast run cheat: 66 m/s
-- Sprinting with fast run cheat: 77 m/s
-- Needs to be looped!
-- Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
function Global.SetPedMoveRateOverride(ped, value)
	return _in(0x085BF80FA50A39D1, ped, value)
end

--- p2 is usually 1.0f
-- EDIT 12/24/16:
-- p2 does absolutely nothing no matter what the value is.
-- EDIT 08/16/17:
-- p2 is the time for a smooth changing to the new clipset.
-- List of movement clipsets:
-- Thanks to elsewhat for list.
-- "ANIM_GROUP_MOVE_BALLISTIC"
-- "ANIM_GROUP_MOVE_LEMAR_ALLEY"
-- "clipset@move@trash_fast_turn"
-- "FEMALE_FAST_RUNNER"
-- "missfbi4prepp1_garbageman"
-- "move_characters@franklin@fire"
-- "move_characters@Jimmy@slow@"
-- "move_characters@michael@fire"
-- "move_f@flee@a"
-- "move_f@scared"
-- "move_f@sexy@a"
-- "move_heist_lester"
-- "move_injured_generic"
-- "move_lester_CaneUp"
-- "move_m@bag"
-- "MOVE_M@BAIL_BOND_NOT_TAZERED"
-- "MOVE_M@BAIL_BOND_TAZERED"
-- "move_m@brave"
-- "move_m@casual@d"
-- "move_m@drunk@moderatedrunk"
-- "MOVE_M@DRUNK@MODERATEDRUNK"
-- "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
-- "MOVE_M@DRUNK@SLIGHTLYDRUNK"
-- "MOVE_M@DRUNK@VERYDRUNK"
-- "move_m@fire"
-- "move_m@gangster@var_e"
-- "move_m@gangster@var_f"
-- "move_m@gangster@var_i"
-- "move_m@JOG@"
-- "MOVE_M@PRISON_GAURD"
-- "MOVE_P_M_ONE"
-- "MOVE_P_M_ONE_BRIEFCASE"
-- "move_p_m_zero_janitor"
-- "move_p_m_zero_slow"
-- "move_ped_bucket"
-- "move_ped_crouched"
-- "move_ped_mop"
-- "MOVE_M@FEMME@"
-- "MOVE_F@FEMME@"
-- "MOVE_M@GANGSTER@NG"
-- "MOVE_F@GANGSTER@NG"
-- "MOVE_M@POSH@"
-- "MOVE_F@POSH@"
-- "MOVE_M@TOUGH_GUY@"
-- "MOVE_F@TOUGH_GUY@"
-- ~ NotCrunchyTaco
function Global.SetPedMovementClipset(ped, clipSet, p2)
	return _in(0xAF8A94EDE7712BEF, ped, _ts(clipSet), p2)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
-- *untested but char *name could also be a hash for a localized string
function Global.SetPedNameDebug(ped, name)
	return _in(0x98EFA132A4117BE1, ped, _ts(name))
end

function Global.SetPedNeverLeavesGroup(ped, toggle)
	return _in(0x3DBFC55D5C9BB447, ped, toggle)
end

--- The distance between these points, is the diagonal of a box (remember it's 3D).
function Global.SetPedNonCreationArea(x1, y1, z1, x2, y2, z2)
	return _in(0xEE01041D559983EA, x1, y1, z1, x2, y2, z2)
end

function Global.SetPedPanicExitScenario(ped, x, y, z)
	return _in(0xFE07FF6495D52E2A, ped, x, y, z, _r, _ri)
end
Global.N_0xfe07ff6495d52e2a = Global.SetPedPanicExitScenario

function Global.SetPedParachuteTintIndex(ped, tintIndex)
	return _in(0x333FC8DB079B7186, ped, tintIndex)
end

function Global.SetPedPathAvoidFire(ped, avoidFire)
	return _in(0x4455517B28441E60, ped, avoidFire)
end

function Global.SetPedPathCanDropFromHeight(ped, Toggle)
	return _in(0xE361C5C71C431A4F, ped, Toggle)
end

--- NativeDB Return Type: void
function Global.SetPedPathCanUseClimbovers(ped, Toggle)
	return _in(0x8E06A6FE76C9EFF4, ped, Toggle, _r, _ri)
end

--- NativeDB Return Type: void
function Global.SetPedPathCanUseLadders(ped, Toggle)
	return _in(0x77A5B103C87F476E, ped, Toggle, _r, _ri)
end

function Global.SetPedPathClimbCostModifier(ped, p1)
	return _in(0x88E32DB8C1A4AA4B, ped, p1)
end
Global.N_0x88e32db8c1a4aa4b = Global.SetPedPathClimbCostModifier

function Global.SetPedPathMayEnterWater(ped, mayEnterWater)
	return _in(0xF35425A4204367EC, ped, mayEnterWater)
end
Global.SetPedPathsWidthPlant = Global.SetPedPathMayEnterWater

function Global.SetPedPathPreferToAvoidWater(ped, avoidWater)
	return _in(0x38FE1EC73743793C, ped, avoidWater)
end

--- NativeDB Added Parameter 7: Any p6
function Global.SetPedPathsBackToOriginal(p0, p1, p2, p3, p4, p5)
	return _in(0xE04B48F2CC926253, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Added Parameter 8: Any p7
function Global.SetPedPathsInArea(x1, y1, z1, x2, y2, z2, unknown)
	return _in(0x34F060F4BF92E018, x1, y1, z1, x2, y2, z2, unknown)
end

--- p2 could be time. Only example in the decompiled scripts uses it as -1.
function Global.SetPedPinnedDown(ped, pinned, p2)
	return _in(0xAAD6D1ACF08F4612, ped, pinned, p2, _r, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.
-- ```
function Global.SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped, toggle)
	return _in(0x94D94BF1A75AED3D, ped, toggle)
end

function Global.SetPedPopulationBudget(p0)
	return _in(0x8C95333CFC3340F3, p0)
end

function Global.SetPedPreferredCoverSet(ped, itemSet)
	return _in(0x8421EB4DA7E391B9, ped, itemSet)
end
Global.N_0x8421eb4da7e391b9 = Global.SetPedPreferredCoverSet

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.SetPedPreloadPropData(ped, componentId, drawableId, TextureId)
	return _in(0x2B16A3BFF1FBCE49, ped, componentId, drawableId, TextureId, _r)
end
Global.N_0x2b16a3bff1fbce49 = Global.SetPedPreloadPropData
Global.IsPedPropValid = Global.SetPedPreloadPropData

--- from extreme3.c4
-- PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
-- p1 is probably componentId
function Global.SetPedPreloadVariationData(ped, slot, drawableId, textureId)
	return _in(0x39D55A620FCB6A3A, ped, slot, drawableId, textureId, _r, _ri)
end
Global.N_0x39d55a620fcb6a3a = Global.SetPedPreloadVariationData

--- This is only called once in the scripts.
-- sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
-- sub_1CA8("WORLD_HUMAN_SMOKING", 2);
-- PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
function Global.SetPedPrimaryLookat(ped, lookAt)
	return _in(0xCD17B554996A8D9E, ped, lookAt)
end

--- This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
-- ### MP Freemode list of props
-- **0**: Hat
-- **1**: Glass
-- **2**: Ear
-- **6**: Watch
-- **7**: Bracelet
-- ### Related and useful natives
-- [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#_0x5FAF9754E789FB47)
-- [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#_0xA6E7F1CEB523E171)
-- [List of component/props ID](gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
-- @param ped The ped handle.
-- @param componentId The component that you want to set.
-- @param drawableId The drawable id that is going to be set.
-- @param textureId The texture id of the drawable.
-- @param attach Attached or not.
function Global.SetPedPropIndex(ped, componentId, drawableId, textureId, attach)
	return _in(0x93376B65A266EB5F, ped, componentId, drawableId, textureId, attach)
end

--- NativeDB Return Type: void
function Global.SetPedRagdollForceFall(ped)
	return _in(0x01F6594B923B9251, ped, _r, _ri)
end

--- Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
function Global.SetPedRagdollOnCollision(ped, toggle)
	return _in(0xF0A4F1BBF4FA7497, ped, toggle)
end

--- p1 is always false in R* scripts.
-- Quick disassembly seems to indicate that p1 is unused.
-- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
-- ```
-- ```
-- NativeDB Parameter 1: int p1
function Global.SetPedRandomComponentVariation(ped, p1)
	return _in(0xC8A9481A01E63C28, ped, p1)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function Global.SetPedRandomProps(ped)
	return _in(0xC44AA05345C992C6, ped)
end

function Global.SetPedRelationshipGroupDefaultHash(ped, hash)
	return _in(0xADB3F206518799E8, ped, _ch(hash))
end

function Global.SetPedRelationshipGroupHash(ped, hash)
	return _in(0xC80A74AC829DDD92, ped, _ch(hash))
end

function Global.SetPedReserveParachuteTintIndex(ped, p1)
	return _in(0xE88DA0751C22A2AD, ped, p1)
end

--- PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
function Global.SetPedResetFlag(ped, flagId, doReset)
	return _in(0xC1E8A365BF3B29F2, ped, flagId, doReset)
end

--- Assigns some ambient voice to the ped.
function Global.SetPedScream(ped)
	return _in(0x40CF0D12D142A9E8, ped)
end
Global.N_0x40cf0d12d142a9e8 = Global.SetPedScream

--- This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models.
-- It works on freemode and player_\* models.
function Global.SetPedScubaGearVariation(ped)
	return _in(0x36C6984C3ED0C911, ped)
end
Global.N_0x36c6984c3ed0c911 = Global.SetPedScubaGearVariation

function Global.SetPedSeeingRange(ped, value)
	return _in(0xF29CF591C4BF6CEE, ped, value)
end

--- Only used once in the scripts
-- weapon::_0xB4C8D77C80C0421E(Local_888[3 /*33*/], -1082130432);
-- The code following this relates to manually triggering an RPG rocket (creating the object, the particle fx and sound)
function Global.SetPedShootOrdnanceWeapon(ped, p1)
	return _in(0xB4C8D77C80C0421E, ped, p1, _r, _ri)
end
Global.N_0xb4c8d77c80c0421e = Global.SetPedShootOrdnanceWeapon

--- shootRate 0-1000
function Global.SetPedShootRate(ped, shootRate)
	return _in(0x614DA022990752DC, ped, shootRate)
end

function Global.SetPedShootsAtCoord(ped, x, y, z, toggle)
	return _in(0x96A05E4FB321B1BA, ped, x, y, z, toggle)
end

function Global.SetPedSphereDefensiveArea(ped, x, y, z, radius, p5, p6)
	return _in(0x9D3151A373974804, ped, x, y, z, radius, p5, p6)
end

function Global.SetPedStayInVehicleWhenJacked(ped, toggle)
	return _in(0xEDF4079F9D54C9A1, ped, toggle)
end

--- p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
function Global.SetPedStealthMovement(ped, p1, action)
	return _in(0x88CBB5CEB96B7BD2, ped, p1, _ts(action))
end

function Global.SetPedSteersAroundObjects(ped, toggle)
	return _in(0x1509C089ADC208BF, ped, toggle)
end

function Global.SetPedSteersAroundPeds(ped, toggle)
	return _in(0x46F2193B3AD1D891, ped, toggle)
end

function Global.SetPedSteersAroundVehicles(ped, toggle)
	return _in(0xEB6FB9D48DDE23EC, ped, toggle)
end

function Global.SetPedStrafeClipset(ped, clipSet)
	return _in(0x29A28F3F8CF6D854, ped, _ts(clipSet))
end

--- ped cannot be headshot if this is set to false
function Global.SetPedSuffersCriticalHits(ped, toggle)
	return _in(0xEBD76F2359F190AC, ped, toggle)
end

--- Sweat is set to 100.0 or 0.0 in the decompiled scripts.
function Global.SetPedSweat(ped, sweat)
	return _in(0x27B0405F59637D1F, ped, sweat)
end

--- Speech related.
function Global.SetPedTalk(ped)
	return _in(0x4ADA3F19BE4A6047, ped)
end
Global.N_0x4ada3f19be4a6047 = Global.SetPedTalk

--- Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.
function Global.SetPedTargetLossResponse(ped, responseType)
	return _in(0x0703B9079823DA4A, ped, responseType)
end

function Global.SetPedToInformRespectedFriends(ped, radius, maxFriends)
	return _in(0x112942C6E708F70B, ped, radius, maxFriends)
end

function Global.SetPedToLoadCover(ped, toggle)
	return _in(0x332B562EEDA62399, ped, toggle)
end

--- time1- Time Ped is in ragdoll mode(ms)
-- time2- Unknown time, in milliseconds
-- ragdollType-
-- 0 : Normal ragdoll
-- 1 : Falls with stiff legs/body
-- 2 : Narrow leg stumble(may not fall)
-- 3 : Wide leg stumble(may not fall)
-- p4, p5, p6- No idea. In R*'s scripts they are usually either "true, true, false" or "false, false, false".
-- EDIT 3/11/16: unclear what 'mircoseconds' mean-- a microsecond is 1000x a ms, so time2 must be 1000x time1?  more testing needed.  -sob
-- Edit Mar 21, 2017: removed part about time2 being the microseconds version of time1. this just isn't correct. time2 is in milliseconds, and time1 and time2 don't seem to be connected in any way.
function Global.SetPedToRagdoll(ped, time1, time2, ragdollType, p4, p5, p6)
	return _in(0xAE99FB955581844A, ped, time1, time2, ragdollType, p4, p5, p6, _r)
end

--- Return variable is never used in R*'s scripts.
-- Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
-- x, y, and z are coordinates, most likely to where the ped will fall.
-- p7 is probably the force of the fall, but untested, so I left the variable name the same.
-- p8 to p13 are always 0f in R*'s scripts.
-- (Simplified) Example of the usage of the function from R*'s scripts:
-- ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);
function Global.SetPedToRagdollWithFall(ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xD76632D99E4966C8, ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13, _r)
end

--- p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
function Global.SetPedUsingActionMode(ped, p1, p2, action)
	return _in(0xD75ACCF5E0FB5367, ped, p1, p2, _ts(action))
end

function Global.SetPedVehicleForcedSeatUsage(ped, vehicle, seatIndex, flags)
	return _in(0x952F06BEECD775CC, ped, vehicle, seatIndex, flags)
end
Global.N_0x952f06beecd775cc = Global.SetPedVehicleForcedSeatUsage

function Global.SetPedVisualFieldCenterAngle(ped, angle)
	return _in(0x3B6405E8AB34A907, ped, angle)
end

function Global.SetPedVisualFieldMaxAngle(ped, value)
	return _in(0x70793BDCA1E854D4, ped, value)
end

--- This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
function Global.SetPedVisualFieldMaxElevationAngle(ped, angle)
	return _in(0x78D0B67629D75856, ped, angle)
end

function Global.SetPedVisualFieldMinAngle(ped, value)
	return _in(0x2DB492222FB21E26, ped, value)
end

--- This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
function Global.SetPedVisualFieldMinElevationAngle(ped, angle)
	return _in(0x7A276EB2C224D70F, ped, angle)
end

function Global.SetPedVisualFieldPeripheralRange(ped, range)
	return _in(0x9C74B0BC831B753A, ped, range)
end

--- From the scripts:
-- AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("PAIGE_PVG"));
-- AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("TALINA_PVG"));
-- AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
-- AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
function Global.SetPedVoiceGroup(ped, voiceGroupHash)
	return _in(0x7CDC8C3B89F661B3, ped, _ch(voiceGroupHash))
end
Global.N_0x7cdc8c3b89f661b3 = Global.SetPedVoiceGroup

function Global.SetPedWaypointRouteOffset(p0, p1, p2, p3)
	return _in(0xED98E10B0AFCE4B4, p0, p1, p2, p3, _r, _ri)
end

--- NativeDB Parameter 1: Hash weaponHash
-- NativeDB Parameter 2: Hash camoComponentHash
function Global.SetPedWeaponLiveryColor(ped, weaponHash, camoComponentHash, colorIndex)
	return _in(0x9FE5633880ECD8ED, ped, weaponHash, camoComponentHash, colorIndex)
end
Global.N_0x9fe5633880ecd8ed = Global.SetPedWeaponLiveryColor

function Global.SetPedWeaponMovementClipset(ped, clipSet)
	return _in(0x2622E35B77D3ACA2, ped, _ts(clipSet))
end

--- tintIndex can be the following:
-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
function Global.SetPedWeaponTintIndex(ped, weaponHash, tintIndex)
	return _in(0x50969B9B89ED5738, ped, _ch(weaponHash), tintIndex)
end

--- combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
function Global.SetPedWetnessEnabledThisFrame(ped)
	return _in(0xB5485E4907B53019, ped)
end

--- It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
function Global.SetPedWetnessHeight(ped, height)
	return _in(0x44CB6447D2571AA0, ped, height)
end

function Global.SetPickupGenerationRangeMultiplier(multiplier)
	return _in(0x318516E02DE3ECE2, multiplier)
end
Global.N_0x318516e02de3ece2 = Global.SetPickupGenerationRangeMultiplier

--- duration specifies the time until the next respawn, in ms. (known values: 600000).
-- Usage Example:
-- Pickup pickup = OBJECT::CREATE_PICKUP_ROTATE(...);
-- OBJECT::SET_PICKUP_REGENERATION_TIME(pickup, 600000); // 10mins
function Global.SetPickupRegenerationTime(pickup, duration)
	return _in(0x78015C9B4B3ECC9D, pickup, duration)
end

--- This native sets the turbulence multiplier. It only works for planes.
-- 0.0 = no turbulence at all.
-- 1.0 = heavy turbulence.
-- Works by just calling it once, does not need to be called every tick.
-- @param vehicle The plane to set the multiplier for
-- @param multiplier The turbulence multiplier. Value between 0.0 and 1.0
function Global.SetPlaneTurbulenceMultiplier(vehicle, multiplier)
	return _in(0xAD2D28A1AFDFF131, vehicle, multiplier)
end
Global.N_0xad2d28a1afdff131 = Global.SetPlaneTurbulenceMultiplier

--- NativeDB Introduced: v1290
-- @param vehicle :
-- @param direction :
function Global.SetPlaneVtolAnimationDisabled(vehicle, direction)
	return _in(0xCE2B43770B655F8F, vehicle, direction)
end

function Global.SetPlaybackSpeed(vehicle, speed)
	return _in(0x6683AB880E427778, vehicle, speed)
end

function Global.SetPlaybackToUseAi(vehicle, flag)
	return _in(0xA549C3B37EA28131, vehicle, flag)
end

function Global.SetPlaybackToUseAiTryToRevertBackLater(p0, p1, p2, p3)
	return _in(0x6E63860BBB190730, p0, p1, p2, p3)
end

function Global.SetPlayerAirDefenseZoneFlag(player, zoneId, enable)
	return _in(0xECDC202B25E5CF48, player, zoneId, enable)
end
Global.N_0xecdc202b25e5cf48 = Global.SetPlayerAirDefenseZoneFlag

function Global.SetPlayerAngry(ped, toggle)
	return _in(0xEA241BB04110F091, ped, toggle)
end

--- Sets the position of the arrow icon representing the player on both the minimap and world map.
-- Too bad this wouldn't work over the network (obviously not). Could spoof where we would be.
function Global.SetPlayerBlipPositionThisFrame(x, y)
	return _in(0x77E2DD177910E1CF, x, y)
end

--- NativeDB Parameter 0: Player player
-- NativeDB Parameter 1: BOOL state
function Global.SetPlayerBluetoothState(player, state)
	return _in(0x5DC40A8869C22141, player, state)
end
Global.N_0x5dc40a8869c22141 = Global.SetPlayerBluetoothState

--- Sets whether this player can be hassled by gangs.
function Global.SetPlayerCanBeHassledByGangs(player, toggle)
	return _in(0xD5E460AD7020A246, player, toggle)
end

--- Set whether this player should be able to do drive-bys.
-- "A drive-by is when a ped is aiming/shooting from vehicle. This includes middle finger taunts. By setting this value to false I confirm the player is unable to do all that. Tested on tick."
function Global.SetPlayerCanDoDriveBy(player, toggle)
	return _in(0x6E8834B52EC20C77, player, toggle)
end

function Global.SetPlayerCanLeaveParachuteSmokeTrail(player, enabled)
	return _in(0xF401B182DBA8AF53, player, enabled)
end

--- Sets whether this player can take cover.
-- ```
-- ```
-- NativeDB Return Type: void
function Global.SetPlayerCanUseCover(player, toggle)
	return _in(0xD465A8599DFF6814, player, toggle, _r, _ri)
end

--- Displays cash change notifications on HUD.
function Global.SetPlayerCashChange(cash, bank)
	return _in(0x0772DF77852C2E30, cash, bank)
end
Global.SetSingleplayerHudCash = Global.SetPlayerCashChange

--- 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
function Global.SetPlayerClothLockCounter(value)
	return _in(0x14D913B777DFF5DA, value)
end

--- Every occurrence was either 0 or 2.
function Global.SetPlayerClothPackageIndex(index)
	return _in(0x9F7BBA2EA6372500, index)
end

--- Every occurrence of p1 I found was true.1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function Global.SetPlayerClothPinFrames(player, toggle)
	return _in(0x749FADDF97DFE930, player, toggle)
end

--- Flags used in the scripts: 0,4,16,24,32,56,60,64,128,134,256,260,384,512,640,768,896,900,952,1024,1280,2048,2560
-- Note to people who needs this with camera mods, etc.:
-- Flags(0, 4, 16, 24, 32, 56, 60, 64, 128, 134, 512, 640, 1024, 2048, 2560)
-- - Disables camera rotation as well.
-- Flags(256, 260, 384, 768, 896, 900, 952, 1280)
-- [ translation: cameraRotation = flags & (1 << 8) - sfink]
function Global.SetPlayerControl(player, bHasControl, flags)
	return _in(0x8D32347D6D4C40A2, player, bHasControl, flags)
end

--- Minimum distance from the ground to enable in-air ragdoll
function Global.SetPlayerFallDistance(player, distance)
	return _in(0xEFD79FA81DFBA9CB, player, distance)
end
Global.N_0xefd79fa81dfba9cb = Global.SetPlayerFallDistance

function Global.SetPlayerForceSkipAimIntro(player, toggle)
	return _in(0x7651BC64AE59E128, player, toggle)
end

function Global.SetPlayerForcedAim(player, toggle)
	return _in(0x0FEE4F80AC44A726, player, toggle)
end

function Global.SetPlayerForcedZoom(player, toggle)
	return _in(0x75E7D505F2B15902, player, toggle)
end

function Global.SetPlayerHasReserveParachute(player)
	return _in(0x7DDAB28D31FAC363, player)
end

function Global.SetPlayerHealthRechargeLimit(player, limit)
	return _in(0xC388A0F065F5BC34, player, limit)
end
Global.N_0xc388a0f065f5bc34 = Global.SetPlayerHealthRechargeLimit

function Global.SetPlayerHealthRechargeMultiplier(player, regenRate)
	return _in(0x5DB660B38DD98A31, player, regenRate)
end

--- NativeDB Introduced: v1180
-- @param player :
-- @param p1 :
function Global.SetPlayerHomingRocketDisabled(player, p1)
	return _in(0xEE4EBDD2593BA844, player, p1)
end
Global.N_0xee4ebdd2593ba844 = Global.SetPlayerHomingRocketDisabled

--- Simply sets you as invincible (Health will not deplete).
-- Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
-- *(DWORD *)(playerPedAddress + 0x188) |= (1 << 9);
function Global.SetPlayerInvincible(player, toggle)
	return _in(0x239528EACDC3E7DE, player, toggle)
end

function Global.SetPlayerInvincibleKeepRagdollEnabled(player, toggle)
	return _in(0x6BC97F4F4BB3C04B, player, toggle)
end
Global.N_0x6bc97f4f4bb3c04b = Global.SetPlayerInvincibleKeepRagdollEnabled

function Global.SetPlayerInvisibleLocally(player, toggle)
	return _in(0x12B37D54667DB0B8, player, toggle)
end

--- If toggle is true, hides special ability bar / character name in the pause menu
-- If toggle is false, shows special ability bar / character name in the pause menu
function Global.SetPlayerIsInDirectorMode(toggle)
	return _in(0x808519373FD336A3, toggle)
end
Global.N_0x808519373fd336a3 = Global.SetPlayerIsInDirectorMode
Global.SetDirectorMode = Global.SetPlayerIsInDirectorMode

--- gets byte at offset 0x862 in the specified players data (ped data + 0xbd0) and stores the bool p1 in it.
-- lwz       r3, 0xBD0(r3) ;r3 is player data
-- lbz       r4, 0x862(r3) ;r4 is now the byte
-- insrwi    r4, r31, 1,28 ;stores p1 as a bit in place 28 idk
-- stb       r4, 0x862(r3) ; puts the newly modified one back in
function Global.SetPlayerLeavePedBehind(player, toggle)
	return _in(0xFF300C7649724A0B, player, toggle)
end
Global.N_0xff300c7649724a0b = Global.SetPlayerLeavePedBehind

--- Example from fm_mission_controler.ysc.c4:
-- PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);
-- All other decompiled scripts using this seem to be using the player id as the first parameter, so I feel the need to confirm it as so.
-- No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.
function Global.SetPlayerLockon(player, toggle)
	return _in(0x5C8B2F450EE4328E, player, toggle)
end

--- Affects the range of auto aim target.
function Global.SetPlayerLockonRangeOverride(player, range)
	return _in(0x29961D490E5814FD, player, range)
end

--- Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4
function Global.SetPlayerMaxArmour(player, value)
	return _in(0x77DFCCF5948B8C71, player, value)
end

function Global.SetPlayerMayNotEnterAnyVehicle(player)
	return _in(0x1DE37BBF9E9CC14A, player)
end

function Global.SetPlayerMayOnlyEnterThisVehicle(player, vehicle)
	return _in(0x8026FF78F208978A, player, vehicle)
end

--- NativeDB Added Parameter 3: BOOL p2
function Global.SetPlayerMeleeWeaponDamageModifier(player, modifier)
	return _in(0x4A3DC7ECCC321032, player, modifier)
end

function Global.SetPlayerMeleeWeaponDefenseModifier(player, modifier)
	return _in(0xAE540335B4ABC4E2, player, modifier)
end

--- Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any
-- reference to the old ped should be reset (by using the GetPlayerPed native).
-- ```
-- Make sure to request the model first and wait until it has loaded.
-- ```
function Global.SetPlayerModel(player, model)
	return _in(0x00A1CADD00108836, player, _ch(model))
end

function Global.SetPlayerNoiseMultiplier(player, multiplier)
	return _in(0xDB89EF50FF25FCE9, player, multiplier)
end

--- example:
-- PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);
function Global.SetPlayerParachuteModelOverride(player, model)
	return _in(0x977DB4641F6FC3DB, player, _ch(model))
end

function Global.SetPlayerParachutePackModelOverride(player, model)
	return _in(0xDC80A4C2F18A2B64, player, _ch(model))
end

--- tints 0
-- 1
-- 2
-- 3
-- 4
function Global.SetPlayerParachutePackTintIndex(player, tintIndex)
	return _in(0x93B0FB27C9A04060, player, tintIndex)
end

function Global.SetPlayerParachuteSmokeTrailColor(player, r, g, b)
	return _in(0x8217FD371A4625CF, player, r, g, b)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.SetPlayerParachuteTintIndex(player, tintIndex)
	return _in(0xA3D0E54541D9A5E5, player, tintIndex)
end

--- p1 was always 5.
-- p4 was always false.
function Global.SetPlayerParachuteVariationOverride(player, p1, p2, p3, p4)
	return _in(0xD9284A8C0D48352C, player, p1, p2, p3, p4)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function Global.SetPlayerReserveParachuteTintIndex(player, index)
	return _in(0xAF04C87F5DC1DF38, player, index)
end

--- example:
-- flags: 0-6
-- PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);
-- wouldnt the flag be the seatIndex?
function Global.SetPlayerResetFlagPreferRearSeats(player, flags)
	return _in(0x11D5F725F0E780E0, player, flags)
end

--- SET_PLAYER_*
function Global.SetPlayerRockstarEditorDisabled(toggle)
	return _in(0x9D8D44ADBBA61EF2, toggle)
end
Global.N_0x9d8d44adbba61ef2 = Global.SetPlayerRockstarEditorDisabled

function Global.SetPlayerSimulateAiming(player, toggle)
	return _in(0xC54C95DA968EC5B5, player, toggle)
end

--- Values around 1.0f to 2.0f used in game scripts.
function Global.SetPlayerSneakingNoiseMultiplier(player, multiplier)
	return _in(0xB2C1A29588A9F47C, player, multiplier)
end

--- 77
function Global.SetPlayerSprint(player, toggle)
	return _in(0xA01B8075D8B92DF4, player, toggle)
end

function Global.SetPlayerStealthPerceptionModifier(player, value)
	return _in(0x4E9021C1FCDD507A, player, value)
end

--- All names can be found in playerswitchestablishingshots.meta
function Global.SetPlayerSwitchEstablishingShot(name)
	return _in(0x0FDE9DBFC0A6BC65, _ts(name))
end
Global.N_0x0fde9dbfc0a6bc65 = Global.SetPlayerSwitchEstablishingShot

function Global.SetPlayerSwitchOutro(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xC208B673CE446B61, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
Global.N_0xc208b673ce446b61 = Global.SetPlayerSwitchOutro

--- the status of default voip system. It affects on `NETWORK_IS_PLAYER_TALKING` and `mp_facial` animation.
-- This function doesn't need to be called every frame, it works like a switcher.
-- @param player The target player.
-- @param state Overriding state.
function Global.SetPlayerTalkingOverride(player, state)
	return _in(0xfc02caf6, player, state)
end

--- Jenkins hash: 0x772DA539
-- p0 looks like Player or int (found in "am_pi_menu")
-- Dr. Underscore (1/6/18):
-- It isn't Player, it is an int.
-- Only two references anywhere, both in am_pi_menu.
-- One uses globals, the other one uses a helper function that is passing in the outValue of "STATS::STAT_GET_INT"; I have no clue what is being passed in for the stat hash.
function Global.SetPlayerTargetLevel(targetLevel)
	return _in(0x5702B917B99DB1CD, targetLevel)
end
Global.N_0x5702b917b99db1cd = Global.SetPlayerTargetLevel

--- Sets your targeting mode.
-- 0 = Traditional GTA
-- 1 = Assisted Aiming
-- 2 = Free Aim
-- Even tho gtaforums nor Alexander B supports this, if you're online in freemode already it's nice to have this since retail or otherwise you have to go to SP to change it.
function Global.SetPlayerTargetingMode(targetMode)
	return _in(0xB1906895227793F3, targetMode)
end

function Global.SetPlayerTcmodifierTransition(value)
	return _in(0xBDEB86F4D5809204, value)
end
Global.N_0xbdeb86f4d5809204 = Global.SetPlayerTcmodifierTransition

--- Set player team on deathmatch and last team standing..
function Global.SetPlayerTeam(player, team)
	return _in(0x0299FA38396A4940, player, team)
end

--- modifier's min value is 0.1
function Global.SetPlayerVehicleDamageModifier(player, modifier)
	return _in(0xA50E117CDDF82F0C, player, modifier)
end

--- modifier's min value is 0.1
function Global.SetPlayerVehicleDefenseModifier(player, modifier)
	return _in(0x4C60E6EFDAFF2462, player, modifier)
end

function Global.SetPlayerVisibleLocally(player, toggle)
	return _in(0xFAA10F1FAFB11AF2, player, toggle)
end

--- # Predominant call signatures
-- PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
-- # Parameter value ranges
-- P0: PLAYER::PLAYER_ID()
-- P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)
-- P2: Not set by any call
-- ```
-- ```
-- NativeDB Parameter 1: Vector3* position
-- NativeDB Parameter 2: BOOL y
-- NativeDB Parameter 3: BOOL z
function Global.SetPlayerWantedCentrePosition(player, position, y, z)
	return _in(0x520E541A97A13354, player, position, y, z)
end

--- Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
-- wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
-- disableNoMission-  Disables When Off Mission- appears to always be false
function Global.SetPlayerWantedLevel(player, wantedLevel, disableNoMission)
	return _in(0x39FF19C64EF7DA5B, player, wantedLevel, disableNoMission)
end

--- p2 is always false in R* scripts
function Global.SetPlayerWantedLevelNoDrop(player, wantedLevel, p2)
	return _in(0x340E61DE7F471565, player, wantedLevel, p2)
end

--- Forces any pending wanted level to be applied to the specified player immediately.
-- Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
-- Second parameter is unknown (always false).
function Global.SetPlayerWantedLevelNow(player, p1)
	return _in(0xE0A7D1E497FFCD6F, player, p1)
end

--- This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
-- Based on tests, it is unlikely to be a multiplier.
function Global.SetPlayerWeaponDamageModifier(player, modifier)
	return _in(0xCE07B9F7817AADA3, player, modifier)
end

--- NativeDB Parameter 1: float modifier
function Global.SetPlayerWeaponDefenseModifier(player, modifier)
	return _in(0x2D83BC011CA14A3C, player, modifier)
end

function Global.SetPlayerWeaponDefenseModifier_2(player, modifier)
	return _in(0xBCFDE9EDE4CF27DC, player, modifier)
end
Global.N_0xbcfde9ede4cf27dc = Global.SetPlayerWeaponDefenseModifier_2

function Global.SetPlayerpadShakesWhenControllerDisabled(toggle)
	return _in(0x798FDEB5B1575088, toggle)
end

--- NativeDB Return Type: void
function Global.SetPlayersLastVehicle(vehicle)
	return _in(0xBCDF8BAF56C87B6A, vehicle, _r, _ri)
end

--- The player will be ignored by the police if toggle is set to true
function Global.SetPoliceIgnorePlayer(player, toggle)
	return _in(0x32C62AA929C2DA6A, player, toggle)
end

--- If toggle is set to false:
-- The police won't be shown on the (mini)map
-- If toggle is set to true:
-- The police will be shown on the (mini)map
function Global.SetPoliceRadarBlips(toggle)
	return _in(0x43286D561B72B8BF, toggle)
end

function Global.SetPopControlSphereThisFrame(x, y, z, p3, p4)
	return _in(0xD8C3BE3EE94CAF2D, x, y, z, p3, p4)
end
Global.N_0xd8c3be3ee94caf2d = Global.SetPopControlSphereThisFrame

--- Found in the b617d scripts, duplicates removed:
-- AUDIO::_044DBAD7A7FA2BE5("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");
-- AUDIO::_044DBAD7A7FA2BE5("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");
-- AUDIO::_044DBAD7A7FA2BE5("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");
-- AUDIO::_044DBAD7A7FA2BE5("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");
-- AUDIO::_044DBAD7A7FA2BE5("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");
function Global.SetPortalSettingsOverride(p0, p1)
	return _in(0x044DBAD7A7FA2BE5, _ts(p0), _ts(p1))
end
Global.N_0x044dbad7a7fa2be5 = Global.SetPortalSettingsOverride

function Global.SetRaceTrackRender(toggle)
	return _in(0x1EAC5F91BCBC5073, toggle)
end
Global.N_0x1eac5f91bcbc5073 = Global.SetRaceTrackRender

function Global.SetRadarAsExteriorThisFrame()
	return _in(0xE81B7D2A3DAB2D81)
end

--- List of interior hashes: pastebin.com/1FUyXNqY
-- Not for every interior zoom > 0 available.
function Global.SetRadarAsInteriorThisFrame(interior, x, y, heading, zoom)
	return _in(0x59E727A1C9D3E31A, _ch(interior), x, y, heading, zoom)
end

--- zoomLevel ranges from 0 to 200
function Global.SetRadarZoom(zoomLevel)
	return _in(0x096EF57A0C999BBA, zoomLevel)
end

--- actual native starts with SET_RADAR_ZOOM_...
function Global.SetRadarZoomPrecise(zoom)
	return _in(0xBD12C5EEE184C337, zoom)
end
Global.RespondingAsTemp = Global.SetRadarZoomPrecise

function Global.SetRadarZoomToBlip(blip, zoom)
	return _in(0xF98E4B3E56AFC7B1, blip, zoom)
end
Global.N_0xf98e4b3e56afc7b1 = Global.SetRadarZoomToBlip

function Global.SetRadarZoomToDistance(zoom)
	return _in(0xCB7CC0D58405AD41, zoom)
end
Global.SetRadarZoomLevelThisFrame = Global.SetRadarZoomToDistance

function Global.SetRadioAutoUnfreeze(toggle)
	return _in(0xC1AA9F53CE982990, toggle)
end

function Global.SetRadioFrontendFadeTime(p0)
	return _in(0x2C96CDB04FCA358E, p0)
end
Global.N_0x2c96cdb04fca358e = Global.SetRadioFrontendFadeTime

--- Disables the radio station from the radio wheel.
-- Note: You cannot disable LSUR, WCTR and Blaine County Radio.
-- List of known station names;
-- ```
-- RADIO_01_CLASS_ROCK
-- RADIO_02_POP
-- RADIO_03_HIPHOP_NEW
-- RADIO_04_PUNK
-- RADIO_05_TALK_01
-- RADIO_06_COUNTRY
-- RADIO_07_DANCE_01
-- RADIO_08_MEXICAN
-- RADIO_09_HIPHOP_OLD
-- RADIO_12_REGGAE
-- RADIO_13_JAZZ
-- RADIO_14_DANCE_02
-- RADIO_15_MOTOWN
-- RADIO_20_THELAB
-- RADIO_16_SILVERLAKE
-- RADIO_17_FUNK
-- RADIO_18_90S_ROCK
-- RADIO_21_DLC_XM17
-- RADIO_22_DLC_BATTLE_MIX1_RADIO
-- RADIO_19_USER
-- HIDDEN_RADIO_AMBIENT_TV
-- HIDDEN_RADIO_AMBIENT_TV_BRIGHT
-- HIDDEN_RADIO_01_CLASS_ROCK
-- HIDDEN_RADIO_ADVERTS
-- HIDDEN_RADIO_02_POP
-- HIDDEN_RADIO_03_HIPHOP_NEW
-- HIDDEN_RADIO_04_PUNK
-- HIDDEN_RADIO_06_COUNTRY
-- HIDDEN_RADIO_07_DANCE_01
-- HIDDEN_RADIO_09_HIPHOP_OLD
-- HIDDEN_RADIO_12_REGGAE
-- HIDDEN_RADIO_15_MOTOWN
-- HIDDEN_RADIO_16_SILVERLAKE
-- RADIO_22_DLC_BATTLE_MIX1_CLUB
-- HIDDEN_RADIO_STRIP_CLUB
-- DLC_BATTLE_MIX1_CLUB_PRIV
-- HIDDEN_RADIO_BIKER_CLASSIC_ROCK
-- DLC_BATTLE_MIX2_CLUB_PRIV
-- HIDDEN_RADIO_BIKER_MODERN_ROCK
-- RADIO_23_DLC_BATTLE_MIX2_CLUB
-- RADIO_25_DLC_BATTLE_MIX4_CLUB
-- DLC_BATTLE_MIX3_CLUB_PRIV
-- RADIO_26_DLC_BATTLE_CLUB_WARMUP
-- HIDDEN_RADIO_BIKER_PUNK
-- RADIO_24_DLC_BATTLE_MIX3_CLUB
-- DLC_BATTLE_MIX4_CLUB_PRIV
-- HIDDEN_RADIO_BIKER_HIP_HOP
-- ```
-- @param stationName The name of the radio station
-- @param Toggle Toggle the station on/off
function Global.SetRadioStationDisabled(stationName, Toggle)
	return _in(0x94F2E83EAD7E6B82, _ts(stationName), Toggle)
end
Global.N_0x94f2e83ead7e6b82 = Global.SetRadioStationDisabled

--- 6 calls in the b617d scripts, removed identical lines:
-- AUDIO::_774BD811F656A122("RADIO_01_CLASS_ROCK", 1);
-- AUDIO::_774BD811F656A122(AUDIO::GET_RADIO_STATION_NAME(10), 0);
-- AUDIO::_774BD811F656A122(AUDIO::GET_RADIO_STATION_NAME(10), 1);
function Global.SetRadioStationMusicOnly(radioStation, toggle)
	return _in(0x774BD811F656A122, _ts(radioStation), toggle)
end
Global.N_0x774bd811f656a122 = Global.SetRadioStationMusicOnly

--- Sets radio station by index.
function Global.SetRadioToStationIndex(radioStation)
	return _in(0xA619B168B8A8570F, radioStation)
end

--- For a full list, see here: pastebin.com/Kj9t38KF
function Global.SetRadioToStationName(stationName)
	return _in(0xC69EDA28699D5107, _ts(stationName))
end

--- Only found this one in the decompiled scripts:
-- AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");
function Global.SetRadioTrack(radioStation, radioTrack)
	return _in(0xB39786F201FEE30B, _ts(radioStation), _ts(radioTrack))
end

--- NativeDB Introduced: v1493
-- @param radioStationName :
-- @param mixName :
-- @param p2 :
function Global.SetRadioTrackMix(radioStationName, mixName, p2)
	return _in(0x2CB0075110BE1E56, _ts(radioStationName), _ts(mixName), p2)
end

function Global.SetRadiusBlipEdge(p0, p1)
	return _in(0x25615540D894B814, p0, p1)
end
Global.N_0x25615540d894b814 = Global.SetRadiusBlipEdge

--- Works for both player and peds, but some flags don't seem to work for the player (1, for example)
-- 1 - Blocks ragdolling when shot.
-- 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
-- 4 - Blocks ragdolling when set on fire.
-- -----------------------------------------------------------------------
-- There seem to be 26 flags
function Global.SetRagdollBlockingFlags(ped, flags)
	return _in(0x26695EC767728D84, ped, flags)
end
Global.N_0x26695ec767728d84 = Global.SetRagdollBlockingFlags
Global.SetPedRagdollBlockingFlags = Global.SetRagdollBlockingFlags

--- Controls rain, rain sounds and the creation of puddles.
-- With an `intensity` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
-- With an `intensity` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
-- To use the rain intensity of the current weather, call this native with `-1f` as `intensity`.
-- @param intensity Strength of rain effects
function Global.SetRainFxIntensity(intensity)
	return _in(0x643E26EA6E024D92, intensity)
end

--- NativeDB Return Type: void
function Global.SetRandomBoats(toggle)
	return _in(0x84436EC293B1415F, toggle, _r, _ri)
end

--- If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
-- Does nothing if the mission flag is set.
-- ```
-- ```
-- NativeDB Parameter 0: BOOL toggle
function Global.SetRandomEventFlag(toggle)
	return _in(0x971927086CFD2158, toggle)
end

function Global.SetRandomSeed(seed)
	return _in(0x444D98F98C11F3EC, seed)
end

function Global.SetRandomTrains(toggle)
	return _in(0x80D9F74197EA47D9, toggle)
end

function Global.SetRandomVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0xB3B3359379FE77D3, multiplier)
end

function Global.SetRandomWeatherType()
	return _in(0x8B05F884CF7E8020)
end

function Global.SetReducePedModelBudget(toggle)
	return _in(0x77B5F9A36BF96710, toggle)
end

function Global.SetReduceVehicleModelBudget(toggle)
	return _in(0x80C527893080CCF3, toggle)
end

--- Sets the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- Example:
-- PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
-- PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
function Global.SetRelationshipBetweenGroups(relationship, group1, group2)
	return _in(0xBF25EB89375A37AD, relationship, _ch(group1), _ch(group2))
end

--- makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
function Global.SetRenderTrainAsDerailed(train, toggle)
	return _in(0x317B11A312DF5534, train, toggle)
end

function Global.SetResourceKvp(key, value)
	return _in(0x21c7a35b, _ts(key), _ts(value))
end

function Global.SetResourceKvpFloat(key, value)
	return _in(0x9add2938, _ts(key), value)
end

function Global.SetResourceKvpInt(key, value)
	return _in(0x6a2b1e8, _ts(key), value)
end

--- Sets the player's rich presence detail state for social platform providers to a specified string.
-- @param presenceState The rich presence string to set.
function Global.SetRichPresence(presenceState)
	return _in(0x7bdcbd45, _ts(presenceState))
end

--- missing a last parameter int p6
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
function Global.SetRoadsBackToOriginal(p0, p1, p2, p3, p4, p5)
	return _in(0x1EE7063B80FFC77C, p0, p1, p2, p3, p4, p5)
end

--- bool p7 - always 1
-- ```
-- ```
-- NativeDB Added Parameter 8: Any p7
function Global.SetRoadsBackToOriginalInAngledArea(x1, y1, z1, x2, y2, z2, p6)
	return _in(0x0027501B9F3B407E, x1, y1, z1, x2, y2, z2, p6)
end

--- /* Corrected conflicting parameter names */
function Global.SetRoadsInAngledArea(x1, y1, z1, x2, y2, z2, angle, unknown1, unknown2, unknown3)
	return _in(0x1A5AA1208AF5DB59, x1, y1, z1, x2, y2, z2, angle, unknown1, unknown2, unknown3)
end

--- /* Corrected conflicting parameter names */
function Global.SetRoadsInArea(x1, y1, z1, x2, y2, z2, unknown1, unknown2)
	return _in(0xBF1A602B5BA52FEE, x1, y1, z1, x2, y2, z2, unknown1, unknown2)
end

--- Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
-- Just call it one time, it is not required to be called once every tick.
-- Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
-- It is not possible to "decrease" speed. Anything below 1 will be ignored.
function Global.SetRunSprintMultiplierForPlayer(player, multiplier)
	return _in(0x6DB47AA77FD94E09, player, multiplier)
end

function Global.SetRuntimeTextureArgbData(tex, buffer, length)
	return _in(0x3963d527, tex, _ts(buffer), length, _r)
end

--- Sets a pixel in the specified runtime texture. This will have to be committed using `COMMIT_RUNTIME_TEXTURE` to have any effect.
-- @param tex A handle to the runtime texture.
-- @param x The X position of the pixel to change.
-- @param y The Y position of the pixel to change.
-- @param r The new R value (0-255).
-- @param g The new G value (0-255).
-- @param b The new B value (0-255).
-- @param a The new A value (0-255).
function Global.SetRuntimeTexturePixel(tex, x, y, r, g, b, a)
	return _in(0xab65acee, tex, x, y, r, g, b, a)
end

function Global.SetSaveHouse(p0, p1, p2)
	return _in(0x4F548CABEAE553BC, p0, p1, p2)
end

--- The bool is not a toggle!!!
function Global.SetSaveMenuActive(ignoreVehicle)
	return _in(0xC9BF75D28165FF77, ignoreVehicle)
end

--- Set profile setting 501
function Global.SetSaveMigrationTransactionId(transactionId)
	return _in(0xF6792800AC95350D, transactionId)
end
Global.N_0xf6792800ac95350d = Global.SetSaveMigrationTransactionId

function Global.SetScaleformMovieAsNoLongerNeeded(scaleformHandle)
	return _in(0x1D132D614DD86811, _ii(scaleformHandle) --[[ may be optional ]])
end

function Global.SetScaleformMovieToUseSystemTime(scaleform, toggle)
	return _in(0x6D8EB211944DCE08, scaleform, toggle)
end

--- Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU
function Global.SetScenarioGroupEnabled(scenarioGroup, p1)
	return _in(0x02C8E5B49848664E, _ts(scenarioGroup), p1)
end

--- p0 and p1 are always the same
function Global.SetScenarioPedDensityMultiplierThisFrame(p0, p1)
	return _in(0x7A556143A1C03898, p0, p1)
end

function Global.SetScenarioPedsSpawnInSphereArea(x, y, z, range, p4)
	return _in(0x28157D43CF600981, x, y, z, range, p4)
end

--- Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
function Global.SetScenarioPedsToBeReturnedByNextCommand(value)
	return _in(0x14F19A8782C8071E, value)
end

--- seems to enable/disable specific scenario-types from happening in the game world.
-- Here are some scenario types from the scripts:
-- "WORLD_MOUNTAIN_LION_REST"
-- "WORLD_MOUNTAIN_LION_WANDER"
-- "DRIVE"
-- "WORLD_VEHICLE_POLICE_BIKE"
-- "WORLD_VEHICLE_POLICE_CAR"
-- "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
-- "WORLD_VEHICLE_DRIVE_SOLO"
-- "WORLD_VEHICLE_BIKER"
-- "WORLD_VEHICLE_DRIVE_PASSENGERS"
-- "WORLD_VEHICLE_SALTON_DIRT_BIKE"
-- "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
-- "PROP_HUMAN_SEAT_CHAIR"
-- "WORLD_VEHICLE_ATTRACTOR"
-- "WORLD_HUMAN_LEANING"
-- "WORLD_HUMAN_HANG_OUT_STREET"
-- "WORLD_HUMAN_DRINKING"
-- "WORLD_HUMAN_SMOKING"
-- "WORLD_HUMAN_GUARD_STAND"
-- "WORLD_HUMAN_CLIPBOARD"
-- "WORLD_HUMAN_HIKER"
-- "WORLD_VEHICLE_EMPTY"
-- "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
-- "WORLD_HUMAN_PAPARAZZI"
-- "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
-- "WORLD_VEHICLE_PARK_PARALLEL"
-- "WORLD_VEHICLE_CONSTRUCTION_SOLO"
-- "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
-- "WORLD_VEHICLE_TRUCK_LOGS"
-- -alphazolam
-- scenarioType could be the same as scenarioName, used in for example AI::TASK_START_SCENARIO_AT_POSITION.
function Global.SetScenarioTypeEnabled(scenarioType, toggle)
	return _in(0xEB47EC4E34FB7EE1, _ts(scenarioType), toggle)
end

--- For a full list, see here: pastebin.com/yLNWicUi
function Global.SetScriptAsNoLongerNeeded(scriptName)
	return _in(0xC90D2DCACD56184C, _ts(scriptName))
end

--- This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
-- independent of the player's safe zone configuration.
-- These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
-- for default alignment.
-- Valid values for `horizontalAlign`, from original documentation:
-- -   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
-- the right side of the screen.
-- -   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
-- centered.
-- -   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
-- from the right side of the screen, both move with the right side of the screen.
-- Valid values for `verticalAlign`, from original documentation:
-- -   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
-- rather centered.
-- -   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
-- different from 66.
-- -   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
-- Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
-- canonical value for this is 'I' (73).
-- For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
-- axis.
-- To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
-- @param horizontalAlign The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
-- @param verticalAlign The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
function Global.SetScriptGfxAlign(horizontalAlign, verticalAlign)
	return _in(0xB8A850F20A067EB6, horizontalAlign, verticalAlign)
end
Global.SetScreenDrawPosition = Global.SetScriptGfxAlign
Global.ScreenDrawPositionBegin = Global.SetScriptGfxAlign

--- Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
-- expects the width/height to be configured using this native in order to get a proper starting position for the draw
-- command.
-- @param x The X offset for the item to be drawn.
-- @param y The Y offset for the item to be drawn.
-- @param w The width of the item to be drawn.
-- @param h The height of the item to be drawn.
function Global.SetScriptGfxAlignParams(x, y, w, h)
	return _in(0xF5A2C681787E579D, x, y, w, h)
end
Global.N_0xf5a2c681787e579d = Global.SetScriptGfxAlignParams
Global.ScreenDrawPositionRatio = Global.SetScriptGfxAlignParams

--- Sets a flag defining whether or not script draw commands should continue being drawn behind the pause
-- menu. This is usually used for TV channels and other draw commands that are used with a world render target.
-- @param flag A boolean value.
function Global.SetScriptGfxDrawBehindPausemenu(flag)
	return _in(0xC6372ECD45D73BCD, flag)
end
Global.N_0xc6372ecd45d73bcd = Global.SetScriptGfxDrawBehindPausemenu

--- Sets the draw order for script draw commands.
-- Examples from decompiled scripts:
-- ```cpp
-- GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
-- GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);
-- GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
-- GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
-- ```
-- @param order The intended draw order/layer.
function Global.SetScriptGfxDrawOrder(order)
	return _in(0x61BB1D9B3A95D802, order)
end
Global.N_0x61bb1d9b3a95d802 = Global.SetScriptGfxDrawOrder
Global.Set_2dLayer = Global.SetScriptGfxDrawOrder
Global.SetUiLayer = Global.SetScriptGfxDrawOrder

--- NativeDB Parameter 0: Hash doorHash
function Global.SetScriptUpdateDoorAudio(doorHash, toggle)
	return _in(0x06C0023BED16DD6B, doorHash, toggle)
end
Global.N_0x06c0023bed16dd6b = Global.SetScriptUpdateDoorAudio

--- Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
function Global.SetScriptVariableHudColour(r, g, b, a)
	return _in(0xD68A5FF8A3A89874, r, g, b, a)
end
Global.N_0xd68a5ff8a3a89874 = Global.SetScriptVariableHudColour

--- Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
function Global.SetScriptVariable_2HudColour(r, g, b, a)
	return _in(0x16A304E6CB2BFAB9, r, g, b, a)
end
Global.N_0x16a304e6cb2bfab9 = Global.SetScriptVariable_2HudColour

--- Only called once in the decompiled scripts. Presumably activates the specified generator.
function Global.SetScriptVehicleGenerator(vehicleGenerator, enabled)
	return _in(0xD9D620E0AC6DC4B0, vehicleGenerator, enabled)
end

function Global.SetScriptWithNameHashAsNoLongerNeeded(scriptHash)
	return _in(0xC5BC038960E9DB27, _ch(scriptHash))
end
Global.SetStreamedScriptAsNoLongerNeeded = Global.SetScriptWithNameHashAsNoLongerNeeded

function Global.SetScriptedAnimSeatOffset(ped, p1)
	return _in(0x5917BBA32D06C230, ped, p1)
end

function Global.SetScriptedConversionCoordThisFrame(x, y, z)
	return _in(0x5086C7843552CF85, x, y, z)
end

--- Toggles Heatvision on/off.
function Global.SetSeethrough(toggle)
	return _in(0x7E08924259E08CE0, toggle)
end

function Global.SetSequenceToRepeat(taskSequenceId, repeat_)
	return _in(0x58C70CF3A41E4AE7, taskSequenceId, repeat_)
end

--- NativeDB Parameter 1: BOOL toggle
function Global.SetSirenWithNoDriver(vehicle, toggle)
	return _in(0x1FEF0683B96EBCF2, vehicle, _ii(toggle) --[[ may be optional ]])
end

function Global.SetSnakeoilForEntry(name, path, data)
	return _in(0xa7dd3209, _ts(name), _ts(path), _ts(data))
end

--- UI::0x7AD67C95("Gallery");
-- UI::0x7AD67C95("Missions");
-- UI::0x7AD67C95("General");
-- UI::0x7AD67C95("Playlists");
function Global.SetSocialClubTour(name)
	return _in(0x9E778248D6685FE0, _ts(name))
end
Global.N_0x9e778248d6685fe0 = Global.SetSocialClubTour

function Global.SetSpecialAbility(player, p1)
	return _in(0xB214D570EAD7F81A, player, p1)
end
Global.N_0xb214d570ead7f81a = Global.SetSpecialAbility

function Global.SetSpecialAbilityMultiplier(multiplier)
	return _in(0xA49C426ED0CA4AB7, multiplier)
end

--- NativeDB Introduced: v1365
-- @param vehicle :
-- @param ratio :
function Global.SetSpecialflightWingRatio(vehicle, ratio)
	return _in(0x70A252F60A3E036B, vehicle, ratio)
end

function Global.SetSrlTime(p0)
	return _in(0xA74A541C6884E7B8, p0)
end

--- Hardcoded to not work in multiplayer.
-- Used to lock/unlock doors to interior areas of the game.
-- (Possible) Door Types:
-- pastebin.com/9S2m3qA4
-- Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
-- Locked means that the heading is locked.
-- p6 is always 0.
-- 225 door types, model names and coords found in stripclub.c4:
-- pastebin.com/gywnbzsH
-- get door info: pastebin.com/i14rbekD
function Global.SetStateOfClosestDoorOfType(type, x, y, z, locked, heading, p6)
	return _in(0xF82D8F1926A02C3D, _ch(type), x, y, z, locked, heading, p6)
end

--- Defines the state of a destructible object.
-- Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords
-- State 2 == object just spawned
-- State 4 == Beginning of the animation
-- State 6 == Start animation
-- State 9 == End of the animation
function Global.SetStateOfRayfireMapObject(object, state)
	return _in(0x5C29F698D404C5E1, object, state)
end
Global.N_0x5c29f698d404c5e1 = Global.SetStateOfRayfireMapObject
Global.SetDesObjectState = Global.SetStateOfRayfireMapObject

--- Example:
-- AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);	AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);	AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);
-- This turns off surrounding sounds not connected directly to peds.
function Global.SetStaticEmitterEnabled(emitterName, toggle)
	return _in(0x399D2D3B33F1B8EB, _ts(emitterName), toggle)
end

--- Access to the store for shark cards etc...
function Global.SetStoreEnabled(toggle)
	return _in(0x9641A9FF718E9C5E, toggle)
end

function Global.SetStreamedTextureDictAsNoLongerNeeded(textureDict)
	return _in(0xBE2CACCF5A8AA805, _ts(textureDict))
end

function Global.SetStreaming(toggle)
	return _in(0x6E0C692677008888, toggle)
end

function Global.SetStuntJumpsCanTrigger(toggle)
	return _in(0xD79185689F8FD5DF, toggle)
end
Global.N_0xd79185689f8fd5df = Global.SetStuntJumpsCanTrigger

--- When I called this with what the script was doing, which was -190f for yaw pitch and roll, all my car did was jitter a little. I also tried 0 and 190f. I altered the p1 variable between TRUE and FALSE and didn't see a difference.
-- This might have something to do with the physbox of the vehicle, but I'm not sure.
function Global.SetSubmarineCrushDepths(submarine, toggle, crushWarningDepth1, crushWarningDepth2, crushDepth)
	return _in(0xC59872A5134879C7, submarine, toggle, crushWarningDepth1, crushWarningDepth2, crushDepth)
end
Global.JitterVehicle = Global.SetSubmarineCrushDepths

--- NativeDB Return Type: void
function Global.SetSuperJumpThisFrame(player)
	return _in(0x57FFF03E423A4C0B, player, _r, _ri)
end

--- Swim speed multiplier.
-- Multiplier goes up to 1.49
-- Just call it one time, it is not required to be called once every tick. - Note copied from below native.
-- Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
function Global.SetSwimMultiplierForPlayer(player, multiplier)
	return _in(0xA91C6F0FF7D16A13, player, multiplier)
end

--- Sets the position of the audio event to the entity's position for one frame(?)
-- if (l_8C3 == 0) {
-- sub_27fd1(0, -1, 1);
-- if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_87D)) {
-- AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(l_87D);
-- }
-- if (sub_7dd(l_A00)) {
-- AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
-- }
-- sub_91c("TK************ SETTING SYNCH SCENE AUDIO POSITION THIS FRAME ************TK");
-- l_8C3 = 1;
-- }
-- --
-- Found in the b617d scripts, duplicates removed:
-- AUDIO::_950A154B8DAB6185("CAR_5_IG_6", l_7FE[1/*1*/]);
-- AUDIO::_950A154B8DAB6185("EX03_TRAIN_BIKE_LAND",   PLAYER::PLAYER_PED_ID());
-- AUDIO::_950A154B8DAB6185("FBI_2_MCS_1_LeadIn", l_40[2/*1*/]);
-- AUDIO::_950A154B8DAB6185("FIN_C2_MCS_1", l_24C[0/*1*/]);
-- AUDIO::_950A154B8DAB6185("MNT_DNC", l_5F);
-- AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
function Global.SetSynchronizedAudioEventPositionThisFrame(p0, p1)
	return _in(0x950A154B8DAB6185, _ts(p0), p1)
end
Global.N_0x950a154b8dab6185 = Global.SetSynchronizedAudioEventPositionThisFrame

function Global.SetSynchronizedSceneLooped(sceneID, toggle)
	return _in(0xD9A897A4C6C2974F, sceneID, toggle)
end

function Global.SetSynchronizedSceneOcclusionPortal(sceneID, p1)
	return _in(0x394B9CD12435C981, sceneID, p1)
end
Global.N_0x394b9cd12435c981 = Global.SetSynchronizedSceneOcclusionPortal

function Global.SetSynchronizedSceneOrigin(sceneID, x, y, z, roll, pitch, yaw, p7)
	return _in(0x6ACF6B7225801CD7, sceneID, x, y, z, roll, pitch, yaw, p7)
end

function Global.SetSynchronizedScenePhase(sceneID, phase)
	return _in(0x734292F4F0ABF6D0, sceneID, phase)
end

function Global.SetSynchronizedSceneRate(sceneID, rate)
	return _in(0xB6C49F8A5E295A5D, sceneID, rate)
end

--- Examples:
-- AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), "isFirstPerson", 0);
-- AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), "isFirstPerson", 1);
-- AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), "isBlocked", sub_179027());
-- @param ped The ped that's performing the task.
-- @param signalName The property name.
-- @param value The property value to set.
function Global.SetTaskMoveNetworkSignalBool(ped, signalName, value)
	return _in(0xB0A6CFD2C69C1088, ped, _ts(signalName), value)
end
Global.N_0xb0a6cfd2c69c1088 = Global.SetTaskMoveNetworkSignalBool
Global.SetTaskPropertyBool = Global.SetTaskMoveNetworkSignalBool

--- p0 - PLAYER::PLAYER_PED_ID();
-- p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
-- p2 - From what i can see it goes up to 1f (maybe).
-- -LcGamingHD
-- Example: AI::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
-- @param ped The ped on which the task is playing.
-- @param signalName The property name.
-- @param value The property value to set.
function Global.SetTaskMoveNetworkSignalFloat(ped, signalName, value)
	return _in(0xD5BB4025AE449A4E, ped, _ts(signalName), value)
end
Global.N_0xd5bb4025ae449a4e = Global.SetTaskMoveNetworkSignalFloat
Global.SetTaskPropertyFloat = Global.SetTaskMoveNetworkSignalFloat

--- NativeDB Introduced: v1493
-- @param ped :
-- @param signalName :
-- @param value :
function Global.SetTaskMoveNetworkSignalFloat_2(ped, signalName, value)
	return _in(0x373EF409B82697A3, ped, _ts(signalName), value)
end

function Global.SetTaskVehicleChaseBehaviorFlag(ped, flag, set)
	return _in(0xCC665AAC360D31E7, ped, flag, set)
end

function Global.SetTaskVehicleChaseIdealPursuitDistance(ped, distance)
	return _in(0x639B642FACBE4EDD, ped, distance)
end

function Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain(plane, height)
	return _in(0xB893215D8D4C015B, plane, height)
end
Global.N_0xb893215d8d4c015b = Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain
Global.SetPlaneMinHeightAboveGround = Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain
Global.SetPlaneMinHeightAboveTerrain = Global.SetTaskVehicleGotoPlaneMinHeightAboveTerrain

--- This is not tested - it's just an assumption.
-- Doesn't seem to work.  I'll try with an int instead. --JT
-- Read the scripts, im dumpass.
-- Doesn't work at all, wether with an bool neither an int
-- if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {
-- VEHICLE::SET_TAXI_LIGHTS(l_115, 1);
-- }
function Global.SetTaxiLights(vehicle, state)
	return _in(0x598803E85E8448D9, vehicle, state)
end

function Global.SetTeamPickupObject(object, p1, p2)
	return _in(0x53E0DF1A2A3CF0CA, object, p1, p2)
end

function Global.SetTextCentre(align)
	return _in(0xC02F4DBFB51D988B, align)
end

function Global.SetTextChatEnabled(enabled)
	return _in(0x97b2f9f8, enabled, _r)
end

--- Sets an unknown boolean value in the text chat.
function Global.SetTextChatUnk(p0)
	return _in(0x1DB21A44B09E8BA3, p0)
end

function Global.SetTextColour(red, green, blue, alpha)
	return _in(0xBE6B23FFA53FB442, red, green, blue, alpha)
end

function Global.SetTextDropShadow()
	return _in(0x1CA3E9EAC9D93E5E)
end

--- Sets the drop shadow for the current text style.
-- @param distance Shadow distance in pixels, both horizontal and vertical.
-- @param r Red color.
-- @param g Green color.
-- @param b Blue color.
-- @param a Alpha.
function Global.SetTextDropshadow(distance, r, g, b, a)
	return _in(0x465C84BC39F1C351, distance, r, g, b, a)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetTextEdge(p0, r, g, b, a)
	return _in(0x441603240D202FA6, p0, r, g, b, a)
end

--- fonts that mess up your text where made for number values/misc stuff
function Global.SetTextFont(fontType)
	return _in(0x66E0276CC5F6B9DA, fontType)
end

--- Types -
-- 0: Center-Justify
-- 1: Left-Justify
-- 2: Right-Justify
-- Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
function Global.SetTextJustification(justifyType)
	return _in(0x4E096588B13FFECA, justifyType)
end
Global.N_0x4e096588b13ffeca = Global.SetTextJustification

--- from script am_mp_yacht.c int?
-- ui::set_text_leading(2);
-- ```
-- ```
-- NativeDB Parameter 0: int p0
function Global.SetTextLeading(p0)
	return _in(0xA50ABC31E3CDFAFF, p0)
end

function Global.SetTextOutline()
	return _in(0x2513DFB0FB8400FE)
end

--- **This native does absolutely nothing, just a nullsub**
function Global.SetTextProportional(p0)
	return _in(0x038C1F517D7FDCF8, p0)
end

function Global.SetTextRenderId(renderId)
	return _in(0x5F15302936E07111, renderId)
end

function Global.SetTextRightJustify(toggle)
	return _in(0x6B3C4650BC8BEE47, toggle)
end

--- Size range : 0f to 1.0f
function Global.SetTextScale(scale, size)
	return _in(0x07C837F9A01C34C9, scale, size)
end

--- It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
-- start - left boundry on screen position (0.0 - 1.0)
-- end - right boundry on screen position (0.0 - 1.0)
function Global.SetTextWrap(start, end_)
	return _in(0x63145D9C883A1A70, start, end_)
end

--- Sets the near clipping plane of the third person aim camera.
function Global.SetThirdPersonAimCamNearClip(distance)
	return _in(0x42156508606DE65E, distance)
end
Global.N_0x42156508606de65e = Global.SetThirdPersonAimCamNearClip

function Global.SetThisScriptCanBePaused(toggle)
	return _in(0xAA391C728106F7AF, toggle)
end

function Global.SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle)
	return _in(0xB98236CAAECEF897, toggle)
end

--- 0 = high
-- 1 = normal
-- 2 = low
function Global.SetThreadPriority(priority)
	return _in(0x42B65DEEF2EDF2A1, priority)
end
Global.N_0x42b65deef2edf2a1 = Global.SetThreadPriority

--- Maximum value is 1.
-- At a value of 0 the game will still run at a minimum time scale.
-- Slow Motion 1: 0.6
-- Slow Motion 2: 0.4
-- Slow Motion 3: 0.2
function Global.SetTimeScale(timeScale)
	return _in(0x1D408577D440E81E, timeScale)
end

--- Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
-- Parameters:
-- modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
-- For a full list, see here: pastebin.com/kVPwMemE
function Global.SetTimecycleModifier(modifierName)
	return _in(0x2C933ABF17A1DF41, _ts(modifierName))
end

function Global.SetTimecycleModifierStrength(strength)
	return _in(0x82E7FFCD5B2326B3, strength)
end

function Global.SetTrackedPointInfo(point, x, y, z, radius)
	return _in(0x164ECBB3CF750CB0, point, x, y, z, radius)
end

function Global.SetTrailerInverseMassScale(vehicle, p1)
	return _in(0x2A8F319B392E7B3F, vehicle, p1)
end
Global.N_0x2a8f319b392e7b3f = Global.SetTrailerInverseMassScale

--- Inverse of 0x95CF53B3D687F9FA
-- ```
-- ```
-- NativeDB Added Parameter 1: Vehicle vehicle
function Global.SetTrailerLegsLowered()
	return _in(0x878C75C09FBDB942)
end
Global.N_0x878c75c09fbdb942 = Global.SetTrailerLegsLowered

--- Also related to the attachment strength of the trailer (e.g., only detaching on negative health).
function Global.SetTrailerLegsRaised(vehicle)
	return _in(0x95CF53B3D687F9FA, vehicle)
end
Global.N_0x95cf53b3d687f9fa = Global.SetTrailerLegsRaised

--- NativeDB Return Type: void
function Global.SetTrainCruiseSpeed(train, speed)
	return _in(0x16469284DB8C62B5, train, speed, _r, _ri)
end

--- NativeDB Return Type: void
function Global.SetTrainSpeed(train, speed)
	return _in(0xAA0BC91BE0B796E3, train, speed, _r, _ri)
end

--- Only called once inside main_persitant with the parameters, 0
function Global.SetTrainTrackSpawnFrequency(trackIndex, frequency)
	return _in(0x21973BBF8D17EDFA, trackIndex, frequency)
end
Global.N_0x21973bbf8d17edfa = Global.SetTrainTrackSpawnFrequency

--- For a full list, see here: pastebin.com/kVPwMemE
function Global.SetTransitionTimecycleModifier(modifierName, transition)
	return _in(0x3BCF567485E1971C, _ts(modifierName), transition)
end

--- Might be more appropriate in AUDIO?
-- Rockstar made it like this.
-- Probably changes tvs from being a 3d audio to being "global" audio
function Global.SetTvAudioFrontend(toggle)
	return _in(0x113D2C5DC57E1774, toggle)
end

function Global.SetTvChannel(channel)
	return _in(0xBAABBB23EB6E484E, channel)
end

--- Loads specified video sequence into the TV Channel
-- TV_Channel ranges from 0-2
-- VideoSequence can be any of the following:
-- "PL_STD_CNT" CNT Standard Channel
-- "PL_STD_WZL" Weazel Standard Channel
-- "PL_LO_CNT"
-- "PL_LO_WZL"
-- "PL_SP_WORKOUT"
-- "PL_SP_INV" - Jay Norris Assassination Mission Fail
-- "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
-- "PL_LO_RS" - Righteous Slaughter Ad
-- "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
-- "PL_SP_PLSH1_INTRO"
-- "PL_LES1_FAME_OR_SHAME"
-- "PL_STD_WZL_FOS_EP2"
-- "PL_MP_WEAZEL" - Weazel Logo on loop
-- "PL_MP_CCTV" - Generic CCTV loop
-- Restart
-- 0=video sequence continues as normal
-- 1=sequence restarts from beginning every time that channel is selected
function Global.SetTvChannelPlaylist(tvChannel, playlistName, restart)
	return _in(0xF7B38B8305F1FE8B, tvChannel, _ts(playlistName), restart)
end
Global.N_0xf7b38b8305f1fe8b = Global.SetTvChannelPlaylist
Global.LoadTvChannelSequence = Global.SetTvChannelPlaylist

function Global.SetTvChannelPlaylistAtHour(tvChannel, playlistName, hour)
	return _in(0x2201C576FACAEBE8, tvChannel, _ts(playlistName), hour)
end
Global.N_0x2201c576facaebe8 = Global.SetTvChannelPlaylistAtHour

function Global.SetTvVolume(volume)
	return _in(0x2982BF73F66E9DDC, volume)
end

--- NativeDB Introduced: v1365
-- @param vehicle :
-- @param value :
function Global.SetUnkBoolN_0x102ForSubmarineVehicleTask(vehicle, value)
	return _in(0x41B9FB92EDED32A6, vehicle, value)
end

--- NativeDB Introduced: v1365
-- @param vehicle :
-- @param value :
function Global.SetUnkFloatN_0x104ForSubmarineVehicleTask(vehicle, value)
	return _in(0x498218259FB7C72D, vehicle, value)
end

--- NativeDB Introduced: v1365
-- @param value :
function Global.SetUnkGlobalBoolRelatedToDamage(value)
	return _in(0xABDABF4E1EDECBFA, value)
end

function Global.SetUseHiDof()
	return _in(0xA13B0222F3D94A94)
end

--- Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
function Global.SetUseHigherVehicleJumpForce(vehicle, toggle)
	return _in(0xF06A16CA55D138D8, vehicle, toggle)
end
Global.N_0xf06a16ca55d138d8 = Global.SetUseHigherVehicleJumpForce

function Global.SetUserRadioControlEnabled(toggle)
	return _in(0x19F21E63AE6EAE4E, toggle)
end

--- Called 5 times in the scripts. All occurrences found in b617d, sorted alphabetically and identical lines removed:
-- AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE("INOUT", 0.0);
-- AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE("INOUT", 1.0);
function Global.SetVariableOnCutsceneAudio(variableName, value)
	return _in(0xBCC29F935ED07688, _ts(variableName), value)
end
Global.GetPlayerHeadsetSoundAlternate = Global.SetVariableOnCutsceneAudio

function Global.SetVariableOnSound(soundId, variableName, value)
	return _in(0xAD6B3148A78AE9B6, soundId, _ts(variableName), value)
end

--- From the scripts, p0:
-- "ArmWrestlingIntensity",
-- "INOUT",
-- "Monkey_Stream",
-- "ZoomLevel"
function Global.SetVariableOnStream(p0, p1)
	return _in(0x2F9D3834AEB9EF79, _ts(p0), p1)
end

--- AUDIO::_733ADF241531E5C2("inTunnel", 1.0);
-- AUDIO::_733ADF241531E5C2("inTunnel", 0.0);
-- I do not know as of yet what this does, but this was found in the scripts.
function Global.SetVariableOnUnderWaterStream(variableName, value)
	return _in(0x733ADF241531E5C2, _ts(variableName), value)
end
Global.N_0x733adf241531e5c2 = Global.SetVariableOnUnderWaterStream

--- For a full list, see here: pastebin.com/Kj9t38KF
function Global.SetVehRadioStation(vehicle, radioStation)
	return _in(0x1B9C0099CB942AC6, vehicle, _ts(radioStation))
end

function Global.SetVehicleActiveDuringPlayback(vehicle, toggle)
	return _in(0xDFFCEF48E511DB48, vehicle, toggle)
end
Global.N_0xdffcef48e511db48 = Global.SetVehicleActiveDuringPlayback

function Global.SetVehicleAlarm(vehicle, state)
	return _in(0xCDE5E70C1DDB954C, vehicle, state)
end

function Global.SetVehicleAlarmTimeLeft(vehicle, time)
	return _in(0xc108ee6f, vehicle, time)
end

--- Makes the vehicle accept no passengers.
function Global.SetVehicleAllowNoPassengersLockon(veh, toggle)
	return _in(0x5D14D4154BFE7B2C, veh, toggle)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function Global.SetVehicleAsNoLongerNeeded(vehicle)
	return _in(0x629BFA74418D6239, _ii(vehicle) --[[ may be optional ]])
end

function Global.SetVehicleAudioEngineDamageFactor(vehicle, damageFactor)
	return _in(0x59E7B488451F4D3A, vehicle, damageFactor)
end
Global.N_0x59e7b488451f4d3a = Global.SetVehicleAudioEngineDamageFactor

--- Disables the vehicle from being repaired when a vehicle extra is enabled.
-- @param vehicle The vehicle to set disable auto vehicle repair.
-- @param value Setting the value to  true prevents the vehicle from being repaired when a extra is enabled. Setting the value to false allows the vehicle from being repaired when a extra is enabled.
function Global.SetVehicleAutoRepairDisabled(vehicle, value)
	return _in(0x5f3a3574, vehicle, value)
end

--- Please change to void.
function Global.SetVehicleAutomaticallyAttaches(vehicle, p1, p2)
	return _in(0x8BA6F76BC53A1493, vehicle, p1, p2, _r, _ri)
end

--- p2 often set to 1000.0 in the decompiled scripts.
function Global.SetVehicleBodyHealth(vehicle, value)
	return _in(0xB77D05AC8C78AADB, vehicle, value)
end

--- Sets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
-- In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
-- Use [`_GET_AIRCRAFT_BOMB_COUNT`](#_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
-- @param aircraft The vehicle to set the bombCount on.
-- @param bombCount The amount of bombs to set for this vehicle.
function Global.SetVehicleBombCount(aircraft, bombCount)
	return _in(0xF4B2ED59DEB5D774, aircraft, bombCount)
end
Global.N_0xf4b2ed59deb5d774 = Global.SetVehicleBombCount
Global.SetVehicleBombs = Global.SetVehicleBombCount
Global.SetAircraftBombCount = Global.SetVehicleBombCount

--- SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
-- SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
-- Will give a boost-soundeffect.
function Global.SetVehicleBoostActive(vehicle, toggle)
	return _in(0x4A04DE7CAB2739A1, vehicle, toggle)
end

function Global.SetVehicleBrake(vehicle, toggle)
	return _in(0xE4E2FD323574965C, vehicle, toggle)
end
Global.N_0xe4e2fd323574965c = Global.SetVehicleBrake

function Global.SetVehicleBrakeLights(vehicle, toggle)
	return _in(0x92B35082E0B42F66, vehicle, toggle)
end

--- Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
-- @param vehicle :
-- @param position :
-- @param p2 :
function Global.SetVehicleBulldozerArmPosition(vehicle, position, p2)
	return _in(0xF8EBCCC96ADB9FB7, vehicle, position, p2)
end
Global.N_0xf8ebccc96adb9fb7 = Global.SetVehicleBulldozerArmPosition

--- On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
function Global.SetVehicleBurnout(vehicle, toggle)
	return _in(0xFB8794444A7D60FB, vehicle, toggle)
end

--- SET_VEHICLE_AL*
function Global.SetVehicleCanBeLockedOn(vehicle, canBeLockedOn, unk)
	return _in(0x1DDA078D12879EEE, vehicle, canBeLockedOn, unk)
end
Global.N_0x1dda078d12879eee = Global.SetVehicleCanBeLockedOn

--- This has not yet been tested - it's just an assumption of what the types could be.
function Global.SetVehicleCanBeTargetted(vehicle, state)
	return _in(0x3750146A28097A82, vehicle, state)
end

function Global.SetVehicleCanBeUsedByFleeingPeds(vehicle, toggle)
	return _in(0x300504B23BD3B711, vehicle, toggle)
end
Global.N_0x300504b23bd3b711 = Global.SetVehicleCanBeUsedByFleeingPeds

function Global.SetVehicleCanBeVisiblyDamaged(vehicle, state)
	return _in(0x4C7028F78FFD3681, vehicle, state)
end

function Global.SetVehicleCanBreak(vehicle, toggle)
	return _in(0x59BF8C3D52C92F66, vehicle, toggle)
end

function Global.SetVehicleCanDeformWheels(vehicle, toggle)
	return _in(0x0CDDA42F9E360CA6, vehicle, toggle)
end
Global.N_0x0cdda42f9e360ca6 = Global.SetVehicleCanDeformWheels

--- Allows some vehicles (related to "strModelFlags" within handling?) to continue to operate while its engine health (see 0xC45D23BAF168AAB8) is less than zero
function Global.SetVehicleCanEngineOperateOnFire(vehicle, toggle)
	return _in(0x206BC5DC9D1AC70A, vehicle, toggle)
end
Global.N_0x206bc5dc9d1ac70a = Global.SetVehicleCanEngineOperateOnFire

function Global.SetVehicleCanLeakOil(vehicle, p1)
	return _in(0x51BB2D88D31A914B, vehicle, p1)
end
Global.N_0x51bb2d88d31a914b = Global.SetVehicleCanLeakOil

function Global.SetVehicleCanLeakPetrol(vehicle, p1)
	return _in(0x192547247864DFDD, vehicle, p1)
end
Global.N_0x192547247864dfdd = Global.SetVehicleCanLeakPetrol

--- if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(g_10A5A._f8B[a_0/*1*/], 1)) {
-- sub_20af7("No longer needed: Vehicle owned by other script");
-- if ((((a_0 == 24) && (!sub_3a04(g_10A5A._f8B[a_0/*1*/]))) && (!sub_39c9(g_10A5A._f8B[a_0/*1*/]))) && (ENTITY::GET_ENTITY_MODEL(g_10A5A._f8B[a_0/*1*/]) != ${monster})) {
-- VEHICLE::_428BACCDF5E26EAD(g_10A5A._f8B[a_0/*1*/], 1);
-- }
-- g_10A5A._f8B[a_0/*1*/] = 0;
-- g_10A5A[a_0/*1*/] = 1;
-- sub_20ada(a_0);
-- return ;
-- }
function Global.SetVehicleCanSaveInGarage(vehicle, toggle)
	return _in(0x428BACCDF5E26EAD, vehicle, toggle)
end
Global.N_0x428baccdf5e26ead = Global.SetVehicleCanSaveInGarage

--- from Decrypted Scripts I found
-- VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);
function Global.SetVehicleCeilingHeight(vehicle, height)
	return _in(0xA46413066687A328, vehicle, height)
end
Global.GetVehicleDeformationGetTree = Global.SetVehicleCeilingHeight

--- <1.0 - Decreased torque
-- =1.0 - Default torque
-- >1.0 - Increased torque
-- Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
-- value - is between 0.2 and 1.8 in the decompiled scripts.
-- This needs to be called every frame to take effect.
function Global.SetVehicleCheatPowerIncrease(vehicle, value)
	return _in(0xB59E4BD37AE292DB, vehicle, value)
end
Global.SetVehicleEngineTorqueMultiplier = Global.SetVehicleCheatPowerIncrease

--- If zero, clears the flag that makes the PED check if the door is open prior to ignition.
-- SET_VEHICLE_CLOSE_ORDER_IGNORING_POSE?
function Global.SetVehicleCloseDoorDeferedAction(vehicle, p1)
	return _in(0x21115BCD6E44656A, vehicle, p1)
end
Global.N_0x21115bcd6e44656a = Global.SetVehicleCloseDoorDeferedAction

function Global.SetVehicleClutch(vehicle, clutch)
	return _in(0x2f70aced, vehicle, clutch)
end

--- Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
-- Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
-- @param vehicle The vehicle to modify.
-- @param colorCombination One of the default color values of the vehicle.
function Global.SetVehicleColourCombination(vehicle, colorCombination)
	return _in(0x33E8CD3322E2FE31, vehicle, colorCombination)
end

--- colorPrimary & colorSecondary are the paint index for the vehicle.
-- For a list of valid paint indexes, view: pastebin.com/pwHci0xK
-- -------------------------------------------------------------------------
-- Use this to get the number of color indices: pastebin.com/RQEeqTSM
-- Note: minimum color index is 0, maximum color index is (numColorIndices - 1)
function Global.SetVehicleColours(vehicle, colorPrimary, colorSecondary)
	return _in(0x4F1D4BE3A7F24601, vehicle, colorPrimary, colorSecondary)
end

--- Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
-- Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#_0xF846AA63DF56B804) to get the current amount.
-- @param aircraft The vehicle to set the amount of countermeasures on.
-- @param count The amount of countermeasures to set on this vehicle.
function Global.SetVehicleCountermeasureCount(aircraft, count)
	return _in(0x9BDA23BF666F0855, aircraft, count)
end
Global.N_0x9bda23bf666f0855 = Global.SetVehicleCountermeasureCount
Global.SetAircraftCountermeasureCount = Global.SetVehicleCountermeasureCount

function Global.SetVehicleCurrentRpm(vehicle, rpm)
	return _in(0x2a01a8fc, vehicle, rpm)
end

--- p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
function Global.SetVehicleCustomPrimaryColour(vehicle, r, g, b)
	return _in(0x7141766F91D15BEA, vehicle, r, g, b)
end

--- p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
function Global.SetVehicleCustomSecondaryColour(vehicle, r, g, b)
	return _in(0x36CED73BFED89754, vehicle, r, g, b)
end

--- Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
-- Radius of effect damage applied in a sphere at impact location
function Global.SetVehicleDamage(vehicle, xOffset, yOffset, zOffset, damage, radius, p6)
	return _in(0xA1DD317EA8FD4F29, vehicle, xOffset, yOffset, zOffset, damage, radius, p6)
end

--- SET_VEHICLE_D*
function Global.SetVehicleDamageModifier(vehicle, p1)
	return _in(0x4E20D2A627011E8E, vehicle, p1, _r, _ri)
end
Global.N_0x4e20d2a627011e8e = Global.SetVehicleDamageModifier

function Global.SetVehicleDashboardColour(vehicle, color)
	return _in(0x6089CDF6A57F326C, vehicle, color)
end

--- This fixes the deformation of a vehicle but the vehicle health doesn't improve
function Global.SetVehicleDeformationFixed(vehicle)
	return _in(0x953DA1E1B12C0491, vehicle)
end

--- **Usage:**
-- -   Use this native inside a looped function.
-- -   Values:
-- -   `0.0` = no vehicles on streets
-- -   `1.0` = normal vehicles on streets
-- `1.0` Seems to be the maximum.
function Global.SetVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0x245A6883D966D537, multiplier)
end

--- You can't use values greater than 15.0
-- You can see why here: pastebin.com/Wbn34fGD
-- Also, R* does (float)(rand() % 15) to get a random dirt level when generating a vehicle.
function Global.SetVehicleDirtLevel(vehicle, dirtLevel)
	return _in(0x79D3B596FE44EE8B, vehicle, dirtLevel)
end

function Global.SetVehicleDisableTowing(vehicle, toggle)
	return _in(0x2B6747FAA9DB9D6B, vehicle, toggle)
end
Global.N_0x2b6747faa9db9d6b = Global.SetVehicleDisableTowing

--- doorIndex:
-- 0 = Front Right Door
-- 1 = Front Left Door
-- 2 = Back Right Door
-- 3 = Back Left Door
-- 4 = Hood
-- 5 = Trunk
-- Changed last paramater from CreateDoorObject To NoDoorOnTheFloor because when on false, the door object is created,and not created when on true...the former parameter name was counter intuitive...(by Calderon)
function Global.SetVehicleDoorBroken(vehicle, doorIndex, deleteDoor)
	return _in(0xD4D4F6A4AB575A33, vehicle, doorIndex, deleteDoor)
end

--- Keeps Vehicle Doors/Hood/Trunk from breaking off
function Global.SetVehicleDoorCanBreak(vehicle, doorIndex, isBreakable)
	return _in(0x2FA133A4A9D37ED8, vehicle, doorIndex, isBreakable)
end
Global.SetVehicleDoorBreakable = Global.SetVehicleDoorCanBreak

--- doorIndex:
-- 0 = Front Left Door (driver door)
-- 1 = Front Right Door
-- 2 = Back Left Door
-- 3 = Back Right Door
-- 4 = Hood
-- 5 = Trunk
-- 6 = Trunk2
-- p2:
-- mostly use 0 and 1, very rare using 3 and 5
-- p3:
-- It seems it is an angle
-- Example in VB:
-- Public Shared Sub Set_Vehicle_Door_Angle(Vehicle As Vehicle, Door As VehicleDoor, Angle As Single)
-- Native.Function.Call(Hash.SET_VEHICLE_DOOR_CONTROL, Vehicle.Handle, Door, 1, Angle)
-- End Sub
-- I'm Not MentaL
-- sfink: p2 is speed, 5 is fast, 1 is slow 3 is medium
function Global.SetVehicleDoorControl(vehicle, doorIndex, speed, angle)
	return _in(0xF2BFA0430F0A0FCB, vehicle, doorIndex, speed, angle)
end

--- destroyType is 1 for opens on damage, 2 for breaks on damage.
function Global.SetVehicleDoorDestroyType(vehicle, doorIndex, destroyType)
	return _in(0xBE70724027F85BCD, vehicle, doorIndex, destroyType)
end
Global.SetPedTargettableVehicleDestroy = Global.SetVehicleDoorDestroyType

--- When lock is false other entities can overwrite it.
function Global.SetVehicleDoorLatched(vehicle, doorIndex, forceClose, lock, p4)
	return _in(0xA5A9653A8D2CAF48, vehicle, doorIndex, forceClose, lock, p4)
end

--- doorIndex:
-- 0 = Front Left Door
-- 1 = Front Right Door
-- 2 = Back Left Door
-- 3 = Back Right Door
-- 4 = Hood
-- 5 = Trunk
-- 6 = Back
-- 7 = Back2
function Global.SetVehicleDoorOpen(vehicle, doorIndex, loose, openInstantly)
	return _in(0x7C65DAC73C35C862, vehicle, doorIndex, loose, openInstantly)
end

--- doorIndex:
-- 0 = Front Left Door
-- 1 = Front Right Door
-- 2 = Back Left Door
-- 3 = Back Right Door
-- 4 = Hood
-- 5 = Trunk
-- 6 = Trunk2
function Global.SetVehicleDoorShut(vehicle, doorIndex, closeInstantly)
	return _in(0x93D9BD300D7789E5, vehicle, doorIndex, closeInstantly)
end

--- 1
-- 2 - CARLOCK_LOCKED (locked)
-- 3
-- 4 - CARLOCK_LOCKED_PLAYER_INSIDE (can get in, can't leave)
-- (maybe, these are leftovers from GTA:VC)
-- 5
-- 6
-- 7
-- (source: GTA VC miss2 leak, matching constants for 0/2/4, testing)
-- They use 10 in am_mp_property_int, don't know what it does atm.
function Global.SetVehicleDoorsLocked(vehicle, doorLockStatus)
	return _in(0xB664292EAECF7FA6, vehicle, doorLockStatus)
end

--- After some analysis, I've decided that these are what the parameters are.
-- We can see this being used in R* scripts such as "am_mp_property_int.ysc.c4":
-- l_11A1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);
-- ...
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(l_11A1, 1);
function Global.SetVehicleDoorsLockedForAllPlayers(vehicle, toggle)
	return _in(0xA2F80B8D040727CC, vehicle, toggle)
end

function Global.SetVehicleDoorsLockedForNonScriptPlayers(vehicle, toggle)
	return _in(0x9737A37136F07E75, vehicle, toggle)
end
Global.N_0x9737a37136f07e75 = Global.SetVehicleDoorsLockedForNonScriptPlayers

function Global.SetVehicleDoorsLockedForPlayer(vehicle, player, toggle)
	return _in(0x517AAF684BB50CD1, vehicle, player, toggle)
end

function Global.SetVehicleDoorsLockedForTeam(vehicle, team, toggle)
	return _in(0xB81F6D4A8F5EEBA8, vehicle, team, toggle)
end

--- NativeDB Introduced: v1365
-- @param vehicle :
-- @param toggle :
function Global.SetVehicleDoorsLockedForUnk(vehicle, toggle)
	return _in(0x203B527D1B77904C, vehicle, toggle)
end

--- Closes all doors of a vehicle:
function Global.SetVehicleDoorsShut(vehicle, closeInstantly)
	return _in(0x781B3D62BB013EF5, vehicle, closeInstantly)
end

--- Money pickups are created around cars when they explodes. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seems to give the same amount of money.
-- youtu.be/3arlUxzHl5Y
-- i.imgur.com/WrNpYFs.jpg
-- From the scripts:
-- VEHICLE::_068F64F2470F9656(l_36, 0);
-- Found a "correct" name for this :P
-- _dead_vehicle_pickups_dies_when_set_exploded_destroy_it_drops_on_money
function Global.SetVehicleDropsMoneyWhenBlownUp(vehicle, toggle)
	return _in(0x068F64F2470F9656, vehicle, toggle)
end
Global.N_0x068f64f2470f9656 = Global.SetVehicleDropsMoneyWhenBlownUp
Global.SetVehicleCreatesMoneyPickupsWhenExploded = Global.SetVehicleDropsMoneyWhenBlownUp

function Global.SetVehicleEngineCanDegrade(vehicle, toggle)
	return _in(0x983765856F2564F9, vehicle, toggle)
end

--- 1000 is max health
-- Begins leaking gas at around 650 health
-- -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
-- -------------------------
-- Minimum: -4000
-- Maximum: 1000
-- -4000: Engine is destroyed
-- 0 and below: Engine catches fire and health rapidly declines
-- 300: Engine is smoking and losing functionality
-- 1000: Engine is perfect
function Global.SetVehicleEngineHealth(vehicle, health)
	return _in(0x45F6D8EEF34ABEF1, vehicle, health)
end

--- Starts or stops the engine on the specified vehicle.
-- vehicle: The vehicle to start or stop the engine on.
-- value: true to turn the vehicle on; false to turn it off.
-- instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
-- --------------------------------------
-- from what I've tested when I do this to a helicopter the propellers turn off after the engine has started. so is there any way to keep the heli propellers on?
-- --------------------------------------
-- And what's with BOOL otherwise, what does it do???
function Global.SetVehicleEngineOn(vehicle, value, instantly, noAutoTurnOn)
	return _in(0x2497C4717C8B881E, vehicle, value, instantly, noAutoTurnOn)
end

function Global.SetVehicleEngineTemperature(vehicle, temperature)
	return _in(0x6c93c4a9, vehicle, temperature)
end

--- formerly known as _SET_VEHICLE_PAINT_FADE
-- The parameter fade is a value from 0-1, where 0 is fresh paint.
-- ------------------------------------------------------------------------------------
-- The actual value isn't stored as a float but as an unsigned char (BYTE). More info here: pastebin.com/r0h6EM5s
-- --------------
-- Separate Person: I didn't want to be rude and remove it, but whom ever posted that pastebin above please remove it as the paste says it has been removed.
function Global.SetVehicleEnveffScale(vehicle, fade)
	return _in(0x3AFDC536C3D01674, vehicle, fade)
end
Global.SetVehiclePaintFade = Global.SetVehicleEnveffScale

--- Seems according to TU27 X360 Scripts, this has 3 arguments as well.
-- SET_VEHICLE_EXCLUSIVE_DRIVER(vehicle, 0, 0); in freemode.c
-- In case 5 of a switch case, is the only time it shows Arg2 being PLAYER_PED_ID(), otherwise it's 0. Arg3 always seems to be 0.
-- ```
-- ```
-- NativeDB Parameter 1: BOOL toggle
function Global.SetVehicleExclusiveDriver(vehicle, toggle)
	return _in(0x41062318F23ED854, vehicle, toggle)
end
Global.N_0x41062318f23ed854 = Global.SetVehicleExclusiveDriver

function Global.SetVehicleExclusiveDriver_2(vehicle, ped, index)
	return _in(0xB5C51B5502E85E83, vehicle, ped, index)
end
Global.N_0xb5c51b5502e85e83 = Global.SetVehicleExclusiveDriver_2

--- Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
function Global.SetVehicleExplodesOnHighExplosionDamage(vehicle, toggle)
	return _in(0x71B0892EC081D60A, vehicle, toggle)
end

function Global.SetVehicleExtendedRemovalRange(vehicle, range)
	return _in(0x79DF7E806202CE01, vehicle, range)
end
Global.N_0x79df7e806202ce01 = Global.SetVehicleExtendedRemovalRange

--- Note: only some vehicle have extras
-- extra ids are from 1 - 9 depending on the vehicle
-- -------------------------------------------------
-- ^ not sure if outdated or simply wrong. Max extra ID for b944 is 14
-- -------------------------------------------------
-- p2 is not a on/off toggle. mostly 0 means on and 1 means off.
-- not sure if it really should be a BOOL.
-- -------------------------------------------------
-- Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]
function Global.SetVehicleExtra(vehicle, extraId, disable)
	return _in(0x7EE3A3C5E4A40CC9, vehicle, extraId, disable)
end

--- They use the same color indexs as SET_VEHICLE_COLOURS.
function Global.SetVehicleExtraColours(vehicle, pearlescentColor, wheelColor)
	return _in(0x2036F561ADD12E33, vehicle, pearlescentColor, wheelColor)
end

--- If the vehicle's engine's broken then you cannot fix it with this native.
function Global.SetVehicleFixed(vehicle)
	return _in(0x115722B1B9C14C1C, vehicle)
end

function Global.SetVehicleFlightNozzlePosition(vehicle, direction)
	return _in(0x30D779DE7C4F6DD3, vehicle, direction)
end
Global.N_0x30d779de7c4f6dd3 = Global.SetVehicleFlightNozzlePosition
Global.SetDesiredVerticalFlightPhase = Global.SetVehicleFlightNozzlePosition
Global.SetPlaneVtolDesiredDirection = Global.SetVehicleFlightNozzlePosition

function Global.SetVehicleFlightNozzlePositionImmediate(vehicle, direction)
	return _in(0x9AA47FFF660CB932, vehicle, direction)
end
Global.N_0x9aa47fff660cb932 = Global.SetVehicleFlightNozzlePositionImmediate
Global.SetVerticalFlightPhase = Global.SetVehicleFlightNozzlePositionImmediate
Global.SetPlaneVtolDirection = Global.SetVehicleFlightNozzlePositionImmediate

function Global.SetVehicleForceAfterburner(vehicle, p1)
	return _in(0xB055A34527CB8FD7, vehicle, p1)
end
Global.N_0xb055a34527cb8fd7 = Global.SetVehicleForceAfterburner

--- SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
-- Speed is in meters per second
-- You can convert meters/s to mph here:
-- http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
function Global.SetVehicleForwardSpeed(vehicle, speed)
	return _in(0xAB54A438726D25D5, vehicle, speed)
end

--- Seems to be related to the metal parts, not tyres (like i was expecting lol)
-- Must be called every tick.
function Global.SetVehicleFrictionOverride(vehicle, friction)
	return _in(0x1837AF7C627009BA, vehicle, friction)
end

function Global.SetVehicleFuelLevel(vehicle, level)
	return _in(0xba970511, vehicle, level)
end

--- It switch to highbeam when p1 is set to true.
function Global.SetVehicleFullbeam(vehicle, toggle)
	return _in(0x8B7FD87F0DDB421E, vehicle, toggle)
end

--- Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
function Global.SetVehicleGeneratesEngineShockingEvents(vehicle, toggle)
	return _in(0x279D50DE5652D935, vehicle, toggle)
end
Global.N_0x279d50de5652d935 = Global.SetVehicleGeneratesEngineShockingEvents

function Global.SetVehicleGravity(vehicle, toggle)
	return _in(0x89F149B6131E57DA, vehicle, toggle)
end

function Global.SetVehicleGravityAmount(vehicle, gravity)
	return _in(0x1a963e58, vehicle, gravity)
end

function Global.SetVehicleHandbrake(vehicle, toggle)
	return _in(0x684785568EF26A22, vehicle, toggle)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FIELD`, this might require some experimentation.
-- Example: `SetVehicleHandlingField(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The value to set.
function Global.SetVehicleHandlingField(vehicle, class_, fieldName, value)
	return _in(0x2ba40795, vehicle, _ts(class_), _ts(fieldName), value)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FLOAT`, this might require some experimentation.
-- Example: `SetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The floating-point value to set.
function Global.SetVehicleHandlingFloat(vehicle, class_, fieldName, value)
	return _in(0x488c86d2, vehicle, _ts(class_), _ts(fieldName), value)
end

--- NativeDB Parameter 1: Hash hash
function Global.SetVehicleHandlingHashForAi(vehicle, hash)
	return _in(0x10655FAB9915623D, vehicle, hash)
end
Global.N_0x10655fab9915623d = Global.SetVehicleHandlingHashForAi

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_INT`, this might require some experimentation.
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The integer value to set.
function Global.SetVehicleHandlingInt(vehicle, class_, fieldName, value)
	return _in(0xc37f4cf9, vehicle, _ts(class_), _ts(fieldName), value)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_VECTOR`, this might require some experimentation.
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The Vector3 value to set.
function Global.SetVehicleHandlingVector(vehicle, class_, fieldName, value)
	return _in(0x12497890, vehicle, _ts(class_), _ts(fieldName), value)
end

function Global.SetVehicleHasBeenDrivenFlag(vehicle, toggle)
	return _in(0x02398B627547189C, vehicle, toggle)
end
Global.N_0x02398b627547189c = Global.SetVehicleHasBeenDrivenFlag

function Global.SetVehicleHasBeenOwnedByPlayer(vehicle, owned)
	return _in(0x2B5F9D2AF1F1722D, vehicle, owned)
end

function Global.SetVehicleHasMutedSirens(vehicle, toggle)
	return _in(0xD8050E0EB60CF274, vehicle, toggle)
end
Global.DisableVehicleImpactExplosionActivation = Global.SetVehicleHasMutedSirens
Global.SetDisableVehicleSirenSound = Global.SetVehicleHasMutedSirens

--- if true, axles won't bend.
function Global.SetVehicleHasStrongAxles(vehicle, toggle)
	return _in(0x92F0CF722BC4202F, vehicle, toggle)
end

function Global.SetVehicleHighGear(vehicle, gear)
	return _in(0x20b1b3e6, vehicle, gear)
end

--- NativeDB Introduced: v1290
-- @param vehicle :
-- @param toggle :
function Global.SetVehicleHoverTransformActive(vehicle, toggle)
	return _in(0x2D55FE374D5FDB91, vehicle, toggle)
end

--- If false, anything related to INPUT_VEH_TRANSFORM are ignored (changing hover state through script natives still possible).
-- ```
-- ```
-- NativeDB Introduced: v1290
-- @param vehicle :
-- @param toggle :
function Global.SetVehicleHoverTransformEnabled(vehicle, toggle)
	return _in(0xF1211889DF15A763, vehicle, toggle)
end
Global.N_0xf1211889df15a763 = Global.SetVehicleHoverTransformEnabled

--- According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
-- I've only seen this work for `deluxo` though, can't figure out what it's supposed to do on `oppressor2`.
-- For the deluxo:
-- -   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
-- -   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
-- If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
-- This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
-- Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
-- @param vehicle The vehicle (a deluxo or oppressor2).
-- @param state The transform state (value between 0.0 and 1.0).
function Global.SetVehicleHoverTransformPercentage(vehicle, state)
	return _in(0x438B3D7CA026FE91, vehicle, state)
end
Global.N_0x438b3d7ca026fe91 = Global.SetVehicleHoverTransformPercentage
Global.SetVehicleTransformState = Global.SetVehicleHoverTransformPercentage

--- NativeDB Introduced: v1290
-- @param vehicle :
-- @param ratio :
function Global.SetVehicleHoverTransformRatio(vehicle, ratio)
	return _in(0xD138FA15C9776837, vehicle, ratio)
end

function Global.SetVehicleInactiveDuringPlayback(vehicle, toggle)
	return _in(0x06582AFF74894C75, vehicle, toggle)
end
Global.N_0x06582aff74894c75 = Global.SetVehicleInactiveDuringPlayback

--- Sets the turn signal enabled for a vehicle.
-- Set turnSignal to 1 for left light, 0 for right light.
function Global.SetVehicleIndicatorLights(vehicle, turnSignal, toggle)
	return _in(0xB5D45264751B7DF0, vehicle, turnSignal, toggle)
end

function Global.SetVehicleInteriorColour(vehicle, color)
	return _in(0xF40DD601A65F7F19, vehicle, color)
end

function Global.SetVehicleInteriorlight(vehicle, toggle)
	return _in(0xBC2042F090AF6AD3, vehicle, toggle)
end

--- Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
function Global.SetVehicleIsConsideredByPlayer(vehicle, toggle)
	return _in(0x31B927BBC44156CD, vehicle, toggle)
end

--- p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
function Global.SetVehicleIsRacing(vehicle, toggle)
	return _in(0x07116E24E9D1929D, vehicle, toggle)
end
Global.SteerUnlockBias = Global.SetVehicleIsRacing

--- NativeDB Return Type: void
function Global.SetVehicleIsStolen(vehicle, isStolen)
	return _in(0x67B2C79AA7FF5738, vehicle, isStolen, _r, _ri)
end

--- Sets the wanted state of this vehicle.
function Global.SetVehicleIsWanted(vehicle, state)
	return _in(0xF7EC25A3EBEEC726, vehicle, state)
end

--- VEHICLE::SET_VEHICLE_ENGINE_ON is not enough to start jet engines when not inside the vehicle. But with this native set to true it works: youtu.be/OK0ps2fDpxs
-- i.imgur.com/7XA14pX.png
-- Certain planes got jet engines.
-- void VEHICLE::_SET_VEHICLE_JET_ENGINE_ON(scrNativeCallContext *args)
-- {
-- bool bOn; // bl@1
-- CVehicle *pVehicle; // rax@1
-- scrNativeCallContextArgStruct *pArgs; // rax@1
-- pArgs = args->pArgs;
-- bOn = pArgs->a2.INT32 != 0;
-- pVehicle = getEntityAddressIfVehicle(pArgs->a1.INT32);
-- if ( pVehicle )
-- {
-- pVehicle->bitmapBulletProofTires &= 0xFBu;
-- pVehicle->bitmapBulletProofTires |= 4 * bOn;
-- }
-- } // sfink
function Global.SetVehicleJetEngineOn(vehicle, toggle)
	return _in(0xB8FBC8B1330CA9B4, vehicle, toggle)
end
Global.N_0xb8fbc8b1330ca9b4 = Global.SetVehicleJetEngineOn

function Global.SetVehicleKersAllowed(vehicle, toggle)
	return _in(0x99C82F8A139F3E4E, vehicle, toggle)
end
Global.N_0x99c82f8a139f3e4e = Global.SetVehicleKersAllowed
Global.SetVehicleHudSpecialAbilityBarActive = Global.SetVehicleKersAllowed

--- multiplier = brightness of head lights.
-- this value isn't capped afaik.
-- multiplier = 0.0 no lights
-- multiplier = 1.0 default game value
function Global.SetVehicleLightMultiplier(vehicle, multiplier)
	return _in(0xB385454F8791F57C, vehicle, multiplier)
end

--- set's if the vehicle has lights or not.
-- not an on off toggle.
-- p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
-- p1 = 1 ;vehicle doesn't have lights, always off
-- p1 = 2 ;vehicle has always on lights
-- p1 = 3 ;or even larger like 4,5,... normal lights like =1
-- note1: when using =2 on day it's lowbeam,highbeam
-- but at night it's lowbeam,lowbeam,highbeam
-- note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
function Global.SetVehicleLights(vehicle, state)
	return _in(0x34E710FF01247C5A, vehicle, state)
end

--- Must be called each frame
function Global.SetVehicleLightsCanBeVisiblyDamaged(vehicle, p1)
	return _in(0x1AA8A837D2169D94, vehicle, p1)
end
Global.N_0x1aa8a837d2169d94 = Global.SetVehicleLightsCanBeVisiblyDamaged

--- p1 can be either 0, 1 or 2.
-- Determines how vehicle lights behave when toggled.
-- 0 = Default (Lights can be toggled between off, normal and high beams)
-- 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
-- 2 = Always On (Lights can be toggled between normal and high beams)
function Global.SetVehicleLightsMode(vehicle, p1)
	return _in(0x1FD09E7390A74D54, vehicle, p1)
end
Global.N_0x1fd09e7390a74d54 = Global.SetVehicleLightsMode

function Global.SetVehicleLivery(vehicle, livery)
	return _in(0x60BF608F1B8CD1B6, vehicle, livery)
end

function Global.SetVehicleLodMultiplier(vehicle, multiplier)
	return _in(0x93AE6A61BE015BF1, vehicle, multiplier)
end

--- This native sets a maximum speed for a vehicle.
-- @param vehicle The vehicle handle.
-- @param speed The speed limit in meters per second.
function Global.SetVehicleMaxSpeed(vehicle, speed)
	return _in(0xBAA045B4E42F3C06, vehicle, speed)
end
Global.N_0xbaa045b4e42f3c06 = Global.SetVehicleMaxSpeed

--- In b944, there are 50 (0 - 49) mod types.
-- Sets the vehicle mod.
-- The vehicle must have a mod kit first.
-- Any out of range ModIndex is stock.
-- #Mod Type
-- Spoilers
-- Front Bumper
-- Rear Bumper
-- Side Skirt
-- Exhaust
-- Frame
-- Grille
-- Hood
-- Fender
-- Right Fender
-- Roof
-- Engine
-- Brakes
-- Transmission
-- Horns - 14 (modIndex from 0 to 51)
-- Suspension
-- Armor
-- Front Wheels
-- Back Wheels - 24 //only for motocycles
-- Plate holders
-- Trim Design
-- Ornaments
-- Dial Design
-- Steering Wheel
-- Shifter Leavers
-- Plaques
-- Hydraulics
-- Livery
-- ENUMS: pastebin.com/QzEAn02v
function Global.SetVehicleMod(vehicle, modType, modIndex, customTires)
	return _in(0x6AF0636DDEDCB6DD, vehicle, modType, modIndex, customTires)
end

--- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
-- color: number of the color.
-- p3 seems to always be 0.
function Global.SetVehicleModColor_1(vehicle, paintType, color, p3)
	return _in(0x43FEB945EE7F85B8, vehicle, paintType, color, p3)
end

--- Changes the secondary paint type and color
-- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
-- color: number of the color
function Global.SetVehicleModColor_2(vehicle, paintType, color)
	return _in(0x816562BADFDEC83E, vehicle, paintType, color)
end

--- Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
-- ---------
-- Setting the modKit to 0 also seems to load some livery related vehicle information. For example, using GET_LIVERY_NAME() will return NULL if you haven't set the modKit to 0 in advance. As soon as you set it to 0, GET_LIVERY_NAME() will work properly.
function Global.SetVehicleModKit(vehicle, modKit)
	return _in(0x1F2AA07F00B3217A, vehicle, modKit)
end

--- seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:
-- VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);
-- god I hate taco vans
-- Confirmed to work? Needs to be looped? Can not get it to work.
function Global.SetVehicleModelIsSuppressed(model, suppressed)
	return _in(0x0FC2D89AC25A5814, _ch(model), suppressed)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function Global.SetVehicleNameDebug(vehicle, name)
	return _in(0xBFDF984E2C22B94F, vehicle, _ts(name))
end

function Global.SetVehicleNeedsToBeHotwired(vehicle, toggle)
	return _in(0xFBA550EA44404EE6, vehicle, toggle)
end

--- Sets the neon lights of the specified vehicle on/off.
-- Indices:
-- 0 = Left
-- 1 = Right
-- 2 = Front
-- 3 = Back
function Global.SetVehicleNeonLightEnabled(vehicle, index, toggle)
	return _in(0x2AA720E4287BF269, vehicle, index, toggle)
end

--- NativeDB Introduced: v1493
-- @param vehicle :
-- @param color :
function Global.SetVehicleNeonLightsColor_2(vehicle, color)
	return _in(0xB93B2867F7B479D1, vehicle, color)
end

--- Sets the color of the neon lights on the specified vehicle.
-- RGB values and colour names taken from the decompiled scripts:
-- | Colour        |  R  |  G  |  B  |
-- | ------------- | :-: | :-: | :-: |
-- | White         | 222 | 222 | 255 |
-- | Blue          |  2  |  21 | 255 |
-- | Electric Blue |  3  |  83 | 255 |
-- | Mint Green    |  0  | 255 | 140 |
-- | Lime Green    |  94 | 255 |  1  |
-- | Yellow        | 255 | 255 |  0  |
-- | Golden Shower | 255 | 150 |  0  |
-- | Orange        | 255 |  62 |  0  |
-- | Red           | 255 |  1  |  1  |
-- | Pony Pink     | 255 |  50 | 100 |
-- | Hot Pink      | 255 |  5  | 190 |
-- | Purple        |  35 |  1  | 255 |
-- | Blacklight    |  15 |  3  | 255 |
function Global.SetVehicleNeonLightsColour(vehicle, r, g, b)
	return _in(0x8E0A582209A62695, vehicle, r, g, b)
end

--- NativeDB Introduced: v1604
-- @param vehicle :
-- @param toggle :
function Global.SetVehicleNitroEnabled(vehicle, toggle)
	return _in(0xC8E9B6B71B8E660D, vehicle, toggle)
end

--- Sets a vehicle's license plate text.  8 chars maximum.
-- Example:
-- Ped playerPed = PLAYER::PLAYER_PED_ID();
-- Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);
-- char *plateText = "KING";
-- VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(veh, plateText);
function Global.SetVehicleNumberPlateText(vehicle, plateText)
	return _in(0x95A88F0B409CDA47, vehicle, _ts(plateText))
end

--- Plates:
-- Blue/White
-- Yellow/black
-- Yellow/Blue
-- Blue/White2
-- Blue/White3
-- Yankton
function Global.SetVehicleNumberPlateTextIndex(vehicle, plateIndex)
	return _in(0x9088EB5A43FFB0A1, vehicle, plateIndex)
end

function Global.SetVehicleOilLevel(vehicle, level)
	return _in(0x90d1cad1, vehicle, level)
end

--- Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
-- sfink: This has an additional param(Vehicle vehicle, float p1) which is always set to 5.0f in the b944 scripts.
-- ```
-- ```
-- NativeDB Added Parameter 2: float p1
function Global.SetVehicleOnGroundProperly(vehicle)
	return _in(0x49733E92263139D1, vehicle, _r)
end

--- Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
function Global.SetVehicleOutOfControl(vehicle, killDriver, explodeOnImpact)
	return _in(0xF19D095E42D430CC, vehicle, killDriver, explodeOnImpact)
end

function Global.SetVehicleParachuteActive(vehicle, active)
	return _in(0x0BFFB028B3DD0A97, vehicle, active)
end

--- parachuteModel = 230075693
function Global.SetVehicleParachuteModel(vehicle, modelHash)
	return _in(0x4D610C6B56031351, vehicle, _ch(modelHash))
end
Global.VehicleSetCustomParachuteModel = Global.SetVehicleParachuteModel

--- colorIndex = 0
function Global.SetVehicleParachuteTextureVariatiion(vehicle, textureVariation)
	return _in(0xA74AD2439468C883, vehicle, textureVariation)
end
Global.VehicleSetCustomParachuteTexture = Global.SetVehicleParachuteTextureVariatiion

--- 1000 is max health
-- Begins leaking gas at around 650 health
function Global.SetVehiclePetrolTankHealth(vehicle, health)
	return _in(0x70DB57649FA8D0D8, vehicle, health)
end

function Global.SetVehiclePopulationBudget(p0)
	return _in(0xCB9E1EB3BE2AF4E9, p0)
end

function Global.SetVehicleProvidesCover(vehicle, toggle)
	return _in(0x5AFEEDD9BB2899D7, vehicle, toggle)
end

--- can't seem to enable radio on cop cars etc
function Global.SetVehicleRadioEnabled(vehicle, toggle)
	return _in(0x3B988190C0AA6C0B, vehicle, toggle)
end

function Global.SetVehicleRadioLoud(vehicle, toggle)
	return _in(0xBB6F1CAEC68B0BCE, vehicle, toggle)
end

function Global.SetVehicleRampLaunchModifier(vehicle, p1)
	return _in(0xEFC13B1CE30D755D, vehicle, p1)
end
Global.N_0xefc13b1ce30d755d = Global.SetVehicleRampLaunchModifier

function Global.SetVehicleRampSidewaysLaunchMotion(vehicle, toggle)
	return _in(0x1BBAC99C0BC53656, vehicle, toggle)
end
Global.N_0x1bbac99c0bc53656 = Global.SetVehicleRampSidewaysLaunchMotion

function Global.SetVehicleRampUpwardsLaunchMotion(vehicle, toggle)
	return _in(0x756AE6E962168A04, vehicle, toggle)
end
Global.N_0x756ae6e962168a04 = Global.SetVehicleRampUpwardsLaunchMotion

function Global.SetVehicleReceivesRampDamage(vehicle, toggle)
	return _in(0x28D034A93FE31BF5, vehicle, toggle)
end
Global.SetRampVehicleReceivesRampDamage = Global.SetVehicleReceivesRampDamage

--- Reduces grip significantly so it's hard to go anywhere.
function Global.SetVehicleReduceGrip(vehicle, toggle)
	return _in(0x222FF6A823D122E2, vehicle, toggle)
end

function Global.SetVehicleRocketBoostActive(vehicle, active)
	return _in(0x81E1552E35DC3839, vehicle, active)
end

function Global.SetVehicleRocketBoostPercentage(vehicle, percentage)
	return _in(0xFEB2DDED3509562E, vehicle, percentage)
end

function Global.SetVehicleRocketBoostRefillTime(vehicle, time)
	return _in(0xE00F2AB100B76E89, vehicle, time)
end

--- Used to set the tornado custom (convertible) rooftop livery.
-- Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
-- Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
-- @param vehicle The vehicle handle.
-- @param livery Livery index.
function Global.SetVehicleRoofLivery(vehicle, livery)
	return _in(0xA6D3A8750DC73270, vehicle, livery)
end
Global.N_0xa6d3a8750dc73270 = Global.SetVehicleRoofLivery

function Global.SetVehicleRudderBroken(vehicle, toggle)
	return _in(0x09606148B6C71DEF, vehicle, toggle)
end

--- Only works during nighttime.
-- And only if there is a driver in heli.
function Global.SetVehicleSearchlight(heli, toggle, canBeUsedByAI)
	return _in(0x14E85C5EE7A4D542, heli, toggle, canBeUsedByAI)
end

--- Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
-- WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);
function Global.SetVehicleShootAtTarget(driver, entity, xTarget, yTarget, zTarget)
	return _in(0x74CD9A9327A282EA, driver, entity, xTarget, yTarget, zTarget)
end

--- If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
function Global.SetVehicleSilent(vehicle, toggle)
	return _in(0x9D44FCCE98450843, vehicle, toggle)
end
Global.N_0x9d44fcce98450843 = Global.SetVehicleSilent

--- Activate siren on vehicle (Only works if the vehicle has a siren).
function Global.SetVehicleSiren(vehicle, toggle)
	return _in(0xF4924635A19EB37D, vehicle, toggle)
end

--- Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
-- ============================================
-- May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
-- Btw, func_1333 ends up calling this func which uses this native,
-- void func_1338(int iParam0)//Position
-- {
-- ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);
-- ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);
-- ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
-- VEHICLE::_0xDF594D8D(iParam0, true);
-- }
function Global.SetVehicleSt(vehicle, toggle)
	return _in(0x1CF38D529D7441D9, vehicle, toggle)
end
Global.N_0x1cf38d529d7441d9 = Global.SetVehicleSt

--- Locks the vehicle's steering to the desired angle, explained below.
-- Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
-- Steer bias:
-- -1.0 = full right
-- 0.0 = centered steering
-- 1.0 = full left
function Global.SetVehicleSteerBias(vehicle, value)
	return _in(0x42A8EC77D5150CBE, vehicle, value)
end

function Global.SetVehicleSteeringAngle(vehicle, angle)
	return _in(0xffccc2ea, vehicle, angle)
end

function Global.SetVehicleSteeringBiasScalar(vehicle, scalar)
	return _in(0x9007A2F21DC108D4, vehicle, scalar)
end
Global.N_0x9007a2f21dc108d4 = Global.SetVehicleSteeringBiasScalar

function Global.SetVehicleSteeringScale(vehicle, scale)
	return _in(0xeb46596f, vehicle, scale)
end

--- If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
function Global.SetVehicleStrong(vehicle, toggle)
	return _in(0x3E8C8727991A8A0B, vehicle, toggle)
end

function Global.SetVehicleTankTurretPosition(vehicle, position, p2)
	return _in(0x56B94C6D7127DFBA, vehicle, position, p2)
end
Global.N_0x56b94c6d7127dfba = Global.SetVehicleTankTurretPosition

--- VEHICLE::SET_VEHICLE_TIMED_EXPLOSION(v_3, PLAYER::GET_PLAYER_PED(v_5), 1);
function Global.SetVehicleTimedExplosion(vehicle, ped, toggle)
	return _in(0x2E0A74E1002380B1, vehicle, ped, toggle)
end

--- Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
function Global.SetVehicleTowTruckArmPosition(vehicle, position)
	return _in(0xFE54B92A344583CA, vehicle, position)
end
Global.SetTowTruckCraneRaised = Global.SetVehicleTowTruckArmPosition
Global.SetTowTruckCraneHeight = Global.SetVehicleTowTruckArmPosition

function Global.SetVehicleTurboPressure(vehicle, pressure)
	return _in(0x6485615e, vehicle, pressure)
end

--- "To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)
-- to burst all tyres type it 8 times where p1 = 0 to 7.
-- p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function Global.SetVehicleTyreBurst(vehicle, index, onRim, p3)
	return _in(0xEC6A202EE4960385, vehicle, index, onRim, p3)
end

--- tyreIndex = 0 to 4 on normal vehicles
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function Global.SetVehicleTyreFixed(vehicle, tyreIndex)
	return _in(0x6E13FC662B882D1D, vehicle, tyreIndex)
end

--- Sets the tire smoke's color of this vehicle.
-- vehicle: The vehicle that is the target of this method.
-- r: The red level in the RGB color code.
-- g: The green level in the RGB color code.
-- b: The blue level in the RGB color code.
-- Note:
-- setting r,g,b to 0 will give the car independance day tyre smoke
function Global.SetVehicleTyreSmokeColor(vehicle, r, g, b)
	return _in(0xB5BA80F839791C0F, vehicle, r, g, b)
end

--- Allows you to toggle bulletproof tires.
function Global.SetVehicleTyresCanBurst(vehicle, toggle)
	return _in(0xEB9DC3C7D8596C46, vehicle, toggle)
end

--- Player won't be able to drive the car or enter it, unless you task him to get into any other seat than the driver one.
function Global.SetVehicleUndriveable(vehicle, toggle)
	return _in(0x8ABA6AF54B942B95, vehicle, toggle)
end

function Global.SetVehicleUnkDamageMultiplier(vehicle, multiplier)
	return _in(0x45A561A9421AB6AD, vehicle, multiplier)
end
Global.N_0x45a561a9421ab6ad = Global.SetVehicleUnkDamageMultiplier

--- Related to Hao races.
function Global.SetVehicleUseAlternateHandling(vehicle, p1)
	return _in(0x1D97D1E3A70A649F, vehicle, p1)
end
Global.N_0x1d97d1e3a70a649f = Global.SetVehicleUseAlternateHandling

function Global.SetVehicleUseCutsceneWheelCompression(p0, p1, p2, p3)
	return _in(0xE023E8AC4EF7C117, p0, p1, p2, p3, _r, _ri)
end
Global.SetAllVehiclesSpawn = Global.SetVehicleUseCutsceneWheelCompression
Global.N_0xe023e8ac4ef7c117 = Global.SetVehicleUseCutsceneWheelCompression

function Global.SetVehicleUsePlayerLightSettings(vehicle, p1)
	return _in(0xC45C27EF50F36ADC, vehicle, p1)
end
Global.N_0xc45c27ef50f36adc = Global.SetVehicleUsePlayerLightSettings

function Global.SetVehicleWeaponCapacity(vehicle, weaponIndex, capacity)
	return _in(0x44CD1F493DB2A0A6, vehicle, weaponIndex, capacity)
end
Global.N_0x44cd1f493db2a0a6 = Global.SetVehicleWeaponCapacity

function Global.SetVehicleWeaponsDisabled(vehicle, weaponSlot)
	return _in(0x86B4B6212CB8B627, vehicle, weaponSlot)
end
Global.N_0x86b4b6212cb8b627 = Global.SetVehicleWeaponsDisabled

function Global.SetVehicleWheelHealth(vehicle, wheelIndex, health)
	return _in(0xb22ecefd, vehicle, wheelIndex, health)
end

--- Not sure what this changes, probably determines physical rim size in case the tire is blown.
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Size of rim collider.
function Global.SetVehicleWheelRimColliderSize(vehicle, wheelIndex, value)
	return _in(0xf380e184, vehicle, wheelIndex, value)
end
Global.SetVehicleWheelRimColliderSize = Global.SetVehicleWheelRimColliderSize

--- Sets vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels.
-- Returns whether change was successful (can be false if trying to set size for non-default wheels).
-- @param vehicle The vehicle to set data for.
-- @param size Size of the wheels (usually between 0.5 and 1.5 is reasonable).
-- @return Bool - whether change was successful or not
function Global.SetVehicleWheelSize(vehicle, size)
	return _in(0x53ab5c35, vehicle, size, _r)
end
Global.SetVehicleWheelSize = Global.SetVehicleWheelSize

--- Use along with SetVehicleWheelSize to resize the wheels (this native sets the collider size affecting physics while SetVehicleWheelSize will change visual size).
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Radius of tire collider.
function Global.SetVehicleWheelTireColliderSize(vehicle, wheelIndex, value)
	return _in(0xb962d05c, vehicle, wheelIndex, value)
end
Global.SetVehicleWheelTireColliderSize = Global.SetVehicleWheelTireColliderSize

--- Use along with SetVehicleWheelWidth to resize the wheels (this native sets the collider width affecting physics while SetVehicleWheelWidth will change visual width).
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Width of tire collider.
function Global.SetVehicleWheelTireColliderWidth(vehicle, wheelIndex, value)
	return _in(0x47bd0270, vehicle, wheelIndex, value)
end
Global.SetVehicleWheelTireColliderWidth = Global.SetVehicleWheelTireColliderWidth

--- 0: Sport
-- 1: Muscle
-- 2: Lowrider
-- 3: SUV
-- 4: Offroad
-- 5: Tuner
-- 6: Bike Wheels
-- 7: High End
function Global.SetVehicleWheelType(vehicle, WheelType)
	return _in(0x487EB21CC7295BA1, vehicle, WheelType)
end

--- Sets vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels.
-- Returns whether change was successful (can be false if trying to set width for non-default wheels).
-- @param vehicle The vehicle to set data for.
-- @param width Width of the wheels (usually between 0.1 and 1.5 is reasonable).
-- @return Bool - whether change was successful or not
function Global.SetVehicleWheelWidth(vehicle, width)
	return _in(0x64c3f1c0, vehicle, width, _r)
end
Global.SetVehicleWheelWidth = Global.SetVehicleWheelWidth

--- Adjusts the offset of the specified wheel relative to the wheel's axle center.
-- Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise.
-- This function can be especially useful to set the track width of a vehicle, for example:
-- ```
-- function SetVehicleFrontTrackWidth(vehicle, width)
-- SetVehicleWheelXOffset(vehicle, 0, -width/2)
-- SetVehicleWheelXOffset(vehicle, 1, width/2)
-- end
-- ```
function Global.SetVehicleWheelXOffset(vehicle, wheelIndex, offset)
	return _in(0xbd6357d, vehicle, wheelIndex, offset)
end

function Global.SetVehicleWheelYRotation(vehicle, wheelIndex, value)
	return _in(0xc6c2171f, vehicle, wheelIndex, value)
end
Global.SetVehicleWheelXrot = Global.SetVehicleWheelYRotation

--- Example script: <https://pastebin.com/J6XGbkCW>
-- List of known states:
-- ```
-- 1: Not wheeling.
-- 65: Vehicle is ready to do wheelie (burnouting).
-- 129: Vehicle is doing wheelie.
-- ```
-- @param vehicle Vehicle
-- @param state Wheelie state
function Global.SetVehicleWheelieState(vehicle, state)
	return _in(0xeab8db65, vehicle, state)
end

--- NativeDB Return Type: void
function Global.SetVehicleWheelsCanBreak(vehicle, enabled)
	return _in(0x29B18B4FD460CA8F, vehicle, enabled, _r, _ri)
end

function Global.SetVehicleWheelsCanBreakOffWhenBlowUp(vehicle, toggle)
	return _in(0xA37B9A517B133349, vehicle, toggle)
end
Global.SetVehicleMaxStrTrap = Global.SetVehicleWheelsCanBreakOffWhenBlowUp

--- Related to monster trucks in native scripts.
-- ```
-- ```
-- NativeDB Introduced: v1604
-- @param vehicle :
-- @param toggle :
function Global.SetVehicleWheelsDealDamage(vehicle, toggle)
	return _in(0x2970EAA18FD5E42F, vehicle, toggle)
end
Global.N_0x2970eaa18fd5e42f = Global.SetVehicleWheelsDealDamage

--- enum WindowTints
-- {
-- WINDOWTINT_NONE,
-- WINDOWTINT_PURE_BLACK,
-- WINDOWTINT_DARKSMOKE,
-- WINDOWTINT_LIGHTSMOKE,
-- WINDOWTINT_STOCK,
-- WINDOWTINT_LIMO,
-- WINDOWTINT_GREEN
-- };
function Global.SetVehicleWindowTint(vehicle, tint)
	return _in(0x57C51E6BAD752696, vehicle, tint)
end

--- color is the paint index for the vehicle.
-- Paint index goes from 0 to 12.
-- Be aware that it only works on xenon lights.
-- You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#_0x3DFF319A831E0CDB)
-- @param vehicle The vehicle handle.
-- @param color The paint index.
function Global.SetVehicleXenonLightsColour(vehicle, color)
	return _in(0xE41033B25D003A07, vehicle, color)
end
Global.N_0xe41033b25d003a07 = Global.SetVehicleXenonLightsColour
Global.SetVehicleHeadlightsColour = Global.SetVehicleXenonLightsColour

--- Overrides a floating point value from `visualsettings.dat` temporarily.
-- @param name The name of the value to set, such as `pedLight.color.red`.
-- @param value The value to write.
function Global.SetVisualSettingFloat(name, value)
	return _in(0xd1d31681, _ts(name), value)
end

--- Max value is 1.0
function Global.SetWantedLevelDifficulty(player, difficulty)
	return _in(0x9B0BB33B04405E7A, player, difficulty)
end

function Global.SetWantedLevelMultiplier(multiplier)
	return _in(0x020E5F00CDA207BA, multiplier)
end

--- **instructionalKey enum list**:
-- ```
-- enum INSTRUCTIONAL_BUTTON_TYPES
-- {
-- NONE = 0,
-- SELECT = 1,
-- OK = 2,
-- YES = 4,
-- BACK = 8,
-- BACK_SELECT = 9,
-- BACK_OK = 10,
-- BACK_YES = 12,
-- CANCEL = 16,
-- CANCEL_SELECT = 17,
-- CANCEL_OK = 18,
-- CANCEL_YES = 20,
-- NO = 32,
-- NO_SELECT = 33,
-- NO_OK = 34,
-- YES_NO = 36,
-- RETRY = 64,
-- RETRY_SELECT = 65,
-- RETRY_OK = 66,
-- RETRY_YES = 68,
-- RETRY_BACK = 72,
-- RETRY_BACK_SELECT = 73,
-- RETRY_BACK_OK = 74,
-- RETRY_BACK_YES = 76,
-- RETRY_CANCEL = 80,
-- RETRY_CANCEL_SELECT = 81,
-- RETRY_CANCEL_OK = 82,
-- RETRY_CANCEL_YES = 84,
-- SKIP = 256,
-- SKIP_SELECT = 257,
-- SKIP_OK = 258,
-- SKIP_YES = 260,
-- SKIP_BACK = 264,
-- SKIP_BACK_SELECT = 265,
-- SKIP_BACK_OK = 266,
-- SKIP_BACK_YES = 268,
-- SKIP_CANCEL = 272,
-- SKIP_CANCEL_SELECT = 273,
-- SKIP_CANCEL_OK = 274,
-- SKIP_CANCEL_YES = 276,
-- CONTINUE = 16384,
-- BACK_CONTINUE = 16392,
-- CANCEL_CONTINUE = 16400,
-- LOADING_SPINNER = 134217728,
-- SELECT_LOADING_SPINNER = 134217729,
-- OK_LOADING_SPINNER = 134217730,
-- YES_LOADING_SPINNER = 134217732,
-- BACK_LOADING_SPINNER = 134217736,
-- BACK_SELECT_LOADING_SPINNER = 134217737,
-- BACK_OK_LOADING_SPINNER = 134217738,
-- BACK_YES_LOADING_SPINNER = 134217740,
-- CANCEL_LOADING_SPINNER = 134217744,
-- CANCEL_SELECT_LOADING_SPINNER = 134217745,
-- CANCEL_OK_LOADING_SPINNER = 134217746,
-- CANCEL_YES_LOADING_SPINNER = 134217748
-- }
-- ```
-- Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.
-- **Result of the example code:**
-- <https://i.imgur.com/imwoimm.png>
-- ```
-- NativeDB Parameter 5: char* background
-- NativeDB Parameter 6: char* p6
-- ```
-- @param entryLine1 The text label to display as the first line of the warning message.
-- @param instructionalKey This is an enum, check the description for a list.
-- @param entryLine2 The text label to display as the second line of the warning message.
-- @param p3 Purpose unknown.
-- @param p4 Purpose unknown.
-- @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param p6 Purpose unknown.
-- @param showBg Purpose unknown.
-- @param p8 Purpose unknown.
function Global.SetWarningMessage(entryLine1, instructionalKey, entryLine2, p3, p4, showBg, p8)
	return _in(0x7B1776B3B53F8D74, _ts(entryLine1), instructionalKey, _ts(entryLine2), p3, p4, _i, _i, showBg, p8)
end

--- Param names copied from the corresponding scaleform function "SET_LIST_ROW"
function Global.SetWarningMessageListRow(index, name, cash, rp, lvl, colour)
	return _in(0x0C5A80A9E096D529, index, _ts(name), cash, rp, lvl, colour, _r)
end
Global.N_0x0c5a80a9e096d529 = Global.SetWarningMessageListRow

--- You can only use text entries. No custom text.
-- C# Example :
-- Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);
-- you can recreate this easily with scaleforms
-- ---------------
-- Fixed native name, from before nativedb restoration.
-- ```
-- ```
-- NativeDB Added Parameter 10: Any p9
function Global.SetWarningMessageWithHeader(titleMsg, entryLine1, flags, promptMsg, p4, p5, background, showBg)
	return _in(0xDC38CC1E35B6A5D7, _ts(titleMsg), _ts(entryLine1), flags, _ts(promptMsg), p4, p5, background, _i, showBg)
end
Global.SetWarningMessage_2 = Global.SetWarningMessageWithHeader

--- You can only use text entries. No custom text.
-- ```
-- ```
-- NativeDB Added Parameter 11: Any p10
function Global.SetWarningMessageWithHeaderAndSubstringFlags(entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, p6, p9)
	return _in(0x701919482C74B5AB, _ts(entryHeader), _ts(entryLine1), instructionalKey, _ts(entryLine2), p4, p5, p6, _i, _i, p9)
end
Global.SetWarningMessage_3 = Global.SetWarningMessageWithHeaderAndSubstringFlags

--- NativeDB Introduced: v1493
-- @param entryHeader :
-- @param entryLine1 :
-- @param flags :
-- @param entryLine2 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
-- @param showBg :
-- @param p9 :
-- @param p10 :
function Global.SetWarningMessageWithHeaderUnk(entryHeader, entryLine1, flags, entryLine2, p4, p5, showBg, p9, p10)
	return _in(0x38B55259C2E078ED, _ts(entryHeader), _ts(entryLine1), flags, _ts(entryLine2), p4, p5, _i, _i, showBg, p9, p10)
end

--- This native removes the current waypoint from the map.
-- Example:
-- C#:
-- Function.Call(Hash.SET_WAYPOINT_OFF);
-- C++:
-- UI::SET_WAYPOINT_OFF();
function Global.SetWaypointOff()
	return _in(0xA7E4E2D361C2627F)
end

--- Changes the selected ped aiming animation style.
-- Note : You must use GET_HASH_KEY!
-- Strings to use with GET_HASH_KEY :
-- "Ballistic",
-- "Default",
-- "Fat",
-- "Female",
-- "FirstPerson",
-- "FirstPersonAiming",
-- "FirstPersonFranklin",
-- "FirstPersonFranklinAiming",
-- "FirstPersonFranklinRNG",
-- "FirstPersonFranklinScope",
-- "FirstPersonMPFemale",
-- "FirstPersonMichael",
-- "FirstPersonMichaelAiming",
-- "FirstPersonMichaelRNG",
-- "FirstPersonMichaelScope",
-- "FirstPersonRNG",
-- "FirstPersonScope",
-- "FirstPersonTrevor",
-- "FirstPersonTrevorAiming",
-- "FirstPersonTrevorRNG",
-- "FirstPersonTrevorScope",
-- "Franklin",
-- "Gang",
-- "Gang1H",
-- "GangFemale",
-- "Hillbilly",
-- "MP_F_Freemode",
-- "Michael",
-- "SuperFat",
-- "Trevor"
function Global.SetWeaponAnimationOverride(ped, animStyle)
	return _in(0x1055AC3A667F09D9, ped, _ch(animStyle))
end

function Global.SetWeaponDamageModifier(weaponHash, damageAmount)
	return _in(0x4757F00BC6323CFE, _ch(weaponHash), damageAmount)
end
Global.N_0x4757f00bc6323cfe = Global.SetWeaponDamageModifier

--- NativeDB Parameter 1: Hash camoComponentHash
function Global.SetWeaponObjectLiveryColor(weaponObject, camoComponentHash, colorIndex)
	return _in(0x5DA825A85D0EA6E6, weaponObject, camoComponentHash, colorIndex)
end
Global.N_0x5da825a85d0ea6e6 = Global.SetWeaponObjectLiveryColor

function Global.SetWeaponObjectTintIndex(weapon, tintIndex)
	return _in(0xF827589017D4E4A9, weapon, tintIndex)
end

--- The following weatherTypes are used in the scripts:
-- "CLEAR"
-- "EXTRASUNNY"
-- "CLOUDS"
-- "OVERCAST"
-- "RAIN"
-- "CLEARING"
-- "THUNDER"
-- "SMOG"
-- "FOGGY"
-- "XMAS"
-- "SNOWLIGHT"
-- "BLIZZARD"
function Global.SetWeatherTypeNow(weatherType)
	return _in(0x29B487C359E19889, _ts(weatherType))
end

--- The following weatherTypes are used in the scripts:
-- "CLEAR"
-- "EXTRASUNNY"
-- "CLOUDS"
-- "OVERCAST"
-- "RAIN"
-- "CLEARING"
-- "THUNDER"
-- "SMOG"
-- "FOGGY"
-- "XMAS"
-- "SNOWLIGHT"
-- "BLIZZARD"
function Global.SetWeatherTypeNowPersist(weatherType)
	return _in(0xED712CA327900C8A, _ts(weatherType))
end

function Global.SetWeatherTypeOvertimePersist(weatherType, time)
	return _in(0xFB5045B7C42B75BF, _ts(weatherType), time)
end
Global.SetWeatherTypeOverTime = Global.SetWeatherTypeOvertimePersist

--- The following weatherTypes are used in the scripts:
-- "CLEAR"
-- "EXTRASUNNY"
-- "CLOUDS"
-- "OVERCAST"
-- "RAIN"
-- "CLEARING"
-- "THUNDER"
-- "SMOG"
-- "FOGGY"
-- "XMAS"
-- "SNOWLIGHT"
-- "BLIZZARD"
function Global.SetWeatherTypePersist(weatherType)
	return _in(0x704983DF373B198F, _ts(weatherType))
end

--- Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
-- execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
-- Note that unlike most of the other weather natives, this native takes the hash of the weather name, not the plain string. These are the weather names and their hashes:
-- CLEAR	0x36A83D84
-- EXTRASUNNY	0x97AA0A79
-- CLOUDS	0x30FDAF5C
-- OVERCAST	0xBB898D2D
-- RAIN	0x54A69840
-- CLEARING	0x6DB1A50D
-- THUNDER	0xB677829F
-- SMOG	0x10DCF4B5
-- FOGGY	0xAE737644
-- XMAS	0xAAC9C895
-- SNOWLIGHT	0x23FB812B
-- BLIZZARD	0x27EA2814
-- /* OLD INVALID INFO BELOW */
-- Not tested. Based purely on disassembly. Instantly sets the weather to sourceWeather, then transitions to targetWeather over the specified transitionTime in seconds.
-- If an invalid hash is specified for sourceWeather, the current weather type will be used.
-- If an invalid hash is specified for targetWeather, the next weather type will be used.
-- If an invalid hash is specified for both sourceWeather and targetWeather, the function just changes the transition time of the current transition.
function Global.SetWeatherTypeTransition(weatherType1, weatherType2, percentWeather2)
	return _in(0x578C752848ECFA0C, _ch(weatherType1), _ch(weatherType2), percentWeather2)
end

--- NativeDB Return Type: void
function Global.SetWidescreenBorders(p0, p1)
	return _in(0xDCD4EA924F42D01A, p0, p1, _r, _ri)
end

function Global.SetWidescreenFormat(p0)
	return _in(0xC3B07BA00A83B0F1, p0)
end

--- Sets the the raw wind speed value.
function Global.SetWind(speed)
	return _in(0xAC3A74E8384A9919, speed)
end

--- This is NOT a heading. It's a FLOAT value from 0.0-7.0. Look at this image:
-- i.imgur.com/FwVpGS6.png
-- ----------------------------
-- This appears to be a heading, in radians (0-2*pi) -PNWParksFan
function Global.SetWindDirection(direction)
	return _in(0xEB0F4468467B4528, direction)
end

--- Using this native will clamp the wind speed value to a range of 0.0- 12.0. Using SET_WIND sets the same value but without the restriction.
function Global.SetWindSpeed(speed)
	return _in(0xEE09ECEDBABE47FC, speed)
end

function Global.SetZoneEnabled(zoneId, toggle)
	return _in(0xBA5ECEEA120E5611, zoneId, toggle)
end

function Global.Settimera(value)
	return _in(0xC1B1E9A034A63A62, value)
end

function Global.Settimerb(value)
	return _in(0x5AE11BC36633DE4E, value)
end

--- Possible shake types (updated b617d):
-- DEATH_FAIL_IN_EFFECT_SHAKE
-- DRUNK_SHAKE
-- FAMILY5_DRUG_TRIP_SHAKE
-- HAND_SHAKE
-- JOLT_SHAKE
-- LARGE_EXPLOSION_SHAKE
-- MEDIUM_EXPLOSION_SHAKE
-- SMALL_EXPLOSION_SHAKE
-- ROAD_VIBRATION_SHAKE
-- SKY_DIVING_SHAKE
-- VIBRATE_SHAKE
function Global.ShakeCam(cam, type, amplitude)
	return _in(0x6A25241C340D3822, cam, _ts(type), amplitude)
end

--- p0 argument found in the b617d scripts: "DRUNK_SHAKE"
function Global.ShakeCinematicCam(p0, p1)
	return _in(0xDCE214D9ED58F3CF, _ts(p0), p1)
end

--- Possible shake types (updated b617d):
-- DEATH_FAIL_IN_EFFECT_SHAKE
-- DRUNK_SHAKE
-- FAMILY5_DRUG_TRIP_SHAKE
-- HAND_SHAKE
-- JOLT_SHAKE
-- LARGE_EXPLOSION_SHAKE
-- MEDIUM_EXPLOSION_SHAKE
-- SMALL_EXPLOSION_SHAKE
-- ROAD_VIBRATION_SHAKE
-- SKY_DIVING_SHAKE
-- VIBRATE_SHAKE
function Global.ShakeGameplayCam(shakeName, intensity)
	return _in(0xFD55E49555E017CF, _ts(shakeName), intensity)
end

--- Something to do with shake:
-- CAM::_F4C8CF9E353AFECA("HAND_SHAKE", 0.2);
function Global.ShakeScriptGlobal(p0, p1)
	return _in(0xF4C8CF9E353AFECA, _ts(p0), p1)
end
Global.N_0xf4c8cf9e353afeca = Global.ShakeScriptGlobal

function Global.ShapeTestResultEntity(entityHit)
	return _in(0x2B3334BCA57CD799, entityHit)
end
Global.N_0x2b3334bca57cd799 = Global.ShapeTestResultEntity

function Global.ShiftLeft(value, bitShift)
	return _in(0xEDD95A39E5544DE8, value, bitShift, _r, _ri)
end

function Global.ShiftRight(value, bitShift)
	return _in(0x97EF1E5BCE9DC075, value, bitShift, _r, _ri)
end

--- this is what p7 does in disassembly
-- __int8 var = 32;
-- if (isInvisible)
-- {
-- var = 16;
-- }
-- int v110 = var | 2 * p7;
function Global.ShootSingleBulletBetweenCoords(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed)
	return _in(0x867654CBC7606F2C, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed)
end

--- entity - entity to ignore
-- ```
-- ```
-- NativeDB Added Parameter 15: Any p14
function Global.ShootSingleBulletBetweenCoordsIgnoreEntity(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity)
	return _in(0xE3A7742E0B7A2F8B, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed, entity)
end
Global.N_0xe3a7742e0b7a2f8b = Global.ShootSingleBulletBetweenCoordsIgnoreEntity
Global.ShootSingleBulletBetweenCoordsPresetParams = Global.ShootSingleBulletBetweenCoordsIgnoreEntity

--- Since latest patches has 18 parameters.
-- entity - entity to ignore
-- ```
-- ```
-- NativeDB Added Parameter 19: Any p18
-- NativeDB Added Parameter 20: Any p19
function Global.ShootSingleBulletBetweenCoordsIgnoreEntityNew(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)
	return _in(0xBFE5756E7407064A, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)
end
Global.N_0xbfe5756e7407064a = Global.ShootSingleBulletBetweenCoordsIgnoreEntityNew
Global.ShootSingleBulletBetweenCoordsWithExtraParams = Global.ShootSingleBulletBetweenCoordsIgnoreEntityNew

--- Returns true if the game is using the metric measurement system, false if imperial is used.
-- This is what r\* uses for the different label types (either ones with miles in them or with km, as well as some other measurement related labels).
-- @return Returns true if the game is using the metric measurement system, false if imperial is used.
function Global.ShouldUseMetricMeasurements()
	return _in(0xD3D15555431AB793, _r)
end
Global.N_0xd3d15555431ab793 = Global.ShouldUseMetricMeasurements
Global.IsGameUsingMetricMeasurementSystem = Global.ShouldUseMetricMeasurements

--- Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#_0x14892474891E09EB).
-- To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#_0x23C3EB807312F01A).
-- Example code result:
-- ![](https://i.imgur.com/iZ9tNWl.png)
-- @param blip The blip to toggle the half blue circle around the blip on.
-- @param toggle Enables or disables the half blue circle around the blip (on the left side).
function Global.ShowCrewIndicatorOnBlip(blip, toggle)
	return _in(0xDCFB5D4DB8BF367E, blip, toggle)
end
Global.N_0xdcfb5d4db8bf367e = Global.ShowCrewIndicatorOnBlip
Global.SetBlipCrew = Global.ShowCrewIndicatorOnBlip

--- Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
-- To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#_0xDCFB5D4DB8BF367E).
-- @param blip The blip to toggle the half circle on.
-- @param toggle Enables or disables the half circle around the blip (on the right side of the blip).
function Global.ShowFriendIndicatorOnBlip(blip, toggle)
	return _in(0x23C3EB807312F01A, blip, toggle)
end
Global.N_0x23c3eb807312f01a = Global.ShowFriendIndicatorOnBlip
Global.SetBlipFriend = Global.ShowFriendIndicatorOnBlip

--- Adds the GTA: Online player heading indicator to a blip.
function Global.ShowHeadingIndicatorOnBlip(blip, toggle)
	return _in(0x5FBCA48327B914DF, blip, toggle)
end
Global.N_0x5fbca48327b914df = Global.ShowHeadingIndicatorOnBlip

function Global.ShowHeightOnBlip(blip, toggle)
	return _in(0x75A16C3DA34F1245, blip, toggle)
end
Global.N_0x75a16c3da34f1245 = Global.ShowHeightOnBlip

--- This function shows various HUD (Heads-up Display) components.
-- Listed below are the integers and the corresponding HUD component.
-- -   1 : WANTED_STARS
-- -   2 : WEAPON_ICON
-- -   3 : CASH
-- -   4 : MP_CASH
-- -   5 : MP_MESSAGE
-- -   6 : VEHICLE_NAME
-- -   7 : AREA_NAME
-- -   8 : VEHICLE_CLASS
-- -   9 : STREET_NAME
-- -   10 : HELP_TEXT
-- -   11 : FLOATING_HELP_TEXT_1
-- -   12 : FLOATING_HELP_TEXT_2
-- -   13 : CASH_CHANGE
-- -   14 : RETICLE
-- -   15 : SUBTITLE_TEXT
-- -   16 : RADIO_STATIONS
-- -   17 : SAVING_GAME
-- -   18 : GAME_STREAM
-- -   19 : WEAPON_WHEEL
-- -   20 : WEAPON_WHEEL_STATS
-- -   21 : HUD_COMPONENTS
-- -   22 : HUD_WEAPONS
-- These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#_0x6806C51AD12B83B8) native, but instead hides the HUD component.
function Global.ShowHudComponentThisFrame(id)
	return _in(0x0B4DF1FA60C0E664, id)
end

function Global.ShowNumberOnBlip(blip, number)
	return _in(0xA3C0B359DCB848B6, blip, number)
end

--- Toggles a cyan outline around the blip.
-- Color can be changed with `SET_BLIP_SECONDARY_COLOUR`. Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#_0x23C3EB807312F01A)).
-- ~~Oddly enough, this native is called `_SET_BLIP_FRIENDLY`, but the color of the circle is only changable for the 'crew' half-circle (using `SET_BLIP_SECONDARY_COLOUR`), the 'friendly' side can NOT be changed and will always stay cyan/blue. This makes it seem more likely that this should be called `_SET_BLIP_CREW_CIRCLE` or something similar?~~
-- Real name is `SHOW_OUTLINE_INDICATOR_ON_BLIP`, discovered by Blattersturm.
-- @param blip The blip to toggle the outline on.
-- @param toggle Enables or disables the outline.
function Global.ShowOutlineIndicatorOnBlip(blip, toggle)
	return _in(0xB81656BC81FE24D1, blip, toggle)
end
Global.N_0xb81656bc81fe24d1 = Global.ShowOutlineIndicatorOnBlip
Global.SetBlipFriendly = Global.ShowOutlineIndicatorOnBlip

--- If toggle is true, the ped's head is shown in the pause menu
-- If toggle is false, the ped's head is not shown in the pause menu
function Global.ShowPedInPauseMenu(toggle)
	return _in(0x4EBB7E87AA0DBED4, toggle)
end
Global.N_0x4ebb7e87aa0dbed4 = Global.ShowPedInPauseMenu

--- Something with Social Club or online.
function Global.ShowSigninUi()
	return _in(0x60E892BA4F5BDCA4)
end
Global.N_0x60e892ba4f5bdca4 = Global.ShowSigninUi

--- Adds a green checkmark on top of a blip.
function Global.ShowTickOnBlip(blip, toggle)
	return _in(0x74513EA3E505181E, blip, toggle)
end
Global.N_0x74513ea3e505181e = Global.ShowTickOnBlip
Global.SetBlipChecked = Global.ShowTickOnBlip

--- Starts a new singleplayer game (at the prologue).
function Global.ShutdownAndLaunchSinglePlayerGame()
	return _in(0x593850C16A36B692)
end

--- Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
-- If you're already in SP then it'll re-load singleplayer.
-- You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
-- Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
-- @return always seems to be 1
function Global.ShutdownAndLoadMostRecentSave()
	return _in(0x9ECA15ADFE141431, _r)
end
Global.N_0x9eca15adfe141431 = Global.ShutdownAndLoadMostRecentSave

function Global.ShutdownCreatorBudget()
	return _in(0xCCE26000E9A6FAD7)
end
Global.N_0xcce26000e9a6fad7 = Global.ShutdownCreatorBudget

function Global.ShutdownLoadingScreen()
	return _in(0x078EBE9809CCD637)
end

--- Shuts down the `loadingScreen` NUI frame, similarly to `SHUTDOWN_LOADING_SCREEN`.
function Global.ShutdownLoadingScreenNui()
	return _in(0xb9234afb)
end

--- This is to make the player walk without accepting input from INPUT.
-- gaitType is in increments of 100s. 2000, 500, 300, 200, etc.
-- p4 is always 1 and p5 is always 0.
-- C# Example :
-- Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go forward for 100ms
function Global.SimulatePlayerInputGait(player, amount, gaitType, speed, p4, p5)
	return _in(0x477D5D63E63ECA5D, player, amount, gaitType, speed, p4, p5)
end

function Global.Sin(value)
	return _in(0x0BADBFA3B172435F, value, _r, _rf)
end

function Global.SkipRadioForward()
	return _in(0x6DDBBDD98E2E9C25)
end

function Global.SkipTimeInPlaybackRecordedVehicle(p0, p1)
	return _in(0x9438F7AD68771A20, p0, p1)
end

function Global.SkipToEndAndStopPlaybackRecordedVehicle(vehicle)
	return _in(0xAB8E2EDA0C0A5883, vehicle)
end

function Global.SkipToNextScriptedConversationLine()
	return _in(0x9663FE6B7A61EB00)
end

--- This native always come right before SetEntityQuaternion where its final 4 parameters are SlerpNearQuaternion p9 to p12
-- @param t acceleration differenzial (am_rollercoaster.c func_134)
-- @param x rotation parameter (maybe X axys)
-- @param y rotation parameter (maybe X axys)
-- @param z rotation parameter (maybe X axys)
-- @param w rotation parameter (maybe X axys)
-- @param x1 rotation parameter (maybe Y axys)
-- @param y1 rotation parameter (maybe Y axys)
-- @param z1 rotation parameter (maybe Y axys)
-- @param w1 rotation parameter (maybe Y axys)
-- @param outX output value calculated (X)
-- @param outY output value calculated (Y)
-- @param outZ output value calculated (Z)
-- @param outW output value calculated (W)
function Global.SlerpNearQuaternion(t, x, y, z, w, x1, y1, z1, w1)
	return _in(0xF2F6A2FA49278625, t, x, y, z, w, x1, y1, z1, w1, _f, _f, _f, _f)
end
Global.N_0xf2f6a2fa49278625 = Global.SlerpNearQuaternion

--- Returns true if the object has finished moving.
-- If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
-- See also: gtag.gtagaming.com/opcode-database/opcode/034E/
function Global.SlideObject(object, toX, toY, toZ, speedX, speedY, speedZ, collision)
	return _in(0x2FDFF4107B8C1147, object, toX, toY, toZ, speedX, speedY, speedZ, collision, _r)
end

--- int index = 0 to 13
-- 0 = front right window
-- 1 = front left window
-- 2 = rear right window
-- 3 = rear left window
-- 4 = unsure
-- 5 = unsure
-- 6 = windowscreen
-- 7 = unsure
-- 8 = rear windowscreen
-- 9 = unsure
-- 10 = unsure
-- 11 = unsure
-- 12 = unsure
-- 13 = unsure
function Global.SmashVehicleWindow(vehicle, index)
	return _in(0x9E5B5E4D2CCD2259, vehicle, index, _r, _ri)
end

--- SET_*
function Global.SoundVehicleHornThisFrame(vehicle)
	return _in(0x9C11908013EA4715, vehicle)
end
Global.N_0x9c11908013ea4715 = Global.SoundVehicleHornThisFrame

function Global.SpecialAbilityActivate(player)
	return _in(0x821FDC827D6F4090, player)
end
Global.N_0x821fdc827d6f4090 = Global.SpecialAbilityActivate

--- p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
function Global.SpecialAbilityChargeAbsolute(player, p1, p2)
	return _in(0xB7B0870EB531D08D, player, p1, p2)
end

--- p1 appears to always be 1 (only comes up twice)
function Global.SpecialAbilityChargeContinuous(player, p2)
	return _in(0xED481732DFF7E997, player, p2)
end

--- 2 matches. p1 was always true.
function Global.SpecialAbilityChargeLarge(player, p1, p2)
	return _in(0xF733F45FA4497D93, player, p1, p2)
end

--- Only 1 match. Both p1 & p2 were true.
function Global.SpecialAbilityChargeMedium(player, p1, p2)
	return _in(0xF113E3AA9BC54613, player, p1, p2)
end

--- normalizedValue is from 0.0 - 1.0
-- p2 is always 1
function Global.SpecialAbilityChargeNormalized(player, normalizedValue, p2)
	return _in(0xA0696A65F009EE18, player, normalizedValue, p2)
end
Global.ResetSpecialAbilityControlsCinematic = Global.SpecialAbilityChargeNormalized

--- Every occurrence of p1 & p2 were both true.
function Global.SpecialAbilityChargeSmall(player, p1, p2)
	return _in(0x2E7B9B683481687D, player, p1, p2)
end

function Global.SpecialAbilityDeactivate(player)
	return _in(0xD6A953C6D1492057, player)
end

function Global.SpecialAbilityDeactivateFast(player)
	return _in(0x9CB5CE07A3968D5A, player)
end

function Global.SpecialAbilityDeplete(p0)
	return _in(0x17F7471EACA78290, p0)
end
Global.N_0x17f7471eaca78290 = Global.SpecialAbilityDeplete

--- p1 was always true.
function Global.SpecialAbilityDepleteMeter(player, p1)
	return _in(0x1D506DBBBC51E64B, player, p1)
end

--- Also known as _RECHARGE_SPECIAL_ABILITY
function Global.SpecialAbilityFillMeter(player, p1)
	return _in(0x3DACA8DDC6FD4980, player, p1)
end

function Global.SpecialAbilityLock(playerModel)
	return _in(0x6A09D0D590A47D13, _ch(playerModel))
end

function Global.SpecialAbilityReset(player)
	return _in(0x375F0E738F861A94, player)
end

function Global.SpecialAbilityUnlock(playerModel)
	return _in(0xF145F3BE2EFA9A3B, _ch(playerModel))
end

function Global.Sqrt(value)
	return _in(0x71D93B57D07F9804, value, _r, _rf)
end

function Global.StabiliseEntityAttachedToHeli(vehicle, entity, p2)
	return _in(0x374706271354CB18, vehicle, entity, p2)
end
Global.N_0x374706271354cb18 = Global.StabiliseEntityAttachedToHeli

--- Example:
-- This will start the alarm at Fort Zancudo.
-- AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
-- First parameter (char) is the name of the alarm.
-- Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.
-- ----------
-- It DOES make a difference but it has to do with the duration or something I dunno yet
-- ----------
-- Found in the b617d scripts:
-- AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS", 0);
-- AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER", 1);
-- AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B", 0);
-- AUDIO::START_ALARM("BIG_SCORE_HEIST_VAULT_ALARMS", a_0);
-- AUDIO::START_ALARM("FBI_01_MORGUE_ALARMS", 1);
-- AUDIO::START_ALARM("FIB_05_BIOTECH_LAB_ALARMS", 0);
-- AUDIO::START_ALARM("JEWEL_STORE_HEIST_ALARMS", 0);
-- AUDIO::START_ALARM("PALETO_BAY_SCORE_ALARM", 1);
-- AUDIO::START_ALARM("PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM", 0);
-- AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
-- AUDIO::START_ALARM("PORT_OF_LS_HEIST_SHIP_ALARMS", 0);
-- AUDIO::START_ALARM("PRISON_ALARMS", 0);
-- AUDIO::START_ALARM("PROLOGUE_VAULT_ALARMS", 0);
function Global.StartAlarm(alarmName, p2)
	return _in(0x0355EF116C4C97B2, _ts(alarmName), p2)
end

--- Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
-- List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC
function Global.StartAudioScene(scene)
	return _in(0x013A80FC08F6E4F2, _ts(scene), _r)
end

--- I can 100% confirm this is some kind of START_* native.
-- Next character in the name is either C, D or E.
-- Used only once in the scripts (benchmark.ysc).
function Global.StartBenchmarkRecording()
	return _in(0x92790862E36C2ADA)
end
Global.N_0x92790862e36c2ada = Global.StartBenchmarkRecording

--- some kind of flag. Usually 0.
function Global.StartCutscene(flags)
	return _in(0x186D5CB5E7B0FF7B, flags)
end

--- p3: some kind of flag. Usually 0.
function Global.StartCutsceneAtCoords(x, y, z, flags)
	return _in(0x1C9ADDA3244A1FBF, x, y, z, flags)
end

function Global.StartEntityFire(entity)
	return _in(0xF6A9D9708F6F23DF, entity, _r, _ri)
end

function Global.StartFindKvp(prefix)
	return _in(0xdd379006, _ts(prefix), _r, _ri)
end

function Global.StartFiringAmnesty(duration)
	return _in(0xBF9BD71691857E48, duration)
end

--- Starts a new GPS custom-route, allowing you to plot lines on the map.
-- Lines are drawn directly between points.
-- The GPS custom route works like the GPS multi route, except it does not follow roads.
-- **Example result:**
-- ![](https://i.imgur.com/BDm5pzt.png)
-- @param hudColor The HUD color of the GPS path.
-- @param displayOnFoot Draws the path regardless if the player is in a vehicle or not.
-- @param followPlayer Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
function Global.StartGpsCustomRoute(hudColor, displayOnFoot, followPlayer)
	return _in(0xDB34E8D56FC13B08, hudColor, displayOnFoot, followPlayer)
end
Global.N_0xdb34e8d56fc13b08 = Global.StartGpsCustomRoute

--- Starts a new GPS multi-route, allowing you to create custom GPS paths.
-- GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
-- Once the player has passed a point, the GPS will no longer force its path through it.
-- Works independently from the player-placed waypoint and blip routes.
-- **Example result:**
-- ![](https://i.imgur.com/ZZHQatX.png)
-- @param hudColor The HUD color of the GPS path.
-- @param routeFromPlayer Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
-- @param displayOnFoot Draws the GPS path regardless if the player is in a vehicle or not.
function Global.StartGpsMultiRoute(hudColor, routeFromPlayer, displayOnFoot)
	return _in(0x3D3D15AF7BCAAF83, hudColor, routeFromPlayer, displayOnFoot)
end
Global.N_0x3d3d15af7bcaaf83 = Global.StartGpsMultiRoute

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 13: Any p12
-- NativeDB Added Parameter 14: Any p13
-- NativeDB Added Parameter 15: Any p14
-- NativeDB Added Parameter 16: Any p15
function Global.StartNetworkedParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x6F60E89A7B64EE1D, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _r, _ri)
end
Global.N_0x6f60e89a7b64ee1d = Global.StartNetworkedParticleFxLoopedOnEntity
Global.StartParticleFxLoopedOnEntity_2 = Global.StartNetworkedParticleFxLoopedOnEntity

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 14: Any p13
-- NativeDB Added Parameter 15: Any p14
-- NativeDB Added Parameter 16: Any p15
-- NativeDB Added Parameter 17: Any p16
function Global.StartNetworkedParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xDDE23F30CC5A0F03, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _r, _ri)
end
Global.N_0xdde23f30cc5a0f03 = Global.StartNetworkedParticleFxLoopedOnEntityBone
Global.StartParticleFxLoopedOnEntityBone_2 = Global.StartNetworkedParticleFxLoopedOnEntityBone

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 12: BOOL p11
function Global.StartNetworkedParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0xF56B8137DF10135D, _ts(effectName), xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _r)
end
Global.StartParticleFxNonLoopedAtCoord_2 = Global.StartNetworkedParticleFxNonLoopedAtCoord

--- network fx
function Global.StartNetworkedParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
	return _in(0xC95EB1DB6E92113D, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ, _r)
end
Global.StartParticleFxNonLoopedOnEntity_2 = Global.StartNetworkedParticleFxNonLoopedOnEntity

--- network fx
function Global.StartNetworkedParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0xA41B6A43642AC2CF, _ts(effectName), ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end
Global.StartParticleFxNonLoopedOnPedBone_2 = Global.StartNetworkedParticleFxNonLoopedOnPedBone

--- Examples:
-- g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
-- l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
-- SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
-- SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
-- SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
-- SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
-- SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
-- SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
-- SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);
-- Decompiled examples of usage when starting a script:
-- SCRIPT::REQUEST_SCRIPT(a_0);
-- if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
-- SYSTEM::START_NEW_SCRIPT(a_0, v_3);
-- SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
-- return 1;
-- }
-- or:
-- v_2 = "MrsPhilips2";
-- SCRIPT::REQUEST_SCRIPT(v_2);
-- while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
-- SCRIPT::REQUEST_SCRIPT(v_2);
-- SYSTEM::WAIT(0);
-- }
-- sub_8792(36);
-- SYSTEM::START_NEW_SCRIPT(v_2, 17000);
-- SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
-- All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
function Global.StartNewScript(scriptName, stackSize)
	return _in(0xE81651AD79516E48, _ts(scriptName), stackSize, _r, _ri)
end

--- return : script thread id, 0 if failed
-- Pass pointer to struct of args in p1, size of struct goes into p2
function Global.StartNewScriptWithArgs(scriptName, argCount, stackSize)
	return _in(0xB8BA7F44DF1575E1, _ts(scriptName), _i, argCount, stackSize, _r, _ri)
end

function Global.StartNewScriptWithNameHash(scriptHash, stackSize)
	return _in(0xEB1C67C3A5333A92, _ch(scriptHash), stackSize, _r, _ri)
end
Global.StartNewStreamedScript = Global.StartNewScriptWithNameHash

function Global.StartNewScriptWithNameHashAndArgs(scriptHash, argCount, stackSize)
	return _in(0xC4BB298BD441BE78, _ch(scriptHash), _i, argCount, stackSize, _r, _ri)
end
Global.StartNewStreamedScriptWithArgs = Global.StartNewScriptWithNameHashAndArgs

--- GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)
-- p11 seems to be always 0
function Global.StartParticleFxLoopedAtCoord(effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11)
	return _in(0xE184F4F0DC5910E7, _ts(effectName), x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11, _r, _ri)
end

--- list: pastebin.com/N9unUFWY
function Global.StartParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x1AE42C1660FD6517, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _r, _ri)
end

function Global.StartParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xC6EB449E33977F0B, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _r, _ri)
end

function Global.StartParticleFxLoopedOnPedBone(effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xF28DA9F38CD1787C, _ts(effectName), ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _r, _ri)
end

--- GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);
-- Axis - Invert Axis Flags
-- list: pastebin.com/N9unUFWY
-- -------------------------------------------------------------------
-- C#
-- Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
-- char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
-- float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
-- float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
-- float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
-- bool xaxis, yaxis, zaxis = To bool the axis values.
-- example:
-- Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
function Global.StartParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x25129531F77B9ED3, _ts(effectName), xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _r, _ri)
end

--- Starts a particle effect on an entity for example your player.
-- List: pastebin.com/N9unUFWY
-- Example:
-- C#:
-- Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
-- Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
-- however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
function Global.StartParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
	return _in(0x0D53A3B8DA0809D2, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ, _r)
end

--- GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);
-- Axis - Invert Axis Flags
-- list: pastebin.com/N9unUFWY
function Global.StartParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0x0E7E72961BA18619, _ts(effectName), ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end

function Global.StartPetrolTrailDecals(p0)
	return _in(0x99AC7F0D8B9C893D, p0)
end
Global.N_0x99ac7f0d8b9c893d = Global.StartPetrolTrailDecals

function Global.StartPlaybackRecordedVehicle(vehicle, p1, playback, p3)
	return _in(0x3F878F92B3A7A071, vehicle, p1, _ts(playback), p3)
end

function Global.StartPlaybackRecordedVehicleUsingAi(p0, p1, p3, p4)
	return _in(0x29DE5FA52D00428C, p0, p1, _i, p3, p4)
end

function Global.StartPlaybackRecordedVehicleWithFlags(vehicle, p1, playback, p3, p4, p5)
	return _in(0x7D80FD645D4DA346, vehicle, p1, _ts(playback), p3, p4, p5)
end

--- // this enum comes directly from R* so don't edit this
-- enum ePlayerSwitchType
-- {
-- SWITCH_TYPE_AUTO,
-- SWITCH_TYPE_LONG,
-- SWITCH_TYPE_MEDIUM,
-- SWITCH_TYPE_SHORT
-- };
-- Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type. Or just auto, because it calls the same function in executable.
-- ----------------------------------------------------
-- Examples from the decompiled scripts:
-- STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);
-- STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);
-- STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);
-- STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);
-- Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.
-- Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
-- Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
function Global.StartPlayerSwitch(from, to, flags, switchType)
	return _in(0xFAA23F2CBA159D67, from, to, flags, switchType)
end

function Global.StartPlayerTeleport(player, x, y, z, heading, p5, findCollisionLand, p7)
	return _in(0xAD15F075A4DA0FDE, player, x, y, z, heading, p5, findCollisionLand, p7)
end

function Global.StartPreloadedConversation()
	return _in(0x23641AFE870AF385)
end

--- Starts recording a replay.
-- If mode is 0, turns on action replay.
-- If mode is 1, starts recording.
-- If already recording a replay, does nothing.
function Global.StartRecording(mode)
	return _in(0xC3AC2FFF9612AC81, mode)
end
Global.N_0xc3ac2fff9612ac81 = Global.StartRecording

function Global.StartRopeUnwindingFront(ropeId)
	return _in(0x538D1179EC1AA9A9, ropeId)
end

function Global.StartRopeWinding(ropeId)
	return _in(0x1461C72C889E343E, ropeId)
end

--- Second parameter might be length.
function Global.StartSaveArrayWithSize(size, arrayName)
	return _in(0x60FE567DF1B1AF9D, _i, size, _ts(arrayName))
end
Global.StartSaveArray = Global.StartSaveArrayWithSize

function Global.StartSaveData(p1, p2)
	return _in(0xA9575F812C6A7997, _i, p1, p2)
end

--- Second parameter might be length.
function Global.StartSaveStructWithSize(size, structName)
	return _in(0xBF737600CDDBEADD, _i, size, _ts(structName))
end
Global.StartSaveStruct = Global.StartSaveStructWithSize

function Global.StartScriptConversation(p0, p1, p2, p3)
	return _in(0x6B17C62C9635D2DC, p0, p1, p2, p3)
end

--- Starts a fire:
-- xyz: Location of fire
-- maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
-- isGasFire: Whether or not the fire is powered by gasoline.
function Global.StartScriptFire(X, Y, Z, maxChildren, isGasFire)
	return _in(0x6B83617E04503888, X, Y, Z, maxChildren, isGasFire, _r, _ri)
end

function Global.StartScriptPhoneConversation(p0, p1)
	return _in(0x252E5F915EABB675, p0, p1)
end

function Global.StartShapeTestBound(entity, flags1, flags2)
	return _in(0x37181417CE7C8900, entity, flags1, flags2, _r, _ri)
end
Global.N_0x37181417ce7c8900 = Global.StartShapeTestBound

function Global.StartShapeTestBoundingBox(entity, flags1, flags2)
	return _in(0x052837721A854EC7, entity, flags1, flags2, _r, _ri)
end
Global.N_0x052837721a854ec7 = Global.StartShapeTestBoundingBox

function Global.StartShapeTestBox(x, y, z, x1, y2, z2, rotX, rotY, rotZ, p9, p10, entity, p12)
	return _in(0xFE466162C4401D18, x, y, z, x1, y2, z2, rotX, rotY, rotZ, p9, p10, entity, p12, _r, _ri)
end
Global.N_0xfe466162c4401d18 = Global.StartShapeTestBox

--- Raycast from point to point, where the ray has a radius.
-- flags:
-- vehicles=10
-- peds =12
-- Iterating through flags yields many ped / vehicle/ object combinations
-- p9 = 7, but no idea what it does
-- Entity is an entity to ignore
function Global.StartShapeTestCapsule(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
	return _in(0x28579D1B8F8AAC80, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9, _r, _ri)
end
Global.Cast_3dRayPointToPoint = Global.StartShapeTestCapsule

--- Returns a ray (?) going from x1, y1, z1 to x2, y2, z2.
-- entity = 0 most of the time.
-- p8 = 7 most of the time.
-- Result of this function is passed to WORLDPROBE::_GET_RAYCAST_RESULT as a first argument.
function Global.StartShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, ent, p8)
	return _in(0x7EE9F5D83DD4F90E, x1, y1, z1, x2, y2, z2, flags, ent, p8, _r, _ri)
end
Global.N_0x7ee9f5d83dd4f90e = Global.StartShapeTestLosProbe

--- Not sure how or why this differs from 0x7EE9F5D83DD4F90E, but it does.
-- This function casts a ray from Point1 to Point2 and returns it's ray handle.  A simple ray cast will 'shoot' a line from point A to point B, and return whether or not the ray reached it's destination or if it hit anything and if it did hit anything, will return the handle of what it hit (entity handle) and coordinates of where the ray reached.
-- You can use _GET_RAYCAST_RESULT to get the result of the raycast
-- Entity is an entity to ignore, such as the player.
-- Flags are intersection bit flags.  They tell the ray what to care about and what not to care about when casting. Passing -1 will intersect with everything, presumably.
-- Flags:
-- 1: Intersect with map
-- 2: Intersect with vehicles (used to be mission entities?) (includes train)
-- 4: Intersect with peds? (same as 8)
-- 8: Intersect with peds? (same as 4)
-- 16: Intersect with objects
-- 32: Water?
-- 64: Unknown
-- 128: Unknown
-- 256: Intersect with vegetation (plants, coral. trees not included)
-- NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
function Global.StartShapeTestRay(x1, y1, z1, x2, y2, z2, flags, entity, p8)
	return _in(0x377906D8A31E5586, x1, y1, z1, x2, y2, z2, flags, entity, p8, _r, _ri)
end
Global.CastRayPointToPoint = Global.StartShapeTestRay

--- it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
-- In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
function Global.StartShapeTestSurroundingCoords(flag, entity, flag2)
	return _in(0xFF6BE494C7987F34, _v, _v, flag, entity, flag2, _r, _ri)
end
Global.N_0xff6be494c7987f34 = Global.StartShapeTestSurroundingCoords

--- Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
function Global.StartShapeTestSweptSphere(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
	return _in(0xE6AC6C45FBE83004, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9, _r, _ri)
end
Global.N_0xe6ac6c45fbe83004 = Global.StartShapeTestSweptSphere
Global.StartShapeTestCapsule_2 = Global.StartShapeTestSweptSphere

--- NativeDB Return Type: void
function Global.StartVehicleAlarm(vehicle)
	return _in(0xB8FF7AB45305C345, vehicle, _r, _ri)
end

--- Sounds the horn for the specified vehicle.
-- vehicle: The vehicle to activate the horn for.
-- mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
-- duration: The duration to sound the horn, in milliseconds.
-- Note: If a player is in the vehicle, it will only sound briefly.
function Global.StartVehicleHorn(vehicle, duration, mode, forever)
	return _in(0x9C8C6504B5B63D2C, vehicle, duration, _ch(mode), forever)
end

--- Please change to "void"!
-- ---------------------------------
-- Example:
-- for (v_2 = 0; v_2 <= 4; v_2 += 1) {
-- STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
-- }
function Global.StatClearSlotForReload(statSlot)
	return _in(0xEB0A72181D4AA4AD, statSlot, _r, _ri)
end

function Global.StatDeleteSlot(p0)
	return _in(0x49A49BED12794D70, p0, _r, _ri)
end

function Global.StatGetBool(statHash, p2)
	return _in(0x11B5E6D2AE73F48E, _ch(statHash), _i --[[ actually bool ]], p2, _r)
end

--- p2 - Default value? Seems to be -1 most of the time.
function Global.StatGetBoolMasked(statName, mask, p2)
	return _in(0x10FE3F1B79F9B071, _ch(statName), mask, p2, _r)
end

function Global.StatGetCancelSaveMigrationStatus()
	return _in(0x567384DFA67029E6, _r, _ri)
end
Global.N_0x567384dfa67029e6 = Global.StatGetCancelSaveMigrationStatus

function Global.StatGetDate(statHash, p2, p3)
	return _in(0x8B0FACEFC36C824B, _ch(statHash), _i, p2, p3, _r)
end

function Global.StatGetFloat(statHash, p2)
	return _in(0xD7AE6C9C9C6AC54C, _ch(statHash), _f, p2, _r)
end

--- p2 appears to always be -1
function Global.StatGetInt(statHash, p2)
	return _in(0x767FBC2AC802EF3D, _ch(statHash), _i, p2, _r)
end

function Global.StatGetLicensePlate(statName)
	return _in(0x5473D4195058B2E4, _ch(statName), _r, _s)
end

function Global.StatGetMaskedInt(p0, p2, p3, p4)
	return _in(0x655185A06D9EEAAB, p0, _i, p2, p3, p4, _r)
end

function Global.StatGetNumberOfDays(statName)
	return _in(0xE0E854F5280FB769, _ch(statName), _r, _ri)
end
Global.N_0xe0e854f5280fb769 = Global.StatGetNumberOfDays

function Global.StatGetNumberOfHours(statName)
	return _in(0xF2D4B2FE415AAFC3, _ch(statName), _r, _ri)
end
Global.N_0xf2d4b2fe415aafc3 = Global.StatGetNumberOfHours

function Global.StatGetNumberOfMinutes(statName)
	return _in(0x7583B4BE4C5A41B5, _ch(statName), _r, _ri)
end
Global.N_0x7583b4be4c5a41b5 = Global.StatGetNumberOfMinutes

function Global.StatGetNumberOfSeconds(statName)
	return _in(0x2CE056FF3723F00B, _ch(statName), _r, _ri)
end
Global.N_0x2ce056ff3723f00b = Global.StatGetNumberOfSeconds

function Global.StatGetPos(p0, p4)
	return _in(0x350F82CCB186AA1B, p0, _i, _i, _i, p4, _r)
end

--- NativeDB Parameter 0: int* p0
function Global.StatGetSaveMigrationConsumeContentUnlockStatus(p0)
	return _in(0xCE5AA445ABA8DEE0, _ii(p0) --[[ may be optional ]], _r, _ri)
end
Global.N_0xce5aa445aba8dee0 = Global.StatGetSaveMigrationConsumeContentUnlockStatus

function Global.StatGetSaveMigrationStatus(data)
	return _in(0x886913BBEACA68C1, _ii(data) --[[ may be optional ]], _r, _ri)
end
Global.N_0x886913bbeaca68c1 = Global.StatGetSaveMigrationStatus

--- p1 is always -1 in the script files
function Global.StatGetString(statHash, p1)
	return _in(0xE50384ACC2C3DB74, _ch(statHash), p1, _r, _s)
end

--- Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.
function Global.StatGetUserId(p0)
	return _in(0x2365C388E393BBE2, p0, _r, _s)
end

function Global.StatIncrement(statName, value)
	return _in(0x9B5A68C6489E9909, _ch(statName), value)
end

function Global.StatLoad(p0)
	return _in(0xA651443F437B1CE6, p0, _r)
end

function Global.StatLoadPending(p0)
	return _in(0xA1750FFAFA181661, p0, _r)
end

--- platformName must be one of the following: ps3, xbox360, ps4, xboxone
function Global.StatMigrateSave(platformName)
	return _in(0xA5C80D8E768A9E66, _ts(platformName), _r)
end
Global.N_0xa5c80d8e768a9e66 = Global.StatMigrateSave

function Global.StatSave(p0, p1, p2)
	return _in(0xE07BCA305B82D2FD, p0, p1, p2, _r)
end

function Global.StatSaveMigrationCancel()
	return _in(0x4FEF53183C3C6414, _r)
end
Global.N_0x4fef53183c3c6414 = Global.StatSaveMigrationCancel

--- NativeDB Parameter 0: Hash contentId
function Global.StatSaveMigrationConsumeContentUnlock(contentId, srcPlatform, srcGamerHandle)
	return _in(0x3270F67EED31FBC1, contentId, _ts(srcPlatform), _ts(srcGamerHandle), _r)
end
Global.N_0x3270f67eed31fbc1 = Global.StatSaveMigrationConsumeContentUnlock

function Global.StatSaveMigrationStatusStart()
	return _in(0xC70DDCE56D0D3A99, _r)
end
Global.N_0xc70ddce56d0d3a99 = Global.StatSaveMigrationStatusStart

--- NativeDB Return Type: BOOL
function Global.StatSavePending()
	return _in(0x7D3A583856F2C5AC, _r, _ri)
end

--- NativeDB Return Type: BOOL
function Global.StatSavePendingOrRequested()
	return _in(0xBBB6AD006F1BBEA3, _r, _ri)
end

function Global.StatSetBool(statName, value, save)
	return _in(0x4B33C4243DE0C432, _ch(statName), value, save, _r)
end

function Global.StatSetBoolMasked(statName, value, mask, save)
	return _in(0x5BC62EC1937B9E5B, _ch(statName), value, mask, save, _r)
end

--- p1 always true.
function Global.StatSetCurrentPosixTime(statName, p1)
	return _in(0xC2F84B7F9C4D0C61, _ch(statName), p1, _r)
end

--- 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
-- The structure looks like this:
-- int year
-- int month
-- int day
-- int hour
-- int minute
-- int second
-- int millisecond
-- The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.
function Global.StatSetDate(statName, numFields, save)
	return _in(0x2C29BFB64F4FCBE4, _ch(statName), _i, numFields, save, _r)
end

function Global.StatSetFloat(statName, value, save)
	return _in(0x4851997F37FE9B3C, _ch(statName), value, save, _r)
end

--- The following values have been found in the decompiled scripts:
-- "RC_ABI1"
-- "RC_ABI2"
-- "RC_BA1"
-- "RC_BA2"
-- "RC_BA3"
-- "RC_BA3A"
-- "RC_BA3C"
-- "RC_BA4"
-- "RC_DRE1"
-- "RC_EPS1"
-- "RC_EPS2"
-- "RC_EPS3"
-- "RC_EPS4"
-- "RC_EPS5"
-- "RC_EPS6"
-- "RC_EPS7"
-- "RC_EPS8"
-- "RC_EXT1"
-- "RC_EXT2"
-- "RC_EXT3"
-- "RC_EXT4"
-- "RC_FAN1"
-- "RC_FAN2"
-- "RC_FAN3"
-- "RC_HAO1"
-- "RC_HUN1"
-- "RC_HUN2"
-- "RC_JOS1"
-- "RC_JOS2"
-- "RC_JOS3"
-- "RC_JOS4"
-- "RC_MAU1"
-- "RC_MIN1"
-- "RC_MIN2"
-- "RC_MIN3"
-- "RC_MRS1"
-- "RC_MRS2"
-- "RC_NI1"
-- "RC_NI1A"
-- "RC_NI1B"
-- "RC_NI1C"
-- "RC_NI1D"
-- "RC_NI2"
-- "RC_NI3"
-- "RC_OME1"
-- "RC_OME2"
-- "RC_PA1"
-- "RC_PA2"
-- "RC_PA3"
-- "RC_PA3A"
-- "RC_PA3B"
-- "RC_PA4"
-- "RC_RAM1"
-- "RC_RAM2"
-- "RC_RAM3"
-- "RC_RAM4"
-- "RC_RAM5"
-- "RC_SAS1"
-- "RC_TON1"
-- "RC_TON2"
-- "RC_TON3"
-- "RC_TON4"
-- "RC_TON5"
function Global.StatSetGxtLabel(statName, value, save)
	return _in(0x17695002FD8B2AE0, _ch(statName), _ts(value), save, _r)
end

--- Add Cash example:
-- for (int i = 0; i < 3; i++)
-- {
-- char statNameFull[32];
-- sprintf_s(statNameFull, "SP%d_TOTAL_CASH", i);
-- Hash hash = GAMEPLAY::GET_HASH_KEY(statNameFull);
-- int val;
-- STATS::STAT_GET_INT(hash, &val, -1);
-- val += 1000000;
-- STATS::STAT_SET_INT(hash, val, 1);
-- }
function Global.StatSetInt(statName, value, save)
	return _in(0xB3271D7AB655B441, _ch(statName), value, save, _r)
end

function Global.StatSetLicensePlate(statName, str)
	return _in(0x69FF13266D7296DA, _ch(statName), _ts(str), _r)
end

function Global.StatSetMaskedInt(statName, p1, p2, p3, save)
	return _in(0x7BBB1B54583ED410, _ch(statName), p1, p2, p3, save, _r)
end

function Global.StatSetPos(statName, x, y, z, save)
	return _in(0xDB283FDE680FE72E, _ch(statName), x, y, z, save, _r)
end

--- Does not take effect immediately, unfortunately.
-- profileSetting seems to only be 936, 937 and 938 in scripts
-- gtaforums.com/topic/799843-stats-profile-settings/
function Global.StatSetProfileSettingValue(profileSetting, value)
	return _in(0x68F01422BE1D838F, profileSetting, value)
end
Global.N_0x68f01422be1d838f = Global.StatSetProfileSettingValue
Global.StatSetProfileSetting = Global.StatSetProfileSettingValue

function Global.StatSetString(statName, value, save)
	return _in(0xA87B2335D12531D7, _ch(statName), _ts(value), save, _r)
end

function Global.StatSetUserId(statName, value, save)
	return _in(0x8CDDF1E452BABE11, _ch(statName), _ts(value), save, _r)
end

function Global.StatSlotIsLoaded(p0)
	return _in(0x0D0A9F0E7BD91E3C, p0, _r)
end

--- Example:
-- This will stop the alarm at Fort Zancudo.
-- AUDIO::STOP_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
-- First parameter (char) is the name of the alarm.
-- Second parameter (bool) has to be true (1) to have any effect.
function Global.StopAlarm(alarmName, toggle)
	return _in(0xA1CADDCD98415A41, _ts(alarmName), toggle)
end

function Global.StopAllAlarms(stop)
	return _in(0x2F794A877ADD4C92, stop)
end

function Global.StopAllGarageActivity()
	return _in(0x0F87E938BDF29D66)
end

--- From re_drunkdriver:
-- • AI::STOP_ANIM_PLAYBACK(l_5B[0/*1*/], 0, 0);
-- Looks like p1 may be a flag, still need to do some research, though.
function Global.StopAnimPlayback(ped, p1, p2)
	return _in(0xEE08C992D238C5D1, ped, p1, p2)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.StopAnimTask(ped, animDictionary, animationName, p3)
	return _in(0x97FF36A1D40EA00A, ped, _ts(animDictionary), _ts(animationName), p3)
end

function Global.StopAnyPedModelBeingSuppressed()
	return _in(0xB47BD05FA66B40CF)
end

function Global.StopAudioScene(scene)
	return _in(0xDFE8422B3B94E688, _ts(scene))
end

--- ??
function Global.StopAudioScenes()
	return _in(0xBAC7FC81A75EC1A1)
end

--- Begins with STOP_*. Next character in the name is either D or E.
function Global.StopBenchmarkRecording()
	return _in(0xC7DB36C24634F52B)
end
Global.N_0xc7db36c24634f52b = Global.StopBenchmarkRecording

--- NativeDB Introduced: v1290
-- @param binkMovie :
function Global.StopBinkMovie(binkMovie)
	return _in(0x63606A61DE68898A, binkMovie)
end

function Global.StopCamPointing(cam)
	return _in(0xF33AB75780BA57DE, cam)
end

function Global.StopCamShaking(cam, p1)
	return _in(0xBDECF64367884AC3, cam, p1)
end

function Global.StopCinematicCamShaking(p0)
	return _in(0x2238E588E588A6D7, p0)
end

function Global.StopCinematicShot(p0)
	return _in(0x7660C6E75D3A078E, p0)
end

--- Needs to be called every frame.
function Global.StopCurrentPlayingAmbientSpeech(ped)
	return _in(0xB8BEC0CA6F0EDB0F, ped)
end

--- Stops speech.
function Global.StopCurrentPlayingSpeech(ped)
	return _in(0x7A73D05A607734C7, ped)
end
Global.N_0x7a73d05a607734c7 = Global.StopCurrentPlayingSpeech
Global.SetPedMute = Global.StopCurrentPlayingSpeech

function Global.StopCutscene(p0)
	return _in(0xC7272775B4DC786E, p0)
end

function Global.StopCutsceneAudio()
	return _in(0x806058BBDC136E06)
end
Global.N_0x806058bbdc136e06 = Global.StopCutsceneAudio

function Global.StopCutsceneCamShaking()
	return _in(0xDB629FFD9285FA06)
end

function Global.StopCutsceneImmediately()
	return _in(0xD220BDD222AC4A1E)
end

--- ```
-- RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.StopEntityAnim(entity, animation, animGroup, p3)
	return _in(0x28004F88151E03E0, entity, _ts(animation), _ts(animGroup), p3, _r, _ri)
end

function Global.StopEntityFire(entity)
	return _in(0x7F0DD2EBBB651AFF, entity)
end

--- This doesn't stop fire nor the fire propagation in a loop... for some reasons.
function Global.StopFireInRange(x, y, z, radius)
	return _in(0x056A8A219B8E829F, x, y, z, radius)
end

function Global.StopGameplayCamShaking(p0)
	return _in(0x0EF93E9F3D08C178, p0)
end

function Global.StopGameplayHint(p0)
	return _in(0xF46C581C61718916, p0)
end

function Global.StopPadShake(inputGroup)
	return _in(0x38C16A305E8CDC8D, inputGroup)
end

--- p1 is always 0 in the native scripts
function Global.StopParticleFxLooped(ptfxHandle, p1)
	return _in(0x8F75998877616996, ptfxHandle, p1)
end

function Global.StopPedRingtone(ped)
	return _in(0x6C5AE23EFA885092, ped)
end

function Global.StopPedSpeaking(ped, shaking)
	return _in(0x9D64D7405520E3D3, ped, shaking)
end

function Global.StopPedWeaponFiringWhenDropped(ped)
	return _in(0xC158D28142A34608, ped)
end

function Global.StopPlaybackRecordedVehicle(vehicle)
	return _in(0x54833611C17ABDEA, vehicle)
end

function Global.StopPlayerSwitch()
	return _in(0x95C0A5BBDC189AA1)
end

--- Disables the player's teleportation
function Global.StopPlayerTeleport()
	return _in(0xC449EDED9D73009C)
end

--- Stops recording and discards the recorded clip.
function Global.StopRecordingAndDiscardClip()
	return _in(0x88BB3507ED41A240)
end
Global.N_0x88bb3507ed41a240 = Global.StopRecordingAndDiscardClip

--- Stops recording and saves the recorded clip.
function Global.StopRecordingAndSaveClip()
	return _in(0x071A5197D6AFC8B3)
end
Global.StopRecording = Global.StopRecordingAndSaveClip

--- This disable the recording feature and has to be called every frame.
function Global.StopRecordingThisFrame()
	return _in(0xEB2D525B57F42B40)
end
Global.N_0xeb2d525b57f42b40 = Global.StopRecordingThisFrame

function Global.StopRopeUnwindingFront(ropeId)
	return _in(0xFFF3A50779EFBBB3, ropeId)
end

function Global.StopRopeWinding(ropeId)
	return _in(0xCB2D4AB84A19AA7C, ropeId)
end

function Global.StopSaveArray()
	return _in(0x04456F95153C6BE4)
end

function Global.StopSaveData()
	return _in(0x74E20C9145FB66FD)
end

function Global.StopSaveStruct()
	return _in(0xEB1774DF12BB9F12)
end

--- In drunk_controller.c4, sub_309
-- if (CAM::_C912AF078AF19212()) {
-- CAM::_1C9D7949FA533490(0);
-- }
function Global.StopScriptGlobalShaking(p0)
	return _in(0x1C9D7949FA533490, p0)
end
Global.N_0x1c9d7949fa533490 = Global.StopScriptGlobalShaking

function Global.StopScriptedConversation(p0)
	return _in(0xD79DEEFB53455EBA, p0, _r, _ri)
end

function Global.StopSound(soundId)
	return _in(0xA3B0C41BA5CC0BB5, soundId)
end

function Global.StopStream()
	return _in(0xA4718A1419D18151)
end

function Global.StopSynchronizedAudioEvent(p0)
	return _in(0x92D6A88E64A94430, p0, _r)
end

--- p1 sync task id?
function Global.StopSynchronizedEntityAnim(entity, p1, p2)
	return _in(0x43D3807C077261E3, entity, p1, p2, _r)
end

function Global.StopSynchronizedMapEntityAnim(p0, p1, p2, p3, p4, p5)
	return _in(0x11E79CAB7183B6F5, p0, p1, p2, p3, p4, p5, _r)
end

--- Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
-- If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
function Global.StringToInt(string, outInteger)
	return _in(0x5A5F40FE637EB584, _ts(string), _ii(outInteger) --[[ may be optional ]], _r)
end

function Global.SuppressAgitationEventsNextFrame()
	return _in(0x5F3B7749C112D552)
end

function Global.SuppressFrontendRenderingThisFrame()
	return _in(0xBA751764F0821256)
end
Global.N_0xba751764f0821256 = Global.SuppressFrontendRenderingThisFrame

function Global.SuppressShockingEventTypeNextFrame(type)
	return _in(0x3FD2EC8BF1F1CF30, type)
end

function Global.SuppressShockingEventsNextFrame()
	return _in(0x2F9A292AD0A3BD89)
end

--- This was previously named as "RESERVE_ENTITY_EXPLODES_ON_HIGH_EXPLOSION_COMBO"
-- which is obviously incorrect.
-- Seems to only appear in scripts used in Singleplayer. p1 ranges from 2 - 46.
-- I assume this switches the crime type
function Global.SwitchCrimeType(player, p1)
	return _in(0x9A987297ED8BD838, player, p1)
end
Global.N_0x9a987297ed8bd838 = Global.SwitchCrimeType

--- Use after using \_SWITCH_OUT_PLAYER to swoop the camera back down to the player's ped.
function Global.SwitchInPlayer(ped)
	return _in(0xD8295AF639FD9CB8, ped)
end
Global.N_0xd8295af639fd9cb8 = Global.SwitchInPlayer

--- doesn't act normally when used on mount chilliad
-- flags:
-- 0: normal
-- 1: no transition
-- 255: switch IN
-- switchType: 0 - 3
-- 0: 1 step towards ped
-- 1: 3 steps out from ped
-- 2: 1 step out from ped
-- 3: 1 step towards ped
function Global.SwitchOutPlayer(ped, flags, switchType)
	return _in(0xAAB3200ED59016BC, ped, flags, switchType)
end
Global.N_0xaab3200ed59016bc = Global.SwitchOutPlayer

--- Used in carsteal3 script with p0 = "Carsteal4_spycar".
function Global.SwitchToInputMappingScheme(name)
	return _in(0x3D42B92563939375, _ts(name), _r)
end
Global.N_0x3d42b92563939375 = Global.SwitchToInputMappingScheme

--- Same as 0x3D42B92563939375
-- S*
function Global.SwitchToInputMappingScheme_2(name)
	return _in(0x4683149ED1DDE7A1, _ts(name), _r)
end
Global.N_0x4683149ed1dde7a1 = Global.SwitchToInputMappingScheme_2

--- NativeDB Return Type: void
function Global.SwitchTrainTrack(intersectionId, state)
	return _in(0xFD813BB7DB977F20, intersectionId, state, _r, _ri)
end

--- Returns tangent value of p0.
function Global.Tan(p0)
	return _in(0x632106CC96E82E91, p0, _r, _rf)
end

--- Makes the specified ped achieve the specified heading.
-- pedHandle: The handle of the ped to assign the task to.
-- heading: The desired heading.
-- timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
function Global.TaskAchieveHeading(ped, heading, timeout)
	return _in(0x93B93A37987F1F3D, ped, heading, timeout)
end

function Global.TaskAgitatedAction(ped, ped2)
	return _in(0x19D1B791CB3670FE, ped, ped2)
end
Global.N_0x19d1b791cb3670fe = Global.TaskAgitatedAction

function Global.TaskAimGunAtCoord(ped, x, y, z, time, p5, p6)
	return _in(0x6671F3EEC681BDA1, ped, x, y, z, time, p5, p6)
end

--- duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
function Global.TaskAimGunAtEntity(ped, entity, duration, p3)
	return _in(0x9B53BB6E8943AF53, ped, entity, duration, p3)
end

function Global.TaskAimGunScripted(ped, scriptTask, p2, p3)
	return _in(0x7A192BE16D373D00, ped, _ch(scriptTask), p2, p3)
end

function Global.TaskAimGunScriptedWithTarget(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x8605AF0DE8B3A5AC, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- Example from "me_amanda1.ysc.c4":
-- AI::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());
-- Example from "armenian1.ysc.c4":
-- if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {
-- AI::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());
-- }
-- I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
-- Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
function Global.TaskArrestPed(ped, target)
	return _in(0xF3B9A78A178572B1, ped, target)
end

--- You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.
-- Working example
-- float vehicleMaxSpeed = VEHICLE::_GET_VEHICLE_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));
-- AI::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);
-- PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);
-- P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
function Global.TaskBoatMission(pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11)
	return _in(0x15C86013127CE63F, pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11)
end

--- p2 tend to be 16, 17 or 1
-- p3 to p7 tend to be 0.0
function Global.TaskChatToPed(ped, target, p2, p3, p4, p5, p6, p7)
	return _in(0x8C338E0263E4FD19, ped, target, p2, p3, p4, p5, p6, p7)
end

function Global.TaskClearDefensiveArea(p0)
	return _in(0x95A6C46A31D1917D, p0)
end

--- Not clear what it actually does, but here's how script uses it -
-- if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)
-- {
-- if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
-- {
-- AI::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
-- }
-- ...
-- }
-- Another one where it doesn't "look" at current player -
-- AI::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
-- PED::_2208438012482A1A(l_3ED, 0, 0);
-- AI::TASK_CLEAR_LOOK_AT(l_3ED);
function Global.TaskClearLookAt(ped)
	return _in(0x0F804F1DB19B9689, ped)
end

--- Climbs or vaults the nearest thing.
function Global.TaskClimb(ped, unused)
	return _in(0x89D9FCC2435112F1, ped, unused)
end

function Global.TaskClimbLadder(ped, p1)
	return _in(0xB6C987F9285A3814, ped, p1)
end

--- Despite its name, it only attacks ONE hated target. The one closest hated target.
-- p2 seems to be always 0
function Global.TaskCombatHatedTargetsAroundPed(ped, radius, p2)
	return _in(0x7BF835BB9E2698C8, ped, radius, p2)
end

function Global.TaskCombatHatedTargetsAroundPedTimed(p0, p1, p2, p3)
	return _in(0x2BBA30B854534A0C, p0, p1, p2, p3)
end

--- Despite its name, it only attacks ONE hated target. The one closest to the specified position.
function Global.TaskCombatHatedTargetsInArea(ped, x, y, z, radius, p5)
	return _in(0x4CF5F55DAC3280A0, ped, x, y, z, radius, p5)
end

--- Makes the specified ped attack the target ped.
-- p2 should be 0
-- p3 should be 16
function Global.TaskCombatPed(ped, targetPed, p2, p3)
	return _in(0xF166E48407BAC484, ped, targetPed, p2, p3)
end

function Global.TaskCombatPedTimed(p0, ped, p2, p3)
	return _in(0x944F30DCB7096BDE, p0, ped, p2, p3)
end

function Global.TaskCower(ped, duration)
	return _in(0x3EB1FE9E8E908E15, ped, duration)
end

--- Example:
-- AI::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
-- Needs working example. Doesn't seem to do anything.
-- I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
-- I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
-- I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
function Global.TaskDriveBy(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern)
	return _in(0x2F8AF0E82773A171, driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, _ch(firingPattern))
end

--- speed 1.0 = walk, 2.0 = run
-- p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle
-- p6 is always 0
-- Usage of seat
-- -1 = driver
-- 0 = passenger
-- 1 = left back seat
-- 2 = right back seat
-- 3 = outside left
-- 4 = outside right
function Global.TaskEnterVehicle(ped, vehicle, timeout, seat, speed, flag, p6)
	return _in(0xC20E50AA46D09CA8, ped, vehicle, timeout, seat, speed, flag, p6)
end

function Global.TaskEveryoneLeaveVehicle(vehicle)
	return _in(0x7F93691AB4B92272, vehicle)
end

function Global.TaskExitCover(p0, p1, p2, p3, p4)
	return _in(0x79B258E397854D29, p0, p1, p2, p3, p4)
end

--- MulleKD19: Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
-- A maximum of 8 points can be added.
function Global.TaskExtendRoute(x, y, z)
	return _in(0x1E7889778264843A, x, y, z)
end

--- MulleKD19: Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
function Global.TaskFlushRoute()
	return _in(0x841142A1376E9006)
end

--- If no timeout, set timeout to -1.
function Global.TaskFollowNavMeshToCoord(ped, x, y, z, speed, timeout, stoppingRange, persistFollowing, unk)
	return _in(0x15D3A79D4E44B913, ped, x, y, z, speed, timeout, stoppingRange, persistFollowing, unk)
end

function Global.TaskFollowNavMeshToCoordAdvanced(ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)
	return _in(0x17F58B88D085DBAC, ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)
end

--- MulleKD19: Makes the ped go on the created point route.
-- ped: The ped to give the task to.
-- speed: The speed to move at in m/s.
-- int: Unknown. Can be 0, 1, 2 or 3.
-- Example:
-- TASK_FLUSH_ROUTE();
-- TASK_EXTEND_ROUTE(0f, 0f, 70f);
-- TASK_EXTEND_ROUTE(10f, 0f, 70f);
-- TASK_EXTEND_ROUTE(10f, 10f, 70f);
-- TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
function Global.TaskFollowPointRoute(ped, speed, unknown)
	return _in(0x595583281858626E, ped, speed, unknown)
end

--- p6 always -1
-- p7 always 10.0
-- p8 always 1
function Global.TaskFollowToOffsetOfEntity(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
	return _in(0x304AE42E357B8C7E, ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
end

function Global.TaskFollowWaypointRecording(p0, p1, p2, p3, p4)
	return _in(0x0759591819534F7B, p0, p1, p2, p3, p4)
end

--- p2 always false
-- [30/03/2017] ins1de :
-- See dev-c.com/nativedb/func/info/f28965d04f570dca
function Global.TaskForceMotionState(ped, state, p2)
	return _in(0x4F056E1AFFEF17AB, ped, _ch(state), p2)
end

--- Jenkins of this native is 0x4293601F. This is the actual name.
function Global.TaskGetOffBoat(ped, boat)
	return _in(0x9C00E77AF14B2DFF, ped, boat)
end
Global.TaskGetOffBoat = Global.TaskGetOffBoat

function Global.TaskGoStraightToCoord(ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
	return _in(0xD76B57B44F1E6F8B, ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
end

function Global.TaskGoStraightToCoordRelativeToEntity(entity1, entity2, p2, p3, p4, p5, p6)
	return _in(0x61E360B7E040D12E, entity1, entity2, p2, p3, p4, p5, p6)
end

--- The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
-- If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
-- If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
-- The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
-- I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
-- I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
-- Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
-- The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
-- Example:
-- enum AimFlag
-- {
-- AimAtFocusLocation,
-- AimAtGoToLocation
-- };
-- Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
-- Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
-- Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
-- // 1st example
-- AI::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);
-- // 2nd example
-- AI::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);
-- 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
-- 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
function Global.TaskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern)
	return _in(0xA55547801EB331FC, pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, _ch(firingPattern))
end

--- example from fm_mission_controller
-- AI::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);
function Global.TaskGoToCoordAnyMeans(ped, x, y, z, speed, p5, p6, walkingStyle, p8)
	return _in(0x5BC448CB78FA3E88, ped, x, y, z, speed, p5, p6, walkingStyle, p8)
end

--- NativeDB Added Parameter 13: Any p12
function Global.TaskGoToCoordAnyMeansExtraParams(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)
	return _in(0x1DD45F9ECFDB1BC9, ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)
end

--- NativeDB Added Parameter 14: Any p13
function Global.TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)
	return _in(0xB8ECD61F531A7B02, ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)
end

--- movement_speed: mostly 2f, but also 1/1.2f, etc.
-- p8: always false
-- p9: 2f
-- p10: 0.5f
-- p11: true
-- p12: 0 / 512 / 513, etc.
-- p13: 0
-- firing_pattern: ${firing_pattern_full_auto}, 0xC6EE6B4C
function Global.TaskGoToCoordWhileAimingAtCoord(ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, p8, p9, p10, p11, flags, p13, firingPattern)
	return _in(0x11315AB3385B8AC0, ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, p8, p9, p10, p11, flags, p13, _ch(firingPattern))
end

function Global.TaskGoToCoordWhileAimingAtEntity(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xB2A16444EAD9AE47, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
-- Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
-- Example: AI::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
-- Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
function Global.TaskGoToEntity(entity, target, duration, distance, speed, p5, p6)
	return _in(0x6A071245EB0D1882, entity, target, duration, distance, speed, p5, p6)
end

function Global.TaskGoToEntityWhileAimingAtCoord(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x04701832B739DCE5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end

--- shootatEntity:
-- If true, peds will shoot at Entity till it is dead.
-- If false, peds will just walk till they reach the entity and will cease shooting.
function Global.TaskGoToEntityWhileAimingAtEntity(ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, firingPattern)
	return _in(0x97465886D35210E9, ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, _ch(firingPattern))
end

--- eg
-- AI::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
-- ped = Ped you want to perform this task.
-- target = the Entity they should aim at.
-- distanceToStopAt = distance from the target, where the ped should stop to aim.
-- StartAimingDist = distance where the ped should start to aim.
function Global.TaskGotoEntityAiming(ped, target, distanceToStopAt, StartAimingDist)
	return _in(0xA9DA48FAB8A76C12, ped, target, distanceToStopAt, StartAimingDist)
end

function Global.TaskGotoEntityOffset(ped, p1, p2, x, y, z, duration)
	return _in(0xE39B4FF4FDEBDE27, ped, p1, p2, x, y, z, duration)
end

function Global.TaskGotoEntityOffsetXy(ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)
	return _in(0x338E7EF52B6095A9, ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)
end

function Global.TaskGuardAssignedDefensiveArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xD2A207EEBDF9889B, p0, p1, p2, p3, p4, p5, p6)
end

--- From re_prisonvanbreak:
-- AI::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
function Global.TaskGuardCurrentPosition(p0, p1, p2, p3)
	return _in(0x4A58A47A72E3FCB4, p0, p1, p2, p3)
end

--- p0 - Guessing PedID
-- p1, p2, p3 - XYZ?
-- p4 - ???
-- p5 - Maybe the size of sphere from XYZ?
-- p6 - ???
-- p7, p8, p9 - XYZ again?
-- p10 - Maybe the size of sphere from second XYZ?
function Global.TaskGuardSphereDefensiveArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0xC946FE14BE0EB5E2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- In the scripts, p3 was always -1.
-- p3 seems to be duration or timeout of turn animation.
-- Also facingPed can be 0 or -1 so ped will just raise hands up.
function Global.TaskHandsUp(ped, duration, facingPed, p3, p4)
	return _in(0xF2EAB31979A7F910, ped, duration, facingPed, p3, p4)
end

--- Ped pilot should be in a heli.
-- EntityToFollow can be a vehicle or Ped.
-- x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
-- NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
function Global.TaskHeliChase(pilot, entityToFollow, x, y, z)
	return _in(0xAC83B1DB38D0ADA0, pilot, entityToFollow, x, y, z)
end

--- NativeDB Introduced: v1290
-- @param pilot :
-- @param heli1 :
-- @param heli2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
function Global.TaskHeliEscortHeli(pilot, heli1, heli2, p3, p4, p5)
	return _in(0xB385523325077210, pilot, heli1, heli2, p3, p4, p5)
end

--- EDITED (8/16/2017)
-- DESCRIPTION:
-- Allow a ped to fly to a specific destination.
-- USAGE:
-- -- REQUIRED --
-- • pilot = The ped flying the aircraft.
-- • aircraft = The aircraft the pilot is flying.
-- -- OPTIONAL -- [atleast 1 must be assigned]
-- • targetVehicle = The vehicle the pilot will target.
-- • targetPed = The ped the pilot will target.
-- • destinationX, destinationY, destinationZ = The location the pilot will target.
-- -- LOGIC --
-- • missionFlag = The type of mission.
-- • maxSpeed = The speed in mph that the pilot will limit his/her self to while flying.
-- • landingRadius = The distance from the destination that the pilot must be to land.
-- • targetHeading = The heading that the pilot will try to achieve while flying.
-- • unk1, unk2 = Set to -1 and it will be okay.
-- • unk3 = I'm almost sure this is a vehicle record/waypoint recording hash. A value of -1 is for none. Maybe it's a float? Idk.
-- • landingFlags = Bit flags used for landing. All I know is:
-- 0 = Hover over the destination.
-- 32 = Land on destination.
-- 1024 = Erratic, crash into nearby obstacles.
-- 4096 = Rushed movement + Hover over destination
-- Known Mission Types:
-- 4 = FlyToCoord
-- 8 = FleeFromPed
-- 9 = CircleAroundTarget
-- 10 = CopyTargetHeading
-- 20 = LandNearPed
-- 21 = Crash
-- Example C#:
-- Function.Call(Hash.TASK_HELI_MISSION, driver, heli, 0, 0, position.X, position.Y, position.Z, 4, 50.0, 10.0, (position - heli.Position).ToHeading(), -1, -1, -1, 32);
-- OLD USAGE: pastebin.com/ndkSjaaW
function Global.TaskHeliMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, landingRadius, targetHeading, unk1, unk2, unk3, landingFlags)
	return _in(0xDAD029E187A2BEB4, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, landingRadius, targetHeading, unk1, unk2, _ch(unk3), landingFlags)
end

--- Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
-- v350: Ped ped, bool unused
-- v678: Ped ped, bool unused, bool flag1, bool flag2
-- flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
function Global.TaskJump(ped, unused)
	return _in(0x0AE4086104E067B1, ped, unused)
end

function Global.TaskLeaveAnyVehicle(ped, p1, p2)
	return _in(0x504D54DF3F6F2247, ped, p1, p2)
end

--- Flags from decompiled scripts:
-- 0 = normal exit and closes door.
-- 1 = normal exit and closes door.
-- 16 = teleports outside, door kept closed.
-- 64 = normal exit and closes door, maybe a bit slower animation than 0.
-- 256 = normal exit but does not close the door.
-- 4160 = ped is throwing himself out, even when the vehicle is still.
-- 262144 = ped moves to passenger seat first, then exits normally
-- Others to be tried out: 320, 512, 131072.
function Global.TaskLeaveVehicle(ped, vehicle, flags)
	return _in(0xD3DBCE61A490BE02, ped, vehicle, flags)
end

--- p5 = 0, p6 = 2
function Global.TaskLookAtCoord(entity, x, y, z, duration, p5, p6)
	return _in(0x6FA46612594F7973, entity, x, y, z, duration, p5, p6)
end

--- param3: duration in ms, use -1 to look forever
-- param4: using 2048 is fine
-- param5: using 3 is fine
function Global.TaskLookAtEntity(ped, lookAt, duration, unknown1, unknown2)
	return _in(0x69F4BE8C8CC4796C, ped, lookAt, duration, unknown1, unknown2)
end

--- Example:
-- AI::_D5B35BEA41919ACB(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13, 181.29, 102.6, 0.0, 0.0, 22.32, 2, 0, 0, 0, 0);
function Global.TaskMoveNetworkAdvancedByName(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, animDict, flags)
	return _in(0xD5B35BEA41919ACB, ped, _ts(p1), p2, p3, p4, p5, p6, p7, p8, p9, p10, _ts(animDict), flags)
end
Global.N_0xd5b35bea41919acb = Global.TaskMoveNetworkAdvancedByName
Global.TaskMoveNetworkAdvanced = Global.TaskMoveNetworkAdvancedByName

--- Example:
-- AI::_2D537BA194896636(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0, 1, "mini@arm_wrestling", 0);
function Global.TaskMoveNetworkByName(ped, task, multiplier, p3, animDict, flags)
	return _in(0x2D537BA194896636, ped, _ts(task), multiplier, p3, _ts(animDict), flags)
end
Global.N_0x2d537ba194896636 = Global.TaskMoveNetworkByName
Global.TaskMoveNetwork = Global.TaskMoveNetworkByName

--- Used only once in the scripts (am_mp_nightclub)
-- NativeDB Introduced: v1493
-- @param ped :
-- @param p1 :
-- @param data :
-- @param p3 :
-- @param p4 :
-- @param animDict :
-- @param flags :
function Global.TaskMoveNetworkScripted(ped, p1, p3, p4, animDict, flags)
	return _in(0x3D45B0B355C5E0C9, ped, _ts(p1), _i, p3, p4, _ts(animDict), flags)
end

function Global.TaskOpenVehicleDoor(ped, vehicle, timeOut, doorIndex, speed)
	return _in(0x965791A9A488A062, ped, vehicle, timeOut, doorIndex, speed)
end

--- This function has a third parameter as well (bool).
-- Second parameter is unused.
-- seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL p2
function Global.TaskParachute(ped, p1)
	return _in(0xD2F1C53C97EE81AB, ped, p1)
end

--- makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED
function Global.TaskParachuteToTarget(ped, x, y, z)
	return _in(0xB33E291AFA6BD03A, ped, x, y, z)
end

--- After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
-- "miss_Tower_01" (this went from 01 - 10)
-- "miss_Ass0" (0, 4, 6, 3)
-- "MISS_PATROL_8"
-- I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
-- As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
-- From the scripts
-- AI::OPEN_PATROL_ROUTE("miss_Ass0");
-- AI::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- AI::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- AI::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- AI::ADD_PATROL_ROUTE_LINK(0, 1);
-- AI::ADD_PATROL_ROUTE_LINK(1, 2);
-- AI::ADD_PATROL_ROUTE_LINK(2, 0);
-- AI::CLOSE_PATROL_ROUTE();
-- AI::CREATE_PATROL_ROUTE();
function Global.TaskPatrol(ped, p1, p2, p3, p4)
	return _in(0xBDA5DF49D080FE4E, ped, _ts(p1), p2, p3, p4)
end

--- This tasks the ped to do nothing for the specified amount of miliseconds.
-- This is useful if you want to add a delay between tasks when using a sequence task.
-- @param ped The ped to pause. Set to this 0 when using task sequences.
-- @param ms The amount of miliseconds to wait.
function Global.TaskPause(ped, ms)
	return _in(0xE73A266DB0CA9042, ped, ms)
end

function Global.TaskPedSlideToCoord(ped, x, y, z, heading, duration)
	return _in(0xD04FE6765D990A06, ped, x, y, z, heading, duration)
end

function Global.TaskPedSlideToCoordHdgRate(ped, x, y, z, heading, p5, p6)
	return _in(0x5A4A6A6D3DC64F52, ped, x, y, z, heading, p5, p6)
end

--- NativeDB Return Type: void
function Global.TaskPerformSequence(ped, taskSequenceId)
	return _in(0x5ABA3986D90D8A3B, ped, taskSequenceId, _r, _ri)
end

function Global.TaskPerformSequenceFromProgress(p0, p1, p2, p3)
	return _in(0x89221B16730234F0, p0, p1, p2, p3)
end

function Global.TaskPerformSequenceLocally(ped, taskSequenceId)
	return _in(0x8C33220C8D78CA0D, ped, taskSequenceId)
end
Global.N_0x8c33220c8d78ca0d = Global.TaskPerformSequenceLocally

function Global.TaskPlaneChase(pilot, entityToFollow, x, y, z)
	return _in(0x2D2386F273FF7A25, pilot, entityToFollow, x, y, z)
end

--- NativeDB Introduced: v1290
-- @param p0 :
-- @param p1 :
-- @param p2 :
-- @param p3 :
-- @param p4 :
-- @param p5 :
-- @param p6 :
-- @param p7 :
-- @param p8 :
-- @param p9 :
function Global.TaskPlaneGotoPreciseVtol(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xF7F9DCCA89E7505B, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- Function.Call(Hash.TASK_PLANE_LAND, pilot, selectedAirplane, runwayStartPoint.X, runwayStartPoint.Y, runwayStartPoint.Z, runwayEndPoint.X, runwayEndPoint.Y, runwayEndPoint.Z);
function Global.TaskPlaneLand(pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
	return _in(0xBF19721FA34D32C0, pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
end

--- EDITED (7/13/2017)
-- NOTE: If you want air combat, AI::TASK_COMBAT_PED (while your pilot is in an aircraft) also does the same thing as this native.
-- DESCRIPTION:
-- Ever wish your buddy could shoot down one of your enemies for you? Ever wanted an auto-pilot? Well look no further! This is the native for you! (Ped intelligence may vary)
-- USAGE:
-- -- REQUIRED --
-- • pilot = The ped flying the aircraft.
-- • aircraft = The aircraft the pilot is flying
-- -- OPTIONAL -- [atleast 1 must be assigned]
-- • targetVehicle = The vehicle the pilot will target.
-- • targetPed = The ped the pilot will target.
-- • destinationX, destinationY, destinationZ = The location the pilot will target.
-- -- LOGIC --
-- • missionFlag = The type of mission. pastebin.com/R8x73dbv
-- • angularDrag = The higher the value, the slower the plane will rotate. Value ranges from 0 - Infinity.
-- • unk = Set to 0, and you'll be fine.
-- • targetHeading = The target angle (from world space north) that the pilot will try to acheive before executing an attack/landing.
-- • maxZ = Maximum Z coordinate height for flying.
-- • minZ = Minimum Z coordinate height for flying.
-- Z: 2,700 is the default max height a pilot will be able to fly. Anything greater and he will fly downward until reaching 2,700 again.
-- Mission Types (incase you don't like links..):
-- 0 = None
-- 1 = Unk
-- 2 = CTaskVehicleRam
-- 3 = CTaskVehicleBlock
-- 4 = CTaskVehicleGoToPlane
-- 5 = CTaskVehicleStop
-- 6 = CTaskVehicleAttack
-- 7 = CTaskVehicleFollow
-- 8 = CTaskVehicleFleeAirborne
-- 9 = CTaskVehicleCircle
-- 10 = CTaskVehicleEscort
-- 15 = CTaskVehicleFollowRecording
-- 16 = CTaskVehiclePoliceBehaviour
-- 17 = CTaskVehicleCrash
-- Example C#:
-- Function.Call(Hash.TASK_PLANE_MISSION, pilot, vehicle, 0, Game.Player.Character, 0, 0, 0, 6, 0f, 0f, 0f, 2500.0f, -1500f);
-- Example C++
-- AI::TASK_PLANE_MISSION(pilot, vehicle, 0, PLAYER::GET_PLAYER_PED(PLAYER::GET_PLAYER_INDEX()), 0, 0, 0, 6, 0.0, 0.0, 0.0, 2500.0, -1500.0);
-- [DEPRECATED] EXAMPLE USAGE:
-- pastebin.com/gx7Finsk
-- ```
-- ```
-- NativeDB Added Parameter 14: Any p13
function Global.TaskPlaneMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)
	return _in(0x23703CD154E83B88, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)
end

function Global.TaskPlaneTaxi(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x92C360B5F15D2302, p0, p1, p2, p3, p4, p5, p6)
end
Global.N_0x92c360b5f15d2302 = Global.TaskPlaneTaxi

function Global.TaskPlantBomb(ped, x, y, z, heading)
	return _in(0x965FEC691D55E9BF, ped, x, y, z, heading)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
-- ```
-- float blendInSpeed > normal speed is 8.0f
-- ----------------------
-- float blendOutSpeed > normal speed is 8.0f
-- ----------------------
-- int duration: time in millisecond
-- ----------------------
-- -1 _ _ _ _ _ _ _> Default (see flag)
-- 0 _ _ _ _ _ _ _ > Not play at all
-- Small value _ _ > Slow down animation speed
-- Other _ _ _ _ _ > freeze player control until specific time (ms) has
-- _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
-- _ _ _ _ _ _ _ _ _ controllable.)
-- int flag:
-- ----------------------
-- enum eAnimationFlags
-- {
-- ANIM_FLAG_NORMAL = 0,
-- ANIM_FLAG_REPEAT = 1,
-- ANIM_FLAG_STOP_LAST_FRAME = 2,
-- ANIM_FLAG_UPPERBODY = 16,
-- ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
-- ANIM_FLAG_CANCELABLE = 120,
-- };
-- Odd number : loop infinitely
-- Even number : Freeze at last frame
-- Multiple of 4: Freeze at last frame but controllable
-- 01 to 15 > Full body
-- 10 to 31 > Upper body
-- 32 to 47 > Full body > Controllable
-- 48 to 63 > Upper body > Controllable
-- ...
-- 001 to 255 > Normal
-- 256 to 511 > Garbled
-- ...
-- playbackRate:
-- values are between 0.0 and 1.0
-- lockX:
-- 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
-- > 1 for mini@sprunk
-- lockY:
-- 0 in most cases
-- 1 for missfam5_yoga, missfra1mcs_2_crew_react
-- lockZ:
-- 0 for single player
-- Can be 1 but only for MP
-- ```
function Global.TaskPlayAnim(ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
	return _in(0xEA47FE3719165B94, ped, _ts(animDictionary), _ts(animationName), blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
end

--- ```
-- It's similar to the one above, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position). animTime is a float from 0.0 -> 1.0, lets you start an animation from given point. The rest as in AI::TASK_PLAY_ANIM.
-- Rotation information : rotX and rotY don't seem to have any effect, only rotZ works.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.TaskPlayAnimAdvanced(ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, speed, speedMultiplier, duration, flag, animTime, p14, p15)
	return _in(0x83CDB10EA29B370B, ped, _ts(animDict), _ts(animName), posX, posY, posZ, rotX, rotY, rotZ, speed, speedMultiplier, duration, flag, animTime, p14, p15)
end

--- Example from the scripts:
-- AI::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
-- =========================================================
-- ^^ No offense, but Idk how that would really help anyone.
-- As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
-- Known boneMaskTypes'
-- "BONEMASK_HEADONLY"
-- "BONEMASK_HEAD_NECK_AND_ARMS"
-- "BONEMASK_HEAD_NECK_AND_L_ARM"
-- "BONEMASK_HEAD_NECK_AND_R_ARM"
-- p4 known args - 0.0f, 0.5f, 0.25f
-- p5 known args - 0.0f, 0.25f
-- p6 known args - 1 if a global if check is passed.
-- p7 known args - 1 if a global if check is passed.
-- The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
-- =========================================================
function Global.TaskPlayPhoneGestureAnimation(ped, animDict, animation, boneMaskType, p4, p5, p6, p7)
	return _in(0x8FBB6758B3B3E9EC, ped, _ts(animDict), _ts(animation), _ts(boneMaskType), p4, p5, p6, p7)
end

function Global.TaskPutPedDirectlyIntoCover(ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)
	return _in(0x4172393E6BE1FECE, ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)
end

--- from armenian3.c4
-- AI::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
function Global.TaskPutPedDirectlyIntoMelee(ped, meleeTarget, p2, p3, p4, p5)
	return _in(0x1C6CD14A876FFE39, ped, meleeTarget, p2, p3, p4, p5)
end

--- Only appears twice in the scripts.
-- AI::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
-- AI::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
-- Fixed, definitely not a float and since it's such a big number obviously not a bool. All though note when I thought it was a bool and set it to 1 it seemed to work that same as int 0x41200000.
-- 0x41200000 = 10.0 as float.
-- Not all helicopters support rappelling.
-- ```
-- ```
-- NativeDB Parameter 1: float unused
function Global.TaskRappelFromHeli(ped, unused)
	return _in(0x09693B0312F91649, ped, unused)
end

function Global.TaskReactAndFleePed(ped, fleeTarget)
	return _in(0x72C896464915D1B1, ped, fleeTarget)
end

--- The 2nd param (unused) is not implemented.
-- -----------------------------------------------------------------------
-- The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
-- if (((v_3 < v_4) && (AI::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {
-- AI::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
-- }
function Global.TaskReloadWeapon(ped, unused)
	return _in(0x62D2916F56B9CD2D, ped, unused)
end

--- From fm_mission_controller.c:
-- reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
-- vVar28 = {0.094f, 0.02f, -0.005f};
-- vVar29 = {-92.24f, 63.64f, 150.24f};
-- func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
-- set_entity_lod_dist(net_to_ent(uVar30), 500);
-- attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
-- Var31.imm_4 = 1065353216;
-- Var31.imm_5 = 1065353216;
-- Var31.imm_9 = 1065353216;
-- Var31.imm_10 = 1065353216;
-- Var31.imm_14 = 1065353216;
-- Var31.imm_15 = 1065353216;
-- Var31.imm_17 = 1040187392;
-- Var31.imm_18 = 1040187392;
-- Var31.imm_19 = -1;
-- Var32.imm_4 = 1065353216;
-- Var32.imm_5 = 1065353216;
-- Var32.imm_9 = 1065353216;
-- Var32.imm_10 = 1065353216;
-- Var32.imm_14 = 1065353216;
-- Var32.imm_15 = 1065353216;
-- Var32.imm_17 = 1040187392;
-- Var32.imm_18 = 1040187392;
-- Var32.imm_19 = -1;
-- Var31 = 1;
-- Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
-- Var31.imm_2 = "idle";
-- Var31.imm_20 = 1048633;
-- Var31.imm_4 = 0.5f;
-- Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
-- task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
-- set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
-- remove_anim_dict("anim@heists@biolab@");
function Global.TaskScriptedAnimation(ped, p4, p5)
	return _in(0x126EF75F1E17ABE5, ped, _i, _i, _i, p4, p5)
end

function Global.TaskSeekCoverFromPed(ped, target, duration, p3)
	return _in(0x84D32B3BEC531324, ped, target, duration, p3)
end

function Global.TaskSeekCoverFromPos(ped, x, y, z, duration, p5)
	return _in(0x75AC2B60386D89F2, ped, x, y, z, duration, p5)
end

--- from michael2:
-- AI::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
-- appears to be shorter variation
-- from michael3:
-- AI::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
function Global.TaskSeekCoverToCoords(ped, x1, y1, z1, x2, y2, z2, p7, p8)
	return _in(0x39246A6958EF072C, ped, x1, y1, z1, x2, y2, z2, p7, p8)
end

function Global.TaskSeekCoverToCoverPoint(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xD43D95C7A869447F, p0, p1, p2, p3, p4, p5, p6)
end

--- I cant believe I have to define this, this is one of the best natives.
-- It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
-- Since it is a task, every time the native is called the ped will stop for a moment.
function Global.TaskSetBlockingOfNonTemporaryEvents(ped, toggle)
	return _in(0x90D2156198831D69, ped, toggle)
end

--- p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
function Global.TaskSetDecisionMaker(ped, p1)
	return _in(0xEB8517DDA73720DA, ped, _ch(p1))
end

function Global.TaskSetSphereDefensiveArea(p0, p1, p2, p3, p4)
	return _in(0x933C06518B52A9A4, p0, p1, p2, p3, p4)
end

function Global.TaskShockingEventReact(ped, eventHandle)
	return _in(0x452419CBD838065B, ped, eventHandle)
end

function Global.TaskShootAtCoord(ped, x, y, z, duration, firingPattern)
	return _in(0x46A6CC01E0826106, ped, x, y, z, duration, _ch(firingPattern))
end

--- //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
-- Entity aimedentity;
-- Player player = PLAYER::PLAYER_ID();
-- PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);
-- //bg is an array of peds
-- AI::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, GAMEPLAY::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
-- in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
function Global.TaskShootAtEntity(entity, target, duration, firingPattern)
	return _in(0x08DA95E8298AE772, entity, target, duration, _ch(firingPattern))
end

--- Makes the specified ped shuffle to the next vehicle seat.
-- The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.TaskShuffleToNextVehicleSeat(ped, vehicle)
	return _in(0x7AA80209BDA643EB, ped, vehicle)
end

--- NativeDB Added Parameter 2: BOOL p1
function Global.TaskSkyDive(ped)
	return _in(0x601736CFE536B0A0, ped)
end

--- Makes the specified ped flee the specified distance from the specified position.
function Global.TaskSmartFleeCoord(ped, x, y, z, distance, time, p6, p7)
	return _in(0x94587F17E9C365D5, ped, x, y, z, distance, time, p6, p7)
end

--- Makes a ped run away from another ped (fleeTarget).
-- distance = ped will flee this distance.
-- fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
function Global.TaskSmartFleePed(ped, fleeTarget, distance, fleeTime, p4, p5)
	return _in(0x22B0D0E37CCB840D, ped, fleeTarget, distance, fleeTime, p4, p5)
end

--- scenarioName example: "WORLD_HUMAN_GUARD_STAND"
function Global.TaskStandGuard(ped, x, y, z, heading, scenarioName)
	return _in(0xAE032F8BBA959E90, ped, x, y, z, heading, _ts(scenarioName))
end

--- Makes the specified ped stand still for (time) milliseconds.
function Global.TaskStandStill(ped, time)
	return _in(0x919BE13EED931959, ped, time)
end

--- List of scenarioNames: pastebin.com/6mrYTdQv
-- Also a few more listed at AI::TASK_START_SCENARIO_IN_PLACE just above.
-- ---------------
-- The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario.
-- The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
-- I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.
-- I have no idea what the last 3 parameters are, but I'll try to find out.
-- -going on the last 3 parameters, they appear to always be "0, 0, 1"
-- p6 -1 also used in scrips
-- p7 used for sitting scenarios
-- p8 teleports ped to position
function Global.TaskStartScenarioAtPosition(ped, scenarioName, x, y, z, heading, duration, sittingScenario, teleport)
	return _in(0xFA4EFC79F69D4F07, ped, _ts(scenarioName), x, y, z, heading, duration, sittingScenario, teleport)
end

--- Plays a scenario on a Ped at their current location.
-- unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
-- playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.
-- ----
-- From "am_hold_up.ysc.c4" at line 339:
-- AI::TASK_START_SCENARIO_IN_PLACE(NETWORK::NET_TO_PED(l_8D._f4), sub_adf(), 0, 1);
-- I'm unsure of what the last two parameters are, however sub_adf() randomly returns 1 of 3 scenarios, those being:
-- WORLD_HUMAN_SMOKING
-- WORLD_HUMAN_HANG_OUT_STREET
-- WORLD_HUMAN_STAND_MOBILE
-- This makes sense, as these are what I commonly see when going by a liquor store.
-- -------------------------
-- List of scenarioNames: pastebin.com/6mrYTdQv
-- (^ Thank you so fucking much for this)
-- Also these:
-- WORLD_FISH_FLEE
-- DRIVE
-- WORLD_HUMAN_HIKER
-- WORLD_VEHICLE_ATTRACTOR
-- WORLD_VEHICLE_BICYCLE_MOUNTAIN
-- WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
-- WORLD_VEHICLE_BIKER
-- WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
-- WORLD_VEHICLE_CONSTRUCTION_SOLO
-- WORLD_VEHICLE_DRIVE_PASSENGERS
-- WORLD_VEHICLE_DRIVE_SOLO
-- WORLD_VEHICLE_EMPTY
-- WORLD_VEHICLE_PARK_PARALLEL
-- WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
-- WORLD_VEHICLE_POLICE_BIKE
-- WORLD_VEHICLE_POLICE_CAR
-- WORLD_VEHICLE_POLICE_NEXT_TO_CAR
-- WORLD_VEHICLE_SALTON_DIRT_BIKE
-- WORLD_VEHICLE_TRUCK_LOGS
function Global.TaskStartScenarioInPlace(ped, scenarioName, unkDelay, playEnterAnim)
	return _in(0x142A02425FF02BD9, ped, _ts(scenarioName), unkDelay, playEnterAnim)
end

--- Makes the ped run to take cover
function Global.TaskStayInCover(ped)
	return _in(0xE5DA8615A6180789, ped)
end

--- Stealth kill action name hashes:
-- stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta
-- ...
-- {
-- "ACT_stealth_kill_a",
-- "ACT_stealth_kill_weapon",
-- "ACT_stealth_kill_b",
-- "ACT_stealth_kill_c",
-- "ACT_stealth_kill_d",
-- "ACT_stealth_kill_a_gardener"
-- }
-- Only known script using this native: fbi4_prep2
-- EXAMPLE:
-- ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);
-- Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target
function Global.TaskStealthKill(killer, target, actionType, p3, p4)
	return _in(0xAA5DC05579D60BD9, killer, target, _ch(actionType), p3, p4)
end

--- TODO: add hash from x360
-- ^^^
-- I got you, x360 Hash: 0x5A32D4B4.
-- Note: Whoever named this I just compared it and the hash matches, it was the correct name thanks.
-- Note: Alexander Blade, needs to fix this site or his code one, as when we do find the right name the server throws an error saying the name is already in use. AB is a legend coder, so I'm sure this is a simple fix for him.
-- ```
-- ```
-- NativeDB Added Parameter 2: float p1
function Global.TaskStopPhoneGestureAnimation(ped)
	return _in(0x3FA00D4F4641BFAE, ped)
end
Global.TaskStopPhoneGestureAnimation = Global.TaskStopPhoneGestureAnimation

function Global.TaskSwapWeapon(ped, p1)
	return _in(0xA21C51255B205245, ped, p1)
end

--- This function is called on peds in vehicles.
-- anim: animation name
-- p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
-- p5: no idea what it does but is usually -1
function Global.TaskSweepAimEntity(ped, anim, p2, p3, p4, p5, vehicle, p7, p8)
	return _in(0x2047C02158D6405A, ped, _ts(anim), _ts(p2), _ts(p3), _ts(p4), p5, vehicle, p7, p8)
end

function Global.TaskSweepAimPosition(p0, p5, p6, p7, p8, p9, p10)
	return _in(0x7AFE8FDC10BC07D2, p0, _i, _i, _i, _i, p5, p6, p7, p8, p9, p10)
end

--- AI::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);
-- Animations List : www.ls-multiplayer.com/dev/index.php?section=3
function Global.TaskSynchronizedScene(ped, scene, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, p9)
	return _in(0xEEA929141F699854, ped, scene, _ts(animDictionary), _ts(animationName), blendInSpeed, blendOutSpeed, duration, flag, playbackRate, p9)
end

--- In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
-- The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
-- ---
-- It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
-- It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
-- ----------------------------------------------------
-- The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
-- ```
-- ```
-- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.TaskThrowProjectile(ped, x, y, z)
	return _in(0x7285951DBF6B5A51, ped, x, y, z)
end

--- used in sequence task
-- both parameters seems to be always 0
function Global.TaskToggleDuck(p0, p1)
	return _in(0xAC96609B9995EDF8, p0, p1)
end

--- duration in milliseconds
function Global.TaskTurnPedToFaceCoord(ped, x, y, z, duration)
	return _in(0x1DDA930A0AC38571, ped, x, y, z, duration)
end

--- duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
function Global.TaskTurnPedToFaceEntity(ped, entity, duration)
	return _in(0x5AD23D40115353AC, ped, entity, duration)
end

--- Actually has 3 params, not 2.
-- p0: Ped
-- p1: int (or bool?)
-- p2: int
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function Global.TaskUseMobilePhone(ped, p1)
	return _in(0xBD2A8EC3AF4DE7DB, ped, p1)
end

function Global.TaskUseMobilePhoneTimed(ped, duration)
	return _in(0x5EE02954A14C69DB, ped, duration)
end

function Global.TaskUseNearestScenarioChainToCoord(p0, p1, p2, p3, p4, p5)
	return _in(0x9FDA1B3D7E7028B3, p0, p1, p2, p3, p4, p5)
end

function Global.TaskUseNearestScenarioChainToCoordWarp(p0, p1, p2, p3, p4, p5)
	return _in(0x97A28E63F0BA5631, p0, p1, p2, p3, p4, p5)
end

--- Updated variables
-- An alternative to AI::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
function Global.TaskUseNearestScenarioToCoord(ped, x, y, z, distance, duration)
	return _in(0x277F471BA9DB000B, ped, x, y, z, distance, duration)
end

function Global.TaskUseNearestScenarioToCoordWarp(ped, x, y, z, radius, p5)
	return _in(0x58E2E0F23F6B76C3, ped, x, y, z, radius, p5)
end

function Global.TaskVehicleAimAtCoord(ped, x, y, z)
	return _in(0x447C1E9EF844BC0F, ped, x, y, z)
end

function Global.TaskVehicleAimAtPed(ped, target)
	return _in(0xE41885592B08B097, ped, target)
end

--- chases targetEnt fast and aggressively
-- --
-- Makes ped (needs to be in vehicle) chase targetEnt.
function Global.TaskVehicleChase(driver, targetEnt)
	return _in(0x3C08A8E30363B353, driver, targetEnt)
end

--- info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
-- ---------------------------------------------------------------
-- Passing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.
-- P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.
-- Here the e.g. code I used
-- Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);
function Global.TaskVehicleDriveToCoord(ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, p10)
	return _in(0xE2A2AA2F659D77A7, ped, vehicle, x, y, z, speed, p6, _ch(vehicleModel), drivingMode, stopRange, p10)
end

function Global.TaskVehicleDriveToCoordLongrange(ped, vehicle, x, y, z, speed, driveMode, stopRange)
	return _in(0x158BB33F920D360C, ped, vehicle, x, y, z, speed, driveMode, stopRange)
end

function Global.TaskVehicleDriveWander(ped, vehicle, speed, drivingStyle)
	return _in(0x480142959D337D00, ped, vehicle, speed, drivingStyle)
end

--- Makes a ped follow the targetVehicle with <minDistance> in between.
-- note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
-- Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
-- -1 = behind
-- 0 = ahead
-- 1 = left
-- 2 = right
-- 3 = back left
-- 4 = back right
-- if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
-- Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
function Global.TaskVehicleEscort(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)
	return _in(0x0FA6E4B75F302400, ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)
end

--- Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
-- Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
-- AI::_TASK_VEHICLE_FOLLOW(l_244[3/*1*/], l_268[3/*1*/], l_278, 40.0, 262144, 10);
-- What is this known as in the decompiled scripts ffs. I need more examples. I've searched in all scripts for keywords suchas,
-- TASK_VEHICLE_FOLLOW, FC545A9F0626E3B6, 0xFC545A9F0626E3B6, all the parameters in the above example even just search the last few params '40.0, 262144, 10' and couldnt find where this native is used in scripts at all unless whoever decompiled the scripts gave it a whack a.. name.
function Global.TaskVehicleFollow(driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
	return _in(0xFC545A9F0626E3B6, driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
end
Global.TaskVehicleFollow = Global.TaskVehicleFollow

--- task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
-- p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
-- p3 = 786468
-- p4 = 0
-- p5 = 16
-- p6 = -1 (angle?)
-- p7/8/9 = usually v3.zero
-- p10 = bool (repeat?)
-- p11 = 1073741824
function Global.TaskVehicleFollowWaypointRecording(ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x3123FAA6DB1CF7ED, ped, vehicle, _ts(WPRecording), p3, p4, p5, p6, p7, p8, p9)
end

--- Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
-- WARNING:
-- A behaviorFlag value of 0 will result in a clunky, stupid driver!
-- Recommended settings:
-- speed = 30.0f,
-- behaviorFlag = 156,
-- stoppingRange = 5.0f;
-- If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
-- If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
-- EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
function Global.TaskVehicleGotoNavmesh(ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
	return _in(0x195AEEB13CEFE2EE, ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
end

--- pilot, vehicle and altitude are rather self-explanatory.
-- p4: is unused variable in the function.
-- entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
-- 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
-- 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
-- NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
-- NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
function Global.TaskVehicleHeliProtect(pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)
	return _in(0x1E09C32048FEFD1C, pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)
end

function Global.TaskVehicleMission(p0, p1, veh, p3, p4, p5, p6, p7, p8)
	return _in(0x659427E0EF36BCDE, p0, p1, veh, p3, p4, p5, p6, p7, p8)
end

--- Example from fm_mission_controller.c4:
-- AI::TASK_VEHICLE_MISSION_COORS_TARGET(l_65E1, l_65E2, 324.84588623046875, 325.09619140625, 104.3525, 4, 15.0, 802987, 5.0, 5.0, 0);
function Global.TaskVehicleMissionCoorsTarget(ped, vehicle, x, y, z, p5, p6, p7, p8, p9, p10)
	return _in(0xF0AF20AA7731F8C3, ped, vehicle, x, y, z, p5, p6, p7, p8, p9, p10)
end

--- Modes:
-- 8= flees
-- 1=drives around the ped
-- 4=drives and stops near
-- 7=follows
-- 10=follows to the left
-- 11=follows to the  right
-- 12 = follows behind
-- 13=follows ahead
-- 14=follows, stop when near
function Global.TaskVehicleMissionPedTarget(ped, vehicle, pedTarget, mode, maxSpeed, drivingStyle, minDistance, p7, p8)
	return _in(0x9454528DF15D657A, ped, vehicle, pedTarget, mode, maxSpeed, drivingStyle, minDistance, p7, p8)
end

--- Modes:
-- 0 - ignore heading
-- 1 - park forward
-- 2 - park backwards
-- Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
-- Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
function Global.TaskVehiclePark(ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
	return _in(0x0F3E34E968EA374E, ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
end

--- ```
-- Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
-- Here's how its used -
-- AI::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");
-- AI::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");
-- FYI : Speedo is the name of van in which chop was put in the mission.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function Global.TaskVehiclePlayAnim(vehicle, animation_set, animation_name)
	return _in(0x69F5C3BD0F3EBD89, vehicle, _ts(animation_set), _ts(animation_name))
end

function Global.TaskVehicleShootAtCoord(ped, x, y, z, p4)
	return _in(0x5190796ED39C9B6D, ped, x, y, z, p4)
end

function Global.TaskVehicleShootAtPed(ped, target, p2)
	return _in(0x10AB107B887214D8, ped, target, p2)
end

--- '1
-- '3 - brake + reverse
-- '4 - turn left 90 + braking
-- '5 - turn right 90 + braking
-- '6 - brake strong (handbrake?) until time ends
-- '7 - turn left + accelerate
-- '7 - turn right + accelerate
-- '9 - weak acceleration
-- '10 - turn left + restore wheel pos to center in the end
-- '11 - turn right + restore wheel pos to center in the end
-- '13 - turn left + go reverse
-- '14 - turn left + go reverse
-- '16 - crash the game after like 2 seconds :)
-- '17 - keep actual state, game crashed after few tries
-- '18 - game crash
-- '19 - strong brake + turn left/right
-- '20 - weak brake + turn left then turn right
-- '21 - weak brake + turn right then turn left
-- '22 - brake + reverse
-- '23 - accelerate fast
-- '24
-- '25 - brake turning left then when almost stopping it turns left more
-- '26 - brake turning right then when almost stopping it turns right more
-- '27 - brake until car stop or until time ends
-- '28 - brake + strong reverse acceleration
-- '30 - performs a burnout (brake until stop + brake and accelerate)
-- '31 - accelerate + handbrake
-- '32 - accelerate very strong
-- Seems to be this:
-- Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
function Global.TaskVehicleTempAction(driver, vehicle, action, time)
	return _in(0xC429DCEEB339E129, driver, vehicle, action, time)
end

function Global.TaskWanderInArea(ped, x, y, z, radius, minimalLength, timeBetweenWalks)
	return _in(0xE054346CA3A0F315, ped, x, y, z, radius, minimalLength, timeBetweenWalks)
end

--- Makes ped walk around the area.
-- set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
function Global.TaskWanderStandard(ped, p1, p2)
	return _in(0xBB9CE077274F6A1B, ped, p1, p2)
end

--- Seat Numbers
-- -------------------------------
-- Driver = -1
-- Any = -2
-- Left-Rear = 1
-- Right-Front = 0
-- Right-Rear = 2
-- Extra seats = 3-14(This may differ from vehicle type e.g. Firetruck Rear Stand, Ambulance Rear)
function Global.TaskWarpPedIntoVehicle(ped, vehicle, seat)
	return _in(0x9A7D091411C5F684, ped, vehicle, seat)
end

--- EX: Function.Call(Ped1, Ped2, Time, 0);
-- The last parameter is always 0 for some reason I do not know. The first parameter is the pedestrian who will writhe to the pedestrian in the other parameter. The third paremeter is how long until the Writhe task ends. When the task ends, the ped will die. If set to -1, he will not die automatically, and the task will continue until something causes it to end. This can be being touched by an entity, being shot, explosion, going into ragdoll, having task cleared. Anything that ends the current task will kill the ped at this point.
-- MulleDK19: Third parameter does not appear to be time. The last parameter is not implemented (It's not used, regardless of value).
-- ```
-- ```
-- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function Global.TaskWrithe(ped, target, time, p3)
	return _in(0xCDDC2B77CE54AC6E, ped, target, time, p3)
end

--- For a full list, see here: pastebin.com/yLNWicUi
function Global.TerminateAllScriptsWithThisName(scriptName)
	return _in(0x9DC711BC69C548DF, _ts(scriptName))
end

function Global.TerminateThisThread()
	return _in(0x1090044AD1DA76FA)
end

function Global.TerminateThread(threadId)
	return _in(0xC8B189ED9138BCD4, threadId)
end

--- This native enables/disables the gold putting grid display (<https://i.imgur.com/TC6cku6.png>).
-- This requires these two natives to be called as well to configure the grid: [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#_0x1C4FC5752BCD8E48) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#_0x5CE62918F8D703C7).
-- @param toggle Enables or disables the golf putting grid display.
function Global.TerraingridActivate(toggle)
	return _in(0xA356990E161C9E65, toggle)
end
Global.N_0xa356990e161c9e65 = Global.TerraingridActivate

--- This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#_0xA356990E161C9E65) and [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#_0x1C4FC5752BCD8E48).
-- This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
-- All those natives combined they will output something like this: <https://i.imgur.com/TC6cku6.png>
-- Old description:
-- Only called in golf and golf_mp
-- parameters used are
-- GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
-- @param lowR red value for the lower level
-- @param lowG green value for the lower level
-- @param lowB blue value for the lower level
-- @param lowAlpha alpha value for the lower level
-- @param R red value for the normal level
-- @param G green value for the normal level
-- @param B blue value for the normal level
-- @param Alpha alpha value for the normal level
-- @param highR red value for the upper level
-- @param highG green value for the upper level
-- @param highB blue value for the upper level
-- @param highAlpha alpha value for the upper level
function Global.TerraingridSetColours(lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)
	return _in(0x5CE62918F8D703C7, lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)
end
Global.N_0x5ce62918f8d703c7 = Global.TerraingridSetColours

--- This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#_0xA356990E161C9E65) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#_0x5CE62918F8D703C7).
-- This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
-- All those natives combined they will output something like this: <https://i.imgur.com/TC6cku6.png>
-- @param x Grid center x coord.
-- @param y Grid center y coord.
-- @param z Grid center z coord.
-- @param p3 Not sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.
-- @param rotation Grid rotation (keep between 0.0 and 1.0).
-- @param p5 Offset top/bottom (? not sure about this one, seems weird).
-- @param width Grid width (usually 15.0).
-- @param height Grid height (usually 15.0).
-- @param p8 Not sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.
-- @param scale Zoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).
-- @param glowIntensity glow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).
-- @param normalHeight The z coord for 'normal' height (white grid lines level).
-- @param heightDiff This is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).
function Global.TerraingridSetParams(x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)
	return _in(0x1C4FC5752BCD8E48, x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)
end
Global.N_0x1c4fc5752bcd8e48 = Global.TerraingridSetParams

function Global.TestProbeAgainstAllWater(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x8974647ED222EA5F, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

function Global.TestProbeAgainstWater(x1, y1, z1, x2, y2, z2, result)
	return _in(0xFFA5D878809819DB, x1, y1, z1, x2, y2, z2, _v, _r)
end

--- I guess p3 is shape test flags?
function Global.TestVerticalProbeAgainstAllWater(x, y, z, p3, height)
	return _in(0x2B3451FA1E3142E2, x, y, z, p3, _fi(height) --[[ may be optional ]], _r)
end

function Global.TextureDownloadGetName(p0)
	return _in(0x3448505B6E35262D, p0, _r, _s)
end

function Global.TextureDownloadHasFailed(p0)
	return _in(0x5776ED562C134687, p0, _r)
end
Global.N_0x5776ed562c134687 = Global.TextureDownloadHasFailed

function Global.TextureDownloadRelease(p0)
	return _in(0x487EB90B98E9FB19, p0)
end

function Global.TextureDownloadRequest(FilePath, Name, p3)
	return _in(0x16160DA74A8E74A2, _i, _ts(FilePath), _ts(Name), p3, _r, _ri)
end

--- Nulls out the elements stored in CGameStreamMgr + 673, a value inherited from CGameStreamMgr + 15417 (1604)
function Global.ThefeedClearFrozenPost()
	return _in(0x80FE4F3AB4E1B62A)
end
Global.N_0x80fe4f3ab4e1b62a = Global.ThefeedClearFrozenPost
Global.ThefeedFlushPersistent = Global.ThefeedClearFrozenPost

function Global.ThefeedCommentTeleportPoolOff()
	return _in(0xADED7F5748ACAFE6)
end
Global.N_0xa13c11e1b5c06bfc = Global.ThefeedCommentTeleportPoolOff
Global.N_0xaded7f5748acafe6 = Global.ThefeedCommentTeleportPoolOff
Global.ThefeedShowGtaoTooltips = Global.ThefeedCommentTeleportPoolOff

--- Stops loading screen tips shown by invoking either `_0x488043841BBE156F` or `_0x15CFA549788D35EF`
function Global.ThefeedDisable()
	return _in(0x32888337579A5970)
end
Global.N_0x32888337579a5970 = Global.ThefeedDisable

--- Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
function Global.ThefeedEnable()
	return _in(0x15CFA549788D35EF)
end
Global.N_0x15cfa549788d35ef = Global.ThefeedEnable

--- Requires _GAMESTREAM_SHOW_CONTENT to be set.
function Global.ThefeedFlushQueue()
	return _in(0xA8FDB297A8D25FBA)
end
Global.N_0xa8fdb297a8d25fba = Global.ThefeedFlushQueue

--- Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
function Global.ThefeedForceRenderOff()
	return _in(0x583049884A2EEE3C)
end
Global.N_0x56c8b608cfd49854 = Global.ThefeedForceRenderOff
Global.N_0x583049884a2eee3c = Global.ThefeedForceRenderOff
Global.ThefeedHideGtaoTooltips = Global.ThefeedForceRenderOff

--- Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
function Global.ThefeedFreezeNextPost()
	return _in(0xFDEC055AB549E328)
end
Global.N_0xfdec055ab549e328 = Global.ThefeedFreezeNextPost
Global.ThefeedSetNextPostPersistent = Global.ThefeedFreezeNextPost

--- Returns the handle for the notification currently displayed on the screen.
-- Name may be a hash collision, but describes the function accurately.
function Global.ThefeedGetFirstVisibleDeleteRemaining()
	return _in(0x82352748437638CA, _r, _ri)
end
Global.N_0x82352748437638ca = Global.ThefeedGetFirstVisibleDeleteRemaining
Global.GetCurrentNotification = Global.ThefeedGetFirstVisibleDeleteRemaining
Global.ThefeedGetCurrentNotification = Global.ThefeedGetFirstVisibleDeleteRemaining

--- Once called each frame hides all above radar notifications.
function Global.ThefeedHideThisFrame()
	return _in(0x25F87B30C382FCA7)
end
Global.N_0x25f87b30c382fca7 = Global.ThefeedHideThisFrame
Global.HideHudNotificationsThisFrame = Global.ThefeedHideThisFrame

--- Getter for 0xFDB423997FA30340
function Global.ThefeedIsPaused()
	return _in(0xA9CBFD40B3FA3010, _r)
end
Global.N_0xa9cbfd40b3fa3010 = Global.ThefeedIsPaused

--- From the decompiled scripts:
-- UI::_92F0DA1E27DB96DC(6);
-- UI::_92F0DA1E27DB96DC(184);
-- UI::_92F0DA1E27DB96DC(190);
-- sets background color for the next notification
-- 6 = red
-- 184 = green
-- 190 = yellow
-- Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
-- this seems to set the alpha to 255 automatically, if you have a work around let me know
function Global.ThefeedNextPostBackgroundColor(hudColorIndex)
	return _in(0x92F0DA1E27DB96DC, hudColorIndex)
end
Global.N_0x92f0da1e27db96dc = Global.ThefeedNextPostBackgroundColor
Global.SetNotificationBackgroundColor = Global.ThefeedNextPostBackgroundColor

--- If true, disables the creation of all GAME_STREAM_ENUMS besides TOOLTIPS
function Global.ThefeedOnlyShowTooltips(toggle)
	return _in(0x6F1554B0CC2089FA, toggle)
end
Global.N_0x6f1554b0cc2089fa = Global.ThefeedOnlyShowTooltips

function Global.ThefeedPause()
	return _in(0xFDB423997FA30340)
end
Global.N_0xfdb423997fa30340 = Global.ThefeedPause

--- Removes a notification instantly instead of waiting for it to disappear
function Global.ThefeedRemoveItem(notificationId)
	return _in(0xBE4390CB40B3E627, notificationId)
end
Global.RemoveNotification = Global.ThefeedRemoveItem

function Global.ThefeedResetAllParameters()
	return _in(0xFDD85225B2DEA55E)
end
Global.N_0xfdd85225b2dea55e = Global.ThefeedResetAllParameters
Global.ThefeedClearAnimpostfx = Global.ThefeedResetAllParameters

function Global.ThefeedResume()
	return _in(0xE1CD1E48E025E661)
end
Global.N_0xe1cd1e48e025e661 = Global.ThefeedResume

--- sets color for notification flash
function Global.ThefeedSetAnimpostfxColor(red, green, blue, alpha)
	return _in(0x17430B918701C342, red, green, blue, alpha)
end
Global.N_0x17430b918701c342 = Global.ThefeedSetAnimpostfxColor
Global.SetNotificationFlashColor = Global.ThefeedSetAnimpostfxColor

--- Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
-- ```
-- var uVar0;
-- var uVar1;
-- var uVar2;
-- var uVar3;
-- int iVar4;
-- iVar4 = 1;
-- 
-- UI::GET_HUD_COLOUR(1, &uVar0, &uVar1, &uVar2, &uVar3);
-- UI::_SET_NOTIFICATION_FLASH_COLOR(uVar0, uVar1, uVar2, uVar3);
-- UI::_0x17AD8C9706BDD88A(iVar4);
-- UI::_SET_NOTIFICATION_TEXT_ENTRY("RSMAN_N");
-- UI::_DRAW_NOTIFICATION_2(1, 1);
-- ```
function Global.ThefeedSetAnimpostfxCount(flashCount)
	return _in(0x17AD8C9706BDD88A, flashCount)
end
Global.N_0x17ad8c9706bdd88a = Global.ThefeedSetAnimpostfxCount

--- Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
function Global.ThefeedSetAnimpostfxSound(toggle)
	return _in(0x4A0C7C9BB10ABB36, toggle)
end
Global.N_0x4a0c7c9bb10abb36 = Global.ThefeedSetAnimpostfxSound

--- If true, remove all feed components instantly. Otherwise tween/animate close each component
function Global.ThefeedSetFlushAnimpostfx(toggle)
	return _in(0xBAE4F9B97CD43B30, toggle)
end
Global.N_0xbae4f9b97cd43b30 = Global.ThefeedSetFlushAnimpostfx

function Global.ThefeedSetScriptedMenuHeight(pos)
	return _in(0x55598D21339CB998, pos)
end
Global.N_0x55598d21339cb998 = Global.ThefeedSetScriptedMenuHeight
Global.ClearNotificationsPos = Global.ThefeedSetScriptedMenuHeight

function Global.ThefeedSpsExtendWidescreenOff()
	return _in(0xB695E2CD0A2DA9EE)
end
Global.N_0xb695e2cd0a2da9ee = Global.ThefeedSpsExtendWidescreenOff
Global.ThefeedDisableBaselineOffset = Global.ThefeedSpsExtendWidescreenOff

function Global.ThefeedSpsExtendWidescreenOn()
	return _in(0xD4438C0564490E63)
end
Global.N_0xd4438c0564490e63 = Global.ThefeedSpsExtendWidescreenOn
Global.ThefeedEnableBaselineOffset = Global.ThefeedSpsExtendWidescreenOn

--- Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
function Global.Timera()
	return _in(0x83666F9FB8FEBD4B, _r, _ri)
end

function Global.Timerb()
	return _in(0xC9D9444186B5A374, _r, _ri)
end

--- Gets the current frame time.
function Global.Timestep()
	return _in(0x0000000050597EE2, _r, _rf)
end

function Global.ToFloat(value)
	return _in(0xBBDA792448DB5A89, value, _r, _rf)
end

function Global.TogglePausedRenderphases(toggle)
	return _in(0xDFC252D8A3E15AB7, toggle)
end
Global.EnableGameplayCam = Global.TogglePausedRenderphases
Global.SetFrozenRenderingDisabled = Global.TogglePausedRenderphases

function Global.ToggleStealthRadar(toggle)
	return _in(0x6AFDFB93754950C7, toggle)
end

--- Toggles:
-- UNK17
-- Turbo
-- UNK19
-- Tire Smoke
-- UNK21
-- Xenon Headlights
function Global.ToggleVehicleMod(vehicle, modType, toggle)
	return _in(0x2A1F4F37F95BAD08, vehicle, modType, toggle)
end

function Global.TrackObjectVisibility(object)
	return _in(0xB252BC036B525623, object)
end

--- in script hook .net
-- Vehicle v = ...;
-- Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
function Global.TrackVehicleVisibility(vehicle)
	return _in(0x64473AEFDCF47DCA, vehicle)
end

--- Transforms the `stormberg` to it's "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle A vehicle handle.
-- @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
function Global.TransformSubmarineToVehicle(vehicle, instantly)
	return _in(0x2A69FFD1B42BFF9E, vehicle, instantly)
end
Global.N_0x2a69ffd1b42bff9e = Global.TransformSubmarineToVehicle
Global.TransformStormbergToRoadVehicle = Global.TransformSubmarineToVehicle

--- Transforms the `stormberg` to it's "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle A vehicle handle.
-- @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
function Global.TransformVehicleToSubmarine(vehicle, instantly)
	return _in(0xBE4C854FFDB6EEBE, vehicle, instantly)
end
Global.N_0xbe4c854ffdb6eebe = Global.TransformVehicleToSubmarine
Global.TransformStormbergToWaterVehicle = Global.TransformVehicleToSubmarine

--- The backing function for TriggerEvent.
function Global.TriggerEventInternal(eventName, eventPayload, payloadLength)
	return _in(0x91310870, _ts(eventName), _ts(eventPayload), payloadLength)
end

--- The backing function for TriggerLatentServerEvent.
function Global.TriggerLatentServerEventInternal(eventName, eventPayload, payloadLength, bps)
	return _in(0x128737ea, _ts(eventName), _ts(eventPayload), payloadLength, bps)
end

--- List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W
-- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function Global.TriggerMusicEvent(eventName)
	return _in(0x706D57B0F50DA710, _ts(eventName), _r)
end

function Global.TriggerScreenblurFadeIn(transitionTime)
	return _in(0xA328A24AAA6B7FDC, transitionTime, _r)
end
Global.TransitionToBlurred = Global.TriggerScreenblurFadeIn

function Global.TriggerScreenblurFadeOut(transitionTime)
	return _in(0xEFACC8AEF94430D5, transitionTime, _r)
end
Global.TransitionFromBlurred = Global.TriggerScreenblurFadeOut

--- p1 = 6
-- NETWORK_CRC_HASH_CHECK?
function Global.TriggerScriptCrcCheckOnPlayer(player, p1, scriptHash)
	return _in(0x46FB3ED415C7641C, player, p1, _ch(scriptHash), _r)
end
Global.N_0x46fb3ed415c7641c = Global.TriggerScriptCrcCheckOnPlayer
Global.NetworkIsPlayerInScript = Global.TriggerScriptCrcCheckOnPlayer

--- yis
-- eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork
-- ^^ I'm assuming it's like the rest with this parameter.
function Global.TriggerScriptEvent(eventGroup, argCount, bit)
	return _in(0x5AE99C571D5BBE5D, eventGroup, _i, argCount, bit)
end

--- NativeDB Parameter 0: int eventGroup
function Global.TriggerScriptEvent_2(eventGroup, argCount, bit)
	return _in(0xA40CC53DF8E50837, eventGroup, _i, argCount, bit)
end
Global.N_0xa40cc53df8e50837 = Global.TriggerScriptEvent_2

--- The backing function for TriggerServerEvent.
function Global.TriggerServerEventInternal(eventName, eventPayload, payloadLength)
	return _in(0x7fdd1128, _ts(eventName), _ts(eventPayload), payloadLength)
end

function Global.TriggerSonarBlip(posX, posY, posZ, radius, p4)
	return _in(0x72DD432F3CDFC0EE, posX, posY, posZ, radius, p4)
end
Global.N_0x72dd432f3cdfc0ee = Global.TriggerSonarBlip

function Global.UgcCancelQuery()
	return _in(0xE9B99B6853181409)
end
Global.N_0xe9b99b6853181409 = Global.UgcCancelQuery

function Global.UgcClearCreateResult()
	return _in(0x17440AA15D1D3739)
end
Global.N_0x17440aa15d1d3739 = Global.UgcClearCreateResult

function Global.UgcClearModifyResult()
	return _in(0xA1E5E0204A6FCC70)
end
Global.N_0xa1e5e0204a6fcc70 = Global.UgcClearModifyResult

function Global.UgcClearOfflineQuery()
	return _in(0x61A885D3F7CFEE9A)
end
Global.N_0x61a885d3f7cfee9a = Global.UgcClearOfflineQuery

function Global.UgcClearQueryResults()
	return _in(0xBA96394A0EECFA65)
end
Global.N_0xba96394a0eecfa65 = Global.UgcClearQueryResults

function Global.UgcCopyContent()
	return _in(0x152D90E4C1B4738A, _i, _i, _r)
end
Global.N_0x152d90e4c1b4738a = Global.UgcCopyContent

--- NativeDB Parameter 1: int dataCount
function Global.UgcCreateContent(data, dataCount, contentName, description, tagsCsv, contentTypeName, publish)
	return _in(0xC84527E235FCA219, _ts(data), dataCount, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), publish, _r)
end
Global.N_0xc84527e235fca219 = Global.UgcCreateContent

--- NOTE: 'p1' might be some kind of array.
function Global.UgcCreateMission(contentName, description, tagsCsv, contentTypeName, publish)
	return _in(0xA5EFC3E847D60507, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), publish, _r)
end
Global.N_0xa5efc3e847d60507 = Global.UgcCreateMission

function Global.UgcGetBookmarkedContent(p0, p1)
	return _in(0xD5A4B59980401588, p0, p1, _i, _i, _r)
end
Global.N_0xd5a4b59980401588 = Global.UgcGetBookmarkedContent

function Global.UgcGetCachedDescription(p0, p1)
	return _in(0x40F7E66472DF3E5C, p0, p1, _r, _ri)
end
Global.N_0x40f7e66472df3e5c = Global.UgcGetCachedDescription

function Global.UgcGetContentCategory(p0)
	return _in(0xA7BAB11E7C9C6C5A, p0, _r, _ri)
end
Global.N_0xa7bab11e7c9c6c5a = Global.UgcGetContentCategory
Global.GetContentCategory = Global.UgcGetContentCategory

function Global.UgcGetContentDescriptionHash(p0)
	return _in(0x7CF0448787B23758, p0, _r, _ri)
end
Global.N_0x7cf0448787b23758 = Global.UgcGetContentDescriptionHash
Global.GetContentDescriptionHash = Global.UgcGetContentDescriptionHash

function Global.UgcGetContentFileVersion(p0, p1)
	return _in(0x37025B27D9B658B1, p0, p1, _r, _ri)
end
Global.N_0x37025b27d9b658b1 = Global.UgcGetContentFileVersion
Global.GetContentFileVersion = Global.UgcGetContentFileVersion

function Global.UgcGetContentHasPlayerBookmarked(p0)
	return _in(0x993CBE59D350D225, p0, _r)
end
Global.N_0x993cbe59d350d225 = Global.UgcGetContentHasPlayerBookmarked

function Global.UgcGetContentHasPlayerRecord(p0)
	return _in(0x70EA8DA57840F9BE, p0, _r)
end
Global.N_0x70ea8da57840f9be = Global.UgcGetContentHasPlayerRecord

function Global.UgcGetContentHash()
	return _in(0x3A17A27D75C74887, _r, _ri)
end
Global.N_0x3a17a27d75c74887 = Global.UgcGetContentHash

--- Return the mission id of a job.
function Global.UgcGetContentId(p0)
	return _in(0x55AA95F481D694D2, p0, _r, _s)
end
Global.N_0x55aa95f481d694d2 = Global.UgcGetContentId
Global.GetContentId = Global.UgcGetContentId

function Global.UgcGetContentIsPublished(p0)
	return _in(0x3054F114121C21EA, p0, _r)
end
Global.N_0x3054f114121c21ea = Global.UgcGetContentIsPublished

function Global.UgcGetContentIsVerified(p0)
	return _in(0xA9240A96C74CCA13, p0, _r)
end
Global.N_0xa9240a96c74cca13 = Global.UgcGetContentIsVerified

function Global.UgcGetContentLanguage(p0)
	return _in(0x32DD916F3F7C9672, p0, _r, _ri)
end
Global.N_0x32dd916f3f7c9672 = Global.UgcGetContentLanguage

function Global.UgcGetContentName(p0)
	return _in(0xBF09786A7FCAB582, p0, _r, _ri)
end
Global.N_0xbf09786a7fcab582 = Global.UgcGetContentName

function Global.UgcGetContentNum()
	return _in(0xE0A6138401BCB837, _r, _ri)
end
Global.N_0xe0a6138401bcb837 = Global.UgcGetContentNum

--- NativeDB Parameter 1: int p1
function Global.UgcGetContentPath(p0, p1)
	return _in(0xBAF6BABF9E7CCC13, p0, _ii(p1) --[[ may be optional ]], _r, _s)
end
Global.N_0xbaf6babf9e7ccc13 = Global.UgcGetContentPath
Global.UgcGetCloudPath = Global.UgcGetContentPath

function Global.UgcGetContentRating(p0, p1)
	return _in(0x1ACCFBA3D8DAB2EE, p0, p1, _r, _ri)
end
Global.N_0x1accfba3d8dab2ee = Global.UgcGetContentRating

function Global.UgcGetContentRatingCount(p0, p1)
	return _in(0x759299C5BB31D2A9, p0, p1, _r, _ri)
end
Global.N_0x759299c5bb31d2a9 = Global.UgcGetContentRatingCount

function Global.UgcGetContentRatingNegativeCount(p0, p1)
	return _in(0x4E548C0D7AE39FF9, p0, p1, _r, _ri)
end
Global.N_0x4e548c0d7ae39ff9 = Global.UgcGetContentRatingNegativeCount

function Global.UgcGetContentRatingPositiveCount(p0, p1)
	return _in(0x87E5C46C187FE0AE, p0, p1, _r, _ri)
end
Global.N_0x87e5c46c187fe0ae = Global.UgcGetContentRatingPositiveCount

function Global.UgcGetContentTotal()
	return _in(0x769951E2455E2EB5, _r, _ri)
end
Global.N_0x769951e2455e2eb5 = Global.UgcGetContentTotal

function Global.UgcGetContentUpdatedDate(p0, p1)
	return _in(0xCFD115B373C0DF63, p0, _ii(p1) --[[ may be optional ]])
end
Global.N_0xcfd115b373c0df63 = Global.UgcGetContentUpdatedDate

function Global.UgcGetContentUserName(p0)
	return _in(0x703F12425ECA8BF5, p0, _r, _ri)
end
Global.N_0x703f12425eca8bf5 = Global.UgcGetContentUserName

function Global.UgcGetCreateContentId()
	return _in(0xC55A0B40FFB1ED23, _r, _ri)
end
Global.N_0xc55a0b40ffb1ed23 = Global.UgcGetCreateContentId

function Global.UgcGetCreateResult()
	return _in(0xFBC5E768C7A77A6A, _r, _ri)
end
Global.N_0xfbc5e768c7a77a6a = Global.UgcGetCreateResult

function Global.UgcGetCreatorNum()
	return _in(0x597F8DBA9B206FC7, _r, _ri)
end
Global.N_0x597f8dba9b206fc7 = Global.UgcGetCreatorNum

function Global.UgcGetCrewContent(p0, p1, p2)
	return _in(0x9F6E2821885CAEE2, p0, p1, p2, _i, _i, _r)
end
Global.N_0x9f6e2821885caee2 = Global.UgcGetCrewContent

function Global.UgcGetFriendContent(p0, p1)
	return _in(0xF9E1CCAE8BA4C281, p0, p1, _i, _i, _r)
end
Global.N_0xf9e1ccae8ba4c281 = Global.UgcGetFriendContent

function Global.UgcGetGetByCategory(p0, p1, p2)
	return _in(0x678BB03C1A3BD51E, p0, p1, p2, _i, _i, _r)
end
Global.N_0x678bb03c1a3bd51e = Global.UgcGetGetByCategory

function Global.UgcGetModifyResult()
	return _in(0x5A0A3D1A186A5508, _r, _ri)
end
Global.N_0x5a0a3d1a186a5508 = Global.UgcGetModifyResult

function Global.UgcGetMyContent(p0, p1)
	return _in(0x3195F8DD0D531052, p0, p1, _i, _i, _r)
end
Global.N_0x3195f8dd0d531052 = Global.UgcGetMyContent

function Global.UgcGetQueryResult()
	return _in(0xEDF7F927136C224B, _r, _ri)
end
Global.N_0xedf7f927136c224b = Global.UgcGetQueryResult

--- Return the root content id of a job.
function Global.UgcGetRootContentId(p0)
	return _in(0xC0173D6BFF4E0348, p0, _r, _s)
end
Global.N_0xc0173d6bff4e0348 = Global.UgcGetRootContentId
Global.GetRootContentId = Global.UgcGetRootContentId

function Global.UgcHasCreateFinished()
	return _in(0x5E24341A7F92A74B, _r, _ri)
end
Global.N_0x5e24341a7f92a74b = Global.UgcHasCreateFinished

function Global.UgcHasGetFinished()
	return _in(0x02ADA21EA2F6918F, _r, _ri)
end
Global.N_0x02ada21ea2f6918f = Global.UgcHasGetFinished

function Global.UgcHasModifyFinished()
	return _in(0x299EF3C576773506, _r, _ri)
end
Global.N_0x299ef3c576773506 = Global.UgcHasModifyFinished

function Global.UgcIsGetting()
	return _in(0xD53ACDBEF24A46E8, _r, _ri)
end
Global.N_0xd53acdbef24a46e8 = Global.UgcIsGetting

function Global.UgcIsLanguageSupported(p0)
	return _in(0xF53E48461B71EECB, p0, _r)
end
Global.N_0xf53e48461b71eecb = Global.UgcIsLanguageSupported

function Global.UgcPoliciesMakePrivate(p0)
	return _in(0x5CAE833B0EE0C500, p0, _r)
end
Global.N_0x5cae833b0ee0c500 = Global.UgcPoliciesMakePrivate

function Global.UgcPublish(contentId, baseContentId, contentTypeName)
	return _in(0x1DE0F5F50D723CAA, _ts(contentId), _ts(baseContentId), _ts(contentTypeName), _r)
end
Global.N_0x1de0f5f50d723caa = Global.UgcPublish

function Global.UgcQueryByContentId(contentId, latestVersion, contentTypeName)
	return _in(0x158EC424F35EC469, _ts(contentId), latestVersion, _ts(contentTypeName), _r)
end
Global.N_0x158ec424f35ec469 = Global.UgcQueryByContentId

function Global.UgcQueryByContentIds(count, latestVersion, contentTypeName)
	return _in(0xC7397A83F7A2A462, _i, count, latestVersion, _ts(contentTypeName), _r)
end
Global.N_0xc7397a83f7a2a462 = Global.UgcQueryByContentIds

--- Gets some kind of data related to missions like the online player created races n stuff
function Global.UgcQueryMyContent(p0, p1, p3, p4, p5)
	return _in(0x9BF438815F5D96EA, p0, p1, _i, p3, p4, p5, _r)
end
Global.N_0x9bf438815f5d96ea = Global.UgcQueryMyContent

function Global.UgcQueryRecentlyCreatedContent(offset, count, contentTypeName, p3)
	return _in(0x6D4CB481FAC835E8, offset, count, _ts(contentTypeName), p3, _r)
end
Global.N_0x6d4cb481fac835e8 = Global.UgcQueryRecentlyCreatedContent

function Global.UgcRequestCachedDescription(p0)
	return _in(0x5E0165278F6339EE, p0, _r, _ri)
end
Global.N_0x5e0165278f6339ee = Global.UgcRequestCachedDescription

function Global.UgcRequestContentDataFromIndex(p0, p1)
	return _in(0x171DF6A0C07FB3DC, p0, p1, _r, _ri)
end
Global.N_0x171df6a0c07fb3dc = Global.UgcRequestContentDataFromIndex

function Global.UgcRequestContentDataFromParams(contentTypeName, contentId, p2, p3, p4)
	return _in(0x7FD2990AF016795E, _ts(contentTypeName), _ts(contentId), p2, p3, p4, _r, _ri)
end
Global.N_0x7fd2990af016795e = Global.UgcRequestContentDataFromParams

function Global.UgcSetBookmarked(contentId, bookmarked, contentTypeName)
	return _in(0x274A1519DFC1094F, _ts(contentId), bookmarked, _ts(contentTypeName), _r)
end
Global.N_0x274a1519dfc1094f = Global.UgcSetBookmarked

function Global.UgcSetDeleted(p1)
	return _in(0xD05D1A6C74DA3498, _i, p1, _i, _r)
end
Global.N_0xd05d1a6c74da3498 = Global.UgcSetDeleted

function Global.UgcSetPlayerData(contentId, rating, contentTypeName)
	return _in(0x692D808C34A82143, _ts(contentId), rating, _ts(contentTypeName), _r)
end
Global.N_0x692d808c34a82143 = Global.UgcSetPlayerData

function Global.UgcTextureDownloadRequest(p1, p2, p3, p5)
	return _in(0x308F96458B7087CC, _i, p1, p2, p3, _i, p5, _r, _ri)
end
Global.N_0x308f96458b7087cc = Global.UgcTextureDownloadRequest

--- NativeDB Parameter 2: int dataCount
function Global.UgcUpdateContent(contentId, dataCount, contentName, description, tagsCsv, contentTypeName)
	return _in(0x648E7A5434AF7969, _ts(contentId), _i, dataCount, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), _r)
end
Global.N_0x648e7a5434af7969 = Global.UgcUpdateContent

--- NOTE: 'p2' might be some kind of array.
function Global.UgcUpdateMission(contentId, contentName, description, tagsCsv, contentTypeName)
	return _in(0x4645DE9980999E93, _ts(contentId), _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), _r)
end
Global.N_0x4645de9980999e93 = Global.UgcUpdateMission

function Global.Ui3dsceneIsAvailable()
	return _in(0xD3A10FC7FD8D98CD, _r)
end
Global.N_0xd3a10fc7fd8d98cd = Global.Ui3dsceneIsAvailable

--- All presets can be found in common\data\ui\uiscenes.meta
function Global.Ui3dscenePushPreset(presetName)
	return _in(0xF1CEA8A4198D8E9A, _ts(presetName), _r)
end
Global.N_0xf1cea8a4198d8e9a = Global.Ui3dscenePushPreset

--- Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
-- U*
function Global.UiIsSingleplayerPauseMenuActive()
	return _in(0xEA2F2061875EED90, _r)
end
Global.N_0xea2f2061875eed90 = Global.UiIsSingleplayerPauseMenuActive

function Global.UnblockDecisionMakerEvent(name, type)
	return _in(0xD7CD9CF34F2C99E8, _ch(name), type)
end

function Global.UncuffPed(ped)
	return _in(0x67406F2C8F87FC4F, ped)
end

--- GRAPHICS::_0xB7ED70C49521A61D(9123);
-- GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");
function Global.UndoDecalTextureOverride(decalType)
	return _in(0xB7ED70C49521A61D, decalType)
end
Global.N_0xb7ed70c49521a61d = Global.UndoDecalTextureOverride

function Global.UnfreezeRadioStation(radioStation)
	return _in(0xFC00454CF60B91DD, _ts(radioStation))
end

--- Called 4 times in the b617d scripts:
-- GAMEPLAY::_A74802FB8D0B7814("CONTRAILS", 0);
function Global.UnloadCloudHat(name, p1)
	return _in(0xA74802FB8D0B7814, _ts(name), p1)
end
Global.N_0xa74802fb8d0b7814 = Global.UnloadCloudHat

--- From fm_deathmatch_creator and fm_race_creator:
-- FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
-- FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
-- NativeDB Introduced: v1604
-- @param hash :
function Global.UnloadContentChangeSetGroup(hash)
	return _in(0x3C1978285B036B25, _ch(hash))
end

function Global.UnlockMinimapAngle()
	return _in(0x8183455E16C42E3A)
end

function Global.UnlockMinimapPosition()
	return _in(0x3E93E06DB8EF1F30)
end

--- I see this as a native that would of been used back in GTA III when you finally unlocked the bridge to the next island and such.
function Global.UnlockMissionNewsStory(newsStory)
	return _in(0xB165AB7C248B2DC1, newsStory)
end

--- 2 calls in the b617d scripts. This line is called 2 times:
-- AUDIO::_031ACB6ABA18C729("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
-- Note: Another name for RADIO_16_SILVERLAKE is RADIO MIRROR PARK
function Global.UnlockRadioStationTrackList(radioStation, trackListName)
	return _in(0x031ACB6ABA18C729, _ts(radioStation), _ts(trackListName))
end
Global.N_0x031acb6aba18c729 = Global.UnlockRadioStationTrackList

function Global.UnpausePlaybackRecordedVehicle(vehicle)
	return _in(0x8879EE09268305D5, vehicle)
end

--- Does something similar to INTERIOR::DISABLE_INTERIOR.
-- You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.
function Global.UnpinInterior(interior)
	return _in(0x261CCE7EED010641, interior)
end

--- NativeDB Return Type: void
function Global.UnpinRopeVertex(ropeId, vertex)
	return _in(0x4B5AE2EEE4A8F180, ropeId, vertex, _r, _ri)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function Global.UnregisterPedheadshot(id)
	return _in(0x96B1361D9B24C2FF, id)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- On last-gen this just runs blr and this func is called by several other functions other then the native's table.
-- ```
function Global.UnregisterScriptWithAudio()
	return _in(0xA8638BE228D4751A)
end

function Global.UpdateLightsOnEntity(entity)
	return _in(0xDEADC0DEDEADC0DE, entity)
end
Global.N_0xdeadc0dedeadc0de = Global.UpdateLightsOnEntity
Global.EntityDescriptionText = Global.UpdateLightsOnEntity

--- NativeDB Introduced: v1493
-- @param enableMixes :
function Global.UpdateLsur(enableMixes)
	return _in(0x47AED84213A47510, enableMixes)
end

function Global.UpdateNavmeshBlockingObject(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x109E99373F290687, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end

--- Returns the current status of the onscreen keyboard, and updates the output.
-- Status Codes:
-- 0 - User still editing
-- 1 - User has finished editing
-- 2 - User has canceled editing
-- 3 - Keyboard isn't active
function Global.UpdateOnscreenKeyboard()
	return _in(0x0CF2B696BBF945AE, _r, _ri)
end

--- See SET_PED_HEAD_BLEND_DATA().
function Global.UpdatePedHeadBlendData(ped, shapeMix, skinMix, thirdMix)
	return _in(0x723538F61C647C5A, ped, shapeMix, skinMix, thirdMix)
end

--- NativeDB Parameter 0: Hash statHash
function Global.UpdateStatFloat(statHash, value, p2)
	return _in(0x30A6614C1F7799B8, statHash, value, p2)
end
Global.N_0x30a6614c1f7799b8 = Global.UpdateStatFloat

--- NativeDB Parameter 0: Hash statHash
function Global.UpdateStatInt(statHash, value, p2)
	return _in(0x11FF1C80276097ED, _ts(statHash), value, p2)
end
Global.N_0x11ff1c80276097ed = Global.UpdateStatInt

function Global.UpdateTaskAimGunScriptedTarget(p0, p1, p2, p3, p4, p5)
	return _in(0x9724FB59A3E72AD0, p0, p1, p2, p3, p4, p5)
end

function Global.UpdateTaskHandsUpDuration(ped, duration)
	return _in(0xA98FCAFD7893C834, ped, duration)
end

function Global.UpdateTaskSweepAimEntity(ped, entity)
	return _in(0xE4973DBDBE6E44B3, ped, entity)
end

function Global.UpdateTaskSweepAimPosition(p0, p1, p2, p3)
	return _in(0xBB106883F5201FC4, p0, p1, p2, p3)
end

--- From the b678d decompiled scripts:
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
function Global.UseParticleFxAsset(name)
	return _in(0x6C38AF3693A69A91, _ts(name))
end
Global.SetPtfxAssetNextCall = Global.UseParticleFxAsset
Global.UseParticleFxAssetNextCall = Global.UseParticleFxAsset

--- NativeDB Added Parameter 2: BOOL p1
function Global.UsePlayerColourInsteadOfTeamColour(toggle)
	return _in(0x5FFE9B4144F9712F, toggle)
end

function Global.UseSirenAsHorn(vehicle, toggle)
	return _in(0xFA932DE350266EF8, vehicle, toggle)
end

function Global.UseStuntCameraThisFrame()
	return _in(0x6493CF69859B116A)
end
Global.N_0x6493cf69859b116a = Global.UseStuntCameraThisFrame

function Global.UseWaypointRecordingAsAssistedMovementRoute(name, p1, p2, p3)
	return _in(0x5A353B8E6B1095B5, _ts(name), p1, p2, p3)
end

function Global.UsingMissionCreator(toggle)
	return _in(0xF14878FC50BEC6EE, toggle)
end

--- Calculates distance between vectors.
function Global.Vdist(x1, y1, z1, x2, y2, z2)
	return _in(0x2A488C176D52CCA5, x1, y1, z1, x2, y2, z2, _r, _rf)
end

--- Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
function Global.Vdist2(x1, y1, z1, x2, y2, z2)
	return _in(0xB7A628320EFF8E47, x1, y1, z1, x2, y2, z2, _r, _rf)
end

--- calls from vehicle to net.
function Global.VehToNet(vehicle)
	return _in(0xB4C94523F023419C, vehicle, _r, _ri)
end

function Global.VehicleWaypointPlaybackOverrideSpeed(vehicle, speed)
	return _in(0x121F0593E0A431D7, vehicle, speed)
end

function Global.VehicleWaypointPlaybackPause(vehicle)
	return _in(0x8A4E6AC373666BC5, vehicle)
end

function Global.VehicleWaypointPlaybackResume(vehicle)
	return _in(0xDC04FCAA7839D492, vehicle)
end

function Global.VehicleWaypointPlaybackUseDefaultSpeed(vehicle)
	return _in(0x5CEB25A7D2848963, vehicle)
end

--- Calculates the magnitude of a vector.
function Global.Vmag(x, y, z)
	return _in(0x652D2EEEF1D3E62C, x, y, z, _r, _rf)
end

--- Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
function Global.Vmag2(x, y, z)
	return _in(0xA8CEACB4F35AE058, x, y, z, _r, _rf)
end

--- Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use
-- static void WAIT(DWORD time);
-- found in main.h
-- --------------------------------------------------------------------
-- It does not actually seem to wait the amount of milliseconds stated like the normal WAIT() command does, but it does seem to make task sequences work more smoothly
-- System native hashes do not change on gameupdate
function Global.Wait(ms)
	return _in(0x4EDE34FBADD967A6, ms)
end

function Global.WasCutsceneSkipped()
	return _in(0x40C8656EDAEDD569, _r)
end

--- Returns whether or not the currently executing event was canceled.
-- @return A boolean.
function Global.WasEventCanceled()
	return _in(0x58382a19, _r)
end

function Global.WasPedKilledByStealth(ped)
	return _in(0xF9800AA1A771B000, ped, _r)
end

function Global.WasPedKilledByTakedown(ped)
	return _in(0x7F08E26039C7347C, ped, _r)
end

function Global.WasPedKnockedOut(ped)
	return _in(0x61767F73EACEED21, ped, _r)
end
Global.N_0x61767f73eaceed21 = Global.WasPedKnockedOut

--- Despite this function's name, it simply returns whether the specified handle is a Ped.
function Global.WasPedSkeletonUpdated(ped)
	return _in(0x11B499C1E0FF8559, ped, _r)
end

function Global.WashDecalsFromVehicle(vehicle, p1)
	return _in(0x5B712761429DBC14, vehicle, p1)
end

function Global.WashDecalsInRange(p0, p1, p2, p3, p4)
	return _in(0x9C30613D50A6ADEF, p0, p1, p2, p3, p4)
end

function Global.WaypointPlaybackGetIsPaused(p0)
	return _in(0x701375A7D43F01CB, p0, _r)
end

function Global.WaypointPlaybackOverrideSpeed(p0, p1, p2)
	return _in(0x7D7D2B47FA788E85, p0, p1, p2)
end

function Global.WaypointPlaybackPause(p0, p1, p2)
	return _in(0x0F342546AA06FED5, p0, p1, p2)
end

function Global.WaypointPlaybackResume(p0, p1, p2, p3)
	return _in(0x244F70C84C547D2D, p0, p1, p2, p3)
end

function Global.WaypointPlaybackStartAimingAtCoord(p0, p1, p2, p3, p4)
	return _in(0x8968400D900ED8B3, p0, p1, p2, p3, p4)
end

function Global.WaypointPlaybackStartAimingAtPed(p0, p1, p2)
	return _in(0x20E330937C399D29, p0, p1, p2)
end

function Global.WaypointPlaybackStartShootingAtCoord(p0, p1, p2, p3, p4, p5)
	return _in(0x057A25CFCC9DB671, p0, p1, p2, p3, p4, p5)
end

function Global.WaypointPlaybackStartShootingAtPed(p0, p1, p2, p3)
	return _in(0xE70BA7B90F8390DC, p0, p1, p2, p3)
end
Global.N_0xe70ba7b90f8390dc = Global.WaypointPlaybackStartShootingAtPed

function Global.WaypointPlaybackStopAimingOrShooting(p0)
	return _in(0x47EFA040EBB8E2EA, p0)
end

function Global.WaypointPlaybackUseDefaultSpeed(p0)
	return _in(0x6599D834B12D0800, p0)
end

--- For a full list, see here: pastebin.com/Tp0XpBMN
-- For a full list of the points, see here: goo.gl/wIH0vn
function Global.WaypointRecordingGetClosestWaypoint(name, x, y, z, point)
	return _in(0xB629A298081F876F, _ts(name), x, y, z, _ii(point) --[[ may be optional ]], _r)
end

--- For a full list, see here: pastebin.com/Tp0XpBMN
-- For a full list of the points, see here: goo.gl/wIH0vn
function Global.WaypointRecordingGetCoord(name, point, coord)
	return _in(0x2FB897405C90B361, _ts(name), point, _v, _r)
end

--- For a full list, see here: pastebin.com/Tp0XpBMN
-- For a full list of the points, see here: goo.gl/wIH0vn
function Global.WaypointRecordingGetNumPoints(name, points)
	return _in(0x5343532C01A07234, _ts(name), _ii(points) --[[ may be optional ]], _r)
end

function Global.WaypointRecordingGetSpeedAtPoint(name, point)
	return _in(0x005622AEBC33ACA9, _ts(name), point, _r, _rf)
end

--- Does nothing and always returns 0.
function Global.WithdrawVc(amount)
	return _in(0xF70EFA14FE091429, amount, _r, _ri)
end
Global.N_0xf70efa14fe091429 = Global.WithdrawVc

--- First parameter was previously an Entity but after further research it is definitely a hash.
function Global.WouldEntityBeOccluded(entityModelHash, x, y, z, p4)
	return _in(0xEE5D2A122E09EC42, _ch(entityModelHash), x, y, z, p4, _r)
end

